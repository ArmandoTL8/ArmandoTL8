/*!
 * SAPUI5
 * (c) Copyright 2009-2023 SAP SE. All rights reserved.
 */
sap.ui.loader.config({shim:{"sap/ndc/thirdparty/ZXing":{amd:true,exports:"ZXing"},"sap/ndc/thirdparty/zxingcpp/zxing_reader":{amd:true,exports:"ZXing"},"sap/ndc/thirdparty/opencv/opencv_js":{amd:true,exports:"cv"}}});sap.ui.define(["sap/base/Log","sap/ui/model/json/JSONModel","sap/ui/model/BindingMode","sap/ui/model/resource/ResourceModel","sap/m/Input","sap/m/Label","sap/m/Button","sap/m/Dialog","sap/m/BusyDialog","sap/ui/dom/includeStylesheet","./BarcodeScannerUIContainer","sap/m/MessageToast","sap/m/library","sap/ui/base/Event","sap/ui/base/EventProvider","sap/ui/Device","sap/ui/thirdparty/jquery","sap/base/util/deepClone","sap/m/Avatar"],function(e,n,a,t,r,i,o,s,c,l,d,g,u,f,p,P,jQuery,y,h){"use strict";document.addEventListener("settingsDone",de);document.addEventListener("SettingCompleted",de);document.addEventListener("mockSettingsDone",de);l({url:sap.ui.require.toUrl("sap/ndc/css/sapNdcBarcodeScanner.css")});var v={},b,S,B,m,C,I,Z,w,A={Initial:"Initial",Loading:"Loading",Available:"Available",UnAvailable:"UnAvailable"},D=new n({scannerAPI:"unknown",available:false,config:{defaultConstraints:{audio:false,video:{facingMode:"environment"}},deviceId:undefined,preferFrontCamera:false,zoom:null,enableGS1Header:false},scanDialog:{title:"",onLiveUpdate:null,imgTruncX:0,imgTruncY:0,barcodeOverlaySetup:false,isNoScanner:false,scanningStartTime:0,keepCameraScan:false},callBackHandler:{onFnFail:null,onFnSuccess:null,callBackFromSetPhysicalScan:false},devices:{mainCamera:undefined,needCheck:true,all:[],front:[],back:[]},apis:{ZebraEnterpriseBrowser:{key:"ZebraEnterpriseBrowser",description:"Zebra Enterprise Browser",status:A.Initial,enableBarcodeState:"init",enableZebraBarcodeRetryCount:6},Cordova:{key:"Cordova",description:"Cordova",status:A.Initial,scannerAPI:null},ZXingCPP:{key:"ZXingCPP",description:"WebAssembly build (using Emcripten) of zxing-cpp",status:A.Initial,instance:null,scannerAPI:null,openCV:{instance:null,scannerAPI:null}},ZXing:{key:"ZXing",description:"ZXing",status:A.Initial,instance:null,scannerAPI:null}},bReady:true}),E=new n({scannerAPI:"unknown",available:false,deviceId:undefined,devices:[],apis:{ZebraEnterpriseBrowser:{key:"ZebraEnterpriseBrowser",status:A.Initial},Cordova:{key:"Cordova",status:A.Initial},ZXingCPP:{key:"ZXingCPP",status:A.Initial},ZXing:{key:"ZXing",status:A.Initial}}}).setDefaultBindingMode(a.OneWay),X=new t({bundleName:"sap.ndc.messagebundle"});function k(e){return D.getProperty("/apis/"+e+"/")}function T(e){return D.getProperty("/apis/"+e+"/status")}function L(n,a,t){if(!n||!k(n)){e.error("BarcodeScanner.updateScannerAPI: scanner API '"+n+"' is not a valid status code, stop update scanner API. Please check!");return}var r="/apis/"+n+"/";if(a){if(A[a]){D.setProperty(r+"status",a);E.setProperty(r+"status",a)}else{e.error("BarcodeScanner.updateScannerAPI: scanner API status '"+a+"' is not a valid status code, please check!")}}if(typeof t==="boolean"&&t){D.setProperty("/scannerAPI",n);E.setProperty("/scannerAPI",n)}D.checkUpdate(true);E.checkUpdate(true)}function F(e,n){L(e,A.Available,n)}function _(e){D.setProperty("/apis/"+e+"/instance",null);D.setProperty("/apis/"+e+"/scannerAPI",null);if(e==="ZXingCPP"){D.setProperty("/apis/ZXingCPP/openCV/instance",null);D.setProperty("/apis/ZXingCPP/openCV/scannerAPI",null)}L(e,A.UnAvailable)}function O(){return D.getProperty("/scannerAPI")}function R(e){if(e==="unknown"){D.setProperty("/scannerAPI",e);E.setProperty("/scannerAPI",e)}else{L(e,undefined,true)}}function x(n,a){if(!n||!k(n)){e.error("BarcodeScanner.checkScannerAPIStatus: scanner API '"+n+"' doesn't exist. Please check!");return false}var t=D.getProperty("/apis/"+n+"/status");return a===t}function M(e){return x(e,A.Available)}function H(e){return x(e,A.UnAvailable)}function U(){D.setProperty("/available",false);E.setProperty("/available",false);_("ZXing");_("ZXingCPP");e.debug("BarcodeScanner.disableFeatureAPIs: Set status of Feature scanner APIs (ZXing, ZXingCPP) to unavailable!")}function N(){try{var n=cordova.plugins.barcodeScanner;if(n){D.setProperty("/apis/Cordova/scannerAPI",n);F("Cordova");if(O()==="unknown"){R("Cordova")}e.debug("BarcodeScanner.initScannerAPIs: Cordova BarcodeScanner plugin is available!");U()}else{e.debug("BarcodeScanner.initScannerAPIs: Cordova BarcodeScanner plugin is unavailable!");_("Cordova");G()}}catch(n){e.debug("BarcodeScanner.initScannerAPIs: Cordova BarcodeScanner plugin is unavailable!");_("Cordova");G()}}function G(){jQuery(document).ready(function(){if(K()){Q()}});V()}function z(n,a){L("ZXing",A.Loading);sap.ui.require(["sap/ndc/thirdparty/ZXing"],function(t){var r=t;if(r){D.setProperty("/apis/ZXing/instance",t);var i=new r.BrowserMultiFormatReader;if(i){D.setProperty("/apis/ZXing/scannerAPI",i);F("ZXing");e.debug("BarcodeScanner.loadZXingAPI: ZXing BrowserMultiFormatReader API is available!");n()}else{_("ZXing");e.error("BarcodeScanner.loadZXingAPI: ZXing BrowserMultiFormatReader API is unavailable");a()}}else{_("ZXing");e.error("BarcodeScanner.loadZXingAPI: ZXing API is unavailable");a()}},function(n){_("ZXing");e.error("BarcodeScanner.loadZXingAPI: ZXing API is unavailable.\n"+n);a()})}function W(n){e.error(n);_("ZXingCPP");var a=T("ZXing");if(a===A.UnAvailable){e.warning("BarcodeScanner.loadZXingCPPFailed: ZXing is unavailable too, no feature scanner API available now.");D.setProperty("/available",false);E.setProperty("/available",false)}else if(O()!=="ZebraEnterpriseBrowser"){e.debug("BarcodeScanner.loadZXingCPPFailed: Zebra is not current scanner API, ZXing if NOT UnAvailable, so set ZXing as current scanner API.");R("ZXing")}D.checkUpdate(true)}function V(){e.info("BarcodeScanner.loadZXingCPPAPI: load ZXingCPP API");L("ZXingCPP",A.Loading);sap.ui.require(["sap/ndc/thirdparty/zxingcpp/zxing_reader","sap/ndc/thirdparty/opencv/opencv_js"],function(n,a){D.setProperty("/apis/ZXingCPP/instance",n);D.setProperty("/apis/ZXingCPP/openCV/instance",a);if(O()==="unknown"){R("ZXingCPP")}e.debug("BarcodeScanner.loadZXingCPPAPI: ZXingCPP API is Initial!");L("ZXingCPP",A.Initial)},function(e){W("BarcodeScanner.loadZXingCPPAPI: ZXingCPP API is unavailable.\n"+e)})}function j(n,a){var t=new c({title:X.getProperty("BARCODE_DIALOG_BUSY_TITLE"),text:X.getProperty("BARCODE_DIALOG_BUSY_TEXT_ZXINGCPP")});t.open();L("ZXingCPP",A.Loading);Promise.all([q(),J()]).then(function(){F("ZXingCPP");if(O()==="unknown"){R("ZXingCPP")}e.debug("BarcodeScanner.loadZXingCPPInstances: ZXingCPP API is available!");t.close();n()},function(e){W(e);t.close();a()})}function Y(e,n,a){if(!n||n===""){return sap.ui.require.toUrl("sap/ndc/thirdparty/"+a+"/")+e}return n+e}function q(){return new Promise(function(n,a){var t={locateFile:function(e,n){return Y(e,n,"zxingcpp")}};var r=D.getProperty("/apis/ZXingCPP/instance");r(t).then(function(a){if(H("ZXingCPP")){e.warning("BarcodeScanner.loadZXingCPPInstance: ZXingCPP is set to unavailable by failure of loading opencv instance!")}else{D.setProperty("/apis/ZXingCPP/scannerAPI",a);e.debug("BarcodeScanner.loadZXingCPPInstance: wasm lib instance of ZXingCPP is available!")}n()},function(e){a("BarcodeScanner.loadZXingCPPInstance: can not load wasm lib instance of ZXingCPP.\n"+e)})})}function J(){return new Promise(function(n,a){var t={locateFile:function(e,n){return Y(e,n,"opencv")}};var r=D.getProperty("/apis/ZXingCPP/openCV/instance");r(t).then(function(a){if(H("ZXingCPP")){e.warning("BarcodeScanner.loadOpenCVInstance: ZXingCPP is set to unavailable by failure of loading zxingcpp instance!")}else{D.setProperty("/apis/ZXingCPP/openCV/scannerAPI",a);e.debug("BarcodeScanner.loadOpenCVInstance: wasm lib instance of opencv is available!")}n()},function(e){a("BarcodeScanner.loadOpenCVInstance: can not load wasm lib instance of opencv.\n"+e)})})}function K(){return!!(window&&window.navigator&&window.navigator.mediaDevices&&window.navigator.mediaDevices.enumerateDevices)}function Q(){e.debug("BarcodeScanner.getDeviceCameras: start to get device cameras");window.navigator.mediaDevices.enumerateDevices().then(function(n){var a=D.getProperty("/devices");var t=0;n.forEach(function(n){if(n.kind==="videoinput"){t++;var r={deviceId:n.deviceId,groupId:n.groupId,kind:n.kind,label:n.label};if(r.label&&r.label!==""){if(r.label.indexOf("0, facing back")>0){e.debug("BarcodeScanner.getDeviceCameras: has a camera with label contains '0, facing back', set it as main camera.");a.needCheck=false;a.mainCamera=r}if(r.label.indexOf("back")>0){a.back.push(r)}else if(r.label.indexOf("front")>0){a.front.push(r)}}else{r.label="Camera "+t}a.all.push(r)}});if(!a.mainCamera){if(a.back.length===1){e.debug("BarcodeScanner.getDeviceCameras: has only one camera which label contains 'back', set it as main camera.");a.mainCamera=y(a.back[0]);a.needCheck=false}else if(a.all.length===1){e.debug("BarcodeScanner.getDeviceCameras: has only one camera, set it as main camera.");a.mainCamera=y(a.all[0]);a.needCheck=false}}D.setProperty("/devices",a);ee()}).catch(function(n){D.setProperty("/devices/needCheck",false);e.error("BarcodeScanner.getDeviceCameras: Can not get device cameras.\n"+n)})}function $(n,a){var t=y(n);var r=n.length;var i=function(){if(t.length===0){D.setProperty("/devices/needCheck",false);ee();e.debug("BarcodeScanner.findMainCamera: can not find the main camera.");a()}else{var o=t.pop();r--;var s=y(D.getProperty("/config/defaultConstraints"));s.video.deviceId={exact:o.deviceId};window.navigator.mediaDevices.getUserMedia(s).then(function(a){var t=typeof a.stop==="function"?a:a.getTracks()[0];ne(t).then(function(){n[r].hasFlashLight=true;D.setProperty("/devices/mainCamera",n[r]);D.setProperty("/devices/needCheck",false);ee();e.debug("BarcodeScanner.findMainCamera: the main camera is "+o.deviceId);m&&m.getModel().setProperty("/hasFlashLight",true);D.setProperty("/scanDialog/hasFlashLight",true);e.debug("BarcodeScanner.findMainCamera: enable flashlight");b=a;if(O()!=="ZXing"&&M("ZXingCPP")||O()==="ZXing"&&M("ZXing")){Se()}else{m&&m.getModel().setProperty("/isNoScanner",true);ge()}},function(){n[r].hasFlashLight=false;t.stop();e.debug("BarcodeScanner.findMainCamera: "+o.deviceId+" is not the main camera, check the next camera");i()})}).catch(function(){i()})}};i()}function ee(){e.debug("BarcodeScanner.updateDevicesInStatusModel: update the devices in status model");var n=y(D.getProperty("/devices/all"));E.setProperty("/devices",n)}function ne(n){if(!("ImageCapture"in window)){return new Promise(function(n,a){e.debug("BarcodeScanner.checkFlashLight: Device does not support image capture");a()})}else if(!n){return new Promise(function(n,a){e.debug("BarcodeScanner.checkFlashLight: Camera is not opened");a()})}else{var a=new ImageCapture(n);return new Promise(function(n,t){a.getPhotoCapabilities().then(function(a){if(a.fillLightMode&&a.fillLightMode.includes("flash")){e.debug("BarcodeScanner.checkFlashLight: Camera supports flashlight");n()}else{e.debug("BarcodeScanner.checkFlashLight: Camera doesn't support flashlight");t()}}).catch(function(n){e.debug("BarcodeScanner.checkFlashLight: Camera not started or not available\n"+n);t()})})}}function ae(){if(!D.getProperty("/scanDialog/hasFlashLight")){e.error("BarcodeScanner.toggleFlashLight: No flashlight currently");return}var n=D.getProperty("/scanDialog/flashLightOn");var a=!n?"Open":"Close";var t=typeof b.stop==="function"?b:b.getTracks()[0];t.applyConstraints({advanced:[{torch:!n}]}).then(function(){D.setProperty("/scanDialog/flashLightOn",!n);e.debug("BarcodeScanner.toggleFlashLight: "+a+" flashlight of camera success.")}).catch(function(n){var t="BARCODE_DIALOG_"+a.toUpperCase()+"_FLASHLIGHT_ERROR_MSG";g.show(X.getResourceBundle().getText(t),{duration:1e3});e.error("BarcodeScanner.toggleFlashLight: "+a+" flashlight of camera failed. Error Message:"+n)})}function te(){var e=D.getProperty("/scanDialog/flashLightOn");if(e){ae()}if(I){return I.click()}}function re(){v.closeScanDialog();var e=I.files[0];if(e){C=undefined;ie(e)}}function ie(n){var a=new c({title:X.getProperty("BARCODE_DIALOG_SCAN_IMAGE_BUSY_TITLE")});a.open();D.setProperty("/scanDialog/scanningStartTime",Date.now());var t=new FileReader;t.onload=function(n){oe(n.target.result).then(function(n){var t;var r=D.getProperty("/apis/ZXingCPP/scannerAPI");try{t=r._malloc(n.length);r.HEAPU8.set(n,t)}catch(n){e.info("BarcodeScanner.scanFile: zxing.HEAPU8 error: "+n)}var i=r.readBarcodeFromImage(t,n.length,true,"");r._free(t);a.close();if(i.format){if(i.cancelled==="false"||!i.cancelled){i.cancelled=false;var o=D.getProperty("/callBackHandler/onFnSuccess");if(typeof o==="function"){var s=Date.now();i.scanningTime=s-D.getProperty("/scanDialog/scanningStartTime");if(D.getProperty("/config/enableGS1Header")){i.text=i.symbologyIdentifier+i.text}o(i);D.setProperty("/scanDialog/scanningStartTime",0)}}}else{g.show(X.getResourceBundle().getText("BARCODE_DIALOG_SCAN_IMAGE_ERROR_MSG"),{duration:1e3})}},function(){a.close();g.show(X.getResourceBundle().getText("BARCODE_DIALOG_SCAN_IMAGE_COMPRESS_FAILED_MSG"),{duration:1e3})})};t.onerror=function(){a.close();g.show(X.getResourceBundle().getText("BARCODE_DIALOG_SCAN_IMAGE_LOAD_FAILED_MSG"),{duration:1e3})};t.readAsDataURL(n)}function oe(e){var n=800,a=800,t="image/png";return new Promise(function(r,i){var o=new Image;o.onload=function(){var e=this.width,i=this.height;var s=document.createElement("canvas");var c=s.getContext("2d");var l=e,d=i;if(e>n||i>a){if(e/i>n/a){l=n;d=Math.round(n*(i/e))}else{d=a;l=Math.round(a*(e/i))}}s.width=l;s.height=d;c.clearRect(0,0,l,d);c.drawImage(o,0,0,l,d);var g=s.toDataURL(t);g=g.split(",")[1];g=window.atob(g);var u=new Uint8Array(g.length);for(var f=0;f<g.length;f++){u[f]=g.charCodeAt(f)}r(u)};o.onerror=function(){i()};o.src=e})}function se(){return!!(window&&window.navigator&&window.navigator.mediaDevices&&window.navigator.mediaDevices.getUserMedia)}function ce(){try{if(self!=top&&typeof cordova==="undefined"){window.cordova=top.cordova}}catch(n){e.info("BarcodeScanner.checkCordovaInIframe: cordova is unavailable in cross-origin iframe")}}function le(){try{if(self!=top&&(typeof EB==="undefined"||typeof window.Rho==="undefined")){if(typeof top.EB!=="undefined"||typeof top.Rho!=="undefined"){window.EB=top.EB;window.Rho=top.Rho}}if(typeof EB!=="undefined"&&typeof EB.Barcode!=="undefined"){F("ZebraEnterpriseBrowser",true);e.debug("BarcodeScanner.initZebraEB: Zebra Enterprise Browser plugin is available!")}else{_("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.initZebraEB: Zebra Enterprise Browser plugin is unavailable!")}}catch(n){e.info("BarcodeScanner.initZebraEB: EB and Rho are unavailable")}}function de(){ce();D.setProperty("/available",true);E.setProperty("/available",true);if(P.os.android){jQuery(document).ready(function(){le();De()})}else{_("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.init: Not Android device, Zebra Enterprise Browser plugin is unavailable!")}if(sap.Settings&&typeof sap.Settings.isFeatureEnabled==="function"){sap.Settings.isFeatureEnabled("cordova.plugins.barcodeScanner",function(n){if(n){N()}else{U();e.warning("BarcodeScanner.init: Feature disabled in sap.Settings");N()}},function(){e.warning("BarcodeScanner.init: Feature check failed");N()})}else{if(sap.Settings===undefined){e.debug("BarcodeScanner.init: No sap.Settings. No feature vector available.")}else{e.warning("BarcodeScanner.init: Feature vector (sap.Settings.isFeatureEnabled) is unavailable")}N()}}function ge(n){if(n){e.warning("BarcodeScanner.openBarcodeInputDialog: isNoScanner. Message: "+n)}m.setShowHeader(true);m.destroyContent();m.setTitle("");m.setStretch(false);m.setContentHeight("auto");if(Z){Z.hidden=true}m.removeStyleClass("sapUiNoContentPadding");m.setTitle(D.getProperty("/scanDialog/title"));var a=new i(m.getId()+"-txt_barcode",{text:"{i18n>BARCODE_DIALOG_MSG}",visible:"{/isNoScanner}"});m.addContent(a);var t=new r(m.getId()+"-inp_barcode",{value:"{/barcode}",valueLiveUpdate:true,ariaLabelledBy:a.getId(),liveChange:function(e){var n=D.getProperty("/scanDialog/onLiveUpdate");if(typeof n==="function"){n({newValue:e.getParameter("newValue")})}},placeholder:"{i18n>BARCODE_DIALOG_PLACEHOLDER}"});m.addContent(t);var s=u.ButtonType;m.setBeginButton(new o(m.getId()+"-btn_barcode_ok",{type:s.Emphasized,text:"{i18n>BARCODE_DIALOG_OK}",press:function(e){var n=D.getProperty("/callBackHandler/onFnSuccess");if(typeof n==="function"){var a="unknown";if(D.getProperty("/scanDialog/scanningStartTime")>0){var t=Date.now();a=t-D.getProperty("/scanDialog/scanningStartTime")}n({text:m.getModel().getProperty("/barcode"),scanningTime:a,cancelled:false})}v.closeScanDialog()}}));m.setEndButton(new o({text:"{i18n>BARCODE_DIALOG_CANCEL}",press:function(){v.closeScanDialog()}}));m.setBusy(false);m.open()}function ue(){if(!D.getProperty("/config/preferFrontCamera")){delete D.getProperty("/config/defaultConstraints/video").facingMode;var n=D.getProperty("/devices");if(se()&&!D.getProperty("/config/deviceId")&&!n.mainCamera&&!P.os.ios&&n.needCheck&&n.all.length>1){var a=n.back.length>1?n.back:n.all;var t=n.back.length>1?"back":"all";e.debug("BarcodeScanner.openBarcodeScannerDialog: start to find the main camera in "+t+" camera list.");$(a,fe);return}}fe()}function fe(){var e=false;if(D.getProperty("/config/deviceId")){delete D.getProperty("/config/defaultConstraints/video").facingMode;D.setProperty("/config/defaultConstraints/video/deviceId",{exact:D.getProperty("/config/deviceId")})}else if(D.getProperty("/config/preferFrontCamera")){D.setProperty("/config/defaultConstraints/video/facingMode","user");delete D.getProperty("/config/defaultConstraints/video").deviceId}else{var n=D.getProperty("/devices");if(n.mainCamera&&n.mainCamera.deviceId!==""){e=true;D.setProperty("/config/defaultConstraints/video/deviceId",{exact:n.mainCamera.deviceId})}else{D.setProperty("/config/defaultConstraints/video/facingMode","environment")}}window.navigator.mediaDevices.getUserMedia(D.getProperty("/config/defaultConstraints")).then(function(a){b=a;if(P.os.ios){D.setProperty("/scanDialog/hasFlashLight",false);m&&m.getModel().setProperty("/hasFlashLight",false)}else{if(e&&typeof n.mainCamera.hasFlashLight==="boolean"){D.setProperty("/scanDialog/hasFlashLight",n.mainCamera.hasFlashLight);m&&m.getModel().setProperty("/hasFlashLight",n.mainCamera.hasFlashLight)}else{var t=typeof a.stop==="function"?a:a.getTracks()[0];ne(t).then(function(){D.setProperty("/scanDialog/hasFlashLight",true);if(e){n.mainCamera.hasFlashLight=true}m&&m.getModel().setProperty("/hasFlashLight",true)},function(){D.setProperty("/scanDialog/hasFlashLight",false);if(e){n.mainCamera.hasFlashLight=false}m&&m.getModel().setProperty("/hasFlashLight",false)})}}if(O()!=="ZXing"&&M("ZXingCPP")&&b||O()==="ZXing"&&M("ZXing")){Se()}else{D.setProperty("/scanDialog/isNoScanner",true);ge()}}).catch(function(){D.setProperty("/scanDialog/isNoScanner",true);ge()})}function pe(){D.checkUpdate(true);var e;if(!m||m&&m.getContent().length===0){e=new n({hasFlashLight:D.getProperty("/scanDialog/hasFlashLight")&&!P.os.ios});m=new s("sapNdcBarcodeScannerDialog",{icon:"sap-icon://bar-code",title:X.getProperty("BARCODE_DIALOG_SCANNING_TITLE"),stretch:true,horizontalScrolling:false,verticalScrolling:false,afterClose:function(){Ae();m.destroyContent();m.destroy();m=null}});m.setEscapeHandler(function(n){v.closeScanDialog();var a=D.getProperty("/callBackHandler/onFnSuccess");if(typeof a==="function"){a({text:e.getProperty("/barcode"),cancelled:true})}n.resolve()});m.setModel(e);m.setModel(X,"i18n")}if((M("ZXingCPP")||M("ZXing"))&&se()){ue()}else{if(D.getProperty("/available")){D.setProperty("/scanDialog/isNoScanner",false)}else{D.setProperty("/scanDialog/isNoScanner",true)}ge()}return m}function Pe(){D.setProperty("/bReady",true);D.setProperty("/callBackHandler/callBackFromSetPhysicalScan",false);EB.Barcode.triggerType=EB.Barcode.SOFT_ONCE;EB.Barcode.start()}function ye(){var n;if(D.getProperty("/config/preferFrontCamera")){n={preferFrontCamera:true}}D.getProperty("/apis/Cordova/scannerAPI").scan(function(e){if(e.cancelled==="false"||!e.cancelled){e.cancelled=false;var n=D.getProperty("/callBackHandler/onFnSuccess");if(typeof n==="function"){n(e)}}else{pe()}D.setProperty("/bReady",true)},function(n){e.error("BarcodeScanner.scanWithCordova: Barcode scanning failed.");D.setProperty("/bReady",true);var a=D.getProperty("/callBackHandler/onFnFail");if(typeof a==="function"){if(typeof n==="string"){var t=n;n={text:t};e.debug("BarcodeScanner.scanWithCordova: Change the type of oEvent from string to object")}a(n)}},n)}function he(){if(x("ZXing",A.Initial)){e.debug("BarcodeScanner.scanWithZXing: ZXing is not loaded, start to load it.");z(function(){pe()},function(){if(H("ZXingCPP")){e.warning("BarcodeScanner.scanWithZXing: ZXingCPP is unavailable too, no feature scanner API available now.");D.setProperty("/available",false);E.setProperty("/available",false);e.warning("BarcodeScanner.scanWithZXing: Set feature available to False");if(M("ZebraEnterpriseBrowser")){R("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.scanWithZXing: Zebra is available, set the current scanner API to Zebra.")}else{R("unknown");e.warning("BarcodeScanner.scanWithZXing: Zebra is unavailable too, set the current scanner API to unknown.")}pe()}else{R("ZXingCPP");e.debug("BarcodeScanner.scanWithZXing: ZXingCPP is NOT UnAvailable, switch to ZXingCPP to scan barcode.");ve()}})}else{pe()}}function ve(){if(x("ZXingCPP",A.Initial)){e.debug("BarcodeScanner.scanWithZXingCPP: ZXingCPP instances is not loaded, start to load them.");j(function(){pe()},function(){if(H("ZXing")){e.warning("BarcodeScanner.scanWithZXingCPP: ZXing is unavailable too, no feature scanner API available now.");D.setProperty("/available",false);E.setProperty("/available",false);e.warning("BarcodeScanner.scanWithZXingCPP: Set feature available to False");if(M("ZebraEnterpriseBrowser")){R("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.scanWithZXingCPP: Zebra is available, set the current scanner API to Zebra.")}else{R("unknown");e.warning("BarcodeScanner.scanWithZXingCPP: Zebra is unavailable too, set the current scanner API to unknown.")}pe()}else{e.debug("BarcodeScanner.scanWithZXingCPP: ZXing is NOT UnAvailable, switch to ZXing to scan barcode.");he()}})}else{pe()}}function be(e){m.setBusy(false);if(!w){w=e.getDomRef("highlight")}if(!C){C=e?e.getDomRef("video"):undefined;if(C){document.body.style.setProperty("--sapNdcRTCDialogVideoHeight",C.clientHeight+"px");document.body.style.setProperty("--sapNdcRTCDialogVideoWidth",C.clientWidth+"px")}}if(!I){I=e?e.getDomRef("image"):undefined;if(I){I.addEventListener("change",re)}}}function Se(){var n;if(O()!=="ZXing"){e.debug("BarcodeScanner.openBarcodeScannerDialogContains: Use ZXingCPP to read the barcode.");m.attachAfterOpen(function(){be(n);try{C.srcObject=b;C.play().then(function(){if(!S){C.width=C.videoWidth;C.height=C.videoHeight;var e=D.getProperty("/apis/ZXingCPP/openCV/scannerAPI");S=new e.Mat(C.videoHeight,C.videoWidth,e.CV_8UC4);B=new e.VideoCapture(C)}Be()})}catch(n){e.debug("BarcodeScanner.openBarcodeScannerDialogContains is failed. error: "+n)}})}else{e.debug("BarcodeScanner.openBarcodeScannerDialogContains: Use zxing to read the barcode.");if(P.os.ios&&P.os.versionStr.split(".")[0]==="16"&&b){var a=typeof b.stop==="function"?b:b.getTracks()[0];a.stop()}m.attachAfterOpen(function(){be(n);me()})}m.setShowHeader(false);m.destroyContent();w=undefined;Z=undefined;C=undefined;I=undefined;n=new d;n.setAggregation("_oCloseButton",new h({src:"sap-icon://decline",backgroundColor:"Transparent",press:function(){m.getModel().setProperty("/isNoScanner",false);ge()}}).addStyleClass("sapNdcRTCDialogCloseButton"));n.setAggregation("_oFlashLightButton",new h({src:"sap-icon://lightbulb",visible:"{/hasFlashLight}",backgroundColor:"Transparent",tooltip:{path:"/flashLightOn",formatter:function(e){var n="";if(!e){n="BARCODE_DIALOG_SELECT_FLASHLIGHT_BUTTON_TOOLTIP_OPEN"}else{n="BARCODE_DIALOG_SELECT_FLASHLIGHT_BUTTON_TOOLTIP_CLOSE"}return X.getResourceBundle().getText(n)}},press:function(){ae()}}).addStyleClass("sapNdcRTCDialogFlashLightButton"));n.setAggregation("_oImageButton",new h({src:"sap-icon://picture",visible:O()!=="ZXing",tooltip:X.getResourceBundle().getText("BARCODE_DIALOG_SELECT_IMAGE_BUTTON_TOOLTIP"),press:function(){te()}}).addStyleClass("sapNdcRTCDialogImageButton"));m.addContent(n);m.setContentWidth("100%");m.setContentHeight("100%");m.addStyleClass("sapUiNoContentPadding");m.setBusy(true);m.open();D.setProperty("/scanDialog/barcodeOverlaySetup",false)}function Be(){if(!C||!C.srcObject){if(S){S.delete();S=null}return}Ze(C);var n;try{B.read(S);n=S.data}catch(n){e.info("BarcodeScanner.decodeWithZXingCPP: cap.read error: "+n)}try{var a;var t=D.getProperty("/apis/ZXingCPP/scannerAPI");try{a=t._malloc(n.length);t.HEAPU8.set(n,a)}catch(n){e.info("BarcodeScanner.decodeWithZXingCPP: zxing.HEAPU8 error: "+n)}var r=S.cols;var i=S.rows;var o;o=t.readBarcodeFromPixmap(a,r,i,true,"");t._free(a);if(o.format){Ce(o);if(o.cancelled==="false"||!o.cancelled){o.cancelled=false;var s=D.getProperty("/callBackHandler/onFnSuccess");if(typeof s==="function"){o.scanningTime="unknown";if(D.getProperty("/scanDialog/scanningStartTime")>0){var c=Date.now();o.scanningTime=c-D.getProperty("/scanDialog/scanningStartTime")}if(D.getProperty("/config/enableGS1Header")){o.text=o.symbologyIdentifier+o.text}s(o)}v.closeScanDialog()}}else{if(w&&D.getProperty("/scanDialog/barcodeOverlaySetup")){Ie()}setTimeout(Be,0)}}catch(e){}}function me(){var n=new Map;var a=D.getProperty("/apis/ZXing/instance");n.set(a.DecodeHintType.ASSUME_GS1,true);var t=D.getProperty("/apis/ZXing/scannerAPI");t.reader.setHints(n);var r=function(n,t){Ze(C);if(n){Ce(n);if(n.cancelled==="false"||!n.cancelled){n.cancelled=false;var r=D.getProperty("/callBackHandler/onFnSuccess");if(typeof r==="function"){n.scanningTime="unknown";if(D.getProperty("/scanDialog/scanningStartTime")>0){var i=Date.now();n.scanningTime=i-D.getProperty("/scanDialog/scanningStartTime")}if(!D.getProperty("/config/enableGS1Header")&&n.text.indexOf("]C1")===0){n.text=n.text.split("]C1")[1]}r(n)}v.closeScanDialog()}}else if(w&&D.getProperty("/scanDialog/barcodeOverlaySetup")){Ie()}if(t&&a&&!(t instanceof a.NotFoundException)){e.warning("BarcodeScanner.decodeWithZXing: Started continuous decode failed.");var o=D.getProperty("/callBackHandler/onFnFail");if(typeof o==="function"){o(t);D.setProperty("/scanDialog/isNoScanner",true);ge()}}};t.decodeFromConstraints(D.getProperty("/config/defaultConstraints"),C.id,r)}function Ce(e){var n,a,t;var r=0,i=0,o=0,s=0,c;if(w&&!D.getProperty("/scanDialog/barcodeOverlaySetup")){w.innerHTML="";D.setProperty("/scanDialog/barcodeOverlaySetup",true)}if(w){a=C.clientWidth/C.videoWidth;t=C.clientHeight/C.videoHeight;if(e.position){e.resultPoints=[e.position.topLeft,e.position.topRight,e.position.bottomRight,e.position.bottomLeft]}if(e.resultPoints){o=e.resultPoints[0].y;s=e.resultPoints[0].x;i=e.resultPoints[0].x;r=e.resultPoints[0].y;for(c=0;c<e.resultPoints.length;c++){n=e.resultPoints[c];if(n.x<s&&n.x<i){s=n.x}else if(n.x>s&&n.x>i){i=n.x}if(n.y<o&&n.y<r){o=n.y}else if(n.y>o&&n.y>r){r=n.y}}}w.hidden=false;w.style.top=o*t+"px";w.style.left=s*a+"px";w.style.width=(i-s>0?(i-s+D.getProperty("/scanDialog/imgTruncX"))*a:5)+"px";w.style.height=(r-o>0?(r-o+D.getProperty("/scanDialog/imgTruncY"))*t:5)+"px"}}function Ie(){w.hidden=true;w.style.top="0";w.style.left="0";w.style.width="0";w.style.height="0"}function Ze(e){if(!m||!e||!e.videoHeight||!e.videoWidth){return}var n=.15;var a=m.getContent()[0];if(!Z&&a){Z=a.getDomRef("overlay")}we(e);if(Z){var t=e.clientWidth*(1-2*n);var r=e.clientHeight*(1-2*n);if(t<=r){r=t*(1-2*n)}var i=a.getDomRef("overlay-box");if(i){i.style.width=t+"px";i.style.height=r+"px";Z.style.width=t+"px";Z.style.height=r+"px";Z.style.borderWidth=(e.clientHeight-r)/2+"px "+(e.clientWidth-t)/2+"px"}}document.body.style.setProperty("--sapNdcRTCDialogVideoHeight",e.clientHeight+"px");document.body.style.setProperty("--sapNdcRTCDialogVideoWidth",e.clientWidth+"px")}function we(n){if(D.getProperty("/config/zoom")!=="skipUpdateZoom"&&n){var a=n.srcObject.getVideoTracks();var t=window.navigator.mediaDevices.getSupportedConstraints();var r=a[0].getCapabilities();if(t.zoom&&r&&r.zoom){e.debug("BarcodeScanner.updateZoom: Support zoom to update");if(D.getProperty("/config/zoom")==="undefined"||D.getProperty("/config/zoom")===null){D.setProperty("/config/zoom",r.zoom.min)}}else{e.debug("BarcodeScanner.updateZoom: Don't support zoom or getCapabilities() failed.");D.setProperty("/config/zoom","skipUpdateZoom");return}try{var i=D.getProperty("/config/zoom");a[0].applyConstraints({advanced:[{zoom:i}]}).then(function(){D.setProperty("/config/zoom","skipUpdateZoom");e.debug("BarcodeScanner.updateZoom: Zoom is updated to "+i)}).catch(function(n){if(n&&n.message&&n.message.match(/out of range|Failed to read the 'zoom' property/i)){D.setProperty("/config/zoom","skipUpdateZoom");g.show(X.getResourceBundle().getText("BARCODE_DIALOG_CAMERA_UPDATE_PARAMETER_ERROR_MSG","zoom"),{duration:1e3})}else{e.error("BarcodeScanner.updateZoom: Update zoom to "+i+" failed. Error Message:"+n)}})}catch(n){e.error("BarcodeScanner.updateZoom: applyConstraints() failed. Error Message:"+n);D.setProperty("/config/zoom","skipUpdateZoom")}var o=a[0].getSettings();e.debug("BarcodeScanner.updateZoom: frameRate is "+o.frameRate+". zoom is "+o.zoom)}}function Ae(){if(O()==="ZXing"&&M("ZXing")){var e=D.getProperty("/apis/ZXing/scannerAPI");e.reset();e.stopContinuousDecode();e.reader.reset()}if(b){var n=typeof b.stop==="function"?b:b.getTracks()[0];n.stop();b=undefined}if(S){S.delete();S=undefined}B=undefined}function De(){D.checkUpdate(true);var n=D.getProperty("/apis/ZebraEnterpriseBrowser/enableZebraBarcodeRetryCount");var a=D.getProperty("/apis/ZebraEnterpriseBrowser/enableBarcodeState");if(O()==="ZebraEnterpriseBrowser"&&M("ZebraEnterpriseBrowser")&&a!==true){var t=function(n){if(n["data"]==""||n["time"]==""){var a=D.getProperty("/callBackHandler/onFnFail");if(typeof a==="function"){var t={text:"Zebra Scan failed",resultStatus:"Error"};if(D.getProperty("/callBackHandler/callBackFromSetPhysicalScan")){t=new f("scanFailEvent",new p,t)}a(t)}e.error("BarcodeScanner.zebraEBScanEnable: Zebra Enterprise Browser Scan Failed")}else{e.debug("BarcodeScanner.zebraEBScanEnable: Zebra EB Scan Result: "+n.data+"; Scan Json: "+JSON.stringify(n));var r=D.getProperty("/callBackHandler/onFnSuccess");if(typeof r==="function"){var i="unknown";if(D.getProperty("/scanDialog/scanningStartTime")>0){var o=Date.now();i=o-D.getProperty("/scanDialog/scanningStartTime")}var s={text:n.data,format:n.source,resultStatus:"Success",scanningTime:i,cancelled:false};if(D.getProperty("/callBackHandler/callBackFromSetPhysicalScan")){s=new f("scanSuccessEvent",new p,s)}r(s);D.setProperty("/scanDialog/scanningStartTime",0)}}};if(D.getProperty("/config/enableGS1Header")){EB.Barcode.codeIdType=EB.Barcode.CODEIDTYPE_AIM}else{EB.Barcode.codeIdType=EB.Barcode.CODEIDTYPE_NONE}EB.Barcode.enable({},t);D.setProperty("/apis/ZebraEnterpriseBrowser/enableBarcodeState",true);e.debug("BarcodeScanner.zebraEBScanEnable: try to enable EB Barcode in ("+(6-n)+") times")}else if(n>1&&a==="init"){n--;D.setProperty("/apis/ZebraEnterpriseBrowser/enableZebraBarcodeRetryCount",n);le();setTimeout(De,500)}else{e.debug("BarcodeScanner.zebraEBScanEnable: The scanner API is not ZebraEnterpriseBrowser or cannot been enabled.")}}function Ee(){var e=D.getProperty("/scanDialog/keepCameraScan");var n=false;if(O()==="ZebraEnterpriseBrowser"&&M("ZebraEnterpriseBrowser")&&(!e||typeof e!=="boolean")){n=true}return n}v.scan=function(n,a,t,r,i,o,s,c){if(!D.getProperty("/bReady")){e.error("BarcodeScanner.scan: Barcode scanning is already in progress.");return}D.setProperty("/bReady",false);if(typeof n==="function"){D.setProperty("/callBackHandler/onFnSuccess",n)}else{D.setProperty("/callBackHandler/onFnSuccess",null)}if(typeof a==="function"){D.setProperty("/callBackHandler/onFnFail",a)}else{D.setProperty("/callBackHandler/onFnFail",null)}if(typeof t==="function"){D.setProperty("/scanDialog/onLiveUpdate",t)}else{D.setProperty("/scanDialog/onLiveUpdate",null)}if(typeof r==="string"&&r!=null&&r.trim()!=""){D.setProperty("/scanDialog/title",r)}else{D.setProperty("/scanDialog/title",X.getProperty("BARCODE_DIALOG_TITLE"))}D.setProperty("/scanDialog/scanningStartTime",Date.now());D.setProperty("/config/preferFrontCamera",i);if(D.getProperty("/config/defaultConstraints/video/frameRate")!==undefined){delete D.getProperty("/config/defaultConstraints/video").frameRate}if(typeof o==="number"&&o>0){D.setProperty("/config/defaultConstraints/video/frameRate",o)}else if(typeof o!=="undefined"){g.show(X.getResourceBundle().getText("BARCODE_DIALOG_CAMERA_UPDATE_PARAMETER_ERROR_MSG","frameRate"),{duration:1e3})}D.setProperty("/config/zoom",s);D.setProperty("/scanDialog/keepCameraScan",c);D.checkUpdate(true);if(Ee()){Pe()}else if(M("Cordova")){ye()}else if(O()==="ZXing"){he()}else{ve()}};v.closeScanDialog=function(){if(m){m.close();D.setProperty("/scanDialog/scanningStartTime",0);D.setProperty("/scanDialog/onLiveUpdate",null)}D.setProperty("/bReady",true);D.checkUpdate(true)};v.getStatusModel=function(){return E};v.getScanAPIInfo=function(){return O()};v.setScanAPIInfo=function(n){if(!n){e.error("BarcodeScanner.setScanAPIInfo: scannerAPI is undefined.");return false}if(O()!==n){var a=D.getProperty("/apis/"+n);if(!a){e.error("BarcodeScanner.scan: The scanner API '"+n+"' doesn't exist, will use current scanner API '"+D.getProperty("/apis/"+O()+"/description")+"' to scan the barcode.");return false}else if(n==="ZXing"||n==="ZXingCPP"){if(H(n)){e.error("BarcodeScanner.scan: The scanner API '"+n+"' is unavailable, will use current scanner API '"+D.getProperty("/apis/"+O()+"/description")+"' to scan the barcode.");return false}else{e.info("BarcodeScanner.scan: Switch to scanner API '"+n+"' to scan the barcode.");R(n);return true}}else if(!M(n)){e.error("BarcodeScanner.scan: The scanner API '"+n+"' is unavailable, will use current scanner API '"+D.getProperty("/apis/"+O()+"/description")+"' to scan the barcode.");return false}else{e.info("BarcodeScanner.scan: Switch to scanner API '"+n+"' to scan the barcode.");R(n);return true}}else{e.debug("BarcodeScanner.setScanAPIInfo: '"+n+"' is already current scanner API. It need not to be changed.");return true}};v.setPhysicalScan=function(n){if(typeof n==="function"){D.setProperty("/callBackHandler/callBackFromSetPhysicalScan",true);D.setProperty("/callBackHandler/onFnSuccess",n);D.setProperty("/callBackHandler/onFnFail",n);if(P.os.android){jQuery(document).on("visibilitychange",function(){if(document.visibilityState==="visible"){le();De()}})}else{_("ZebraEnterpriseBrowser");e.debug("BarcodeScanner.setPhysicalScan: Not Android device, Zebra Enterprise Browser plugin is unavailable!")}}else{e.debug("setPhysicalScan is failed.")}};v.setConfig=function(n){if(typeof n==="object"&&Object.keys(n).length>0){var a=D.getProperty("/config");for(var t in n){if(a.hasOwnProperty(t)){a[t]=n[t];if(Ee()&&t==="enableGS1Header"){D.setProperty("/apis/ZebraEnterpriseBrowser/enableBarcodeState",false);EB.Barcode.disable(De)}if(t==="deviceId"){E.setProperty("/deviceId",n[t])}e.debug("The parameter("+t+") has been changed.")}else{e.error("The parameter("+t+") is unavailable.")}}D.setProperty("/config",a)}else{e.error("The options are not available.")}};de();return v},true);
//# sourceMappingURL=BarcodeScanner.js.map