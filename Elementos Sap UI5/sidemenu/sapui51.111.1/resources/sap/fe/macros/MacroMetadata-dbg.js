/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["sap/base/util/deepClone", "sap/base/util/merge", "sap/base/util/uid", "sap/fe/core/converters/ConverterContext"], function (deepClone, merge, uid, ConverterContext) {
  "use strict";

  const fnGetOverrides = function (mControlConfiguration, sID) {
    const oProps = {};
    if (mControlConfiguration) {
      const oControlConfig = mControlConfiguration[sID];
      if (oControlConfig) {
        Object.keys(oControlConfig).forEach(function (sConfigKey) {
          oProps[sConfigKey] = oControlConfig[sConfigKey];
        });
      }
    }
    return oProps;
  };
  const fnSetDefaultValue = function (oProps, sPropName, oOverrideValue, bForceUpdate) {
    if (oProps[sPropName] === undefined || bForceUpdate) {
      oProps[sPropName] = oOverrideValue;
    }
  };
  const MacroMetadata = {
    metadata: {
      properties: {
        _flexId: {
          type: "string"
        }
      }
    },
    extend: function (fnName, oContent) {
      oContent.metadata.properties._flexId = MacroMetadata.metadata.properties._flexId;
      oContent.hasValidation = true;
      oContent.getOverrides = fnGetOverrides.bind(oContent);
      oContent.setDefaultValue = fnSetDefaultValue.bind(oContent);
      oContent.getConverterContext = function (oVisualizationObjectPath, contextPath, mSettings, mExtraParams) {
        const oAppComponent = mSettings.appComponent;
        const originalViewData = mSettings.models.viewData && mSettings.models.viewData.getData();
        let viewData = Object.assign({}, originalViewData);
        delete viewData.resourceBundle;
        viewData = deepClone(viewData);
        viewData.controlConfiguration = merge(viewData.controlConfiguration, mExtraParams);
        return ConverterContext.createConverterContextForMacro(oVisualizationObjectPath.startingEntitySet.name, mSettings.models.metaModel, oAppComponent && oAppComponent.getDiagnostics(), merge, oVisualizationObjectPath.contextLocation, viewData);
      };
      oContent.createBindingContext = function (oData, mSettings) {
        const sContextPath = `/uid--${uid()}`;
        mSettings.models.converterContext.setProperty(sContextPath, oData);
        return mSettings.models.converterContext.createBindingContext(sContextPath);
      };
      oContent.parseAggregation = function (oAggregation, fnCallback) {
        const oOutObjects = {};
        if (oAggregation && oAggregation.children.length > 0) {
          const children = oAggregation.children;
          for (let childIdx = 0; childIdx < children.length; childIdx++) {
            const childObject = fnCallback(children[childIdx], childIdx);
            if (childObject) {
              oOutObjects[childObject.key] = childObject;
            }
          }
        }
        return oOutObjects;
      };
      oContent.getContentId = function (sMacroId) {
        return `${sMacroId}-content`;
      };
      return oContent;
    }
  };
  return MacroMetadata;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,