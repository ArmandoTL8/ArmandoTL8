/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/UIFormatters"], function (PropertyHelper, UIFormatters) {
  "use strict";

  var _exports = {};
  var getDisplayMode = UIFormatters.getDisplayMode;
  var hasValueHelp = PropertyHelper.hasValueHelp;
  const getDisplayProperty = function (propertyObjectPath, propertyConverted) {
    return hasValueHelp(propertyConverted) ? getDisplayMode(propertyObjectPath) : "Value";
  };
  _exports.getDisplayProperty = getDisplayProperty;
  const getFilterFieldDisplayFormat = async function (propertyObjectPath, propertyConverted, propertyInterface) {
    var _propertyConverted$an, _propertyConverted$an2;
    const oTextAnnotation = propertyConverted === null || propertyConverted === void 0 ? void 0 : (_propertyConverted$an = propertyConverted.annotations) === null || _propertyConverted$an === void 0 ? void 0 : (_propertyConverted$an2 = _propertyConverted$an.Common) === null || _propertyConverted$an2 === void 0 ? void 0 : _propertyConverted$an2.Text;
    if (oTextAnnotation) {
      // The text annotation should be on the property defined
      return getDisplayProperty(propertyObjectPath, propertyConverted);
    }
    const bHasValueHelp = hasValueHelp(propertyConverted);
    if (bHasValueHelp) {
      var _propertyObjectPath$t, _propertyObjectPath$t2, _propertyObjectPath$t3;
      // Exceptional case for missing text annotation on the property (retrieve text from value list)
      // Consider TextArrangement at EntityType otherwise set default display format 'DescriptionValue'
      const entityTextArrangement = propertyObjectPath === null || propertyObjectPath === void 0 ? void 0 : (_propertyObjectPath$t = propertyObjectPath.targetEntityType) === null || _propertyObjectPath$t === void 0 ? void 0 : (_propertyObjectPath$t2 = _propertyObjectPath$t.annotations) === null || _propertyObjectPath$t2 === void 0 ? void 0 : (_propertyObjectPath$t3 = _propertyObjectPath$t2.UI) === null || _propertyObjectPath$t3 === void 0 ? void 0 : _propertyObjectPath$t3.TextArrangement;
      return !!entityTextArrangement ? getDisplayMode(propertyObjectPath) : _getDisplayModeFromValueHelp(propertyInterface, propertyObjectPath);
    }
    return "Value";
  };

  /**
   * Method to determine the display mode from the value help.
   *
   * @param Interface The current templating context
   * @param propertyObjectPath The global path to reach the entitySet
   * @returns A promise with the string 'DescriptionValue' or 'Value', depending on whether a text annotation exists for the property in the value help
   * Hint: A text arrangement is consciously ignored. If the text is retrieved from the value help, the text arrangement of the value help property isnÂ´t considered. Instead, the default text arrangement #TextFirst
   * is used.
   */
  _exports.getFilterFieldDisplayFormat = getFilterFieldDisplayFormat;
  async function _getDisplayModeFromValueHelp(Interface, propertyObjectPath) {
    const context = Interface.context;
    const metaModel = Interface.context.getModel();
    return await metaModel.requestValueListInfo(context.getPath(), true, context).then(function (valueListInfo) {
      var _firstValueListInfo$P;
      const firstKey = Object.keys(valueListInfo)[0];
      const firstValueListInfo = valueListInfo[firstKey];
      const valueListParameter = (_firstValueListInfo$P = firstValueListInfo.Parameters) === null || _firstValueListInfo$P === void 0 ? void 0 : _firstValueListInfo$P.find(element => {
        var _element$LocalDataPro, _propertyObjectPath$t4;
        return ((_element$LocalDataPro = element.LocalDataProperty) === null || _element$LocalDataPro === void 0 ? void 0 : _element$LocalDataPro.$PropertyPath) === (propertyObjectPath === null || propertyObjectPath === void 0 ? void 0 : (_propertyObjectPath$t4 = propertyObjectPath.targetObject) === null || _propertyObjectPath$t4 === void 0 ? void 0 : _propertyObjectPath$t4.name);
      });
      const valueListProperty = valueListParameter === null || valueListParameter === void 0 ? void 0 : valueListParameter.ValueListProperty;
      const textAnnotation = metaModel.getObject("/" + firstValueListInfo.CollectionPath + "/" + valueListProperty + "@com.sap.vocabularies.Common.v1.Text");
      return textAnnotation ? "DescriptionValue" : "Value";
    });
  }
  _exports._getDisplayModeFromValueHelp = _getDisplayModeFromValueHelp;
  return _exports;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXREaXNwbGF5UHJvcGVydHkiLCJwcm9wZXJ0eU9iamVjdFBhdGgiLCJwcm9wZXJ0eUNvbnZlcnRlZCIsImhhc1ZhbHVlSGVscCIsImdldERpc3BsYXlNb2RlIiwiZ2V0RmlsdGVyRmllbGREaXNwbGF5Rm9ybWF0IiwicHJvcGVydHlJbnRlcmZhY2UiLCJvVGV4dEFubm90YXRpb24iLCJhbm5vdGF0aW9ucyIsIkNvbW1vbiIsIlRleHQiLCJiSGFzVmFsdWVIZWxwIiwiZW50aXR5VGV4dEFycmFuZ2VtZW50IiwidGFyZ2V0RW50aXR5VHlwZSIsIlVJIiwiVGV4dEFycmFuZ2VtZW50IiwiX2dldERpc3BsYXlNb2RlRnJvbVZhbHVlSGVscCIsIkludGVyZmFjZSIsImNvbnRleHQiLCJtZXRhTW9kZWwiLCJnZXRNb2RlbCIsInJlcXVlc3RWYWx1ZUxpc3RJbmZvIiwiZ2V0UGF0aCIsInRoZW4iLCJ2YWx1ZUxpc3RJbmZvIiwiZmlyc3RLZXkiLCJPYmplY3QiLCJrZXlzIiwiZmlyc3RWYWx1ZUxpc3RJbmZvIiwidmFsdWVMaXN0UGFyYW1ldGVyIiwiUGFyYW1ldGVycyIsImZpbmQiLCJlbGVtZW50IiwiTG9jYWxEYXRhUHJvcGVydHkiLCIkUHJvcGVydHlQYXRoIiwidGFyZ2V0T2JqZWN0IiwibmFtZSIsInZhbHVlTGlzdFByb3BlcnR5IiwiVmFsdWVMaXN0UHJvcGVydHkiLCJ0ZXh0QW5ub3RhdGlvbiIsImdldE9iamVjdCIsIkNvbGxlY3Rpb25QYXRoIl0sInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyJGaWx0ZXJGaWVsZFRlbXBsYXRpbmcudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRGF0YU1vZGVsT2JqZWN0UGF0aCB9IGZyb20gXCJzYXAvZmUvY29yZS90ZW1wbGF0aW5nL0RhdGFNb2RlbFBhdGhIZWxwZXJcIjtcbmltcG9ydCB7IGhhc1ZhbHVlSGVscCB9IGZyb20gXCJzYXAvZmUvY29yZS90ZW1wbGF0aW5nL1Byb3BlcnR5SGVscGVyXCI7XG5pbXBvcnQgeyBnZXREaXNwbGF5TW9kZSB9IGZyb20gXCJzYXAvZmUvY29yZS90ZW1wbGF0aW5nL1VJRm9ybWF0dGVyc1wiO1xuXG5pbXBvcnQgdHlwZSB7IFByb3BlcnR5IH0gZnJvbSBcIkBzYXAtdXgvdm9jYWJ1bGFyaWVzLXR5cGVzXCI7XG5pbXBvcnQgdHlwZSB7IENvbXB1dGVkQW5ub3RhdGlvbkludGVyZmFjZSB9IGZyb20gXCJzYXAvZmUvY29yZS90ZW1wbGF0aW5nL1VJRm9ybWF0dGVyc1wiO1xuaW1wb3J0IHR5cGUgQ29udGV4dCBmcm9tIFwic2FwL3VpL21vZGVsL29kYXRhL3Y0L0NvbnRleHRcIjtcbmltcG9ydCB0eXBlIE9EYXRhTWV0YU1vZGVsIGZyb20gXCJzYXAvdWkvbW9kZWwvb2RhdGEvdjQvT0RhdGFNZXRhTW9kZWxcIjtcblxuZXhwb3J0IGNvbnN0IGdldERpc3BsYXlQcm9wZXJ0eSA9IGZ1bmN0aW9uIChwcm9wZXJ0eU9iamVjdFBhdGg6IERhdGFNb2RlbE9iamVjdFBhdGgsIHByb3BlcnR5Q29udmVydGVkOiBQcm9wZXJ0eSk6IHN0cmluZyB7XG5cdHJldHVybiBoYXNWYWx1ZUhlbHAocHJvcGVydHlDb252ZXJ0ZWQpID8gZ2V0RGlzcGxheU1vZGUocHJvcGVydHlPYmplY3RQYXRoKSA6IFwiVmFsdWVcIjtcbn07XG5cbmV4cG9ydCBjb25zdCBnZXRGaWx0ZXJGaWVsZERpc3BsYXlGb3JtYXQgPSBhc3luYyBmdW5jdGlvbiAoXG5cdHByb3BlcnR5T2JqZWN0UGF0aDogRGF0YU1vZGVsT2JqZWN0UGF0aCxcblx0cHJvcGVydHlDb252ZXJ0ZWQ6IFByb3BlcnR5LFxuXHRwcm9wZXJ0eUludGVyZmFjZTogQ29tcHV0ZWRBbm5vdGF0aW9uSW50ZXJmYWNlXG4pOiBQcm9taXNlPHN0cmluZz4ge1xuXHRjb25zdCBvVGV4dEFubm90YXRpb24gPSBwcm9wZXJ0eUNvbnZlcnRlZD8uYW5ub3RhdGlvbnM/LkNvbW1vbj8uVGV4dDtcblx0aWYgKG9UZXh0QW5ub3RhdGlvbikge1xuXHRcdC8vIFRoZSB0ZXh0IGFubm90YXRpb24gc2hvdWxkIGJlIG9uIHRoZSBwcm9wZXJ0eSBkZWZpbmVkXG5cdFx0cmV0dXJuIGdldERpc3BsYXlQcm9wZXJ0eShwcm9wZXJ0eU9iamVjdFBhdGgsIHByb3BlcnR5Q29udmVydGVkKTtcblx0fVxuXHRjb25zdCBiSGFzVmFsdWVIZWxwID0gaGFzVmFsdWVIZWxwKHByb3BlcnR5Q29udmVydGVkKTtcblx0aWYgKGJIYXNWYWx1ZUhlbHApIHtcblx0XHQvLyBFeGNlcHRpb25hbCBjYXNlIGZvciBtaXNzaW5nIHRleHQgYW5ub3RhdGlvbiBvbiB0aGUgcHJvcGVydHkgKHJldHJpZXZlIHRleHQgZnJvbSB2YWx1ZSBsaXN0KVxuXHRcdC8vIENvbnNpZGVyIFRleHRBcnJhbmdlbWVudCBhdCBFbnRpdHlUeXBlIG90aGVyd2lzZSBzZXQgZGVmYXVsdCBkaXNwbGF5IGZvcm1hdCAnRGVzY3JpcHRpb25WYWx1ZSdcblx0XHRjb25zdCBlbnRpdHlUZXh0QXJyYW5nZW1lbnQgPSBwcm9wZXJ0eU9iamVjdFBhdGg/LnRhcmdldEVudGl0eVR5cGU/LmFubm90YXRpb25zPy5VST8uVGV4dEFycmFuZ2VtZW50O1xuXHRcdHJldHVybiAhIWVudGl0eVRleHRBcnJhbmdlbWVudFxuXHRcdFx0PyBnZXREaXNwbGF5TW9kZShwcm9wZXJ0eU9iamVjdFBhdGgpXG5cdFx0XHQ6IF9nZXREaXNwbGF5TW9kZUZyb21WYWx1ZUhlbHAocHJvcGVydHlJbnRlcmZhY2UsIHByb3BlcnR5T2JqZWN0UGF0aCk7XG5cdH1cblx0cmV0dXJuIFwiVmFsdWVcIjtcbn07XG5cbi8qKlxuICogTWV0aG9kIHRvIGRldGVybWluZSB0aGUgZGlzcGxheSBtb2RlIGZyb20gdGhlIHZhbHVlIGhlbHAuXG4gKlxuICogQHBhcmFtIEludGVyZmFjZSBUaGUgY3VycmVudCB0ZW1wbGF0aW5nIGNvbnRleHRcbiAqIEBwYXJhbSBwcm9wZXJ0eU9iamVjdFBhdGggVGhlIGdsb2JhbCBwYXRoIHRvIHJlYWNoIHRoZSBlbnRpdHlTZXRcbiAqIEByZXR1cm5zIEEgcHJvbWlzZSB3aXRoIHRoZSBzdHJpbmcgJ0Rlc2NyaXB0aW9uVmFsdWUnIG9yICdWYWx1ZScsIGRlcGVuZGluZyBvbiB3aGV0aGVyIGEgdGV4dCBhbm5vdGF0aW9uIGV4aXN0cyBmb3IgdGhlIHByb3BlcnR5IGluIHRoZSB2YWx1ZSBoZWxwXG4gKiBIaW50OiBBIHRleHQgYXJyYW5nZW1lbnQgaXMgY29uc2Npb3VzbHkgaWdub3JlZC4gSWYgdGhlIHRleHQgaXMgcmV0cmlldmVkIGZyb20gdGhlIHZhbHVlIGhlbHAsIHRoZSB0ZXh0IGFycmFuZ2VtZW50IG9mIHRoZSB2YWx1ZSBoZWxwIHByb3BlcnR5IGlzbsK0dCBjb25zaWRlcmVkLiBJbnN0ZWFkLCB0aGUgZGVmYXVsdCB0ZXh0IGFycmFuZ2VtZW50ICNUZXh0Rmlyc3RcbiAqIGlzIHVzZWQuXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBfZ2V0RGlzcGxheU1vZGVGcm9tVmFsdWVIZWxwKFxuXHRJbnRlcmZhY2U6IENvbXB1dGVkQW5ub3RhdGlvbkludGVyZmFjZSxcblx0cHJvcGVydHlPYmplY3RQYXRoOiBEYXRhTW9kZWxPYmplY3RQYXRoXG4pOiBQcm9taXNlPHN0cmluZz4ge1xuXHRjb25zdCBjb250ZXh0ID0gSW50ZXJmYWNlLmNvbnRleHQgYXMgdW5rbm93biBhcyBDb250ZXh0O1xuXHRjb25zdCBtZXRhTW9kZWwgPSBJbnRlcmZhY2UuY29udGV4dC5nZXRNb2RlbCgpIGFzIHVua25vd24gYXMgT0RhdGFNZXRhTW9kZWw7XG5cblx0cmV0dXJuIGF3YWl0IG1ldGFNb2RlbC5yZXF1ZXN0VmFsdWVMaXN0SW5mbyhjb250ZXh0LmdldFBhdGgoKSwgdHJ1ZSwgY29udGV4dCkudGhlbihmdW5jdGlvbiAodmFsdWVMaXN0SW5mbzogYW55KSB7XG5cdFx0Y29uc3QgZmlyc3RLZXkgPSBPYmplY3Qua2V5cyh2YWx1ZUxpc3RJbmZvKVswXTtcblx0XHRjb25zdCBmaXJzdFZhbHVlTGlzdEluZm8gPSB2YWx1ZUxpc3RJbmZvW2ZpcnN0S2V5XTtcblx0XHRjb25zdCB2YWx1ZUxpc3RQYXJhbWV0ZXIgPSBmaXJzdFZhbHVlTGlzdEluZm8uUGFyYW1ldGVycz8uZmluZCgoZWxlbWVudDogYW55KSA9PiB7XG5cdFx0XHRyZXR1cm4gZWxlbWVudC5Mb2NhbERhdGFQcm9wZXJ0eT8uJFByb3BlcnR5UGF0aCA9PT0gcHJvcGVydHlPYmplY3RQYXRoPy50YXJnZXRPYmplY3Q/Lm5hbWU7XG5cdFx0fSk7XG5cdFx0Y29uc3QgdmFsdWVMaXN0UHJvcGVydHkgPSB2YWx1ZUxpc3RQYXJhbWV0ZXI/LlZhbHVlTGlzdFByb3BlcnR5O1xuXG5cdFx0Y29uc3QgdGV4dEFubm90YXRpb24gPSBtZXRhTW9kZWwuZ2V0T2JqZWN0KFxuXHRcdFx0XCIvXCIgKyBmaXJzdFZhbHVlTGlzdEluZm8uQ29sbGVjdGlvblBhdGggKyBcIi9cIiArIHZhbHVlTGlzdFByb3BlcnR5ICsgXCJAY29tLnNhcC52b2NhYnVsYXJpZXMuQ29tbW9uLnYxLlRleHRcIlxuXHRcdCk7XG5cdFx0cmV0dXJuIHRleHRBbm5vdGF0aW9uID8gXCJEZXNjcmlwdGlvblZhbHVlXCIgOiBcIlZhbHVlXCI7XG5cdH0pO1xufVxuIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFBQTtBQUFBOzs7Ozs7O0VBU08sTUFBTUEsa0JBQWtCLEdBQUcsVUFBVUMsa0JBQXVDLEVBQUVDLGlCQUEyQixFQUFVO0lBQ3pILE9BQU9DLFlBQVksQ0FBQ0QsaUJBQWlCLENBQUMsR0FBR0UsY0FBYyxDQUFDSCxrQkFBa0IsQ0FBQyxHQUFHLE9BQU87RUFDdEYsQ0FBQztFQUFDO0VBRUssTUFBTUksMkJBQTJCLEdBQUcsZ0JBQzFDSixrQkFBdUMsRUFDdkNDLGlCQUEyQixFQUMzQkksaUJBQThDLEVBQzVCO0lBQUE7SUFDbEIsTUFBTUMsZUFBZSxHQUFHTCxpQkFBaUIsYUFBakJBLGlCQUFpQixnREFBakJBLGlCQUFpQixDQUFFTSxXQUFXLG9GQUE5QixzQkFBZ0NDLE1BQU0sMkRBQXRDLHVCQUF3Q0MsSUFBSTtJQUNwRSxJQUFJSCxlQUFlLEVBQUU7TUFDcEI7TUFDQSxPQUFPUCxrQkFBa0IsQ0FBQ0Msa0JBQWtCLEVBQUVDLGlCQUFpQixDQUFDO0lBQ2pFO0lBQ0EsTUFBTVMsYUFBYSxHQUFHUixZQUFZLENBQUNELGlCQUFpQixDQUFDO0lBQ3JELElBQUlTLGFBQWEsRUFBRTtNQUFBO01BQ2xCO01BQ0E7TUFDQSxNQUFNQyxxQkFBcUIsR0FBR1gsa0JBQWtCLGFBQWxCQSxrQkFBa0IsZ0RBQWxCQSxrQkFBa0IsQ0FBRVksZ0JBQWdCLG9GQUFwQyxzQkFBc0NMLFdBQVcscUZBQWpELHVCQUFtRE0sRUFBRSwyREFBckQsdUJBQXVEQyxlQUFlO01BQ3BHLE9BQU8sQ0FBQyxDQUFDSCxxQkFBcUIsR0FDM0JSLGNBQWMsQ0FBQ0gsa0JBQWtCLENBQUMsR0FDbENlLDRCQUE0QixDQUFDVixpQkFBaUIsRUFBRUwsa0JBQWtCLENBQUM7SUFDdkU7SUFDQSxPQUFPLE9BQU87RUFDZixDQUFDOztFQUVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtFQVJBO0VBU08sZUFBZWUsNEJBQTRCLENBQ2pEQyxTQUFzQyxFQUN0Q2hCLGtCQUF1QyxFQUNyQjtJQUNsQixNQUFNaUIsT0FBTyxHQUFHRCxTQUFTLENBQUNDLE9BQTZCO0lBQ3ZELE1BQU1DLFNBQVMsR0FBR0YsU0FBUyxDQUFDQyxPQUFPLENBQUNFLFFBQVEsRUFBK0I7SUFFM0UsT0FBTyxNQUFNRCxTQUFTLENBQUNFLG9CQUFvQixDQUFDSCxPQUFPLENBQUNJLE9BQU8sRUFBRSxFQUFFLElBQUksRUFBRUosT0FBTyxDQUFDLENBQUNLLElBQUksQ0FBQyxVQUFVQyxhQUFrQixFQUFFO01BQUE7TUFDaEgsTUFBTUMsUUFBUSxHQUFHQyxNQUFNLENBQUNDLElBQUksQ0FBQ0gsYUFBYSxDQUFDLENBQUMsQ0FBQyxDQUFDO01BQzlDLE1BQU1JLGtCQUFrQixHQUFHSixhQUFhLENBQUNDLFFBQVEsQ0FBQztNQUNsRCxNQUFNSSxrQkFBa0IsNEJBQUdELGtCQUFrQixDQUFDRSxVQUFVLDBEQUE3QixzQkFBK0JDLElBQUksQ0FBRUMsT0FBWSxJQUFLO1FBQUE7UUFDaEYsT0FBTywwQkFBQUEsT0FBTyxDQUFDQyxpQkFBaUIsMERBQXpCLHNCQUEyQkMsYUFBYSxPQUFLakMsa0JBQWtCLGFBQWxCQSxrQkFBa0IsaURBQWxCQSxrQkFBa0IsQ0FBRWtDLFlBQVksMkRBQWhDLHVCQUFrQ0MsSUFBSTtNQUMzRixDQUFDLENBQUM7TUFDRixNQUFNQyxpQkFBaUIsR0FBR1Isa0JBQWtCLGFBQWxCQSxrQkFBa0IsdUJBQWxCQSxrQkFBa0IsQ0FBRVMsaUJBQWlCO01BRS9ELE1BQU1DLGNBQWMsR0FBR3BCLFNBQVMsQ0FBQ3FCLFNBQVMsQ0FDekMsR0FBRyxHQUFHWixrQkFBa0IsQ0FBQ2EsY0FBYyxHQUFHLEdBQUcsR0FBR0osaUJBQWlCLEdBQUcsc0NBQXNDLENBQzFHO01BQ0QsT0FBT0UsY0FBYyxHQUFHLGtCQUFrQixHQUFHLE9BQU87SUFDckQsQ0FBQyxDQUFDO0VBQ0g7RUFBQztFQUFBO0FBQUEifQ==