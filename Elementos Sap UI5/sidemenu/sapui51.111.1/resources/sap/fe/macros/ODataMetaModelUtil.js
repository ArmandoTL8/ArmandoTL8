/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define([],function(){"use strict";const e={fetchAllAnnotations(e,t){const r=e.getMetaContext(t);return e.requestObject("@",r).then(function(e){return e})},getAllCustomAggregates(e){const t={};let r;for(const a in e){if(a.startsWith("@Org.OData.Aggregation.V1.CustomAggregate")){r=a.replace("@Org.OData.Aggregation.V1.CustomAggregate#","");const i=r.split("@");if(i.length==2){if(!t[i[0]]){t[i[0]]={}}if(i[1]=="Org.OData.Aggregation.V1.ContextDefiningProperties"){t[i[0]].contextDefiningProperties=e[a]}if(i[1]=="com.sap.vocabularies.Common.v1.Label"){t[i[0]].label=e[a]}}else if(i.length==1){t[i[0]]={name:i[0],propertyPath:i[0],label:`Custom Aggregate (${r})`,sortable:true,sortOrder:"both",custom:true}}}}return t},getAllAggregatableProperties(e){const t={};let r,a;if(e["@com.sap.vocabularies.Analytics.v1.AggregatedProperties"]){r=e["@com.sap.vocabularies.Analytics.v1.AggregatedProperties"];for(let e=0;e<r.length;e++){a=r[e];t[a.Name]={name:a.Name,propertyPath:a.AggregatableProperty.$PropertyPath,aggregationMethod:a.AggregationMethod,label:a["@com.sap.vocabularies.Common.v1.Label"]||`Aggregatable property (${a.Name})`,sortable:true,sortOrder:"both",custom:false}}}return t},getAllDataPoints(t){const r={};for(const a in t){if(a.startsWith("@com.sap.vocabularies.UI.v1.DataPoint")){const i=a.replace("@com.sap.vocabularies.UI.v1.DataPoint#","");const s=t[a].Value.$Path;r[s]=r[s]||{};r[s][i]=e.createDataPointProperty(t[a])}}return r},createDataPointProperty(t){const r={};if(t.TargetValue){r.targetValue=t.TargetValue.$Path}if(t.ForeCastValue){r.foreCastValue=t.ForeCastValue.$Path}let a=null;if(t.Criticality){if(t.Criticality.$Path){a={Calculated:t.Criticality.$Path}}else{a={Static:t.Criticality.$EnumMember.replace("com.sap.vocabularies.UI.v1.CriticalityType/","")}}}else if(t.CriticalityCalculation){const r={};const i=e._buildThresholds(r,t.CriticalityCalculation);if(i){a={ConstantThresholds:r}}else{a={DynamicThresholds:r}}}if(a){r.criticality=a}return r},_buildThresholds(e,t){const r=["AcceptanceRangeLowValue","AcceptanceRangeHighValue","ToleranceRangeLowValue","ToleranceRangeHighValue","DeviationRangeLowValue","DeviationRangeHighValue"];let a=true,i,s,n;e.ImprovementDirection=t.ImprovementDirection.$EnumMember.replace("com.sap.vocabularies.UI.v1.ImprovementDirectionType/","");const o={oneSupplied:false,usedMeasures:[]};const l={oneSupplied:false};for(s=0;s<r.length;s++){i=r[s];o[i]=t[i]?t[i].$Path:undefined;o.oneSupplied=o.oneSupplied||o[i];if(!o.oneSupplied){l[i]=t[i];l.oneSupplied=l.oneSupplied||l[i]}else if(o[i]){o.usedMeasures.push(o[i])}}if(o.oneSupplied){a=false;for(s=0;s<r.length;s++){if(o[r[s]]){e[r[s]]=o[r[s]]}}e.usedMeasures=o.usedMeasures}else{let a;e.AggregationLevels=[];if(l.oneSupplied){a={VisibleDimensions:null};for(s=0;s<r.length;s++){if(l[r[s]]){a[r[s]]=l[r[s]]}}e.AggregationLevels.push(a)}if(t.ConstantThresholds&&t.ConstantThresholds.length>0){for(s=0;s<t.ConstantThresholds.length;s++){const i=t.ConstantThresholds[s];const o=i.AggregationLevel?[]:null;if(i.AggregationLevel&&i.AggregationLevel.length>0){for(n=0;n<i.AggregationLevel.length;n++){o.push(i.AggregationLevel[n].$PropertyPath)}}a={VisibleDimensions:o};for(n=0;n<r.length;n++){const e=i[r[n]];if(e){a[r[n]]=e}}e.AggregationLevels.push(a)}}}return a},getSortRestrictionsInfo(e){const t={sortable:true,propertyInfo:{}};const r=e["@Org.OData.Capabilities.V1.SortRestrictions"];if(!r){return t}t.sortable=r.Sortable??true;for(const e of r.NonSortableProperties||[]){const r=e.$PropertyPath;t.propertyInfo[r]={sortable:false}}for(const e of r.AscendingOnlyProperties||[]){const r=e.$PropertyPath;t.propertyInfo[r]={sortable:true,sortDirection:"asc"}}for(const e of r.DescendingOnlyProperties||[]){const r=e.$PropertyPath;t.propertyInfo[r]={sortable:true,sortDirection:"desc"}}return t},getFilterRestrictionsInfo(e){let t,r;const a={filterable:true,propertyInfo:{}};if(e){a.filterable=e.Filterable!=null?e.Filterable:true;a.requiresFilter=e.RequiresFilter!=null?e.RequiresFilter:false;a.requiredProperties=[];if(a.RequiredProperties){for(t=0;t<e.RequiredProperties.length;t++){r=e.RequiredProperties[t].$PropertyPath;a.requiredProperties.push(r)}}if(e.NonFilterableProperties){for(t=0;t<e.NonFilterableProperties.length;t++){r=e.NonFilterableProperties[t].$PropertyPath;a[r]={filterable:false}}}if(e.FilterExpressionRestrictions){for(t=0;t<e.FilterExpressionRestrictions.length;t++){r=e.FilterExpressionRestrictions[t].$PropertyPath;a[r]={filterable:true,allowedExpressions:e.FilterExpressionRestrictions[t].AllowedExpressions}}}}return a},isMultiValueFilterExpression(e){let t=true;switch(e){case"SearchExpression":case"SingleRange":case"SingleValue":t=false;break;default:break}return t},addFilterInfoForProperty(e,t){const r=t[e.name];e.filterable=t.filterable&&r?r.filterable:true;if(e.filterable){e.allowedExpressions=r?r.allowedExpressions:null}},fetchCalendarTag(e,t){const r="@com.sap.vocabularies.Common.v1.";return Promise.all([e.requestObject(`${r}IsCalendarYear`,t),e.requestObject(`${r}IsCalendarHalfyear`,t),e.requestObject(`${r}IsCalendarQuarter`,t),e.requestObject(`${r}IsCalendarMonth`,t),e.requestObject(`${r}IsCalendarWeek`,t),e.requestObject(`${r}IsDayOfCalendarMonth`,t),e.requestObject(`${r}IsDayOfCalendarYear`,t),e.requestObject(`${r}IsCalendarYearHalfyear`,t),e.requestObject(`${r}IsCalendarYearQuarter`,t),e.requestObject(`${r}IsCalendarYearMonth`,t),e.requestObject(`${r}IsCalendarYearWeek`,t),e.requestObject(`${r}IsCalendarDate`,t)]).then(function(e){if(e[0]){return"year"}if(e[1]){return"halfYear"}if(e[2]){return"quarter"}if(e[3]){return"month"}if(e[4]){return"week"}if(e[5]){return"dayOfMonth"}if(e[6]){return"dayOfYear"}if(e[7]){return"yearHalfYear"}if(e[8]){return"yearQuarter"}if(e[9]){return"yearMonth"}if(e[10]){return"yearWeek"}if(e[11]){return"date"}return undefined})},fetchFiscalTag(e,t){const r="@com.sap.vocabularies.Common.v1.";return Promise.all([e.requestObject(`${r}IsFiscalYear`,t),e.requestObject(`${r}IsFiscalPeriod`,t),e.requestObject(`${r}IsFiscalYearPeriod`,t),e.requestObject(`${r}IsFiscalQuarter`,t),e.requestObject(`${r}IsFiscalYearQuarter`,t),e.requestObject(`${r}IsFiscalWeek`,t),e.requestObject(`${r}IsFiscalYearWeek`,t),e.requestObject(`${r}IsDayOfFiscalYear`,t),e.requestObject(`${r}IsFiscalYearVariant`,t)]).then(function(e){if(e[0]){return"year"}if(e[1]){return"period"}if(e[2]){return"yearPeriod"}if(e[3]){return"quarter"}if(e[4]){return"yearQuarter"}if(e[5]){return"week"}if(e[6]){return"yearWeek"}if(e[7]){return"dayOfYear"}if(e[8]){return"yearVariant"}return undefined})},fetchCriticality(e,t){const r="@com.sap.vocabularies.UI.v1";return e.requestObject(`${r}.ValueCriticality`,t).then(function(e){let t,r;if(e){t={VeryPositive:[],Positive:[],Critical:[],VeryNegative:[],Negative:[],Neutral:[]};for(let a=0;a<e.length;a++){r=e[a];if(r.Criticality.$EnumMember.endsWith("VeryPositive")){t.VeryPositive.push(r.Value)}else if(r.Criticality.$EnumMember.endsWith("Positive")){t.Positive.push(r.Value)}else if(r.Criticality.$EnumMember.endsWith("Critical")){t.Critical.push(r.Value)}else if(r.Criticality.$EnumMember.endsWith("VeryNegative")){t.VeryNegative.push(r.Value)}else if(r.Criticality.$EnumMember.endsWith("Negative")){t.Negative.push(r.Value)}else{t.Neutral.push(r.Value)}}for(const e in t){if(t[e].length==0){delete t[e]}}}return t})}};return e},false);
//# sourceMappingURL=ODataMetaModelUtil.js.map