/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/macros/chart/ChartBuildingBlock", "sap/fe/macros/fcl/FlexibleColumnLayoutActions", "sap/fe/macros/filterBar/FilterBarBuildingBlock", "sap/fe/macros/form/FormBuildingBlock", "sap/fe/macros/form/FormContainerBuildingBlock", "sap/fe/macros/fpm/CustomFragment.block", "sap/fe/macros/internal/FilterField", "sap/fe/macros/situations/SituationsIndicator.fragment", "sap/fe/macros/visualfilters/VisualFilterBuildingBlock", "sap/ui/core/util/XMLPreprocessor", "./contact/Contact", "./draftIndicator/DraftIndicator.block", "./field/PublicField", "./form/FormElementBlock", "./internal/ActionCommand.block", "./internal/DataPoint", "./internal/InternalField", "./kpiTag/KPITag.block", "./microchart/MicroChart.metadata", "./multiValueField/MultiValueField.block", "./paginator/Paginator.metadata", "./quickView/QuickView.metadata", "./share/Share.block", "./table/Table.metadata", "./valuehelp/ValueHelp.metadata", "./valuehelp/ValueHelpFilterBar.metadata"], function (BuildingBlockRuntime, ChartBuildingBlock, FlexibleColumnLayoutActions, FilterBarBuildingBlock, FormBuildingBlock, FormContainerBuildingBlock, CustomFragment, FilterField, SituationsIndicator, VisualFilterBuildingBlock, XMLPreprocessor, Contact, DraftIndicator, PublicField, FormElement, ActionCommand, DataPoint, InternalField, KPITag, MicroChart, MultiValueFieldBlock, Paginator, QuickView, Share, Table, ValueHelp, ValueHelpFilterBar) {
  "use strict";

  var registerBuildingBlock = BuildingBlockRuntime.registerBuildingBlock;
  const sNamespace = "sap.fe.macros",
    aControls = [Table, FormBuildingBlock, FormContainerBuildingBlock, PublicField, InternalField, FilterBarBuildingBlock, FilterField, ChartBuildingBlock, ValueHelp, ValueHelpFilterBar, MicroChart, Contact, QuickView, VisualFilterBuildingBlock, DraftIndicator, DataPoint, FormElement, FlexibleColumnLayoutActions, KPITag, MultiValueFieldBlock, Paginator, ActionCommand, SituationsIndicator, CustomFragment].map(function (vEntry) {
      if (typeof vEntry === "string") {
        return {
          name: vEntry,
          namespace: sNamespace,
          metadata: {
            metadataContexts: {},
            properties: {},
            events: {}
          }
        };
      }
      return vEntry;
    });
  function registerAll() {
    // runtime building blocks have to be registered explicitly, as block.register() executes steps additional to registerBuildingBlock
    Share.register();
    DraftIndicator.register();

    // as a first version we expect that there's a fragment with exactly the namespace/name
    aControls.forEach(function (oEntry) {
      registerBuildingBlock(oEntry);
    });
  }

  //This is needed in for templating test utils
  function deregisterAll() {
    aControls.forEach(function (oEntry) {
      XMLPreprocessor.plugIn(null, oEntry.namespace, oEntry.name);
    });
  }

  //Always register when loaded for compatibility
  registerAll();
  return {
    register: registerAll,
    deregister: deregisterAll
  };
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJzTmFtZXNwYWNlIiwiYUNvbnRyb2xzIiwiVGFibGUiLCJGb3JtQnVpbGRpbmdCbG9jayIsIkZvcm1Db250YWluZXJCdWlsZGluZ0Jsb2NrIiwiUHVibGljRmllbGQiLCJJbnRlcm5hbEZpZWxkIiwiRmlsdGVyQmFyQnVpbGRpbmdCbG9jayIsIkZpbHRlckZpZWxkIiwiQ2hhcnRCdWlsZGluZ0Jsb2NrIiwiVmFsdWVIZWxwIiwiVmFsdWVIZWxwRmlsdGVyQmFyIiwiTWljcm9DaGFydCIsIkNvbnRhY3QiLCJRdWlja1ZpZXciLCJWaXN1YWxGaWx0ZXJCdWlsZGluZ0Jsb2NrIiwiRHJhZnRJbmRpY2F0b3IiLCJEYXRhUG9pbnQiLCJGb3JtRWxlbWVudCIsIkZsZXhpYmxlQ29sdW1uTGF5b3V0QWN0aW9ucyIsIktQSVRhZyIsIk11bHRpVmFsdWVGaWVsZEJsb2NrIiwiUGFnaW5hdG9yIiwiQWN0aW9uQ29tbWFuZCIsIlNpdHVhdGlvbnNJbmRpY2F0b3IiLCJDdXN0b21GcmFnbWVudCIsIm1hcCIsInZFbnRyeSIsIm5hbWUiLCJuYW1lc3BhY2UiLCJtZXRhZGF0YSIsIm1ldGFkYXRhQ29udGV4dHMiLCJwcm9wZXJ0aWVzIiwiZXZlbnRzIiwicmVnaXN0ZXJBbGwiLCJTaGFyZSIsInJlZ2lzdGVyIiwiZm9yRWFjaCIsIm9FbnRyeSIsInJlZ2lzdGVyQnVpbGRpbmdCbG9jayIsImRlcmVnaXN0ZXJBbGwiLCJYTUxQcmVwcm9jZXNzb3IiLCJwbHVnSW4iLCJkZXJlZ2lzdGVyIl0sInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyJtYWNyb0xpYnJhcnkudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVnaXN0ZXJCdWlsZGluZ0Jsb2NrIH0gZnJvbSBcInNhcC9mZS9jb3JlL2J1aWxkaW5nQmxvY2tzL0J1aWxkaW5nQmxvY2tSdW50aW1lXCI7XG5pbXBvcnQgQ2hhcnRCdWlsZGluZ0Jsb2NrIGZyb20gXCJzYXAvZmUvbWFjcm9zL2NoYXJ0L0NoYXJ0QnVpbGRpbmdCbG9ja1wiO1xuaW1wb3J0IEZsZXhpYmxlQ29sdW1uTGF5b3V0QWN0aW9ucyBmcm9tIFwic2FwL2ZlL21hY3Jvcy9mY2wvRmxleGlibGVDb2x1bW5MYXlvdXRBY3Rpb25zXCI7XG5pbXBvcnQgRmlsdGVyQmFyQnVpbGRpbmdCbG9jayBmcm9tIFwic2FwL2ZlL21hY3Jvcy9maWx0ZXJCYXIvRmlsdGVyQmFyQnVpbGRpbmdCbG9ja1wiO1xuaW1wb3J0IEZvcm1CdWlsZGluZ0Jsb2NrIGZyb20gXCJzYXAvZmUvbWFjcm9zL2Zvcm0vRm9ybUJ1aWxkaW5nQmxvY2tcIjtcbmltcG9ydCBGb3JtQ29udGFpbmVyQnVpbGRpbmdCbG9jayBmcm9tIFwic2FwL2ZlL21hY3Jvcy9mb3JtL0Zvcm1Db250YWluZXJCdWlsZGluZ0Jsb2NrXCI7XG5pbXBvcnQgQ3VzdG9tRnJhZ21lbnQgZnJvbSBcInNhcC9mZS9tYWNyb3MvZnBtL0N1c3RvbUZyYWdtZW50LmJsb2NrXCI7XG5pbXBvcnQgRmlsdGVyRmllbGQgZnJvbSBcInNhcC9mZS9tYWNyb3MvaW50ZXJuYWwvRmlsdGVyRmllbGRcIjtcbmltcG9ydCBTaXR1YXRpb25zSW5kaWNhdG9yIGZyb20gXCJzYXAvZmUvbWFjcm9zL3NpdHVhdGlvbnMvU2l0dWF0aW9uc0luZGljYXRvci5mcmFnbWVudFwiO1xuaW1wb3J0IFZpc3VhbEZpbHRlckJ1aWxkaW5nQmxvY2sgZnJvbSBcInNhcC9mZS9tYWNyb3MvdmlzdWFsZmlsdGVycy9WaXN1YWxGaWx0ZXJCdWlsZGluZ0Jsb2NrXCI7XG5pbXBvcnQgWE1MUHJlcHJvY2Vzc29yIGZyb20gXCJzYXAvdWkvY29yZS91dGlsL1hNTFByZXByb2Nlc3NvclwiO1xuaW1wb3J0IENvbnRhY3QgZnJvbSBcIi4vY29udGFjdC9Db250YWN0XCI7XG5pbXBvcnQgRHJhZnRJbmRpY2F0b3IgZnJvbSBcIi4vZHJhZnRJbmRpY2F0b3IvRHJhZnRJbmRpY2F0b3IuYmxvY2tcIjtcbmltcG9ydCBQdWJsaWNGaWVsZCBmcm9tIFwiLi9maWVsZC9QdWJsaWNGaWVsZFwiO1xuaW1wb3J0IEZvcm1FbGVtZW50IGZyb20gXCIuL2Zvcm0vRm9ybUVsZW1lbnRCbG9ja1wiO1xuaW1wb3J0IEFjdGlvbkNvbW1hbmQgZnJvbSBcIi4vaW50ZXJuYWwvQWN0aW9uQ29tbWFuZC5ibG9ja1wiO1xuaW1wb3J0IERhdGFQb2ludCBmcm9tIFwiLi9pbnRlcm5hbC9EYXRhUG9pbnRcIjtcbmltcG9ydCBJbnRlcm5hbEZpZWxkIGZyb20gXCIuL2ludGVybmFsL0ludGVybmFsRmllbGRcIjtcbmltcG9ydCBLUElUYWcgZnJvbSBcIi4va3BpVGFnL0tQSVRhZy5ibG9ja1wiO1xuaW1wb3J0IE1pY3JvQ2hhcnQgZnJvbSBcIi4vbWljcm9jaGFydC9NaWNyb0NoYXJ0Lm1ldGFkYXRhXCI7XG5pbXBvcnQgTXVsdGlWYWx1ZUZpZWxkQmxvY2sgZnJvbSBcIi4vbXVsdGlWYWx1ZUZpZWxkL011bHRpVmFsdWVGaWVsZC5ibG9ja1wiO1xuaW1wb3J0IFBhZ2luYXRvciBmcm9tIFwiLi9wYWdpbmF0b3IvUGFnaW5hdG9yLm1ldGFkYXRhXCI7XG5pbXBvcnQgUXVpY2tWaWV3IGZyb20gXCIuL3F1aWNrVmlldy9RdWlja1ZpZXcubWV0YWRhdGFcIjtcbmltcG9ydCBTaGFyZSBmcm9tIFwiLi9zaGFyZS9TaGFyZS5ibG9ja1wiO1xuaW1wb3J0IFRhYmxlIGZyb20gXCIuL3RhYmxlL1RhYmxlLm1ldGFkYXRhXCI7XG5pbXBvcnQgVmFsdWVIZWxwIGZyb20gXCIuL3ZhbHVlaGVscC9WYWx1ZUhlbHAubWV0YWRhdGFcIjtcbmltcG9ydCBWYWx1ZUhlbHBGaWx0ZXJCYXIgZnJvbSBcIi4vdmFsdWVoZWxwL1ZhbHVlSGVscEZpbHRlckJhci5tZXRhZGF0YVwiO1xuXG5jb25zdCBzTmFtZXNwYWNlID0gXCJzYXAuZmUubWFjcm9zXCIsXG5cdGFDb250cm9scyA9IFtcblx0XHRUYWJsZSxcblx0XHRGb3JtQnVpbGRpbmdCbG9jayxcblx0XHRGb3JtQ29udGFpbmVyQnVpbGRpbmdCbG9jayxcblx0XHRQdWJsaWNGaWVsZCxcblx0XHRJbnRlcm5hbEZpZWxkLFxuXHRcdEZpbHRlckJhckJ1aWxkaW5nQmxvY2ssXG5cdFx0RmlsdGVyRmllbGQsXG5cdFx0Q2hhcnRCdWlsZGluZ0Jsb2NrLFxuXHRcdFZhbHVlSGVscCxcblx0XHRWYWx1ZUhlbHBGaWx0ZXJCYXIsXG5cdFx0TWljcm9DaGFydCxcblx0XHRDb250YWN0LFxuXHRcdFF1aWNrVmlldyxcblx0XHRWaXN1YWxGaWx0ZXJCdWlsZGluZ0Jsb2NrLFxuXHRcdERyYWZ0SW5kaWNhdG9yLFxuXHRcdERhdGFQb2ludCxcblx0XHRGb3JtRWxlbWVudCxcblx0XHRGbGV4aWJsZUNvbHVtbkxheW91dEFjdGlvbnMsXG5cdFx0S1BJVGFnLFxuXHRcdE11bHRpVmFsdWVGaWVsZEJsb2NrLFxuXHRcdFBhZ2luYXRvcixcblx0XHRBY3Rpb25Db21tYW5kLFxuXHRcdFNpdHVhdGlvbnNJbmRpY2F0b3IsXG5cdFx0Q3VzdG9tRnJhZ21lbnRcblx0XS5tYXAoZnVuY3Rpb24gKHZFbnRyeSkge1xuXHRcdGlmICh0eXBlb2YgdkVudHJ5ID09PSBcInN0cmluZ1wiKSB7XG5cdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRuYW1lOiB2RW50cnksXG5cdFx0XHRcdG5hbWVzcGFjZTogc05hbWVzcGFjZSxcblx0XHRcdFx0bWV0YWRhdGE6IHtcblx0XHRcdFx0XHRtZXRhZGF0YUNvbnRleHRzOiB7fSxcblx0XHRcdFx0XHRwcm9wZXJ0aWVzOiB7fSxcblx0XHRcdFx0XHRldmVudHM6IHt9XG5cdFx0XHRcdH1cblx0XHRcdH07XG5cdFx0fVxuXHRcdHJldHVybiB2RW50cnk7XG5cdH0pO1xuXG5mdW5jdGlvbiByZWdpc3RlckFsbCgpIHtcblx0Ly8gcnVudGltZSBidWlsZGluZyBibG9ja3MgaGF2ZSB0byBiZSByZWdpc3RlcmVkIGV4cGxpY2l0bHksIGFzIGJsb2NrLnJlZ2lzdGVyKCkgZXhlY3V0ZXMgc3RlcHMgYWRkaXRpb25hbCB0byByZWdpc3RlckJ1aWxkaW5nQmxvY2tcblx0U2hhcmUucmVnaXN0ZXIoKTtcblx0RHJhZnRJbmRpY2F0b3IucmVnaXN0ZXIoKTtcblxuXHQvLyBhcyBhIGZpcnN0IHZlcnNpb24gd2UgZXhwZWN0IHRoYXQgdGhlcmUncyBhIGZyYWdtZW50IHdpdGggZXhhY3RseSB0aGUgbmFtZXNwYWNlL25hbWVcblx0YUNvbnRyb2xzLmZvckVhY2goZnVuY3Rpb24gKG9FbnRyeSkge1xuXHRcdHJlZ2lzdGVyQnVpbGRpbmdCbG9jayhvRW50cnkpO1xuXHR9KTtcbn1cblxuLy9UaGlzIGlzIG5lZWRlZCBpbiBmb3IgdGVtcGxhdGluZyB0ZXN0IHV0aWxzXG5mdW5jdGlvbiBkZXJlZ2lzdGVyQWxsKCkge1xuXHRhQ29udHJvbHMuZm9yRWFjaChmdW5jdGlvbiAob0VudHJ5KSB7XG5cdFx0WE1MUHJlcHJvY2Vzc29yLnBsdWdJbihudWxsLCBvRW50cnkubmFtZXNwYWNlLCBvRW50cnkubmFtZSk7XG5cdH0pO1xufVxuXG4vL0Fsd2F5cyByZWdpc3RlciB3aGVuIGxvYWRlZCBmb3IgY29tcGF0aWJpbGl0eVxucmVnaXN0ZXJBbGwoKTtcblxuZXhwb3J0IGRlZmF1bHQge1xuXHRyZWdpc3RlcjogcmVnaXN0ZXJBbGwsXG5cdGRlcmVnaXN0ZXI6IGRlcmVnaXN0ZXJBbGxcbn07XG4iXSwibWFwcGluZ3MiOiI7QUFBQTtBQUFBO0FBQUE7Ozs7O0VBNEJBLE1BQU1BLFVBQVUsR0FBRyxlQUFlO0lBQ2pDQyxTQUFTLEdBQUcsQ0FDWEMsS0FBSyxFQUNMQyxpQkFBaUIsRUFDakJDLDBCQUEwQixFQUMxQkMsV0FBVyxFQUNYQyxhQUFhLEVBQ2JDLHNCQUFzQixFQUN0QkMsV0FBVyxFQUNYQyxrQkFBa0IsRUFDbEJDLFNBQVMsRUFDVEMsa0JBQWtCLEVBQ2xCQyxVQUFVLEVBQ1ZDLE9BQU8sRUFDUEMsU0FBUyxFQUNUQyx5QkFBeUIsRUFDekJDLGNBQWMsRUFDZEMsU0FBUyxFQUNUQyxXQUFXLEVBQ1hDLDJCQUEyQixFQUMzQkMsTUFBTSxFQUNOQyxvQkFBb0IsRUFDcEJDLFNBQVMsRUFDVEMsYUFBYSxFQUNiQyxtQkFBbUIsRUFDbkJDLGNBQWMsQ0FDZCxDQUFDQyxHQUFHLENBQUMsVUFBVUMsTUFBTSxFQUFFO01BQ3ZCLElBQUksT0FBT0EsTUFBTSxLQUFLLFFBQVEsRUFBRTtRQUMvQixPQUFPO1VBQ05DLElBQUksRUFBRUQsTUFBTTtVQUNaRSxTQUFTLEVBQUU3QixVQUFVO1VBQ3JCOEIsUUFBUSxFQUFFO1lBQ1RDLGdCQUFnQixFQUFFLENBQUMsQ0FBQztZQUNwQkMsVUFBVSxFQUFFLENBQUMsQ0FBQztZQUNkQyxNQUFNLEVBQUUsQ0FBQztVQUNWO1FBQ0QsQ0FBQztNQUNGO01BQ0EsT0FBT04sTUFBTTtJQUNkLENBQUMsQ0FBQztFQUVILFNBQVNPLFdBQVcsR0FBRztJQUN0QjtJQUNBQyxLQUFLLENBQUNDLFFBQVEsRUFBRTtJQUNoQnBCLGNBQWMsQ0FBQ29CLFFBQVEsRUFBRTs7SUFFekI7SUFDQW5DLFNBQVMsQ0FBQ29DLE9BQU8sQ0FBQyxVQUFVQyxNQUFNLEVBQUU7TUFDbkNDLHFCQUFxQixDQUFDRCxNQUFNLENBQUM7SUFDOUIsQ0FBQyxDQUFDO0VBQ0g7O0VBRUE7RUFDQSxTQUFTRSxhQUFhLEdBQUc7SUFDeEJ2QyxTQUFTLENBQUNvQyxPQUFPLENBQUMsVUFBVUMsTUFBTSxFQUFFO01BQ25DRyxlQUFlLENBQUNDLE1BQU0sQ0FBQyxJQUFJLEVBQUVKLE1BQU0sQ0FBQ1QsU0FBUyxFQUFFUyxNQUFNLENBQUNWLElBQUksQ0FBQztJQUM1RCxDQUFDLENBQUM7RUFDSDs7RUFFQTtFQUNBTSxXQUFXLEVBQUU7RUFBQyxPQUVDO0lBQ2RFLFFBQVEsRUFBRUYsV0FBVztJQUNyQlMsVUFBVSxFQUFFSDtFQUNiLENBQUM7QUFBQSJ9