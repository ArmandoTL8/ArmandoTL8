//@ui5-bundle sap/fe/macros/library-preload.js
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/CommonHelper-dbg", ["sap/base/Log", "sap/fe/core/CommonUtils", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/helpers/ModelHelper", "sap/m/library", "sap/ui/Device", "sap/ui/mdc/enum/EditMode", "sap/ui/model/Context", "sap/ui/model/odata/v4/AnnotationHelper"], function (Log, CommonUtils, BindingToolkit, ModelHelper, mLibrary, Device, EditMode, Context, ODataModelAnnotationHelper) {
  "use strict";

  var system = Device.system;
  var ref = BindingToolkit.ref;
  var fn = BindingToolkit.fn;
  var compileExpression = BindingToolkit.compileExpression;
  const ValueColor = mLibrary.ValueColor;
  const CommonHelper = {
    getPathToKey: function (oCtx) {
      return oCtx.getObject();
    },
    /**
     * Determines if a field is visible.
     *
     * @param target Target instance
     * @param oInterface Interface instance
     * @returns Returns true, false, or expression with path
     */
    isVisible: function (target, oInterface) {
      const oModel = oInterface.context.getModel(),
        sPropertyPath = oInterface.context.getPath(),
        oAnnotations = oModel.getObject(`${sPropertyPath}@`),
        hidden = oAnnotations["@com.sap.vocabularies.UI.v1.Hidden"];
      return typeof hidden === "object" ? "{= !${" + hidden.$Path + "} }" : !hidden;
    },
    /**
     * Determine if the action opens up a dialog.
     *
     * @param oActionContext
     * @param oInterface
     * @returns `Dialog` | `None` if a dialog is needed
     */
    isDialog: function (oActionContext, oInterface) {
      const oModel = oInterface.context.getModel(),
        sPropertyPath = oInterface.context.getPath(),
        isCritical = oModel.getObject(`${sPropertyPath}/@$ui5.overload@com.sap.vocabularies.Common.v1.IsActionCritical`);
      if (isCritical) {
        return "Dialog";
      } else if (oActionContext) {
        const oAction = Array.isArray(oActionContext) ? oActionContext[0] : oActionContext;
        if (oAction.$Parameter && oAction.$Parameter.length > 1) {
          return "Dialog";
        } else {
          return "None";
        }
      }
      return undefined;
    },
    /**
     * Determine if field is editable.
     *
     * @param target Target instance
     * @param oInterface Interface instance
     * @returns A Binding Expression to determine if a field should be editable or not.
     */
    getParameterEditMode: function (target, oInterface) {
      const oModel = oInterface.context.getModel(),
        sPropertyPath = oInterface.context.getPath(),
        oAnnotations = oModel.getObject(`${sPropertyPath}@`),
        fieldControl = oAnnotations["@com.sap.vocabularies.Common.v1.FieldControl"],
        immutable = oAnnotations["@Org.OData.Core.V1.Immutable"],
        computed = oAnnotations["@Org.OData.Core.V1.Computed"];
      let sEditMode = EditMode.Editable;
      if (immutable || computed) {
        sEditMode = EditMode.ReadOnly;
      } else if (fieldControl) {
        if (fieldControl.$EnumMember) {
          if (fieldControl.$EnumMember === "com.sap.vocabularies.Common.v1.FieldControlType/ReadOnly") {
            sEditMode = EditMode.ReadOnly;
          }
          if (fieldControl.$EnumMember === "com.sap.vocabularies.Common.v1.FieldControlType/Inapplicable" || fieldControl.$EnumMember === "com.sap.vocabularies.Common.v1.FieldControlType/Hidden") {
            sEditMode = EditMode.Disabled;
          }
        }
        if (fieldControl.$Path) {
          sEditMode = "{= %{" + fieldControl.$Path + "} < 3 ? (%{" + fieldControl.$Path + "} === 0 ? '" + EditMode.Disabled + "' : '" + EditMode.ReadOnly + "') : '" + EditMode.Editable + "'}";
        }
      }
      return sEditMode;
    },
    /**
     * Get the complete metapath to the target.
     *
     * @param target
     * @param oInterface
     * @returns The metapath
     */
    getMetaPath: function (target, oInterface) {
      return oInterface && oInterface.context && oInterface.context.getPath() || undefined;
    },
    isDesktop: function () {
      return system.desktop === true;
    },
    getTargetCollection: function (oContext, navCollection) {
      let sPath = oContext.getPath();
      if (oContext.getMetadata().getName() === "sap.ui.model.Context" && (oContext.getObject("$kind") === "EntitySet" || oContext.getObject("$ContainsTarget") === true)) {
        return sPath;
      }
      if (oContext.getModel) {
        sPath = oContext.getModel().getMetaPath && oContext.getModel().getMetaPath(sPath) || oContext.getModel().getMetaModel().getMetaPath(sPath);
      }
      //Supporting sPath of any format, either '/<entitySet>/<navigationCollection>' <OR> '/<entitySet>/$Type/<navigationCollection>'
      const aParts = sPath.split("/").filter(function (sPart) {
        return sPart && sPart != "$Type";
      }); //filter out empty strings and parts referring to '$Type'
      const entitySet = `/${aParts[0]}`;
      if (aParts.length === 1) {
        return entitySet;
      }
      const navigationCollection = navCollection === undefined ? aParts.slice(1).join("/$NavigationPropertyBinding/") : navCollection;
      return `${entitySet}/$NavigationPropertyBinding/${navigationCollection}`; // used in gotoTargetEntitySet method in the same file
    },

    isPropertyFilterable: function (context, oDataField) {
      const oModel = context.getModel(),
        sPropertyPath = context.getPath(),
        // LoacationPath would be the prefix of sPropertyPath, example: sPropertyPath = '/Customer/Set/Name' -> sPropertyLocationPath = '/Customer/Set'
        sPropertyLocationPath = CommonHelper.getLocationForPropertyPath(oModel, sPropertyPath),
        sProperty = sPropertyPath.replace(`${sPropertyLocationPath}/`, "");
      if (oDataField && (oDataField.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAction" || oDataField.$Type === "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation")) {
        return false;
      }
      return CommonUtils.isPropertyFilterable(oModel, sPropertyLocationPath, sProperty);
    },
    getLocationForPropertyPath: function (oModel, sPropertyPath) {
      let iLength;
      let sCollectionPath = sPropertyPath.slice(0, sPropertyPath.lastIndexOf("/"));
      if (oModel.getObject(`${sCollectionPath}/$kind`) === "EntityContainer") {
        iLength = sCollectionPath.length + 1;
        sCollectionPath = sPropertyPath.slice(iLength, sPropertyPath.indexOf("/", iLength));
      }
      return sCollectionPath;
    },
    gotoActionParameter: function (oContext) {
      const sPath = oContext.getPath(),
        sPropertyName = oContext.getObject(`${sPath}/$Name`);
      return CommonUtils.getParameterPath(sPath, sPropertyName);
    },
    /**
     * Returns the entity set name from the entity type name.
     *
     * @param oMetaModel OData v4 metamodel instance
     * @param sEntityType EntityType of the actiom
     * @returns The EntitySet of the bound action
     * @private
     * @ui5-restricted
     */
    getEntitySetName: function (oMetaModel, sEntityType) {
      const oEntityContainer = oMetaModel.getObject("/");
      for (const key in oEntityContainer) {
        if (typeof oEntityContainer[key] === "object" && oEntityContainer[key].$Type === sEntityType) {
          return key;
        }
      }
      return undefined;
    },
    /**
     * Returns the metamodel path correctly for bound actions if used with bReturnOnlyPath as true,
     * else returns an object which has 3 properties related to the action. They are the entity set name,
     * the $Path value of the OperationAvailable annotation and the binding parameter name. If
     * bCheckStaticValue is true, returns the static value of OperationAvailable annotation, if present.
     * e.g. for bound action someNameSpace.SomeBoundAction
     * of entity set SomeEntitySet, the string "/SomeEntitySet/someNameSpace.SomeBoundAction" is returned.
     *
     * @param oAction The context object of the action
     * @param bReturnOnlyPath If false, additional info is returned along with metamodel path to the bound action
     * @param sActionName The name of the bound action of the form someNameSpace.SomeBoundAction
     * @param bCheckStaticValue If true, the static value of OperationAvailable is returned, if present
     * @returns The string or object as specified by bReturnOnlyPath
     * @private
     * @ui5-restricted
     */
    getActionPath: function (oAction, bReturnOnlyPath, sActionName, bCheckStaticValue) {
      let sContextPath = oAction.getPath().split("/@")[0];
      sActionName = !sActionName ? oAction.getObject(oAction.getPath()) : sActionName;
      if (sActionName && sActionName.indexOf("(") > -1) {
        // action bound to another entity type
        sActionName = sActionName.split("(")[0];
      } else if (oAction.getObject(sContextPath)) {
        // TODO: this logic sounds wrong, to be corrected
        const sEntityTypeName = oAction.getObject(sContextPath).$Type;
        const sEntityName = this.getEntitySetName(oAction.getModel(), sEntityTypeName);
        if (sEntityName) {
          sContextPath = `/${sEntityName}`;
        }
      } else {
        return sContextPath;
      }
      if (bCheckStaticValue) {
        return oAction.getObject(`${sContextPath}/${sActionName}@Org.OData.Core.V1.OperationAvailable`);
      }
      if (bReturnOnlyPath) {
        return `${sContextPath}/${sActionName}`;
      } else {
        return {
          sContextPath: sContextPath,
          sProperty: oAction.getObject(`${sContextPath}/${sActionName}@Org.OData.Core.V1.OperationAvailable/$Path`),
          sBindingParameter: oAction.getObject(`${sContextPath}/${sActionName}/@$ui5.overload/0/$Parameter/0/$Name`)
        };
      }
    },
    getNavigationContext: function (oContext) {
      return ODataModelAnnotationHelper.getNavigationPath(oContext.getPath());
    },
    /**
     * Returns the path without the entity type (potentially first) and property (last) part (optional).
     * The result can be an empty string if it is a simple direct property.
     *
     * If and only if the given property path starts with a slash (/), it is considered that the entity type
     * is part of the path and will be stripped away.
     *
     * @param sPropertyPath
     * @param bKeepProperty
     * @returns The navigation path
     */
    getNavigationPath: function (sPropertyPath, bKeepProperty) {
      const bStartsWithEntityType = sPropertyPath.startsWith("/");
      const aParts = sPropertyPath.split("/").filter(function (part) {
        return !!part;
      });
      if (bStartsWithEntityType) {
        aParts.shift();
      }
      if (!bKeepProperty) {
        aParts.pop();
      }
      return aParts.join("/");
    },
    /**
     * Returns the correct metamodel path for bound actions.
     *
     * Since this method is called irrespective of the action type, this will be applied to unbound actions.
     * In such a case, if an incorrect path is returned, it is ignored during templating.
     *
     * Example: for the bound action someNameSpace.SomeBoundAction of entity set SomeEntitySet,
     * the string "/SomeEntitySet/someNameSpace.SomeBoundAction" is returned.
     *
     * @function
     * @static
     * @name sap.fe.macros.CommonHelper.getActionContext
     * @memberof sap.fe.macros.CommonHelper
     * @param oAction Context object for the action
     * @returns Correct metamodel path for bound and incorrect path for unbound actions
     * @private
     * @ui5-restricted
     */
    getActionContext: function (oAction) {
      return CommonHelper.getActionPath(oAction, true);
    },
    /**
     * Returns the metamodel path correctly for overloaded bound actions. For unbound actions,
     * the incorrect path is returned, but ignored during templating.
     * e.g. for bound action someNameSpace.SomeBoundAction of entity set SomeEntitySet,
     * the string "/SomeEntitySet/someNameSpace.SomeBoundAction/@$ui5.overload/0" is returned.
     *
     * @function
     * @static
     * @name sap.fe.macros.CommonHelper.getPathToBoundActionOverload
     * @memberof sap.fe.macros.CommonHelper
     * @param oAction The context object for the action
     * @returns The correct metamodel path for bound action overload and incorrect path for unbound actions
     * @private
     * @ui5-restricted
     */
    getPathToBoundActionOverload: function (oAction) {
      const sPath = CommonHelper.getActionPath(oAction, true);
      return `${sPath}/@$ui5.overload/0`;
    },
    /**
     * Returns the string with single quotes.
     *
     * @function
     * @memberof sap.fe.macros.CommonHelper
     * @param sValue Some string that needs to be converted into single quotes
     * @param [bEscape] Should the string be escaped beforehand
     * @returns - String with single quotes
     */
    addSingleQuotes: function (sValue, bEscape) {
      if (bEscape && sValue) {
        sValue = this.escapeSingleQuotes(sValue);
      }
      return `'${sValue}'`;
    },
    /**
     * Returns the string with escaped single quotes.
     *
     * @function
     * @memberof sap.fe.macros.CommonHelper
     * @param sValue Some string that needs escaping of single quotes
     * @returns - String with escaped single quotes
     */
    escapeSingleQuotes: function (sValue) {
      return sValue.replace(/[']/g, "\\'");
    },
    /**
     * Returns the function string
     * The first argument of generateFunction is name of the generated function string.
     * Remaining arguments of generateFunction are arguments of the newly generated function string.
     *
     * @function
     * @memberof sap.fe.macros.CommonHelper
     * @param sFuncName Some string for the function name
     * @param args The remaining arguments
     * @returns - Function string depends on arguments passed
     */
    generateFunction: function (sFuncName) {
      let sParams = "";
      for (let i = 0; i < (arguments.length <= 1 ? 0 : arguments.length - 1); i++) {
        sParams += i + 1 < 1 || arguments.length <= i + 1 ? undefined : arguments[i + 1];
        if (i < (arguments.length <= 1 ? 0 : arguments.length - 1) - 1) {
          sParams += ", ";
        }
      }
      let sFunction = `${sFuncName}()`;
      if (sParams) {
        sFunction = `${sFuncName}(${sParams})`;
      }
      return sFunction;
    },
    /*
     * Returns the visibility expression for datapoint title/link
     *
     * @function
     * @param {string} [sPath] annotation path of data point or Microchart
     * @param {boolean} [bLink] true if link visibility is being determined, false if title visibility is being determined
     * @param {boolean} [bFieldVisibility] true if field is vsiible, false otherwise
     * @returns  {string} sVisibilityExp Used to get the  visibility binding for DataPoints title in the Header.
     *
     */

    getHeaderDataPointLinkVisibility: function (sPath, bLink, bFieldVisibility) {
      let sVisibilityExp;
      if (bFieldVisibility) {
        sVisibilityExp = bLink ? "{= ${internal>isHeaderDPLinkVisible/" + sPath + "} === true && " + bFieldVisibility + "}" : "{= ${internal>isHeaderDPLinkVisible/" + sPath + "} !== true && " + bFieldVisibility + "}";
      } else {
        sVisibilityExp = bLink ? "{= ${internal>isHeaderDPLinkVisible/" + sPath + "} === true}" : "{= ${internal>isHeaderDPLinkVisible/" + sPath + "} !== true}";
      }
      return sVisibilityExp;
    },
    /**
     * Converts object to string(different from JSON.stringify or.toString).
     *
     * @function
     * @memberof sap.fe.macros.CommonHelper
     * @param oParams Some object
     * @returns - Object string
     */
    objectToString: function (oParams) {
      let iNumberOfKeys = Object.keys(oParams).length,
        sParams = "";
      for (const sKey in oParams) {
        let sValue = oParams[sKey];
        if (sValue && typeof sValue === "object") {
          sValue = this.objectToString(sValue);
        }
        sParams += `${sKey}: ${sValue}`;
        if (iNumberOfKeys > 1) {
          --iNumberOfKeys;
          sParams += ", ";
        }
      }
      return `{ ${sParams}}`;
    },
    /**
     * Removes escape characters (\) from an expression.
     *
     * @function
     * @memberof sap.fe.macros.CommonHelper
     * @param sExpression An expression with escape characters
     * @returns Expression string without escape characters or undefined
     */
    removeEscapeCharacters: function (sExpression) {
      return sExpression ? sExpression.replace(/\\?\\([{}])/g, "$1") : undefined;
    },
    /**
     * Makes updates to a stringified object so that it works properly in a template by adding ui5Object:true.
     *
     * @param sStringified
     * @returns The updated string representation of the object
     */
    stringifyObject: function (sStringified) {
      if (!sStringified) {
        return undefined;
      } else {
        const oObject = JSON.parse(sStringified);
        if (typeof oObject === "object" && !Array.isArray(oObject)) {
          const oUI5Object = {
            ui5object: true
          };
          Object.assign(oUI5Object, oObject);
          return JSON.stringify(oUI5Object);
        } else {
          const sType = Array.isArray(oObject) ? "Array" : typeof oObject;
          Log.error(`Unexpected object type in stringifyObject (${sType}) - only works with object`);
          throw new Error("stringifyObject only works with objects!");
        }
      }
    },
    /**
     * Create a string representation of the given data, taking care that it is not treated as a binding expression.
     *
     * @param vData The data to stringify
     * @returns The string representation of the data.
     */
    stringifyCustomData: function (vData) {
      const oObject = {
        ui5object: true
      };
      oObject["customData"] = vData instanceof Context ? vData.getObject() : vData;
      return JSON.stringify(oObject);
    },
    /**
     * Parses the given data, potentially unwraps the data.
     *
     * @param vData The data to parse
     * @returns The result of the data parsing
     */
    parseCustomData: function (vData) {
      vData = typeof vData === "string" ? JSON.parse(vData) : vData;
      if (vData && vData.hasOwnProperty("customData")) {
        return vData["customData"];
      }
      return vData;
    },
    getContextPath: function (oValue, oInterface) {
      const sPath = oInterface && oInterface.context && oInterface.context.getPath();
      return sPath[sPath.length - 1] === "/" ? sPath.slice(0, -1) : sPath;
    },
    /**
     * Returns a stringified JSON object containing  Presentation Variant sort conditions.
     *
     * @param oContext
     * @param oPresentationVariant Presentation variant Annotation
     * @param sPresentationVariantPath
     * @returns Stringified JSON object
     */
    getSortConditions: function (oContext, oPresentationVariant, sPresentationVariantPath) {
      if (oPresentationVariant && CommonHelper._isPresentationVariantAnnotation(sPresentationVariantPath) && oPresentationVariant.SortOrder) {
        const aSortConditions = {
          sorters: []
        };
        const sEntityPath = oContext.getPath(0).split("@")[0];
        oPresentationVariant.SortOrder.forEach(function () {
          let oCondition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
          let oSortProperty = {};
          const oSorter = {};
          if (oCondition.DynamicProperty) {
            var _oContext$getModel$ge;
            oSortProperty = (_oContext$getModel$ge = oContext.getModel(0).getObject(sEntityPath + oCondition.DynamicProperty.$AnnotationPath)) === null || _oContext$getModel$ge === void 0 ? void 0 : _oContext$getModel$ge.Name;
          } else if (oCondition.Property) {
            oSortProperty = oCondition.Property.$PropertyPath;
          }
          if (oSortProperty) {
            oSorter.name = oSortProperty;
            oSorter.descending = !!oCondition.Descending;
            aSortConditions.sorters.push(oSorter);
          } else {
            throw new Error("Please define the right path to the sort property");
          }
        });
        return JSON.stringify(aSortConditions);
      }
      return undefined;
    },
    _isPresentationVariantAnnotation: function (sAnnotationPath) {
      return sAnnotationPath.indexOf("@com.sap.vocabularies.UI.v1.PresentationVariant") > -1 || sAnnotationPath.indexOf("@com.sap.vocabularies.UI.v1.SelectionPresentationVariant") > -1;
    },
    createPresentationPathContext: function (oPresentationContext) {
      const aPaths = oPresentationContext.sPath.split("@") || [];
      const oModel = oPresentationContext.getModel();
      if (aPaths.length && aPaths[aPaths.length - 1].indexOf("com.sap.vocabularies.UI.v1.SelectionPresentationVariant") > -1) {
        const sPath = oPresentationContext.sPath.split("/PresentationVariant")[0];
        return oModel.createBindingContext(`${sPath}@sapui.name`);
      }
      return oModel.createBindingContext(`${oPresentationContext.sPath}@sapui.name`);
    },
    getPressHandlerForDataFieldForIBN: function (oDataField, sContext, bNavigateWithConfirmationDialog) {
      const mNavigationParameters = {
        navigationContexts: sContext ? sContext : "${$source>/}.getBindingContext()"
      };
      if (oDataField.RequiresContext && !oDataField.Inline && bNavigateWithConfirmationDialog) {
        mNavigationParameters.applicableContexts = "${internal>ibn/" + oDataField.SemanticObject + "-" + oDataField.Action + "/aApplicable/}";
        mNavigationParameters.notApplicableContexts = "${internal>ibn/" + oDataField.SemanticObject + "-" + oDataField.Action + "/aNotApplicable/}";
        mNavigationParameters.label = this.addSingleQuotes(oDataField.Label, true);
      }
      if (oDataField.Mapping) {
        mNavigationParameters.semanticObjectMapping = this.addSingleQuotes(JSON.stringify(oDataField.Mapping));
      }
      return this.generateFunction(bNavigateWithConfirmationDialog ? "._intentBasedNavigation.navigateWithConfirmationDialog" : "._intentBasedNavigation.navigate", this.addSingleQuotes(oDataField.SemanticObject), this.addSingleQuotes(oDataField.Action), this.objectToString(mNavigationParameters));
    },
    getEntitySet: function (oContext) {
      const sPath = oContext.getPath();
      return ModelHelper.getEntitySetPath(sPath);
    },
    /**
     * Handles the visibility of form menu actions both in path based and static value scenarios.
     *
     * @function
     * @memberof sap.fe.macros.CommonHelper
     * @param sVisibleValue Either static boolean values or Array of path expressions for visibility of menu button.
     * @returns The binding expression determining the visibility of menu actions.
     */
    handleVisibilityOfMenuActions: function (sVisibleValue) {
      const combinedConditions = [];
      if (Array.isArray(sVisibleValue)) {
        for (let i = 0; i < sVisibleValue.length; i++) {
          if (sVisibleValue[i].indexOf("{") > -1 && sVisibleValue[i].indexOf("{=") === -1) {
            sVisibleValue[i] = "{=" + sVisibleValue[i] + "}";
          }
          if (sVisibleValue[i].split("{=").length > 0) {
            sVisibleValue[i] = sVisibleValue[i].split("{=")[1].slice(0, -1);
          }
          combinedConditions.push(`(${sVisibleValue[i]})`);
        }
      }
      return combinedConditions.length > 0 ? `{= ${combinedConditions.join(" || ")}}` : sVisibleValue;
    },
    /**
     * Method to do the calculation of criticality in case CriticalityCalculation present in the annotation
     *
     * The calculation is done by comparing a value to the threshold values relevant for the specified improvement direction.
     * For improvement direction Target, the criticality is calculated using both low and high threshold values. It will be
     *
     * - Positive if the value is greater than or equal to AcceptanceRangeLowValue and lower than or equal to AcceptanceRangeHighValue
     * - Neutral if the value is greater than or equal to ToleranceRangeLowValue and lower than AcceptanceRangeLowValue OR greater than AcceptanceRangeHighValue and lower than or equal to ToleranceRangeHighValue
     * - Critical if the value is greater than or equal to DeviationRangeLowValue and lower than ToleranceRangeLowValue OR greater than ToleranceRangeHighValue and lower than or equal to DeviationRangeHighValue
     * - Negative if the value is lower than DeviationRangeLowValue or greater than DeviationRangeHighValue
     *
     * For improvement direction Minimize, the criticality is calculated using the high threshold values. It is
     * - Positive if the value is lower than or equal to AcceptanceRangeHighValue
     * - Neutral if the value is greater than AcceptanceRangeHighValue and lower than or equal to ToleranceRangeHighValue
     * - Critical if the value is greater than ToleranceRangeHighValue and lower than or equal to DeviationRangeHighValue
     * - Negative if the value is greater than DeviationRangeHighValue
     *
     * For improvement direction Maximize, the criticality is calculated using the low threshold values. It is
     *
     * - Positive if the value is greater than or equal to AcceptanceRangeLowValue
     * - Neutral if the value is less than AcceptanceRangeLowValue and greater than or equal to ToleranceRangeLowValue
     * - Critical if the value is lower than ToleranceRangeLowValue and greater than or equal to DeviationRangeLowValue
     * - Negative if the value is lower than DeviationRangeLowValue
     *
     * Thresholds are optional. For unassigned values, defaults are determined in this order:
     *
     * - For DeviationRange, an omitted LowValue translates into the smallest possible number (-INF), an omitted HighValue translates into the largest possible number (+INF)
     * - For ToleranceRange, an omitted LowValue will be initialized with DeviationRangeLowValue, an omitted HighValue will be initialized with DeviationRangeHighValue
     * - For AcceptanceRange, an omitted LowValue will be initialized with ToleranceRangeLowValue, an omitted HighValue will be initialized with ToleranceRangeHighValue.
     *
     * @param sImprovementDirection ImprovementDirection to be used for creating the criticality binding
     * @param sValue Value from Datapoint to be measured
     * @param sDeviationLow ExpressionBinding for Lower Deviation level
     * @param sToleranceLow ExpressionBinding for Lower Tolerance level
     * @param sAcceptanceLow ExpressionBinding for Lower Acceptance level
     * @param sAcceptanceHigh ExpressionBinding for Higher Acceptance level
     * @param sToleranceHigh ExpressionBinding for Higher Tolerance level
     * @param sDeviationHigh ExpressionBinding for Higher Deviation level
     * @returns Returns criticality calculation as expression binding
     */
    getCriticalityCalculationBinding: function (sImprovementDirection, sValue, sDeviationLow, sToleranceLow, sAcceptanceLow, sAcceptanceHigh, sToleranceHigh, sDeviationHigh) {
      let sCriticalityExpression = ValueColor.Neutral; // Default Criticality State

      sValue = `%${sValue}`;

      // Setting Unassigned Values
      sDeviationLow = sDeviationLow || -Infinity;
      sToleranceLow = sToleranceLow || sDeviationLow;
      sAcceptanceLow = sAcceptanceLow || sToleranceLow;
      sDeviationHigh = sDeviationHigh || Infinity;
      sToleranceHigh = sToleranceHigh || sDeviationHigh;
      sAcceptanceHigh = sAcceptanceHigh || sToleranceHigh;

      // Dealing with Decimal and Path based bingdings
      sDeviationLow = sDeviationLow && (+sDeviationLow ? +sDeviationLow : `%${sDeviationLow}`);
      sToleranceLow = sToleranceLow && (+sToleranceLow ? +sToleranceLow : `%${sToleranceLow}`);
      sAcceptanceLow = sAcceptanceLow && (+sAcceptanceLow ? +sAcceptanceLow : `%${sAcceptanceLow}`);
      sAcceptanceHigh = sAcceptanceHigh && (+sAcceptanceHigh ? +sAcceptanceHigh : `%${sAcceptanceHigh}`);
      sToleranceHigh = sToleranceHigh && (+sToleranceHigh ? +sToleranceHigh : `%${sToleranceHigh}`);
      sDeviationHigh = sDeviationHigh && (+sDeviationHigh ? +sDeviationHigh : `%${sDeviationHigh}`);

      // Creating runtime expression binding from criticality calculation for Criticality State
      if (sImprovementDirection.indexOf("Minimize") > -1) {
        sCriticalityExpression = "{= " + sValue + " <= " + sAcceptanceHigh + " ? '" + ValueColor.Good + "' : " + sValue + " <= " + sToleranceHigh + " ? '" + ValueColor.Neutral + "' : " + "(" + sDeviationHigh + " && " + sValue + " <= " + sDeviationHigh + ") ? '" + ValueColor.Critical + "' : '" + ValueColor.Error + "' }";
      } else if (sImprovementDirection.indexOf("Maximize") > -1) {
        sCriticalityExpression = "{= " + sValue + " >= " + sAcceptanceLow + " ? '" + ValueColor.Good + "' : " + sValue + " >= " + sToleranceLow + " ? '" + ValueColor.Neutral + "' : " + "(" + sDeviationLow + " && " + sValue + " >= " + sDeviationLow + ") ? '" + ValueColor.Critical + "' : '" + ValueColor.Error + "' }";
      } else if (sImprovementDirection.indexOf("Target") > -1) {
        sCriticalityExpression = "{= (" + sValue + " <= " + sAcceptanceHigh + " && " + sValue + " >= " + sAcceptanceLow + ") ? '" + ValueColor.Good + "' : " + "((" + sValue + " >= " + sToleranceLow + " && " + sValue + " < " + sAcceptanceLow + ") || (" + sValue + " > " + sAcceptanceHigh + " && " + sValue + " <= " + sToleranceHigh + ")) ? '" + ValueColor.Neutral + "' : " + "((" + sDeviationLow + " && (" + sValue + " >= " + sDeviationLow + ") && (" + sValue + " < " + sToleranceLow + ")) || ((" + sValue + " > " + sToleranceHigh + ") && " + sDeviationHigh + " && (" + sValue + " <= " + sDeviationHigh + "))) ? '" + ValueColor.Critical + "' : '" + ValueColor.Error + "' }";
      } else {
        Log.warning("Case not supported, returning the default Value Neutral");
      }
      return sCriticalityExpression;
    },
    /**
     * This function returns the criticality indicator from annotations if criticality is EnumMember.
     *
     * @param sCriticality Criticality provided in the annotations
     * @returns Return the indicator for criticality
     * @private
     */
    _getCriticalityFromEnum: function (sCriticality) {
      let sIndicator;
      if (sCriticality === "com.sap.vocabularies.UI.v1.CriticalityType/Negative") {
        sIndicator = ValueColor.Error;
      } else if (sCriticality === "com.sap.vocabularies.UI.v1.CriticalityType/Positive") {
        sIndicator = ValueColor.Good;
      } else if (sCriticality === "com.sap.vocabularies.UI.v1.CriticalityType/Critical") {
        sIndicator = ValueColor.Critical;
      } else {
        sIndicator = ValueColor.Neutral;
      }
      return sIndicator;
    },
    getValueCriticality: function (sDimension, aValueCriticality) {
      let sResult;
      const aValues = [];
      if (aValueCriticality && aValueCriticality.length > 0) {
        aValueCriticality.forEach(function (oVC) {
          if (oVC.Value && oVC.Criticality.$EnumMember) {
            const sValue = "${" + sDimension + "} === '" + oVC.Value + "' ? '" + CommonHelper._getCriticalityFromEnum(oVC.Criticality.$EnumMember) + "'";
            aValues.push(sValue);
          }
        });
        sResult = aValues.length > 0 && aValues.join(" : ") + " : undefined";
      }
      return sResult ? "{= " + sResult + " }" : undefined;
    },
    /**
     * To fetch measure attribute index.
     *
     * @param iMeasure Chart Annotations
     * @param oChartAnnotations Chart Annotations
     * @returns MeasureAttribute index.
     * @private
     */
    getMeasureAttributeIndex: function (iMeasure, oChartAnnotations) {
      var _oChartAnnotations$Me, _oChartAnnotations$Dy;
      let aMeasures, sMeasurePropertyPath;
      if ((oChartAnnotations === null || oChartAnnotations === void 0 ? void 0 : (_oChartAnnotations$Me = oChartAnnotations.Measures) === null || _oChartAnnotations$Me === void 0 ? void 0 : _oChartAnnotations$Me.length) > 0) {
        aMeasures = oChartAnnotations.Measures;
        sMeasurePropertyPath = aMeasures[iMeasure].$PropertyPath;
      } else if ((oChartAnnotations === null || oChartAnnotations === void 0 ? void 0 : (_oChartAnnotations$Dy = oChartAnnotations.DynamicMeasures) === null || _oChartAnnotations$Dy === void 0 ? void 0 : _oChartAnnotations$Dy.length) > 0) {
        aMeasures = oChartAnnotations.DynamicMeasures;
        sMeasurePropertyPath = aMeasures[iMeasure].$AnnotationPath;
      }
      let bMeasureAttributeExists;
      const aMeasureAttributes = oChartAnnotations.MeasureAttributes;
      let iMeasureAttribute = -1;
      const fnCheckMeasure = function (sMeasurePath, oMeasureAttribute, index) {
        if (oMeasureAttribute) {
          if (oMeasureAttribute.Measure && oMeasureAttribute.Measure.$PropertyPath === sMeasurePath) {
            iMeasureAttribute = index;
            return true;
          } else if (oMeasureAttribute.DynamicMeasure && oMeasureAttribute.DynamicMeasure.$AnnotationPath === sMeasurePath) {
            iMeasureAttribute = index;
            return true;
          }
        }
      };
      if (aMeasureAttributes) {
        bMeasureAttributeExists = aMeasureAttributes.some(fnCheckMeasure.bind(null, sMeasurePropertyPath));
      }
      return bMeasureAttributeExists && iMeasureAttribute > -1 && iMeasureAttribute;
    },
    getMeasureAttribute: function (oContext) {
      const oMetaModel = oContext.getModel(),
        sChartAnnotationPath = oContext.getPath();
      return oMetaModel.requestObject(sChartAnnotationPath).then(function (oChartAnnotations) {
        const aMeasureAttributes = oChartAnnotations.MeasureAttributes,
          iMeasureAttribute = CommonHelper.getMeasureAttributeIndex(0, oChartAnnotations);
        const sMeasureAttributePath = iMeasureAttribute > -1 && aMeasureAttributes[iMeasureAttribute] && aMeasureAttributes[iMeasureAttribute].DataPoint ? `${sChartAnnotationPath}/MeasureAttributes/${iMeasureAttribute}/` : undefined;
        if (sMeasureAttributePath === undefined) {
          Log.warning("DataPoint missing for the measure");
        }
        return sMeasureAttributePath ? `${sMeasureAttributePath}DataPoint/$AnnotationPath/` : sMeasureAttributePath;
      });
    },
    /**
     * This function returns the measureAttribute for the measure.
     *
     * @param oContext Context to the measure annotation
     * @returns Path to the measureAttribute of the measure
     */
    getMeasureAttributeForMeasure: function (oContext) {
      const oMetaModel = oContext.getModel(),
        sMeasurePath = oContext.getPath(),
        sChartAnnotationPath = sMeasurePath.substring(0, sMeasurePath.lastIndexOf("Measure")),
        iMeasure = sMeasurePath.replace(/.*\//, "");
      return oMetaModel.requestObject(sChartAnnotationPath).then(function (oChartAnnotations) {
        const aMeasureAttributes = oChartAnnotations.MeasureAttributes,
          iMeasureAttribute = CommonHelper.getMeasureAttributeIndex(iMeasure, oChartAnnotations);
        const sMeasureAttributePath = iMeasureAttribute > -1 && aMeasureAttributes[iMeasureAttribute] && aMeasureAttributes[iMeasureAttribute].DataPoint ? `${sChartAnnotationPath}MeasureAttributes/${iMeasureAttribute}/` : undefined;
        if (sMeasureAttributePath === undefined) {
          Log.warning("DataPoint missing for the measure");
        }
        return sMeasureAttributePath ? `${sMeasureAttributePath}DataPoint/$AnnotationPath/` : sMeasureAttributePath;
      });
    },
    /**
     * Method to determine if the contained navigation property has a draft root/node parent entitySet.
     *
     * @function
     * @name isDraftParentEntityForContainment
     * @param oTargetCollectionContainsTarget Target collection has ContainsTarget property
     * @param oTableMetadata Table metadata for which draft support shall be checked
     * @returns Returns true if draft
     */
    isDraftParentEntityForContainment: function (oTargetCollectionContainsTarget, oTableMetadata) {
      if (oTargetCollectionContainsTarget) {
        if (oTableMetadata && oTableMetadata.parentEntitySet && oTableMetadata.parentEntitySet.sPath) {
          const sParentEntitySetPath = oTableMetadata.parentEntitySet.sPath;
          const oDraftRoot = oTableMetadata.parentEntitySet.oModel.getObject(`${sParentEntitySetPath}@com.sap.vocabularies.Common.v1.DraftRoot`);
          const oDraftNode = oTableMetadata.parentEntitySet.oModel.getObject(`${sParentEntitySetPath}@com.sap.vocabularies.Common.v1.DraftNode`);
          if (oDraftRoot || oDraftNode) {
            return true;
          } else {
            return false;
          }
        }
      }
      return false;
    },
    /**
     * Ensures the data is processed as defined in the template.
     * Since the property Data is of the type 'object', it may not be in the same order as required by the template.
     *
     * @function
     * @memberof sap.fe.macros.CommonHelper
     * @param dataElement The data that is currently being processed.
     * @returns The correct path according to the template.
     */
    getDataFromTemplate: function (dataElement) {
      const splitPath = dataElement.getPath().split("/");
      const dataKey = splitPath[splitPath.length - 1];
      const connectedDataPath = `/${splitPath.slice(1, -2).join("/")}/@`;
      const connectedObject = dataElement.getObject(connectedDataPath);
      const template = connectedObject.Template;
      const splitTemp = template.split("}");
      const tempArray = [];
      for (let i = 0; i < splitTemp.length - 1; i++) {
        const key = splitTemp[i].split("{")[1].trim();
        tempArray.push(key);
      }
      Object.keys(connectedObject.Data).forEach(function (sKey) {
        if (sKey.startsWith("$")) {
          delete connectedObject.Data[sKey];
        }
      });
      const index = Object.keys(connectedObject.Data).indexOf(dataKey);
      return `/${splitPath.slice(1, -2).join("/")}/Data/${tempArray[index]}`;
    },
    /**
     * Checks if the end of the template has been reached.
     *
     * @function
     * @memberof sap.fe.macros.CommonHelper
     * @param target The target of the connected fields.
     * @param element The element that is currently being processed.
     * @returns True or False (depending on the template index).
     */
    notLastIndex: function (target, element) {
      const template = target.Template;
      const splitTemp = template.split("}");
      const tempArray = [];
      let isLastIndex = false;
      for (let i = 0; i < splitTemp.length - 1; i++) {
        const dataKey = splitTemp[i].split("{")[1].trim();
        tempArray.push(dataKey);
      }
      tempArray.forEach(function (templateInfo) {
        if (target.Data[templateInfo] === element && tempArray.indexOf(templateInfo) !== tempArray.length - 1) {
          isLastIndex = true;
        }
      });
      return isLastIndex;
    },
    /**
     * Determines the delimiter from the template.
     *
     * @function
     * @memberof sap.fe.macros.CommonHelper
     * @param template The template string.
     * @returns The delimiter in the template string.
     */
    getDelimiter: function (template) {
      return template.split("}")[1].split("{")[0].trim();
    },
    oMetaModel: undefined,
    setMetaModel: function (oMetaModel) {
      this.oMetaModel = oMetaModel;
    },
    getMetaModel: function (oContext, oInterface) {
      if (oContext) {
        return oInterface.context.getModel();
      }
      return this.oMetaModel;
    },
    getParameters: function (oContext, oInterface) {
      if (oContext) {
        const oMetaModel = oInterface.context.getModel();
        const sPath = oInterface.context.getPath();
        const oParameterInfo = CommonUtils.getParameterInfo(oMetaModel, sPath);
        if (oParameterInfo.parameterProperties) {
          return Object.keys(oParameterInfo.parameterProperties);
        }
      }
      return [];
    },
    /**
     * Build an expression calling an action handler via the FPM helper's actionWrapper function
     *
     * This function assumes that the 'FPM.actionWrapper()' function is available at runtime.
     *
     * @param oAction Action metadata
     * @param oAction.handlerModule Module containing the action handler method
     * @param oAction.handlerMethod Action handler method name
     * @param [oThis] `this` (if the function is called from a macro)
     * @param oThis.id The table's ID
     * @returns The action wrapper binding	expression
     */
    buildActionWrapper: function (oAction, oThis) {
      const aParams = [ref("$event"), oAction.handlerModule, oAction.handlerMethod];
      if (oThis && oThis.id) {
        const oAdditionalParams = {
          contexts: ref("${internal>selectedContexts}")
        };
        aParams.push(oAdditionalParams);
      }
      return compileExpression(fn("FPM.actionWrapper", aParams));
    },
    /**
     * Returns the value whether or not the element should be visible depending on the Hidden annotation.
     * It is inverted as the UI elements have a visible property instead of an hidden one.
     *
     * @param dataFieldAnnotations The dataField Object
     * @returns A path or a boolean
     */
    getHiddenPathExpression: function (dataFieldAnnotations) {
      if (dataFieldAnnotations["@com.sap.vocabularies.UI.v1.Hidden"] !== null) {
        const hidden = dataFieldAnnotations["@com.sap.vocabularies.UI.v1.Hidden"];
        return typeof hidden === "object" ? "{= !${" + hidden.$Path + "} }" : !hidden;
      }
      return true;
    }
  };
  CommonHelper.getSortConditions.requiresIContext = true;
  return CommonHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/CommonHelper", ["sap/base/Log","sap/fe/core/CommonUtils","sap/fe/core/helpers/BindingToolkit","sap/fe/core/helpers/ModelHelper","sap/m/library","sap/ui/Device","sap/ui/mdc/enum/EditMode","sap/ui/model/Context","sap/ui/model/odata/v4/AnnotationHelper"],function(t,e,n,i,r,o,a,s,c){"use strict";var l=o.system;var u=n.ref;var f=n.fn;var g=n.compileExpression;const d=r.ValueColor;const p={getPathToKey:function(t){return t.getObject()},isVisible:function(t,e){const n=e.context.getModel(),i=e.context.getPath(),r=n.getObject(`${i}@`),o=r["@com.sap.vocabularies.UI.v1.Hidden"];return typeof o==="object"?"{= !${"+o.$Path+"} }":!o},isDialog:function(t,e){const n=e.context.getModel(),i=e.context.getPath(),r=n.getObject(`${i}/@$ui5.overload@com.sap.vocabularies.Common.v1.IsActionCritical`);if(r){return"Dialog"}else if(t){const e=Array.isArray(t)?t[0]:t;if(e.$Parameter&&e.$Parameter.length>1){return"Dialog"}else{return"None"}}return undefined},getParameterEditMode:function(t,e){const n=e.context.getModel(),i=e.context.getPath(),r=n.getObject(`${i}@`),o=r["@com.sap.vocabularies.Common.v1.FieldControl"],s=r["@Org.OData.Core.V1.Immutable"],c=r["@Org.OData.Core.V1.Computed"];let l=a.Editable;if(s||c){l=a.ReadOnly}else if(o){if(o.$EnumMember){if(o.$EnumMember==="com.sap.vocabularies.Common.v1.FieldControlType/ReadOnly"){l=a.ReadOnly}if(o.$EnumMember==="com.sap.vocabularies.Common.v1.FieldControlType/Inapplicable"||o.$EnumMember==="com.sap.vocabularies.Common.v1.FieldControlType/Hidden"){l=a.Disabled}}if(o.$Path){l="{= %{"+o.$Path+"} < 3 ? (%{"+o.$Path+"} === 0 ? '"+a.Disabled+"' : '"+a.ReadOnly+"') : '"+a.Editable+"'}"}}return l},getMetaPath:function(t,e){return e&&e.context&&e.context.getPath()||undefined},isDesktop:function(){return l.desktop===true},getTargetCollection:function(t,e){let n=t.getPath();if(t.getMetadata().getName()==="sap.ui.model.Context"&&(t.getObject("$kind")==="EntitySet"||t.getObject("$ContainsTarget")===true)){return n}if(t.getModel){n=t.getModel().getMetaPath&&t.getModel().getMetaPath(n)||t.getModel().getMetaModel().getMetaPath(n)}const i=n.split("/").filter(function(t){return t&&t!="$Type"});const r=`/${i[0]}`;if(i.length===1){return r}const o=e===undefined?i.slice(1).join("/$NavigationPropertyBinding/"):e;return`${r}/$NavigationPropertyBinding/${o}`},isPropertyFilterable:function(t,n){const i=t.getModel(),r=t.getPath(),o=p.getLocationForPropertyPath(i,r),a=r.replace(`${o}/`,"");if(n&&(n.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAction"||n.$Type==="com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation")){return false}return e.isPropertyFilterable(i,o,a)},getLocationForPropertyPath:function(t,e){let n;let i=e.slice(0,e.lastIndexOf("/"));if(t.getObject(`${i}/$kind`)==="EntityContainer"){n=i.length+1;i=e.slice(n,e.indexOf("/",n))}return i},gotoActionParameter:function(t){const n=t.getPath(),i=t.getObject(`${n}/$Name`);return e.getParameterPath(n,i)},getEntitySetName:function(t,e){const n=t.getObject("/");for(const t in n){if(typeof n[t]==="object"&&n[t].$Type===e){return t}}return undefined},getActionPath:function(t,e,n,i){let r=t.getPath().split("/@")[0];n=!n?t.getObject(t.getPath()):n;if(n&&n.indexOf("(")>-1){n=n.split("(")[0]}else if(t.getObject(r)){const e=t.getObject(r).$Type;const n=this.getEntitySetName(t.getModel(),e);if(n){r=`/${n}`}}else{return r}if(i){return t.getObject(`${r}/${n}@Org.OData.Core.V1.OperationAvailable`)}if(e){return`${r}/${n}`}else{return{sContextPath:r,sProperty:t.getObject(`${r}/${n}@Org.OData.Core.V1.OperationAvailable/$Path`),sBindingParameter:t.getObject(`${r}/${n}/@$ui5.overload/0/$Parameter/0/$Name`)}}},getNavigationContext:function(t){return c.getNavigationPath(t.getPath())},getNavigationPath:function(t,e){const n=t.startsWith("/");const i=t.split("/").filter(function(t){return!!t});if(n){i.shift()}if(!e){i.pop()}return i.join("/")},getActionContext:function(t){return p.getActionPath(t,true)},getPathToBoundActionOverload:function(t){const e=p.getActionPath(t,true);return`${e}/@$ui5.overload/0`},addSingleQuotes:function(t,e){if(e&&t){t=this.escapeSingleQuotes(t)}return`'${t}'`},escapeSingleQuotes:function(t){return t.replace(/[']/g,"\\'")},generateFunction:function(t){let e="";for(let t=0;t<(arguments.length<=1?0:arguments.length-1);t++){e+=t+1<1||arguments.length<=t+1?undefined:arguments[t+1];if(t<(arguments.length<=1?0:arguments.length-1)-1){e+=", "}}let n=`${t}()`;if(e){n=`${t}(${e})`}return n},getHeaderDataPointLinkVisibility:function(t,e,n){let i;if(n){i=e?"{= ${internal>isHeaderDPLinkVisible/"+t+"} === true && "+n+"}":"{= ${internal>isHeaderDPLinkVisible/"+t+"} !== true && "+n+"}"}else{i=e?"{= ${internal>isHeaderDPLinkVisible/"+t+"} === true}":"{= ${internal>isHeaderDPLinkVisible/"+t+"} !== true}"}return i},objectToString:function(t){let e=Object.keys(t).length,n="";for(const i in t){let r=t[i];if(r&&typeof r==="object"){r=this.objectToString(r)}n+=`${i}: ${r}`;if(e>1){--e;n+=", "}}return`{ ${n}}`},removeEscapeCharacters:function(t){return t?t.replace(/\\?\\([{}])/g,"$1"):undefined},stringifyObject:function(e){if(!e){return undefined}else{const n=JSON.parse(e);if(typeof n==="object"&&!Array.isArray(n)){const t={ui5object:true};Object.assign(t,n);return JSON.stringify(t)}else{const e=Array.isArray(n)?"Array":typeof n;t.error(`Unexpected object type in stringifyObject (${e}) - only works with object`);throw new Error("stringifyObject only works with objects!")}}},stringifyCustomData:function(t){const e={ui5object:true};e["customData"]=t instanceof s?t.getObject():t;return JSON.stringify(e)},parseCustomData:function(t){t=typeof t==="string"?JSON.parse(t):t;if(t&&t.hasOwnProperty("customData")){return t["customData"]}return t},getContextPath:function(t,e){const n=e&&e.context&&e.context.getPath();return n[n.length-1]==="/"?n.slice(0,-1):n},getSortConditions:function(t,e,n){if(e&&p._isPresentationVariantAnnotation(n)&&e.SortOrder){const n={sorters:[]};const i=t.getPath(0).split("@")[0];e.SortOrder.forEach(function(){let e=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let r={};const o={};if(e.DynamicProperty){var a;r=(a=t.getModel(0).getObject(i+e.DynamicProperty.$AnnotationPath))===null||a===void 0?void 0:a.Name}else if(e.Property){r=e.Property.$PropertyPath}if(r){o.name=r;o.descending=!!e.Descending;n.sorters.push(o)}else{throw new Error("Please define the right path to the sort property")}});return JSON.stringify(n)}return undefined},_isPresentationVariantAnnotation:function(t){return t.indexOf("@com.sap.vocabularies.UI.v1.PresentationVariant")>-1||t.indexOf("@com.sap.vocabularies.UI.v1.SelectionPresentationVariant")>-1},createPresentationPathContext:function(t){const e=t.sPath.split("@")||[];const n=t.getModel();if(e.length&&e[e.length-1].indexOf("com.sap.vocabularies.UI.v1.SelectionPresentationVariant")>-1){const e=t.sPath.split("/PresentationVariant")[0];return n.createBindingContext(`${e}@sapui.name`)}return n.createBindingContext(`${t.sPath}@sapui.name`)},getPressHandlerForDataFieldForIBN:function(t,e,n){const i={navigationContexts:e?e:"${$source>/}.getBindingContext()"};if(t.RequiresContext&&!t.Inline&&n){i.applicableContexts="${internal>ibn/"+t.SemanticObject+"-"+t.Action+"/aApplicable/}";i.notApplicableContexts="${internal>ibn/"+t.SemanticObject+"-"+t.Action+"/aNotApplicable/}";i.label=this.addSingleQuotes(t.Label,true)}if(t.Mapping){i.semanticObjectMapping=this.addSingleQuotes(JSON.stringify(t.Mapping))}return this.generateFunction(n?"._intentBasedNavigation.navigateWithConfirmationDialog":"._intentBasedNavigation.navigate",this.addSingleQuotes(t.SemanticObject),this.addSingleQuotes(t.Action),this.objectToString(i))},getEntitySet:function(t){const e=t.getPath();return i.getEntitySetPath(e)},handleVisibilityOfMenuActions:function(t){const e=[];if(Array.isArray(t)){for(let n=0;n<t.length;n++){if(t[n].indexOf("{")>-1&&t[n].indexOf("{=")===-1){t[n]="{="+t[n]+"}"}if(t[n].split("{=").length>0){t[n]=t[n].split("{=")[1].slice(0,-1)}e.push(`(${t[n]})`)}}return e.length>0?`{= ${e.join(" || ")}}`:t},getCriticalityCalculationBinding:function(e,n,i,r,o,a,s,c){let l=d.Neutral;n=`%${n}`;i=i||-Infinity;r=r||i;o=o||r;c=c||Infinity;s=s||c;a=a||s;i=i&&(+i?+i:`%${i}`);r=r&&(+r?+r:`%${r}`);o=o&&(+o?+o:`%${o}`);a=a&&(+a?+a:`%${a}`);s=s&&(+s?+s:`%${s}`);c=c&&(+c?+c:`%${c}`);if(e.indexOf("Minimize")>-1){l="{= "+n+" <= "+a+" ? '"+d.Good+"' : "+n+" <= "+s+" ? '"+d.Neutral+"' : "+"("+c+" && "+n+" <= "+c+") ? '"+d.Critical+"' : '"+d.Error+"' }"}else if(e.indexOf("Maximize")>-1){l="{= "+n+" >= "+o+" ? '"+d.Good+"' : "+n+" >= "+r+" ? '"+d.Neutral+"' : "+"("+i+" && "+n+" >= "+i+") ? '"+d.Critical+"' : '"+d.Error+"' }"}else if(e.indexOf("Target")>-1){l="{= ("+n+" <= "+a+" && "+n+" >= "+o+") ? '"+d.Good+"' : "+"(("+n+" >= "+r+" && "+n+" < "+o+") || ("+n+" > "+a+" && "+n+" <= "+s+")) ? '"+d.Neutral+"' : "+"(("+i+" && ("+n+" >= "+i+") && ("+n+" < "+r+")) || (("+n+" > "+s+") && "+c+" && ("+n+" <= "+c+"))) ? '"+d.Critical+"' : '"+d.Error+"' }"}else{t.warning("Case not supported, returning the default Value Neutral")}return l},_getCriticalityFromEnum:function(t){let e;if(t==="com.sap.vocabularies.UI.v1.CriticalityType/Negative"){e=d.Error}else if(t==="com.sap.vocabularies.UI.v1.CriticalityType/Positive"){e=d.Good}else if(t==="com.sap.vocabularies.UI.v1.CriticalityType/Critical"){e=d.Critical}else{e=d.Neutral}return e},getValueCriticality:function(t,e){let n;const i=[];if(e&&e.length>0){e.forEach(function(e){if(e.Value&&e.Criticality.$EnumMember){const n="${"+t+"} === '"+e.Value+"' ? '"+p._getCriticalityFromEnum(e.Criticality.$EnumMember)+"'";i.push(n)}});n=i.length>0&&i.join(" : ")+" : undefined"}return n?"{= "+n+" }":undefined},getMeasureAttributeIndex:function(t,e){var n,i;let r,o;if((e===null||e===void 0?void 0:(n=e.Measures)===null||n===void 0?void 0:n.length)>0){r=e.Measures;o=r[t].$PropertyPath}else if((e===null||e===void 0?void 0:(i=e.DynamicMeasures)===null||i===void 0?void 0:i.length)>0){r=e.DynamicMeasures;o=r[t].$AnnotationPath}let a;const s=e.MeasureAttributes;let c=-1;const l=function(t,e,n){if(e){if(e.Measure&&e.Measure.$PropertyPath===t){c=n;return true}else if(e.DynamicMeasure&&e.DynamicMeasure.$AnnotationPath===t){c=n;return true}}};if(s){a=s.some(l.bind(null,o))}return a&&c>-1&&c},getMeasureAttribute:function(e){const n=e.getModel(),i=e.getPath();return n.requestObject(i).then(function(e){const n=e.MeasureAttributes,r=p.getMeasureAttributeIndex(0,e);const o=r>-1&&n[r]&&n[r].DataPoint?`${i}/MeasureAttributes/${r}/`:undefined;if(o===undefined){t.warning("DataPoint missing for the measure")}return o?`${o}DataPoint/$AnnotationPath/`:o})},getMeasureAttributeForMeasure:function(e){const n=e.getModel(),i=e.getPath(),r=i.substring(0,i.lastIndexOf("Measure")),o=i.replace(/.*\//,"");return n.requestObject(r).then(function(e){const n=e.MeasureAttributes,i=p.getMeasureAttributeIndex(o,e);const a=i>-1&&n[i]&&n[i].DataPoint?`${r}MeasureAttributes/${i}/`:undefined;if(a===undefined){t.warning("DataPoint missing for the measure")}return a?`${a}DataPoint/$AnnotationPath/`:a})},isDraftParentEntityForContainment:function(t,e){if(t){if(e&&e.parentEntitySet&&e.parentEntitySet.sPath){const t=e.parentEntitySet.sPath;const n=e.parentEntitySet.oModel.getObject(`${t}@com.sap.vocabularies.Common.v1.DraftRoot`);const i=e.parentEntitySet.oModel.getObject(`${t}@com.sap.vocabularies.Common.v1.DraftNode`);if(n||i){return true}else{return false}}}return false},getDataFromTemplate:function(t){const e=t.getPath().split("/");const n=e[e.length-1];const i=`/${e.slice(1,-2).join("/")}/@`;const r=t.getObject(i);const o=r.Template;const a=o.split("}");const s=[];for(let t=0;t<a.length-1;t++){const e=a[t].split("{")[1].trim();s.push(e)}Object.keys(r.Data).forEach(function(t){if(t.startsWith("$")){delete r.Data[t]}});const c=Object.keys(r.Data).indexOf(n);return`/${e.slice(1,-2).join("/")}/Data/${s[c]}`},notLastIndex:function(t,e){const n=t.Template;const i=n.split("}");const r=[];let o=false;for(let t=0;t<i.length-1;t++){const e=i[t].split("{")[1].trim();r.push(e)}r.forEach(function(n){if(t.Data[n]===e&&r.indexOf(n)!==r.length-1){o=true}});return o},getDelimiter:function(t){return t.split("}")[1].split("{")[0].trim()},oMetaModel:undefined,setMetaModel:function(t){this.oMetaModel=t},getMetaModel:function(t,e){if(t){return e.context.getModel()}return this.oMetaModel},getParameters:function(t,n){if(t){const t=n.context.getModel();const i=n.context.getPath();const r=e.getParameterInfo(t,i);if(r.parameterProperties){return Object.keys(r.parameterProperties)}}return[]},buildActionWrapper:function(t,e){const n=[u("$event"),t.handlerModule,t.handlerMethod];if(e&&e.id){const t={contexts:u("${internal>selectedContexts}")};n.push(t)}return g(f("FPM.actionWrapper",n))},getHiddenPathExpression:function(t){if(t["@com.sap.vocabularies.UI.v1.Hidden"]!==null){const e=t["@com.sap.vocabularies.UI.v1.Hidden"];return typeof e==="object"?"{= !${"+e.$Path+"} }":!e}return true}};p.getSortConditions.requiresIContext=true;return p},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/DelegateUtil-dbg", ["sap/base/Log", "sap/fe/core/CommonUtils", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/templating/PropertyFormatters", "sap/fe/macros/field/FieldHelper", "sap/fe/macros/internal/valuehelp/ValueHelpTemplating"], function (Log, CommonUtils, StableIdHelper, PropertyFormatters, FieldHelper, ValueHelpTemplating) {
  "use strict";

  var generateID = ValueHelpTemplating.generateID;
  var getRelativePropertyPath = PropertyFormatters.getRelativePropertyPath;
  var generate = StableIdHelper.generate;
  const NS_MACRODATA = "http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1";
  function _retrieveModel() {
    this.control.detachModelContextChange(_retrieveModel, this);
    const sModelName = this.modelName,
      oModel = this.control.getModel(sModelName);
    if (oModel) {
      this.resolve(oModel);
    } else {
      this.control.attachModelContextChange(_retrieveModel, this);
    }
  }
  async function getCustomDataWithModifier(oControl, sProperty, oModifier) {
    const aCustomData = [];
    const aRetrievedCustomData = await Promise.resolve().then(oModifier.getAggregation.bind(oModifier, oControl, "customData"));
    const oPromise = aRetrievedCustomData.reduce((oPreviousPromise, oCustomData) => {
      return oPreviousPromise.then(oModifier.getProperty.bind(oModifier, oCustomData, "key")).then(function (sKey) {
        if (sKey === sProperty) {
          aCustomData.push(oCustomData);
        }
      });
    }, Promise.resolve());
    await oPromise;
    if (aCustomData.length === 1) {
      return oModifier.getProperty(aCustomData[0], "value");
    } else {
      return undefined;
    }
  }
  const FETCHED_PROPERTIES_DATA_KEY = "sap_fe_TableDelegate_propertyInfoMap";
  const DelegateUtil = {
    getLocalizedText(sTextOrToken, oControl) {
      const aMatch = /{([A-Za-z0-9_.|@]+)>([A-Za-z0-9_.|]+)}/.exec(sTextOrToken);
      if (aMatch) {
        try {
          const oResourceBundle = oControl.getModel(aMatch[1]).getResourceBundle();
          return oResourceBundle.getText(aMatch[2]);
        } catch (e) {
          Log.info(`Unable to retrieve localized text ${sTextOrToken}`);
        }
      }
      return sTextOrToken;
    },
    setCachedProperties(table, fetchedProperties) {
      // do not cache during templating, else it becomes part of the cached view
      if (table instanceof window.Element) {
        return;
      }
      const key = FETCHED_PROPERTIES_DATA_KEY;
      DelegateUtil.setCustomData(table, key, fetchedProperties);
    },
    getCachedProperties(table) {
      // properties are not cached during templating
      if (table instanceof window.Element) {
        return null;
      }
      const key = FETCHED_PROPERTIES_DATA_KEY;
      return DelegateUtil.getCustomData(table, key);
    },
    getCustomData(oControl, sProperty, oModifier) {
      // If Modifier is given, the method must execute asynchronously and return a Promise
      if (oModifier) {
        return getCustomDataWithModifier(oControl, sProperty, oModifier);
      } else {
        // Delegate invoked from a non-flex change - FilterBarDelegate._addP13nItem for OP table filtering, FilterBarDelegate.fetchProperties etc.
        if (oControl && sProperty) {
          if (oControl instanceof window.Element) {
            return oControl.getAttributeNS(NS_MACRODATA, sProperty);
          }
          if (oControl.data instanceof Function) {
            return oControl.data(sProperty);
          }
        }
        return undefined;
      }
    },
    setCustomData(oControl, sProperty, vValue) {
      if (oControl && sProperty) {
        if (oControl instanceof window.Element) {
          return oControl.setAttributeNS(NS_MACRODATA, `customData:${sProperty}`, vValue);
        }
        if (oControl.data instanceof Function) {
          return oControl.data(sProperty, vValue);
        }
      }
    },
    fetchPropertiesForEntity(sEntitySet, oMetaModel) {
      return oMetaModel.requestObject(`${sEntitySet}/`);
    },
    fetchAnnotationsForEntity(sEntitySet, oMetaModel) {
      return oMetaModel.requestObject(`${sEntitySet}@`);
    },
    fetchModel(oControl) {
      return new Promise(resolve => {
        const sModelName = oControl.getDelegate().payload && oControl.getDelegate().payload.modelName,
          oContext = {
            modelName: sModelName,
            control: oControl,
            resolve: resolve
          };
        _retrieveModel.call(oContext);
      });
    },
    loadMacroLibrary() {
      return new Promise(resolve => {
        sap.ui.require(["sap/fe/macros/macroLibrary"], function /*macroLibrary*/
        () {
          resolve();
        });
      });
    },
    templateControlFragment(sFragmentName, oPreprocessorSettings, oOptions, oModifier) {
      return CommonUtils.templateControlFragment(sFragmentName, oPreprocessorSettings, oOptions, oModifier);
    },
    doesValueHelpExist(mParameters) {
      const sPropertyName = mParameters.sPropertyName || "";
      const sValueHelpType = mParameters.sValueHelpType || "";
      const oMetaModel = mParameters.oMetaModel;
      const oModifier = mParameters.oModifier;
      const sOriginalProperty = `${mParameters.sBindingPath}/${sPropertyName}`;
      const oPropertyContext = oMetaModel.createBindingContext(sOriginalProperty);
      let sValueHelpProperty = FieldHelper.valueHelpProperty(oPropertyContext);
      const bIsAbsolute = mParameters.sBindingPath && mParameters.sBindingPath.indexOf("/") === 0;

      // unit/currency
      if (sValueHelpProperty.indexOf("$Path") > -1) {
        sValueHelpProperty = oMetaModel.getObject(sValueHelpProperty);
      }
      if (bIsAbsolute && sValueHelpProperty.indexOf("/") !== 0) {
        sValueHelpProperty = `${mParameters.sBindingPath}/${sValueHelpProperty}`;
      }
      const sGeneratedId = generateID(mParameters.flexId, generate([oModifier ? oModifier.getId(mParameters.oControl) : mParameters.oControl.getId(), sValueHelpType]), getRelativePropertyPath(oPropertyContext.getProperty(sOriginalProperty), {
        context: {
          getModel: () => {
            return mParameters.oMetaModel;
          },
          getPath: () => {
            return sOriginalProperty;
          }
        }
      }), getRelativePropertyPath(oPropertyContext.getProperty(sValueHelpProperty), {
        context: {
          getModel: () => {
            return mParameters.oMetaModel;
          },
          getPath: () => {
            return sValueHelpProperty;
          }
        }
      }));
      return Promise.resolve().then(function () {
        if (oModifier) {
          return oModifier.getAggregation(mParameters.oControl, "dependents");
        }
        return mParameters.oControl.getAggregation("dependents");
      }).then(function (aDependents) {
        return Promise.resolve(aDependents && aDependents.some(function (oDependent) {
          return oModifier ? oModifier.getId(oDependent) === sGeneratedId : oDependent.getId() === sGeneratedId;
        }));
      });
    },
    isValueHelpRequired(mParameters, bInFilterField) {
      const sPropertyName = mParameters.sPropertyName || "",
        oMetaModel = mParameters.oMetaModel,
        sProperty = `${mParameters.sBindingPath}/${sPropertyName}`,
        oPropertyContext = oMetaModel.createBindingContext(sProperty),
        sValueHelpProperty = FieldHelper.valueHelpProperty(oPropertyContext, bInFilterField);
      return this.getCustomData(mParameters.oControl, "displayModePropertyBinding", mParameters.oModifier).then(function (bReadOnly) {
        // Check whether the control is read-only. If yes, no need of a value help.
        bReadOnly = typeof bReadOnly === "boolean" ? bReadOnly : bReadOnly === "true";
        if (bReadOnly) {
          return false;
        }
        // Else, check whether Value Help relevant annotation exists for the property.
        // TODO use PropertyFormatter.hasValueHelp () => if doing so, QUnit tests fail due to mocked model implementation
        return Promise.all([oMetaModel.requestObject(`${sValueHelpProperty}@com.sap.vocabularies.Common.v1.ValueListWithFixedValues`), oMetaModel.requestObject(`${sValueHelpProperty}@com.sap.vocabularies.Common.v1.ValueListReferences`), oMetaModel.requestObject(`${sValueHelpProperty}@com.sap.vocabularies.Common.v1.ValueListMapping`), oMetaModel.requestObject(`${sValueHelpProperty}@com.sap.vocabularies.Common.v1.ValueList`)]);
      }).then(function (aResults) {
        return !!aResults[0] || !!aResults[1] || !!aResults[2] || !!aResults[3];
      }).catch(function (oError) {
        Log.warning("Error while retrieving custom data / value list annotation values", oError);
      });
    },
    isMultiValue(oProperty) {
      let bIsMultiValue = true;
      //SingleValue | MultiValue | SingleRange | MultiRange | SearchExpression | MultiRangeOrSearchExpression
      switch (oProperty.filterExpression) {
        case "SearchExpression":
        case "SingleRange":
        case "SingleValue":
          bIsMultiValue = false;
          break;
        default:
          break;
      }
      if (oProperty.type && oProperty.type.indexOf("Boolean") > 0) {
        bIsMultiValue = false;
      }
      return bIsMultiValue;
    }
  };
  return DelegateUtil;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/DelegateUtil", ["sap/base/Log","sap/fe/core/CommonUtils","sap/fe/core/helpers/StableIdHelper","sap/fe/core/templating/PropertyFormatters","sap/fe/macros/field/FieldHelper","sap/fe/macros/internal/valuehelp/ValueHelpTemplating"],function(e,t,n,o,r,a){"use strict";var i=a.generateID;var s=o.getRelativePropertyPath;var l=n.generate;const c="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1";function u(){this.control.detachModelContextChange(u,this);const e=this.modelName,t=this.control.getModel(e);if(t){this.resolve(t)}else{this.control.attachModelContextChange(u,this)}}async function d(e,t,n){const o=[];const r=await Promise.resolve().then(n.getAggregation.bind(n,e,"customData"));const a=r.reduce((e,r)=>e.then(n.getProperty.bind(n,r,"key")).then(function(e){if(e===t){o.push(r)}}),Promise.resolve());await a;if(o.length===1){return n.getProperty(o[0],"value")}else{return undefined}}const f="sap_fe_TableDelegate_propertyInfoMap";const g={getLocalizedText(t,n){const o=/{([A-Za-z0-9_.|@]+)>([A-Za-z0-9_.|]+)}/.exec(t);if(o){try{const e=n.getModel(o[1]).getResourceBundle();return e.getText(o[2])}catch(n){e.info(`Unable to retrieve localized text ${t}`)}}return t},setCachedProperties(e,t){if(e instanceof window.Element){return}const n=f;g.setCustomData(e,n,t)},getCachedProperties(e){if(e instanceof window.Element){return null}const t=f;return g.getCustomData(e,t)},getCustomData(e,t,n){if(n){return d(e,t,n)}else{if(e&&t){if(e instanceof window.Element){return e.getAttributeNS(c,t)}if(e.data instanceof Function){return e.data(t)}}return undefined}},setCustomData(e,t,n){if(e&&t){if(e instanceof window.Element){return e.setAttributeNS(c,`customData:${t}`,n)}if(e.data instanceof Function){return e.data(t,n)}}},fetchPropertiesForEntity(e,t){return t.requestObject(`${e}/`)},fetchAnnotationsForEntity(e,t){return t.requestObject(`${e}@`)},fetchModel(e){return new Promise(t=>{const n=e.getDelegate().payload&&e.getDelegate().payload.modelName,o={modelName:n,control:e,resolve:t};u.call(o)})},loadMacroLibrary(){return new Promise(e=>{sap.ui.require(["sap/fe/macros/macroLibrary"],function(){e()})})},templateControlFragment(e,n,o,r){return t.templateControlFragment(e,n,o,r)},doesValueHelpExist(e){const t=e.sPropertyName||"";const n=e.sValueHelpType||"";const o=e.oMetaModel;const a=e.oModifier;const c=`${e.sBindingPath}/${t}`;const u=o.createBindingContext(c);let d=r.valueHelpProperty(u);const f=e.sBindingPath&&e.sBindingPath.indexOf("/")===0;if(d.indexOf("$Path")>-1){d=o.getObject(d)}if(f&&d.indexOf("/")!==0){d=`${e.sBindingPath}/${d}`}const g=i(e.flexId,l([a?a.getId(e.oControl):e.oControl.getId(),n]),s(u.getProperty(c),{context:{getModel:()=>e.oMetaModel,getPath:()=>c}}),s(u.getProperty(d),{context:{getModel:()=>e.oMetaModel,getPath:()=>d}}));return Promise.resolve().then(function(){if(a){return a.getAggregation(e.oControl,"dependents")}return e.oControl.getAggregation("dependents")}).then(function(e){return Promise.resolve(e&&e.some(function(e){return a?a.getId(e)===g:e.getId()===g}))})},isValueHelpRequired(t,n){const o=t.sPropertyName||"",a=t.oMetaModel,i=`${t.sBindingPath}/${o}`,s=a.createBindingContext(i),l=r.valueHelpProperty(s,n);return this.getCustomData(t.oControl,"displayModePropertyBinding",t.oModifier).then(function(e){e=typeof e==="boolean"?e:e==="true";if(e){return false}return Promise.all([a.requestObject(`${l}@com.sap.vocabularies.Common.v1.ValueListWithFixedValues`),a.requestObject(`${l}@com.sap.vocabularies.Common.v1.ValueListReferences`),a.requestObject(`${l}@com.sap.vocabularies.Common.v1.ValueListMapping`),a.requestObject(`${l}@com.sap.vocabularies.Common.v1.ValueList`)])}).then(function(e){return!!e[0]||!!e[1]||!!e[2]||!!e[3]}).catch(function(t){e.warning("Error while retrieving custom data / value list annotation values",t)})},isMultiValue(e){let t=true;switch(e.filterExpression){case"SearchExpression":case"SingleRange":case"SingleValue":t=false;break;default:break}if(e.type&&e.type.indexOf("Boolean")>0){t=false}return t}};return g},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/MacroAPI-dbg", ["sap/base/util/merge", "sap/base/util/uid", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/converters/ConverterContext", "sap/fe/core/helpers/ClassSupport", "sap/ui/core/Component", "sap/ui/core/Control", "sap/ui/core/util/XMLPreprocessor"], function (merge, uid, BuildingBlockRuntime, ConverterContext, ClassSupport, Component, Control, XMLPreprocessor) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _class3;
  var property = ClassSupport.property;
  var implementInterface = ClassSupport.implementInterface;
  var defineUI5Class = ClassSupport.defineUI5Class;
  var aggregation = ClassSupport.aggregation;
  var registerBuildingBlock = BuildingBlockRuntime.registerBuildingBlock;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  const MacroAPIFQN = "sap.fe.macros.MacroAPI";

  /**
   * Base API control for building blocks.
   *
   * @hideconstructor
   * @name sap.fe.macros.MacroAPI
   * @public
   */
  let MacroAPI = (_dec = defineUI5Class(MacroAPIFQN), _dec2 = implementInterface("sap.ui.core.IFormContent"), _dec3 = property({
    type: "string"
  }), _dec4 = property({
    type: "string"
  }), _dec5 = aggregation({
    type: "sap.ui.core.Control",
    multiple: false,
    isDefault: true
  }), _dec(_class = (_class2 = (_class3 = /*#__PURE__*/function (_Control) {
    _inheritsLoose(MacroAPI, _Control);
    function MacroAPI(mSettings) {
      var _this;
      for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        others[_key - 1] = arguments[_key];
      }
      _this = _Control.call(this, mSettings, ...others) || this;
      _initializerDefineProperty(_this, "__implements__sap_ui_core_IFormContent", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "content", _descriptor4, _assertThisInitialized(_this));
      _this.parentContextToBind = {};
      MacroAPI.registerInstance(_assertThisInitialized(_this));
      return _this;
    }
    var _proto = MacroAPI.prototype;
    _proto.init = function init() {
      _Control.prototype.init.call(this);
      if (!this.getModel("_pageModel")) {
        var _Component$getOwnerCo;
        const oPageModel = (_Component$getOwnerCo = Component.getOwnerComponentFor(this)) === null || _Component$getOwnerCo === void 0 ? void 0 : _Component$getOwnerCo.getModel("_pageModel");
        if (oPageModel) {
          this.setModel(oPageModel, "_pageModel");
        }
      }
    };
    MacroAPI.registerInstance = function registerInstance(_instance) {
      if (!this.instanceMap.get(_instance.constructor)) {
        this.instanceMap.set(_instance.constructor, []);
      }
      this.instanceMap.get(_instance.constructor).push(_instance);
    }
    /**
     * Defines the path of the context used in the current page or block.
     * This setting is defined by the framework.
     *
     * @public
     */;
    MacroAPI.render = function render(oRm, oControl) {
      oRm.renderControl(oControl.content);
    };
    _proto.rerender = function rerender() {
      this.content.rerender();
    };
    _proto.getDomRef = function getDomRef() {
      const oContent = this.content;
      return oContent ? oContent.getDomRef() : _Control.prototype.getDomRef.call(this);
    };
    _proto.getController = function getController() {
      return this.getModel("$view").getObject().getController();
    };
    MacroAPI.getAPI = function getAPI(oEvent) {
      let oSource = oEvent.getSource();
      if (this.isDependentBound) {
        while (oSource && !oSource.isA(MacroAPIFQN) && oSource.getParent) {
          const oDependents = oSource.getDependents();
          const hasCorrectDependent = oDependents.find(oDependent => oDependent.isA(MacroAPIFQN));
          if (hasCorrectDependent) {
            oSource = hasCorrectDependent;
          } else {
            oSource = oSource.getParent();
          }
        }
      } else {
        while (oSource && !oSource.isA(MacroAPIFQN) && oSource.getParent) {
          oSource = oSource.getParent();
        }
      }
      if (!oSource || !oSource.isA(MacroAPIFQN)) {
        const oSourceMap = this.instanceMap.get(this);
        oSource = oSourceMap === null || oSourceMap === void 0 ? void 0 : oSourceMap[oSourceMap.length - 1];
      }
      return oSource && oSource.isA(MacroAPIFQN) && oSource;
    };
    MacroAPI.setDefaultValue = function setDefaultValue(oProps, sPropName, oOverrideValue) {
      if (oProps[sPropName] === undefined) {
        oProps[sPropName] = oOverrideValue;
      }
    }

    /**
     * Retrieve a Converter Context.
     *
     * @param oDataModelPath
     * @param contextPath
     * @param mSettings
     * @returns A Converter Context
     */;
    MacroAPI.register = function register() {
      registerBuildingBlock(this);
    };
    MacroAPI.unregister = function unregister() {
      XMLPreprocessor.plugIn(null, this.namespace, this.macroName);
    };
    /**
     * Keep track of a binding context that should be assigned to the parent of that control.
     *
     * @param modelName The model name that the context will relate to
     * @param path The path of the binding context
     */
    _proto.setParentBindingContext = function setParentBindingContext(modelName, path) {
      this.parentContextToBind[modelName] = path;
    };
    _proto.setParent = function setParent() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      // eslint-disable-next-line @typescript-eslint/ban-ts-comment
      // @ts-ignore
      _Control.prototype.setParent.call(this, ...args);
      Object.keys(this.parentContextToBind).forEach(modelName => {
        this.getParent().bindObject({
          path: this.parentContextToBind[modelName],
          model: modelName,
          events: {
            change: function () {
              const oBoundContext = this.getBoundContext();
              if (oBoundContext && !oBoundContext.getObject()) {
                oBoundContext.setProperty("", {});
              }
            }
          }
        });
      });
    };
    return MacroAPI;
  }(Control), _class3.namespace = "sap.fe.macros", _class3.macroName = "Macro", _class3.fragment = "sap.fe.macros.Macro", _class3.hasValidation = true, _class3.instanceMap = new WeakMap(), _class3.isDependentBound = false, _class3.getConverterContext = function (oDataModelPath, contextPath, mSettings) {
    const oAppComponent = mSettings.appComponent;
    const viewData = mSettings.models.viewData && mSettings.models.viewData.getData();
    return ConverterContext.createConverterContextForMacro(oDataModelPath.startingEntitySet.name, mSettings.models.metaModel, oAppComponent && oAppComponent.getDiagnostics(), merge, oDataModelPath.contextLocation, viewData);
  }, _class3.createBindingContext = function (oData, mSettings) {
    const sContextPath = `/uid--${uid()}`;
    mSettings.models.converterContext.setProperty(sContextPath, oData);
    return mSettings.models.converterContext.createBindingContext(sContextPath);
  }, _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "__implements__sap_ui_core_IFormContent", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return true;
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "content", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  return MacroAPI;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/MacroAPI", ["sap/base/util/merge","sap/base/util/uid","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/converters/ConverterContext","sap/fe/core/helpers/ClassSupport","sap/ui/core/Component","sap/ui/core/Control","sap/ui/core/util/XMLPreprocessor"],function(e,t,n,r,i,o,a,s){"use strict";var c,l,u,p,f,d,g,h,m,b,v,C;var y=i.property;var P=i.implementInterface;var _=i.defineUI5Class;var w=i.aggregation;var M=n.registerBuildingBlock;function x(e,t,n,r){if(!n)return;Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(r):void 0})}function B(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function D(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;O(e,t)}function O(e,t){O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,n){t.__proto__=n;return t};return O(e,t)}function z(e,t,n,r,i){var o={};Object.keys(r).forEach(function(e){o[e]=r[e]});o.enumerable=!!o.enumerable;o.configurable=!!o.configurable;if("value"in o||o.initializer){o.writable=true}o=n.slice().reverse().reduce(function(n,r){return r(e,t,n)||n},o);if(i&&o.initializer!==void 0){o.value=o.initializer?o.initializer.call(i):void 0;o.initializer=undefined}if(o.initializer===void 0){Object.defineProperty(e,t,o);o=null}return o}function j(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}const I="sap.fe.macros.MacroAPI";let A=(c=_(I),l=P("sap.ui.core.IFormContent"),u=y({type:"string"}),p=y({type:"string"}),f=w({type:"sap.ui.core.Control",multiple:false,isDefault:true}),c(d=(g=(C=function(e){D(t,e);function t(n){var r;for(var i=arguments.length,o=new Array(i>1?i-1:0),a=1;a<i;a++){o[a-1]=arguments[a]}r=e.call(this,n,...o)||this;x(r,"__implements__sap_ui_core_IFormContent",h,B(r));x(r,"contextPath",m,B(r));x(r,"metaPath",b,B(r));x(r,"content",v,B(r));r.parentContextToBind={};t.registerInstance(B(r));return r}var n=t.prototype;n.init=function t(){e.prototype.init.call(this);if(!this.getModel("_pageModel")){var n;const e=(n=o.getOwnerComponentFor(this))===null||n===void 0?void 0:n.getModel("_pageModel");if(e){this.setModel(e,"_pageModel")}}};t.registerInstance=function e(t){if(!this.instanceMap.get(t.constructor)){this.instanceMap.set(t.constructor,[])}this.instanceMap.get(t.constructor).push(t)};t.render=function e(t,n){t.renderControl(n.content)};n.rerender=function e(){this.content.rerender()};n.getDomRef=function t(){const n=this.content;return n?n.getDomRef():e.prototype.getDomRef.call(this)};n.getController=function e(){return this.getModel("$view").getObject().getController()};t.getAPI=function e(t){let n=t.getSource();if(this.isDependentBound){while(n&&!n.isA(I)&&n.getParent){const e=n.getDependents();const t=e.find(e=>e.isA(I));if(t){n=t}else{n=n.getParent()}}}else{while(n&&!n.isA(I)&&n.getParent){n=n.getParent()}}if(!n||!n.isA(I)){const e=this.instanceMap.get(this);n=e===null||e===void 0?void 0:e[e.length-1]}return n&&n.isA(I)&&n};t.setDefaultValue=function e(t,n,r){if(t[n]===undefined){t[n]=r}};t.register=function e(){M(this)};t.unregister=function e(){s.plugIn(null,this.namespace,this.macroName)};n.setParentBindingContext=function e(t,n){this.parentContextToBind[t]=n};n.setParent=function t(){for(var n=arguments.length,r=new Array(n),i=0;i<n;i++){r[i]=arguments[i]}e.prototype.setParent.call(this,...r);Object.keys(this.parentContextToBind).forEach(e=>{this.getParent().bindObject({path:this.parentContextToBind[e],model:e,events:{change:function(){const e=this.getBoundContext();if(e&&!e.getObject()){e.setProperty("",{})}}}})})};return t}(a),C.namespace="sap.fe.macros",C.macroName="Macro",C.fragment="sap.fe.macros.Macro",C.hasValidation=true,C.instanceMap=new WeakMap,C.isDependentBound=false,C.getConverterContext=function(t,n,i){const o=i.appComponent;const a=i.models.viewData&&i.models.viewData.getData();return r.createConverterContextForMacro(t.startingEntitySet.name,i.models.metaModel,o&&o.getDiagnostics(),e,t.contextLocation,a)},C.createBindingContext=function(e,n){const r=`/uid--${t()}`;n.models.converterContext.setProperty(r,e);return n.models.converterContext.createBindingContext(r)},C),h=z(g.prototype,"__implements__sap_ui_core_IFormContent",[l],{configurable:true,enumerable:true,writable:true,initializer:function(){return true}}),m=z(g.prototype,"contextPath",[u],{configurable:true,enumerable:true,writable:true,initializer:null}),b=z(g.prototype,"metaPath",[p],{configurable:true,enumerable:true,writable:true,initializer:null}),v=z(g.prototype,"content",[f],{configurable:true,enumerable:true,writable:true,initializer:null}),g))||d);return A},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/MacroMetadata-dbg", ["sap/base/util/deepClone", "sap/base/util/merge", "sap/base/util/uid", "sap/fe/core/converters/ConverterContext"], function (deepClone, merge, uid, ConverterContext) {
  "use strict";

  const fnGetOverrides = function (mControlConfiguration, sID) {
    const oProps = {};
    if (mControlConfiguration) {
      const oControlConfig = mControlConfiguration[sID];
      if (oControlConfig) {
        Object.keys(oControlConfig).forEach(function (sConfigKey) {
          oProps[sConfigKey] = oControlConfig[sConfigKey];
        });
      }
    }
    return oProps;
  };
  const fnSetDefaultValue = function (oProps, sPropName, oOverrideValue, bForceUpdate) {
    if (oProps[sPropName] === undefined || bForceUpdate) {
      oProps[sPropName] = oOverrideValue;
    }
  };
  const MacroMetadata = {
    metadata: {
      properties: {
        _flexId: {
          type: "string"
        }
      }
    },
    extend: function (fnName, oContent) {
      oContent.metadata.properties._flexId = MacroMetadata.metadata.properties._flexId;
      oContent.hasValidation = true;
      oContent.getOverrides = fnGetOverrides.bind(oContent);
      oContent.setDefaultValue = fnSetDefaultValue.bind(oContent);
      oContent.getConverterContext = function (oVisualizationObjectPath, contextPath, mSettings, mExtraParams) {
        const oAppComponent = mSettings.appComponent;
        const originalViewData = mSettings.models.viewData && mSettings.models.viewData.getData();
        let viewData = Object.assign({}, originalViewData);
        delete viewData.resourceBundle;
        viewData = deepClone(viewData);
        viewData.controlConfiguration = merge(viewData.controlConfiguration, mExtraParams);
        return ConverterContext.createConverterContextForMacro(oVisualizationObjectPath.startingEntitySet.name, mSettings.models.metaModel, oAppComponent && oAppComponent.getDiagnostics(), merge, oVisualizationObjectPath.contextLocation, viewData);
      };
      oContent.createBindingContext = function (oData, mSettings) {
        const sContextPath = `/uid--${uid()}`;
        mSettings.models.converterContext.setProperty(sContextPath, oData);
        return mSettings.models.converterContext.createBindingContext(sContextPath);
      };
      oContent.parseAggregation = function (oAggregation, fnCallback) {
        const oOutObjects = {};
        if (oAggregation && oAggregation.children.length > 0) {
          const children = oAggregation.children;
          for (let childIdx = 0; childIdx < children.length; childIdx++) {
            const childObject = fnCallback(children[childIdx], childIdx);
            if (childObject) {
              oOutObjects[childObject.key] = childObject;
            }
          }
        }
        return oOutObjects;
      };
      oContent.getContentId = function (sMacroId) {
        return `${sMacroId}-content`;
      };
      return oContent;
    }
  };
  return MacroMetadata;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/MacroMetadata", ["sap/base/util/deepClone","sap/base/util/merge","sap/base/util/uid","sap/fe/core/converters/ConverterContext"],function(e,t,n,o){"use strict";const r=function(e,t){const n={};if(e){const o=e[t];if(o){Object.keys(o).forEach(function(e){n[e]=o[e]})}}return n};const i=function(e,t,n,o){if(e[t]===undefined||o){e[t]=n}};const a={metadata:{properties:{_flexId:{type:"string"}}},extend:function(s,c){c.metadata.properties._flexId=a.metadata.properties._flexId;c.hasValidation=true;c.getOverrides=r.bind(c);c.setDefaultValue=i.bind(c);c.getConverterContext=function(n,r,i,a){const s=i.appComponent;const c=i.models.viewData&&i.models.viewData.getData();let u=Object.assign({},c);delete u.resourceBundle;u=e(u);u.controlConfiguration=t(u.controlConfiguration,a);return o.createConverterContextForMacro(n.startingEntitySet.name,i.models.metaModel,s&&s.getDiagnostics(),t,n.contextLocation,u)};c.createBindingContext=function(e,t){const o=`/uid--${n()}`;t.models.converterContext.setProperty(o,e);return t.models.converterContext.createBindingContext(o)};c.parseAggregation=function(e,t){const n={};if(e&&e.children.length>0){const o=e.children;for(let e=0;e<o.length;e++){const r=t(o[e],e);if(r){n[r.key]=r}}}return n};c.getContentId=function(e){return`${e}-content`};return c}};return a},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/MacroTemplating-dbg", [], function () {
  "use strict";

  var _exports = {};
  const getPath = function (oContext, oInterface) {
    if (oInterface && oInterface.context) {
      return oInterface.context.getPath();
    }
    return "";
  };
  getPath.requiresIContext = true;
  _exports.getPath = getPath;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/MacroTemplating", [],function(){"use strict";var t={};const e=function(t,e){if(e&&e.context){return e.context.getPath()}return""};e.requiresIContext=true;t.getPath=e;return t},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/ODataMetaModelUtil-dbg", [], function () {
  "use strict";

  /**
   * Utitlity class for metadata interpretation inside delegate classes.
   *
   * @private
   * @since 1.62
   */
  const ODataMetaModelUtil = {
    fetchAllAnnotations(oMetaModel, sEntityPath) {
      const oCtx = oMetaModel.getMetaContext(sEntityPath);
      return oMetaModel.requestObject("@", oCtx).then(function (mAnnos) {
        return mAnnos;
      });
    },
    /**
     * The mapping of all annotations of a given entity set.
     *
     * @param mAnnos A list of annotations of the entity set
     * @returns A map to the custom aggregates keyed by their qualifiers
     */
    getAllCustomAggregates(mAnnos) {
      const mCustomAggregates = {};
      let sAnno;
      for (const sAnnoKey in mAnnos) {
        if (sAnnoKey.startsWith("@Org.OData.Aggregation.V1.CustomAggregate")) {
          sAnno = sAnnoKey.replace("@Org.OData.Aggregation.V1.CustomAggregate#", "");
          const aAnno = sAnno.split("@");
          if (aAnno.length == 2) {
            if (!mCustomAggregates[aAnno[0]]) {
              mCustomAggregates[aAnno[0]] = {};
            }
            //inner annotation that is not part of 	Validation.AggregatableTerms
            if (aAnno[1] == "Org.OData.Aggregation.V1.ContextDefiningProperties") {
              mCustomAggregates[aAnno[0]].contextDefiningProperties = mAnnos[sAnnoKey];
            }
            if (aAnno[1] == "com.sap.vocabularies.Common.v1.Label") {
              mCustomAggregates[aAnno[0]].label = mAnnos[sAnnoKey];
            }
          } else if (aAnno.length == 1) {
            mCustomAggregates[aAnno[0]] = {
              name: aAnno[0],
              propertyPath: aAnno[0],
              label: `Custom Aggregate (${sAnno})`,
              sortable: true,
              sortOrder: "both",
              custom: true
            };
          }
        }
      }
      return mCustomAggregates;
    },
    getAllAggregatableProperties(mAnnos) {
      const mAggregatableProperties = {};
      let aProperties, oProperty;
      if (mAnnos["@com.sap.vocabularies.Analytics.v1.AggregatedProperties"]) {
        aProperties = mAnnos["@com.sap.vocabularies.Analytics.v1.AggregatedProperties"];
        for (let i = 0; i < aProperties.length; i++) {
          oProperty = aProperties[i];
          mAggregatableProperties[oProperty.Name] = {
            name: oProperty.Name,
            propertyPath: oProperty.AggregatableProperty.$PropertyPath,
            aggregationMethod: oProperty.AggregationMethod,
            label: oProperty["@com.sap.vocabularies.Common.v1.Label"] || `Aggregatable property (${oProperty.Name})`,
            sortable: true,
            sortOrder: "both",
            custom: false
          };
        }
      }
      return mAggregatableProperties;
    },
    /**
     * Retrieve and order all data points by their property and qualifier.
     *
     * @param mAnnos A named map of annotations from a given entity set
     * @returns A keyed mapped ordered by
     * <ul>
     *     <li> The properties value path </li>
     *     <li> The qualifier of the data point <(li>
     * </ul>
     */
    getAllDataPoints(mAnnos) {
      const mDataPoints = {};
      for (const sAnnoKey in mAnnos) {
        if (sAnnoKey.startsWith("@com.sap.vocabularies.UI.v1.DataPoint")) {
          const sQualifier = sAnnoKey.replace("@com.sap.vocabularies.UI.v1.DataPoint#", "");
          const sValue = mAnnos[sAnnoKey].Value.$Path;
          mDataPoints[sValue] = mDataPoints[sValue] || {};
          mDataPoints[sValue][sQualifier] = ODataMetaModelUtil.createDataPointProperty(mAnnos[sAnnoKey]);
        }
      }
      return mDataPoints;
    },
    /**
     * Format the data point as a JSON object.
     *
     * @param oDataPointAnno
     * @returns The formatted json object
     */
    createDataPointProperty(oDataPointAnno) {
      const oDataPoint = {};
      if (oDataPointAnno.TargetValue) {
        oDataPoint.targetValue = oDataPointAnno.TargetValue.$Path;
      }
      if (oDataPointAnno.ForeCastValue) {
        oDataPoint.foreCastValue = oDataPointAnno.ForeCastValue.$Path;
      }
      let oCriticality = null;
      if (oDataPointAnno.Criticality) {
        if (oDataPointAnno.Criticality.$Path) {
          //will be an aggregated property or custom aggregate
          oCriticality = {
            Calculated: oDataPointAnno.Criticality.$Path
          };
        } else {
          oCriticality = {
            Static: oDataPointAnno.Criticality.$EnumMember.replace("com.sap.vocabularies.UI.v1.CriticalityType/", "")
          };
        }
      } else if (oDataPointAnno.CriticalityCalculation) {
        const oThresholds = {};
        const bConstant = ODataMetaModelUtil._buildThresholds(oThresholds, oDataPointAnno.CriticalityCalculation);
        if (bConstant) {
          oCriticality = {
            ConstantThresholds: oThresholds
          };
        } else {
          oCriticality = {
            DynamicThresholds: oThresholds
          };
        }
      }
      if (oCriticality) {
        oDataPoint.criticality = oCriticality;
      }
      return oDataPoint;
    },
    /**
     * Checks whether the thresholds are dynamic or constant.
     *
     * @param oThresholds The threshold skeleton
     * @param oCriticalityCalculation The UI.DataPoint.CriticalityCalculation annotation
     * @returns `true` if the threshold should be supplied as ConstantThresholds, <code>false</code> if the threshold should
     * be supplied as DynamicThresholds
     * @private
     */
    _buildThresholds(oThresholds, oCriticalityCalculation) {
      const aKeys = ["AcceptanceRangeLowValue", "AcceptanceRangeHighValue", "ToleranceRangeLowValue", "ToleranceRangeHighValue", "DeviationRangeLowValue", "DeviationRangeHighValue"];
      let bConstant = true,
        sKey,
        i,
        j;
      oThresholds.ImprovementDirection = oCriticalityCalculation.ImprovementDirection.$EnumMember.replace("com.sap.vocabularies.UI.v1.ImprovementDirectionType/", "");
      const oDynamicThresholds = {
        oneSupplied: false,
        usedMeasures: []
        // combination to check whether at least one is supplied
      };

      const oConstantThresholds = {
        oneSupplied: false
        // combination to check whether at least one is supplied
      };

      for (i = 0; i < aKeys.length; i++) {
        sKey = aKeys[i];
        oDynamicThresholds[sKey] = oCriticalityCalculation[sKey] ? oCriticalityCalculation[sKey].$Path : undefined;
        oDynamicThresholds.oneSupplied = oDynamicThresholds.oneSupplied || oDynamicThresholds[sKey];
        if (!oDynamicThresholds.oneSupplied) {
          // only consider in case no dynamic threshold is supplied
          oConstantThresholds[sKey] = oCriticalityCalculation[sKey];
          oConstantThresholds.oneSupplied = oConstantThresholds.oneSupplied || oConstantThresholds[sKey];
        } else if (oDynamicThresholds[sKey]) {
          oDynamicThresholds.usedMeasures.push(oDynamicThresholds[sKey]);
        }
      }

      // dynamic definition shall overrule constant definition
      if (oDynamicThresholds.oneSupplied) {
        bConstant = false;
        for (i = 0; i < aKeys.length; i++) {
          if (oDynamicThresholds[aKeys[i]]) {
            oThresholds[aKeys[i]] = oDynamicThresholds[aKeys[i]];
          }
        }
        oThresholds.usedMeasures = oDynamicThresholds.usedMeasures;
      } else {
        let oAggregationLevel;
        oThresholds.AggregationLevels = [];

        // check if at least one static value is supplied
        if (oConstantThresholds.oneSupplied) {
          // add one entry in the aggregation level
          oAggregationLevel = {
            VisibleDimensions: null
          };
          for (i = 0; i < aKeys.length; i++) {
            if (oConstantThresholds[aKeys[i]]) {
              oAggregationLevel[aKeys[i]] = oConstantThresholds[aKeys[i]];
            }
          }
          oThresholds.AggregationLevels.push(oAggregationLevel);
        }

        // further check for ConstantThresholds
        if (oCriticalityCalculation.ConstantThresholds && oCriticalityCalculation.ConstantThresholds.length > 0) {
          for (i = 0; i < oCriticalityCalculation.ConstantThresholds.length; i++) {
            const oAggregationLevelInfo = oCriticalityCalculation.ConstantThresholds[i];
            const aVisibleDimensions = oAggregationLevelInfo.AggregationLevel ? [] : null;
            if (oAggregationLevelInfo.AggregationLevel && oAggregationLevelInfo.AggregationLevel.length > 0) {
              for (j = 0; j < oAggregationLevelInfo.AggregationLevel.length; j++) {
                aVisibleDimensions.push(oAggregationLevelInfo.AggregationLevel[j].$PropertyPath);
              }
            }
            oAggregationLevel = {
              VisibleDimensions: aVisibleDimensions
            };
            for (j = 0; j < aKeys.length; j++) {
              const nValue = oAggregationLevelInfo[aKeys[j]];
              if (nValue) {
                oAggregationLevel[aKeys[j]] = nValue;
              }
            }
            oThresholds.AggregationLevels.push(oAggregationLevel);
          }
        }
      }
      return bConstant;
    },
    /**
     * Determines the sorting information from the restriction annotation.
     *
     * @param entitySetAnnotations EntitySet or collection annotations with the sort restrictions annotation
     * @returns An object containing the sort restriction information
     */
    getSortRestrictionsInfo(entitySetAnnotations) {
      const sortRestrictionsInfo = {
        sortable: true,
        propertyInfo: {}
      };
      const sortRestrictions = entitySetAnnotations["@Org.OData.Capabilities.V1.SortRestrictions"];
      if (!sortRestrictions) {
        return sortRestrictionsInfo;
      }
      sortRestrictionsInfo.sortable = sortRestrictions.Sortable ?? true;
      for (const propertyItem of sortRestrictions.NonSortableProperties || []) {
        const propertyName = propertyItem.$PropertyPath;
        sortRestrictionsInfo.propertyInfo[propertyName] = {
          sortable: false
        };
      }
      for (const propertyItem of sortRestrictions.AscendingOnlyProperties || []) {
        const propertyName = propertyItem.$PropertyPath;
        sortRestrictionsInfo.propertyInfo[propertyName] = {
          sortable: true,
          sortDirection: "asc" // not used, yet
        };
      }

      for (const propertyItem of sortRestrictions.DescendingOnlyProperties || []) {
        const propertyName = propertyItem.$PropertyPath;
        sortRestrictionsInfo.propertyInfo[propertyName] = {
          sortable: true,
          sortDirection: "desc" // not used, yet
        };
      }

      return sortRestrictionsInfo;
    },
    /**
     * Determines the filter information based on the filter restrictions annoation.
     *
     * @param oFilterRestrictions The filter restrictions annotation
     * @returns An object containing the filter restriction information
     */
    getFilterRestrictionsInfo(oFilterRestrictions) {
      let i, sPropertyName;
      const oFilterRestrictionsInfo = {
        filterable: true,
        propertyInfo: {}
      };
      if (oFilterRestrictions) {
        oFilterRestrictionsInfo.filterable = oFilterRestrictions.Filterable != null ? oFilterRestrictions.Filterable : true;
        oFilterRestrictionsInfo.requiresFilter = oFilterRestrictions.RequiresFilter != null ? oFilterRestrictions.RequiresFilter : false;

        //Hierarchical Case
        oFilterRestrictionsInfo.requiredProperties = [];
        if (oFilterRestrictionsInfo.RequiredProperties) {
          for (i = 0; i < oFilterRestrictions.RequiredProperties.length; i++) {
            sPropertyName = oFilterRestrictions.RequiredProperties[i].$PropertyPath;
            oFilterRestrictionsInfo.requiredProperties.push(sPropertyName);
          }
        }
        if (oFilterRestrictions.NonFilterableProperties) {
          for (i = 0; i < oFilterRestrictions.NonFilterableProperties.length; i++) {
            sPropertyName = oFilterRestrictions.NonFilterableProperties[i].$PropertyPath;
            oFilterRestrictionsInfo[sPropertyName] = {
              filterable: false
            };
          }
        }
        if (oFilterRestrictions.FilterExpressionRestrictions) {
          //TBD
          for (i = 0; i < oFilterRestrictions.FilterExpressionRestrictions.length; i++) {
            sPropertyName = oFilterRestrictions.FilterExpressionRestrictions[i].$PropertyPath;
            oFilterRestrictionsInfo[sPropertyName] = {
              filterable: true,
              allowedExpressions: oFilterRestrictions.FilterExpressionRestrictions[i].AllowedExpressions
            };
          }
        }
      }
      return oFilterRestrictionsInfo;
    },
    /**
     * Provides the information if the FilterExpression is a multiValue Filter Expression.
     *
     * @param sFilterExpression The FilterExpressionType
     * @returns A boolean value wether it is a multiValue Filter Expression or not
     */
    isMultiValueFilterExpression(sFilterExpression) {
      let bIsMultiValue = true;

      //SingleValue | MultiValue | SingleRange | MultiRange | SearchExpression | MultiRangeOrSearchExpression

      switch (sFilterExpression) {
        case "SearchExpression":
        case "SingleRange":
        case "SingleValue":
          bIsMultiValue = false;
          break;
        default:
          break;
      }
      return bIsMultiValue;
    },
    /**
     *
     * @param oProperty The entity property
     * @param oFilterRestrictionInfo The filter restrictions
     */
    addFilterInfoForProperty(oProperty, oFilterRestrictionInfo) {
      const oPropertyInfo = oFilterRestrictionInfo[oProperty.name];
      oProperty.filterable = oFilterRestrictionInfo.filterable && oPropertyInfo ? oPropertyInfo.filterable : true;
      if (oProperty.filterable) {
        oProperty.allowedExpressions = oPropertyInfo ? oPropertyInfo.allowedExpressions : null;
      }
    },
    fetchCalendarTag(oMetaModel, oCtx) {
      const COMMON = "@com.sap.vocabularies.Common.v1.";
      return Promise.all([oMetaModel.requestObject(`${COMMON}IsCalendarYear`, oCtx), oMetaModel.requestObject(`${COMMON}IsCalendarHalfyear`, oCtx), oMetaModel.requestObject(`${COMMON}IsCalendarQuarter`, oCtx), oMetaModel.requestObject(`${COMMON}IsCalendarMonth`, oCtx), oMetaModel.requestObject(`${COMMON}IsCalendarWeek`, oCtx), oMetaModel.requestObject(`${COMMON}IsDayOfCalendarMonth`, oCtx), oMetaModel.requestObject(`${COMMON}IsDayOfCalendarYear`, oCtx), oMetaModel.requestObject(`${COMMON}IsCalendarYearHalfyear`, oCtx), oMetaModel.requestObject(`${COMMON}IsCalendarYearQuarter`, oCtx), oMetaModel.requestObject(`${COMMON}IsCalendarYearMonth`, oCtx), oMetaModel.requestObject(`${COMMON}IsCalendarYearWeek`, oCtx), oMetaModel.requestObject(`${COMMON}IsCalendarDate`, oCtx)]).then(function (aTag) {
        if (aTag[0]) {
          return "year";
        }
        if (aTag[1]) {
          return "halfYear";
        }
        if (aTag[2]) {
          return "quarter";
        }
        if (aTag[3]) {
          return "month";
        }
        if (aTag[4]) {
          return "week";
        }
        if (aTag[5]) {
          return "dayOfMonth";
        }
        if (aTag[6]) {
          return "dayOfYear";
        }
        if (aTag[7]) {
          return "yearHalfYear";
        }
        if (aTag[8]) {
          return "yearQuarter";
        }
        if (aTag[9]) {
          return "yearMonth";
        }
        if (aTag[10]) {
          return "yearWeek";
        }
        if (aTag[11]) {
          return "date";
        }
        return undefined;
      });
    },
    fetchFiscalTag(oMetaModel, oCtx) {
      const COMMON = "@com.sap.vocabularies.Common.v1.";
      return Promise.all([oMetaModel.requestObject(`${COMMON}IsFiscalYear`, oCtx), oMetaModel.requestObject(`${COMMON}IsFiscalPeriod`, oCtx), oMetaModel.requestObject(`${COMMON}IsFiscalYearPeriod`, oCtx), oMetaModel.requestObject(`${COMMON}IsFiscalQuarter`, oCtx), oMetaModel.requestObject(`${COMMON}IsFiscalYearQuarter`, oCtx), oMetaModel.requestObject(`${COMMON}IsFiscalWeek`, oCtx), oMetaModel.requestObject(`${COMMON}IsFiscalYearWeek`, oCtx), oMetaModel.requestObject(`${COMMON}IsDayOfFiscalYear`, oCtx), oMetaModel.requestObject(`${COMMON}IsFiscalYearVariant`, oCtx)]).then(function (aTag) {
        if (aTag[0]) {
          return "year";
        }
        if (aTag[1]) {
          return "period";
        }
        if (aTag[2]) {
          return "yearPeriod";
        }
        if (aTag[3]) {
          return "quarter";
        }
        if (aTag[4]) {
          return "yearQuarter";
        }
        if (aTag[5]) {
          return "week";
        }
        if (aTag[6]) {
          return "yearWeek";
        }
        if (aTag[7]) {
          return "dayOfYear";
        }
        if (aTag[8]) {
          return "yearVariant";
        }
        return undefined;
      });
    },
    fetchCriticality(oMetaModel, oCtx) {
      const UI = "@com.sap.vocabularies.UI.v1";
      return oMetaModel.requestObject(`${UI}.ValueCriticality`, oCtx).then(function (aValueCriticality) {
        let oCriticality, oValueCriticality;
        if (aValueCriticality) {
          oCriticality = {
            VeryPositive: [],
            Positive: [],
            Critical: [],
            VeryNegative: [],
            Negative: [],
            Neutral: []
          };
          for (let i = 0; i < aValueCriticality.length; i++) {
            oValueCriticality = aValueCriticality[i];
            if (oValueCriticality.Criticality.$EnumMember.endsWith("VeryPositive")) {
              oCriticality.VeryPositive.push(oValueCriticality.Value);
            } else if (oValueCriticality.Criticality.$EnumMember.endsWith("Positive")) {
              oCriticality.Positive.push(oValueCriticality.Value);
            } else if (oValueCriticality.Criticality.$EnumMember.endsWith("Critical")) {
              oCriticality.Critical.push(oValueCriticality.Value);
            } else if (oValueCriticality.Criticality.$EnumMember.endsWith("VeryNegative")) {
              oCriticality.VeryNegative.push(oValueCriticality.Value);
            } else if (oValueCriticality.Criticality.$EnumMember.endsWith("Negative")) {
              oCriticality.Negative.push(oValueCriticality.Value);
            } else {
              oCriticality.Neutral.push(oValueCriticality.Value);
            }
          }
          for (const sKey in oCriticality) {
            if (oCriticality[sKey].length == 0) {
              delete oCriticality[sKey];
            }
          }
        }
        return oCriticality;
      });
    }
  };
  return ODataMetaModelUtil;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/ODataMetaModelUtil", [],function(){"use strict";const e={fetchAllAnnotations(e,t){const r=e.getMetaContext(t);return e.requestObject("@",r).then(function(e){return e})},getAllCustomAggregates(e){const t={};let r;for(const a in e){if(a.startsWith("@Org.OData.Aggregation.V1.CustomAggregate")){r=a.replace("@Org.OData.Aggregation.V1.CustomAggregate#","");const i=r.split("@");if(i.length==2){if(!t[i[0]]){t[i[0]]={}}if(i[1]=="Org.OData.Aggregation.V1.ContextDefiningProperties"){t[i[0]].contextDefiningProperties=e[a]}if(i[1]=="com.sap.vocabularies.Common.v1.Label"){t[i[0]].label=e[a]}}else if(i.length==1){t[i[0]]={name:i[0],propertyPath:i[0],label:`Custom Aggregate (${r})`,sortable:true,sortOrder:"both",custom:true}}}}return t},getAllAggregatableProperties(e){const t={};let r,a;if(e["@com.sap.vocabularies.Analytics.v1.AggregatedProperties"]){r=e["@com.sap.vocabularies.Analytics.v1.AggregatedProperties"];for(let e=0;e<r.length;e++){a=r[e];t[a.Name]={name:a.Name,propertyPath:a.AggregatableProperty.$PropertyPath,aggregationMethod:a.AggregationMethod,label:a["@com.sap.vocabularies.Common.v1.Label"]||`Aggregatable property (${a.Name})`,sortable:true,sortOrder:"both",custom:false}}}return t},getAllDataPoints(t){const r={};for(const a in t){if(a.startsWith("@com.sap.vocabularies.UI.v1.DataPoint")){const i=a.replace("@com.sap.vocabularies.UI.v1.DataPoint#","");const s=t[a].Value.$Path;r[s]=r[s]||{};r[s][i]=e.createDataPointProperty(t[a])}}return r},createDataPointProperty(t){const r={};if(t.TargetValue){r.targetValue=t.TargetValue.$Path}if(t.ForeCastValue){r.foreCastValue=t.ForeCastValue.$Path}let a=null;if(t.Criticality){if(t.Criticality.$Path){a={Calculated:t.Criticality.$Path}}else{a={Static:t.Criticality.$EnumMember.replace("com.sap.vocabularies.UI.v1.CriticalityType/","")}}}else if(t.CriticalityCalculation){const r={};const i=e._buildThresholds(r,t.CriticalityCalculation);if(i){a={ConstantThresholds:r}}else{a={DynamicThresholds:r}}}if(a){r.criticality=a}return r},_buildThresholds(e,t){const r=["AcceptanceRangeLowValue","AcceptanceRangeHighValue","ToleranceRangeLowValue","ToleranceRangeHighValue","DeviationRangeLowValue","DeviationRangeHighValue"];let a=true,i,s,n;e.ImprovementDirection=t.ImprovementDirection.$EnumMember.replace("com.sap.vocabularies.UI.v1.ImprovementDirectionType/","");const o={oneSupplied:false,usedMeasures:[]};const l={oneSupplied:false};for(s=0;s<r.length;s++){i=r[s];o[i]=t[i]?t[i].$Path:undefined;o.oneSupplied=o.oneSupplied||o[i];if(!o.oneSupplied){l[i]=t[i];l.oneSupplied=l.oneSupplied||l[i]}else if(o[i]){o.usedMeasures.push(o[i])}}if(o.oneSupplied){a=false;for(s=0;s<r.length;s++){if(o[r[s]]){e[r[s]]=o[r[s]]}}e.usedMeasures=o.usedMeasures}else{let a;e.AggregationLevels=[];if(l.oneSupplied){a={VisibleDimensions:null};for(s=0;s<r.length;s++){if(l[r[s]]){a[r[s]]=l[r[s]]}}e.AggregationLevels.push(a)}if(t.ConstantThresholds&&t.ConstantThresholds.length>0){for(s=0;s<t.ConstantThresholds.length;s++){const i=t.ConstantThresholds[s];const o=i.AggregationLevel?[]:null;if(i.AggregationLevel&&i.AggregationLevel.length>0){for(n=0;n<i.AggregationLevel.length;n++){o.push(i.AggregationLevel[n].$PropertyPath)}}a={VisibleDimensions:o};for(n=0;n<r.length;n++){const e=i[r[n]];if(e){a[r[n]]=e}}e.AggregationLevels.push(a)}}}return a},getSortRestrictionsInfo(e){const t={sortable:true,propertyInfo:{}};const r=e["@Org.OData.Capabilities.V1.SortRestrictions"];if(!r){return t}t.sortable=r.Sortable??true;for(const e of r.NonSortableProperties||[]){const r=e.$PropertyPath;t.propertyInfo[r]={sortable:false}}for(const e of r.AscendingOnlyProperties||[]){const r=e.$PropertyPath;t.propertyInfo[r]={sortable:true,sortDirection:"asc"}}for(const e of r.DescendingOnlyProperties||[]){const r=e.$PropertyPath;t.propertyInfo[r]={sortable:true,sortDirection:"desc"}}return t},getFilterRestrictionsInfo(e){let t,r;const a={filterable:true,propertyInfo:{}};if(e){a.filterable=e.Filterable!=null?e.Filterable:true;a.requiresFilter=e.RequiresFilter!=null?e.RequiresFilter:false;a.requiredProperties=[];if(a.RequiredProperties){for(t=0;t<e.RequiredProperties.length;t++){r=e.RequiredProperties[t].$PropertyPath;a.requiredProperties.push(r)}}if(e.NonFilterableProperties){for(t=0;t<e.NonFilterableProperties.length;t++){r=e.NonFilterableProperties[t].$PropertyPath;a[r]={filterable:false}}}if(e.FilterExpressionRestrictions){for(t=0;t<e.FilterExpressionRestrictions.length;t++){r=e.FilterExpressionRestrictions[t].$PropertyPath;a[r]={filterable:true,allowedExpressions:e.FilterExpressionRestrictions[t].AllowedExpressions}}}}return a},isMultiValueFilterExpression(e){let t=true;switch(e){case"SearchExpression":case"SingleRange":case"SingleValue":t=false;break;default:break}return t},addFilterInfoForProperty(e,t){const r=t[e.name];e.filterable=t.filterable&&r?r.filterable:true;if(e.filterable){e.allowedExpressions=r?r.allowedExpressions:null}},fetchCalendarTag(e,t){const r="@com.sap.vocabularies.Common.v1.";return Promise.all([e.requestObject(`${r}IsCalendarYear`,t),e.requestObject(`${r}IsCalendarHalfyear`,t),e.requestObject(`${r}IsCalendarQuarter`,t),e.requestObject(`${r}IsCalendarMonth`,t),e.requestObject(`${r}IsCalendarWeek`,t),e.requestObject(`${r}IsDayOfCalendarMonth`,t),e.requestObject(`${r}IsDayOfCalendarYear`,t),e.requestObject(`${r}IsCalendarYearHalfyear`,t),e.requestObject(`${r}IsCalendarYearQuarter`,t),e.requestObject(`${r}IsCalendarYearMonth`,t),e.requestObject(`${r}IsCalendarYearWeek`,t),e.requestObject(`${r}IsCalendarDate`,t)]).then(function(e){if(e[0]){return"year"}if(e[1]){return"halfYear"}if(e[2]){return"quarter"}if(e[3]){return"month"}if(e[4]){return"week"}if(e[5]){return"dayOfMonth"}if(e[6]){return"dayOfYear"}if(e[7]){return"yearHalfYear"}if(e[8]){return"yearQuarter"}if(e[9]){return"yearMonth"}if(e[10]){return"yearWeek"}if(e[11]){return"date"}return undefined})},fetchFiscalTag(e,t){const r="@com.sap.vocabularies.Common.v1.";return Promise.all([e.requestObject(`${r}IsFiscalYear`,t),e.requestObject(`${r}IsFiscalPeriod`,t),e.requestObject(`${r}IsFiscalYearPeriod`,t),e.requestObject(`${r}IsFiscalQuarter`,t),e.requestObject(`${r}IsFiscalYearQuarter`,t),e.requestObject(`${r}IsFiscalWeek`,t),e.requestObject(`${r}IsFiscalYearWeek`,t),e.requestObject(`${r}IsDayOfFiscalYear`,t),e.requestObject(`${r}IsFiscalYearVariant`,t)]).then(function(e){if(e[0]){return"year"}if(e[1]){return"period"}if(e[2]){return"yearPeriod"}if(e[3]){return"quarter"}if(e[4]){return"yearQuarter"}if(e[5]){return"week"}if(e[6]){return"yearWeek"}if(e[7]){return"dayOfYear"}if(e[8]){return"yearVariant"}return undefined})},fetchCriticality(e,t){const r="@com.sap.vocabularies.UI.v1";return e.requestObject(`${r}.ValueCriticality`,t).then(function(e){let t,r;if(e){t={VeryPositive:[],Positive:[],Critical:[],VeryNegative:[],Negative:[],Neutral:[]};for(let a=0;a<e.length;a++){r=e[a];if(r.Criticality.$EnumMember.endsWith("VeryPositive")){t.VeryPositive.push(r.Value)}else if(r.Criticality.$EnumMember.endsWith("Positive")){t.Positive.push(r.Value)}else if(r.Criticality.$EnumMember.endsWith("Critical")){t.Critical.push(r.Value)}else if(r.Criticality.$EnumMember.endsWith("VeryNegative")){t.VeryNegative.push(r.Value)}else if(r.Criticality.$EnumMember.endsWith("Negative")){t.Negative.push(r.Value)}else{t.Neutral.push(r.Value)}}for(const e in t){if(t[e].length==0){delete t[e]}}}return t})}};return e},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/ResourceModel-dbg", ["sap/ui/core/Core", "sap/ui/model/resource/ResourceModel"], function (Core, UI5ResourceModel) {
  "use strict";

  const oResourceModel = new UI5ResourceModel({
      bundleName: "sap.fe.macros.messagebundle",
      async: true
    }),
    oResourceBundle = Core.getLibraryResourceBundle("sap.fe.macros");
  let oApplicationResourceBundle;
  const ResourceModel = {
    /**
     * Returns the resource model for the library.
     *
     * @private
     * @returns The resource model for this library
     */
    getModel() {
      return oResourceModel;
    },
    /**
     * Returns a text from the resource bundle of this library.
     *
     * @param sText Text
     * @param aParameter Parameter
     * @param sEntitySetName Entity set name
     * @returns Text from resource bundle
     */
    getText(sText, aParameter, sEntitySetName) {
      let sResourceKey = sText;
      let sBundleText;
      if (oApplicationResourceBundle) {
        if (sEntitySetName) {
          //Create resource key appended with the entity set name
          sResourceKey = `${sText}|${sEntitySetName}`;
        }
        sBundleText = oApplicationResourceBundle.getText(sResourceKey, aParameter, true);
        return sBundleText ? sBundleText : oResourceBundle.getText(sText, aParameter);
      }
      return oResourceBundle.getText(sText, aParameter);
    },
    /**
     * Sets the resource bundle of the application.
     *
     * @param oApplicationi18nBundle Resource bundle of the application
     */
    setApplicationI18nBundle(oApplicationi18nBundle) {
      oApplicationResourceBundle = oApplicationi18nBundle;
    }
  };
  return ResourceModel;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/ResourceModel", ["sap/ui/core/Core","sap/ui/model/resource/ResourceModel"],function(e,t){"use strict";const r=new t({bundleName:"sap.fe.macros.messagebundle",async:true}),s=e.getLibraryResourceBundle("sap.fe.macros");let u;const n={getModel(){return r},getText(e,t,r){let n=e;let o;if(u){if(r){n=`${e}|${r}`}o=u.getText(n,t,true);return o?o:s.getText(e,t)}return s.getText(e,t)},setApplicationI18nBundle(e){u=e}};return n},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/chart/ChartAPI-dbg", ["sap/base/util/merge", "sap/fe/core/helpers/ClassSupport", "sap/fe/macros/chart/ChartRuntime", "sap/fe/macros/filter/FilterUtils", "sap/fe/macros/MacroAPI"], function (merge, ClassSupport, ChartRuntime, FilterUtils, MacroAPI) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13;
  var xmlEventHandler = ClassSupport.xmlEventHandler;
  var property = ClassSupport.property;
  var event = ClassSupport.event;
  var defineUI5Class = ClassSupport.defineUI5Class;
  var aggregation = ClassSupport.aggregation;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  /**
   * Building block used to create a chart based on the metadata provided by OData V4.
   * <br>
   * Usually, a contextPath and metaPath is expected.
   *
   *
   * Usage example:
   * <pre>
   * &lt;macro:Chart id="Mychart" contextPath="/RootEntity" metaPath="@com.sap.vocabularies.UI.v1.Chart" /&gt;
   * </pre>
   *
   * @alias sap.fe.macros.Chart
   * @public
   */
  let ChartAPI = (_dec = defineUI5Class("sap.fe.macros.chart.ChartAPI"), _dec2 = property({
    type: "string"
  }), _dec3 = property({
    type: "string",
    required: true,
    expectedTypes: ["EntitySet", "EntityType", "Singleton", "NavigationProperty"],
    expectedAnnotations: ["com.sap.vocabularies.UI.v1.Chart"]
  }), _dec4 = property({
    type: "string",
    required: true,
    expectedTypes: ["EntitySet", "EntityType", "Singleton", "NavigationProperty"],
    expectedAnnotations: []
  }), _dec5 = property({
    type: "string"
  }), _dec6 = property({
    type: "boolean",
    defaultValue: true
  }), _dec7 = property({
    type: "string",
    defaultValue: "MULTIPLE"
  }), _dec8 = property({
    type: "string"
  }), _dec9 = property({
    type: "string"
  }), _dec10 = property({
    type: "boolean|string"
  }), _dec11 = aggregation({
    type: "sap.fe.macros.chart.Action"
  }), _dec12 = event(), _dec13 = event(), _dec14 = event(), _dec15 = xmlEventHandler(), _dec16 = xmlEventHandler(), _dec(_class = (_class2 = /*#__PURE__*/function (_MacroAPI) {
    _inheritsLoose(ChartAPI, _MacroAPI);
    function ChartAPI() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _MacroAPI.call(this, ...args) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "header", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "headerVisible", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "selectionMode", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "filterBar", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "variantManagement", _descriptor8, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "personalization", _descriptor9, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "actions", _descriptor10, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "selectionChange", _descriptor11, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "stateChange", _descriptor12, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "internalDataRequested", _descriptor13, _assertThisInitialized(_this));
      return _this;
    }
    var _proto = ChartAPI.prototype;
    /**
     * Gets contexts from the chart that have been selected by the user.
     *
     * @returns Contexts of the rows selected by the user
     * @public
     */
    _proto.getSelectedContexts = function getSelectedContexts() {
      var _this$content, _this$content$getBind;
      return ((_this$content = this.content) === null || _this$content === void 0 ? void 0 : (_this$content$getBind = _this$content.getBindingContext("internal")) === null || _this$content$getBind === void 0 ? void 0 : _this$content$getBind.getProperty("selectedContexts")) || [];
    }

    /**
     * An event triggered when chart selections are changed. The event contains information about the data selected/deselected and the Boolean flag that indicates whether data is selected or deselected.
     *
     * @public
     */;
    _proto.onAfterRendering = function onAfterRendering() {
      const view = this.getController().getView();
      const internalModelContext = view.getBindingContext("internal");
      const chart = this.getContent();
      const showMessageStrip = {};
      const sChartEntityPath = chart.data("entitySet"),
        sCacheKey = `${sChartEntityPath}Chart`,
        oBindingContext = view.getBindingContext();
      showMessageStrip[sCacheKey] = chart.data("draftSupported") === "true" && !!oBindingContext && !oBindingContext.getObject("IsActiveEntity");
      internalModelContext.setProperty("controls/showMessageStrip", showMessageStrip);
    };
    _proto.refreshNotApplicableFields = function refreshNotApplicableFields(oFilterControl) {
      const oChart = this.getContent();
      return FilterUtils.getNotApplicableFilters(oFilterControl, oChart);
    };
    _proto.handleSelectionChange = function handleSelectionChange(oEvent) {
      const aData = oEvent.getParameter("data");
      const bSelected = oEvent.getParameter("name") === "selectData";
      ChartRuntime.fnUpdateChart(oEvent);
      this.fireSelectionChange(merge({}, {
        data: aData,
        selected: bSelected
      }));
    };
    _proto.onInternalDataRequested = function onInternalDataRequested() {
      this.fireEvent("internalDataRequested");
    };
    return ChartAPI;
  }(MacroAPI), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "header", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "headerVisible", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "selectionMode", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "filterBar", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "variantManagement", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "personalization", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "actions", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "selectionChange", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "stateChange", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "internalDataRequested", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class2.prototype, "handleSelectionChange", [_dec15], Object.getOwnPropertyDescriptor(_class2.prototype, "handleSelectionChange"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "onInternalDataRequested", [_dec16], Object.getOwnPropertyDescriptor(_class2.prototype, "onInternalDataRequested"), _class2.prototype)), _class2)) || _class);
  return ChartAPI;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/chart/ChartAPI", ["sap/base/util/merge","sap/fe/core/helpers/ClassSupport","sap/fe/macros/chart/ChartRuntime","sap/fe/macros/filter/FilterUtils","sap/fe/macros/MacroAPI"],function(e,t,r,n,i){"use strict";var a,o,l,u,s,p,c,b,f,g,d,y,h,m,v,w,z,C,P,O,S,x,E,A,D,j,I,R,q,M,B;var T=t.xmlEventHandler;var U=t.property;var V=t.event;var N=t.defineUI5Class;var _=t.aggregation;function F(e,t,r,n){if(!r)return;Object.defineProperty(e,t,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(n):void 0})}function L(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function k(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;H(e,t)}function H(e,t){H=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,r){t.__proto__=r;return t};return H(e,t)}function $(e,t,r,n,i){var a={};Object.keys(n).forEach(function(e){a[e]=n[e]});a.enumerable=!!a.enumerable;a.configurable=!!a.configurable;if("value"in a||a.initializer){a.writable=true}a=r.slice().reverse().reduce(function(r,n){return n(e,t,r)||r},a);if(i&&a.initializer!==void 0){a.value=a.initializer?a.initializer.call(i):void 0;a.initializer=undefined}if(a.initializer===void 0){Object.defineProperty(e,t,a);a=null}return a}function G(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let J=(a=N("sap.fe.macros.chart.ChartAPI"),o=U({type:"string"}),l=U({type:"string",required:true,expectedTypes:["EntitySet","EntityType","Singleton","NavigationProperty"],expectedAnnotations:["com.sap.vocabularies.UI.v1.Chart"]}),u=U({type:"string",required:true,expectedTypes:["EntitySet","EntityType","Singleton","NavigationProperty"],expectedAnnotations:[]}),s=U({type:"string"}),p=U({type:"boolean",defaultValue:true}),c=U({type:"string",defaultValue:"MULTIPLE"}),b=U({type:"string"}),f=U({type:"string"}),g=U({type:"boolean|string"}),d=_({type:"sap.fe.macros.chart.Action"}),y=V(),h=V(),m=V(),v=T(),w=T(),a(z=(C=function(t){k(i,t);function i(){var e;for(var r=arguments.length,n=new Array(r),i=0;i<r;i++){n[i]=arguments[i]}e=t.call(this,...n)||this;F(e,"id",P,L(e));F(e,"metaPath",O,L(e));F(e,"contextPath",S,L(e));F(e,"header",x,L(e));F(e,"headerVisible",E,L(e));F(e,"selectionMode",A,L(e));F(e,"filterBar",D,L(e));F(e,"variantManagement",j,L(e));F(e,"personalization",I,L(e));F(e,"actions",R,L(e));F(e,"selectionChange",q,L(e));F(e,"stateChange",M,L(e));F(e,"internalDataRequested",B,L(e));return e}var a=i.prototype;a.getSelectedContexts=function e(){var t,r;return((t=this.content)===null||t===void 0?void 0:(r=t.getBindingContext("internal"))===null||r===void 0?void 0:r.getProperty("selectedContexts"))||[]};a.onAfterRendering=function e(){const t=this.getController().getView();const r=t.getBindingContext("internal");const n=this.getContent();const i={};const a=n.data("entitySet"),o=`${a}Chart`,l=t.getBindingContext();i[o]=n.data("draftSupported")==="true"&&!!l&&!l.getObject("IsActiveEntity");r.setProperty("controls/showMessageStrip",i)};a.refreshNotApplicableFields=function e(t){const r=this.getContent();return n.getNotApplicableFilters(t,r)};a.handleSelectionChange=function t(n){const i=n.getParameter("data");const a=n.getParameter("name")==="selectData";r.fnUpdateChart(n);this.fireSelectionChange(e({},{data:i,selected:a}))};a.onInternalDataRequested=function e(){this.fireEvent("internalDataRequested")};return i}(i),P=$(C.prototype,"id",[o],{configurable:true,enumerable:true,writable:true,initializer:null}),O=$(C.prototype,"metaPath",[l],{configurable:true,enumerable:true,writable:true,initializer:null}),S=$(C.prototype,"contextPath",[u],{configurable:true,enumerable:true,writable:true,initializer:null}),x=$(C.prototype,"header",[s],{configurable:true,enumerable:true,writable:true,initializer:null}),E=$(C.prototype,"headerVisible",[p],{configurable:true,enumerable:true,writable:true,initializer:null}),A=$(C.prototype,"selectionMode",[c],{configurable:true,enumerable:true,writable:true,initializer:null}),D=$(C.prototype,"filterBar",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),j=$(C.prototype,"variantManagement",[f],{configurable:true,enumerable:true,writable:true,initializer:null}),I=$(C.prototype,"personalization",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),R=$(C.prototype,"actions",[d],{configurable:true,enumerable:true,writable:true,initializer:null}),q=$(C.prototype,"selectionChange",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),M=$(C.prototype,"stateChange",[h],{configurable:true,enumerable:true,writable:true,initializer:null}),B=$(C.prototype,"internalDataRequested",[m],{configurable:true,enumerable:true,writable:true,initializer:null}),$(C.prototype,"handleSelectionChange",[v],Object.getOwnPropertyDescriptor(C.prototype,"handleSelectionChange"),C.prototype),$(C.prototype,"onInternalDataRequested",[w],Object.getOwnPropertyDescriptor(C.prototype,"onInternalDataRequested"),C.prototype),C))||z);return J},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/chart/ChartBuildingBlock-dbg", ["sap/base/Log", "sap/base/util/uid", "sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/converters/controls/Common/DataVisualization", "sap/fe/core/converters/helpers/Aggregation", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/helpers/ModelHelper", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/macros/CommonHelper", "sap/ui/model/json/JSONModel", "../internal/helpers/ActionHelper", "../internal/helpers/DefaultActionHandler", "../ODataMetaModelUtil", "./ChartHelper"], function (Log, uid, BuildingBlock, BuildingBlockRuntime, DataVisualization, Aggregation, MetaModelConverter, BindingToolkit, ModelHelper, StableIdHelper, DataModelPathHelper, CommonHelper, JSONModel, ActionHelper, DefaultActionHandler, ODataMetaModelUtil, ChartHelper) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30, _class3;
  var _exports = {};
  var getContextRelativeTargetObjectPath = DataModelPathHelper.getContextRelativeTargetObjectPath;
  var generate = StableIdHelper.generate;
  var resolveBindingString = BindingToolkit.resolveBindingString;
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  var AggregationHelper = Aggregation.AggregationHelper;
  var getVisualizationsFromPresentationVariant = DataVisualization.getVisualizationsFromPresentationVariant;
  var getDataVisualizationConfiguration = DataVisualization.getDataVisualizationConfiguration;
  var xml = BuildingBlockRuntime.xml;
  var escapeXMLAttributeValue = BuildingBlockRuntime.escapeXMLAttributeValue;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockEvent = BuildingBlock.blockEvent;
  var blockAttribute = BuildingBlock.blockAttribute;
  var blockAggregation = BuildingBlock.blockAggregation;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  const mMeasureRole = {
    "com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1": "axis1",
    "com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis2": "axis2",
    "com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis3": "axis3",
    "com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis4": "axis4"
  };
  var personalizationValues;
  /**
   * Build actions and action groups with all properties for chart visualization.
   *
   * @param childAction XML node corresponding to actions
   * @returns Prepared action object
   */
  (function (personalizationValues) {
    personalizationValues["Sort"] = "Sort";
    personalizationValues["Type"] = "Type";
    personalizationValues["Item"] = "Item";
  })(personalizationValues || (personalizationValues = {}));
  const setCustomActionProperties = function (childAction) {
    var _action$getAttribute;
    let menuContentActions = null;
    const action = childAction;
    let menuActions = [];
    const actionKey = (_action$getAttribute = action.getAttribute("key")) === null || _action$getAttribute === void 0 ? void 0 : _action$getAttribute.replace("InlineXML_", "");
    if (action.children.length && action.localName === "ActionGroup" && action.namespaceURI === "sap.fe.macros") {
      const actionsToAdd = Array.prototype.slice.apply(action.children);
      let actionIdx = 0;
      menuContentActions = actionsToAdd.reduce((customAction, actToAdd) => {
        var _actToAdd$getAttribut;
        const actionKeyAdd = ((_actToAdd$getAttribut = actToAdd.getAttribute("key")) === null || _actToAdd$getAttribut === void 0 ? void 0 : _actToAdd$getAttribut.replace("InlineXML_", "")) || actionKey + "_Menu_" + actionIdx;
        const curOutObject = {
          key: actionKeyAdd,
          text: actToAdd.getAttribute("text"),
          __noWrap: true,
          press: actToAdd.getAttribute("press"),
          requiresSelection: actToAdd.getAttribute("requiresSelection") === "true",
          enabled: actToAdd.getAttribute("enabled") === null ? true : actToAdd.getAttribute("enabled") === true
        };
        customAction[curOutObject.key] = curOutObject;
        actionIdx++;
        return customAction;
      }, {});
      menuActions = Object.values(menuContentActions).slice(-action.children.length).map(function (menuItem) {
        return menuItem.key;
      });
    }
    return {
      key: actionKey,
      text: action.getAttribute("text"),
      position: {
        placement: action.getAttribute("placement"),
        anchor: action.getAttribute("anchor")
      },
      __noWrap: true,
      press: action.getAttribute("press"),
      requiresSelection: action.getAttribute("requiresSelection") === "true",
      enabled: action.getAttribute("enabled") === null ? true : action.getAttribute("enabled"),
      menu: menuActions.length ? menuActions : null,
      menuContentActions: menuContentActions
    };
  };
  let ChartBuildingBlock = (_dec = defineBuildingBlock({
    name: "Chart",
    namespace: "sap.fe.macros.internal",
    publicNamespace: "sap.fe.macros"
  }), _dec2 = blockAttribute({
    type: "string",
    isPublic: true
  }), _dec3 = blockAttribute({
    type: "sap.ui.model.Context"
  }), _dec4 = blockAttribute({
    type: "sap.ui.model.Context",
    isPublic: true
  }), _dec5 = blockAttribute({
    type: "sap.ui.model.Context",
    isPublic: true
  }), _dec6 = blockAttribute({
    type: "string",
    defaultValue: "100%"
  }), _dec7 = blockAttribute({
    type: "string",
    defaultValue: "100%"
  }), _dec8 = blockAttribute({
    type: "string",
    isPublic: true
  }), _dec9 = blockAttribute({
    type: "boolean",
    isPublic: true
  }), _dec10 = blockAttribute({
    type: "sap.ui.core.TitleLevel",
    defaultValue: "Auto",
    isPublic: true
  }), _dec11 = blockAttribute({
    type: "string",
    defaultValue: "MULTIPLE",
    isPublic: true
  }), _dec12 = blockAttribute({
    type: "string|boolean",
    isPublic: true
  }), _dec13 = blockAttribute({
    type: "string",
    isPublic: true
  }), _dec14 = blockAttribute({
    type: "string"
  }), _dec15 = blockAttribute({
    type: "string"
  }), _dec16 = blockAttribute({
    type: "string"
  }), _dec17 = blockAttribute({
    type: "sap.ui.model.Context"
  }), _dec18 = blockAttribute({
    type: "boolean"
  }), _dec19 = blockAttribute({
    type: "boolean"
  }), _dec20 = blockAttribute({
    type: "string"
  }), _dec21 = blockAttribute({
    type: "string"
  }), _dec22 = blockAttribute({
    type: "string"
  }), _dec23 = blockAttribute({
    type: "string"
  }), _dec24 = blockAttribute({
    type: "boolean",
    defaultValue: false
  }), _dec25 = blockAttribute({
    type: "string",
    isPublic: true
  }), _dec26 = blockEvent(), _dec27 = blockEvent(), _dec28 = blockAggregation({
    type: "sap.fe.macros.internal.chart.Action | sap.fe.macros.internal.chart.ActionGroup",
    isPublic: true,
    processAggregations: setCustomActionProperties
  }), _dec29 = blockEvent(), _dec30 = blockEvent(), _dec31 = blockEvent(), _dec(_class = (_class2 = (_class3 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(ChartBuildingBlock, _BuildingBlockBase);
    /**
     * ID of the chart
     */

    /**
     * Metadata path to the presentation (UI.Chart w or w/o qualifier)
     */

    /**
     * Metadata path to the entitySet or navigationProperty
     */

    /**
     * The height of the chart
     */

    /**
     * The width of the chart
     */

    /**
     * Specifies the header text that is shown in the chart
     */

    /**
     * Specifies the visibility of the chart header
     */

    /**
     * Defines the "aria-level" of the chart header
     */

    /**
     * Specifies the selection mode
     */

    /**
     * Parameter which sets the personalization of the chart
     */

    /**
     * Parameter which sets the ID of the filterbar associating it to the chart
     */

    /**
     * 	Parameter which sets the noDataText for the chart
     */

    /**
     * Parameter which sets the chart delegate for the chart
     */

    /**
     * Parameter which sets the visualization properties for the chart
     */

    /**
     * The actions to be shown in the action area of the chart
     */

    /**
     * The XML and manifest actions to be shown in the action area of the chart
     */

    /**
     * An event triggered when chart selections are changed. The event contains information about the data selected/deselected and
     * the Boolean flag that indicates whether data is selected or deselected
     */

    /**
     * Event handler to react to the stateChange event of the chart.
     */

    function ChartBuildingBlock(_oProps, configuration, _mSettings) {
      var _this$chartDefinition, _this$chartDefinition4, _this$chartDefinition5, _this$chartDefinition6, _this$chartDefinition7;
      var _this;
      _this = _BuildingBlockBase.call(this, _oProps, configuration, _mSettings) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "chartDefinition", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "height", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "width", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "header", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "headerVisible", _descriptor8, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "headerLevel", _descriptor9, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "selectionMode", _descriptor10, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "personalization", _descriptor11, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "filterBar", _descriptor12, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "noDataText", _descriptor13, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "chartDelegate", _descriptor14, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "vizProperties", _descriptor15, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "chartActions", _descriptor16, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "draftSupported", _descriptor17, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "autoBindOnInit", _descriptor18, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visible", _descriptor19, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "navigationPath", _descriptor20, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "filter", _descriptor21, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "measures", _descriptor22, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "_applyIdToContent", _descriptor23, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "variantManagement", _descriptor24, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "variantSelected", _descriptor25, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "variantSaved", _descriptor26, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "actions", _descriptor27, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "onSegmentedButtonPressed", _descriptor28, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "selectionChange", _descriptor29, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "stateChange", _descriptor30, _assertThisInitialized(_this));
      _this._commandActions = [];
      _this.createChartDefinition = (oProps, oConverterContext, oContextObjectPath) => {
        var _oProps$metaPath;
        let sVisualizationPath = getContextRelativeTargetObjectPath(oContextObjectPath);
        if (((_oProps$metaPath = oProps.metaPath) === null || _oProps$metaPath === void 0 ? void 0 : _oProps$metaPath.getObject().$Type) === "com.sap.vocabularies.UI.v1.PresentationVariantType") {
          const aVisualizations = oProps.metaPath.getObject().Visualizations;
          sVisualizationPath = ChartBuildingBlock.checkChartVisualizationPath(aVisualizations, sVisualizationPath);
        }
        const oVisualizationDefinition = getDataVisualizationConfiguration(sVisualizationPath, oProps.useCondensedLayout, oConverterContext);
        oProps.chartDefinition = oVisualizationDefinition.visualizations[0];
        _this.chartDefinition = oVisualizationDefinition.visualizations[0];
        return _this.chartDefinition;
      };
      _this.createBindingContext = function (oData, mSettings) {
        const sContextPath = `/${uid()}`;
        mSettings.models.converterContext.setProperty(sContextPath, oData);
        return mSettings.models.converterContext.createBindingContext(sContextPath);
      };
      _this.getChartMeasures = (oProps, aggregationHelper) => {
        const aChartAnnotationPath = oProps.chartDefinition.annotationPath.split("/");
        // this is required because getAbsolutePath in converterContext returns "/SalesOrderManage/_Item/_Item/@com.sap.vocabularies.v1.Chart" as annotationPath
        const sChartAnnotationPath = aChartAnnotationPath.filter(function (item, pos) {
          return aChartAnnotationPath.indexOf(item) == pos;
        }).toString().replaceAll(",", "/");
        const oChart = getInvolvedDataModelObjects(_this.metaPath.getModel().createBindingContext(sChartAnnotationPath), _this.contextPath).targetObject;
        const chartContext = ChartHelper.getUiChart(_this.metaPath);
        const chart = chartContext.getObject();
        const aAggregatedProperty = aggregationHelper.getAggregatedProperties("AggregatedProperty");
        let aMeasures = [];
        const sAnnoPath = oProps.metaPath.getPath();
        const aAggregatedProperties = aggregationHelper.getAggregatedProperties("AggregatedProperties");
        const aChartMeasures = oChart.Measures ? oChart.Measures : [];
        const aChartDynamicMeasures = oChart.DynamicMeasures ? oChart.DynamicMeasures : [];
        //check if there are measures pointing to aggregatedproperties
        const aTransAggInMeasures = aAggregatedProperties[0] ? aAggregatedProperties[0].filter(function (oAggregatedProperties) {
          return aChartMeasures.some(function (oMeasure) {
            return oAggregatedProperties.Name === oMeasure.value;
          });
        }) : undefined;
        const sEntitySetPath = sAnnoPath.replace(/@com.sap.vocabularies.UI.v1.(Chart|PresentationVariant|SelectionPresentationVariant).*/, "");
        const oTransAggregations = oProps.chartDefinition.transAgg;
        const oCustomAggregations = oProps.chartDefinition.customAgg;
        // intimate the user if there is Aggregatedproperty configured with no DYnamicMeasures, bu there are measures with AggregatedProperties
        if (aAggregatedProperty.length > 0 && !aChartDynamicMeasures && aTransAggInMeasures.length > 0) {
          Log.warning("The transformational aggregate measures are configured as Chart.Measures but should be configured as Chart.DynamicMeasures instead. Please check the SAP Help documentation and correct the configuration accordingly.");
        }
        const bIsCustomAggregateIsMeasure = aChartMeasures.some(oChartMeasure => {
          const oCustomAggMeasure = _this.getCustomAggMeasure(oCustomAggregations, oChartMeasure);
          return !!oCustomAggMeasure;
        });
        if (aAggregatedProperty.length > 0 && !aChartDynamicMeasures.length && !bIsCustomAggregateIsMeasure) {
          throw new Error("Please configure DynamicMeasures for the chart");
        }
        if (aAggregatedProperty.length > 0) {
          for (const dynamicMeasure of aChartDynamicMeasures) {
            aMeasures = _this.getDynamicMeasures(aMeasures, dynamicMeasure, sEntitySetPath, oChart);
          }
        }
        for (const chartMeasure of aChartMeasures) {
          const sKey = chartMeasure.value;
          const oCustomAggMeasure = _this.getCustomAggMeasure(oCustomAggregations, chartMeasure);
          const oMeasure = {};
          if (oCustomAggMeasure) {
            aMeasures = _this.setCustomAggMeasure(aMeasures, oMeasure, oCustomAggMeasure, sKey);
            //if there is neither aggregatedProperty nor measures pointing to customAggregates, but we have normal measures. Now check if these measures are part of AggregatedProperties Obj
          } else if (aAggregatedProperty.length === 0 && oTransAggregations[sKey]) {
            aMeasures = _this.setTransAggMeasure(aMeasures, oMeasure, oTransAggregations, sKey);
          }
          _this.setChartMeasureAttributes(chart.MeasureAttributes, sEntitySetPath, oMeasure);
        }
        const oMeasuresModel = new JSONModel(aMeasures);
        oMeasuresModel.$$valueAsPromise = true;
        return oMeasuresModel.createBindingContext("/");
      };
      _this.setCustomAggMeasure = (aMeasures, oMeasure, oCustomAggMeasure, sKey) => {
        if (sKey.indexOf("/") > -1) {
          Log.error("$expand is not yet supported. Measure: ${sKey} from an association cannot be used");
        }
        oMeasure.key = oCustomAggMeasure.value;
        oMeasure.role = "axis1";
        oMeasure.propertyPath = oCustomAggMeasure.value;
        aMeasures.push(oMeasure);
        return aMeasures;
      };
      _this.setTransAggMeasure = (aMeasures, oMeasure, oTransAggregations, sKey) => {
        const oTransAggMeasure = oTransAggregations[sKey];
        oMeasure.key = oTransAggMeasure.name;
        oMeasure.role = "axis1";
        oMeasure.propertyPath = sKey;
        oMeasure.aggregationMethod = oTransAggMeasure.aggregationMethod;
        oMeasure.label = oTransAggMeasure.label || oMeasure.label;
        aMeasures.push(oMeasure);
        return aMeasures;
      };
      _this.getDynamicMeasures = (aMeasures, dynamicMeasure, sEntitySetPath, oChart) => {
        var _dynamicMeasure$value;
        const sKey = dynamicMeasure.value || "";
        const oAggregatedProperty = getInvolvedDataModelObjects(_this.metaPath.getModel().createBindingContext(sEntitySetPath + sKey), _this.contextPath).targetObject;
        if (sKey.indexOf("/") > -1) {
          Log.error("$expand is not yet supported. Measure: ${sKey} from an association cannot be used");
          // check if the annotation path is wrong
        } else if (!oAggregatedProperty) {
          throw new Error("Please provide the right AnnotationPath to the Dynamic Measure " + dynamicMeasure.value);
          // check if the path starts with @
        } else if (((_dynamicMeasure$value = dynamicMeasure.value) === null || _dynamicMeasure$value === void 0 ? void 0 : _dynamicMeasure$value.startsWith("@com.sap.vocabularies.Analytics.v1.AggregatedProperty")) === null) {
          throw new Error("Please provide the right AnnotationPath to the Dynamic Measure " + dynamicMeasure.value);
        } else {
          // check if AggregatedProperty is defined in given DynamicMeasure
          const oDynamicMeasure = {
            key: oAggregatedProperty.Name,
            role: "axis1"
          };
          oDynamicMeasure.propertyPath = oAggregatedProperty.AggregatableProperty.value;
          oDynamicMeasure.aggregationMethod = oAggregatedProperty.AggregationMethod;
          oDynamicMeasure.label = resolveBindingString(oAggregatedProperty.annotations._annotations["com.sap.vocabularies.Common.v1.Label"] || getInvolvedDataModelObjects(_this.metaPath.getModel().createBindingContext(sEntitySetPath + oDynamicMeasure.propertyPath + "@com.sap.vocabularies.Common.v1.Label"), _this.contextPath).targetObject);
          _this.setChartMeasureAttributes(oChart.MeasureAttributes, sEntitySetPath, oDynamicMeasure);
          aMeasures.push(oDynamicMeasure);
        }
        return aMeasures;
      };
      _this.getCustomAggMeasure = (oCustomAggregations, oMeasure) => {
        if (oMeasure.value && oCustomAggregations[oMeasure.value]) {
          return oMeasure;
        }
        return null;
      };
      _this.setChartMeasureAttributes = (aMeasureAttributes, sEntitySetPath, oMeasure) => {
        if (aMeasureAttributes !== null && aMeasureAttributes !== void 0 && aMeasureAttributes.length) {
          for (const measureAttribute of aMeasureAttributes) {
            _this._setChartMeasureAttribute(measureAttribute, sEntitySetPath, oMeasure);
          }
        }
      };
      _this._setChartMeasureAttribute = (measureAttribute, sEntitySetPath, oMeasure) => {
        var _measureAttribute$Dyn, _measureAttribute$Mea, _measureAttribute$Dat;
        const sPath = measureAttribute.DynamicMeasure ? measureAttribute === null || measureAttribute === void 0 ? void 0 : (_measureAttribute$Dyn = measureAttribute.DynamicMeasure) === null || _measureAttribute$Dyn === void 0 ? void 0 : _measureAttribute$Dyn.value : measureAttribute === null || measureAttribute === void 0 ? void 0 : (_measureAttribute$Mea = measureAttribute.Measure) === null || _measureAttribute$Mea === void 0 ? void 0 : _measureAttribute$Mea.value;
        const dataPoint = measureAttribute.DataPoint ? measureAttribute === null || measureAttribute === void 0 ? void 0 : (_measureAttribute$Dat = measureAttribute.DataPoint) === null || _measureAttribute$Dat === void 0 ? void 0 : _measureAttribute$Dat.value : null;
        const role = measureAttribute.Role;
        const oDataPoint = dataPoint && getInvolvedDataModelObjects(_this.metaPath.getModel().createBindingContext(sEntitySetPath + dataPoint), _this.contextPath).targetObject;
        if (oMeasure.key === sPath) {
          _this.setMeasureRole(oMeasure, role);
          //still to add data point, but UI5 Chart API is missing
          _this.setMeasureDataPoint(oMeasure, oDataPoint);
        }
      };
      _this.setMeasureDataPoint = (oMeasure, oDataPoint) => {
        if (oDataPoint && oDataPoint.Value.$Path == oMeasure.key) {
          oMeasure.dataPoint = _this.formatJSONToString(ODataMetaModelUtil.createDataPointProperty(oDataPoint)) || "";
        }
      };
      _this.setMeasureRole = (oMeasure, role) => {
        if (role) {
          const index = role.$EnumMember;
          oMeasure.role = mMeasureRole[index];
        }
      };
      _this.formatJSONToString = oCrit => {
        if (!oCrit) {
          return undefined;
        }
        let sCriticality = JSON.stringify(oCrit);
        sCriticality = sCriticality.replace(new RegExp("{", "g"), "\\{");
        sCriticality = sCriticality.replace(new RegExp("}", "g"), "\\}");
        return sCriticality;
      };
      _this.getDependents = chartContext => {
        if (_this._commandActions.length > 0) {
          return _this._commandActions.map(commandAction => {
            return _this.getActionCommand(commandAction, chartContext);
          });
        }
        return xml``;
      };
      _this.checkPersonalizationInChartProperties = oProps => {
        if (oProps.personalization) {
          if (oProps.personalization === "false") {
            _this.personalization = undefined;
          } else if (oProps.personalization === "true") {
            _this.personalization = Object.values(personalizationValues).join(",");
          } else if (_this.verifyValidPersonlization(oProps.personalization) === true) {
            _this.personalization = oProps.personalization;
          } else {
            _this.personalization = undefined;
          }
        }
      };
      _this.verifyValidPersonlization = personalization => {
        let valid = true;
        const splitArray = personalization.split(",");
        const acceptedValues = Object.values(personalizationValues);
        splitArray.forEach(arrayElement => {
          if (!acceptedValues.includes(arrayElement)) {
            valid = false;
          }
        });
        return valid;
      };
      _this.getVariantManagement = (oProps, oChartDefinition) => {
        let variantManagement = oProps.variantManagement ? oProps.variantManagement : oChartDefinition.variantManagement;
        variantManagement = _this.personalization === undefined ? "None" : variantManagement;
        return variantManagement;
      };
      _this.createVariantManagement = () => {
        const personalization = _this.personalization;
        if (personalization) {
          const variantManagement = _this.variantManagement;
          if (variantManagement === "Control") {
            return xml`
					<mdc:variant>
					<variant:VariantManagement
						id="${generate([_this.id, "VM"])}"
						for="${_this.id}"
						showSetAsDefault="${true}"
						select="${_this.variantSelected}"
						headerLevel="${_this.headerLevel}"
						save="${_this.variantSaved}"
					/>
					</mdc:variant>
			`;
          } else if (variantManagement === "None" || variantManagement === "Page") {
            return xml``;
          }
        } else if (!personalization) {
          Log.warning("Variant Management cannot be enabled when personalization is disabled");
        }
        return xml``;
      };
      _this.getPersistenceProvider = () => {
        if (_this.variantManagement === "None") {
          return xml`<p13n:PersistenceProvider id="${generate([_this.id, "PersistenceProvider"])}" for="${_this.id}"/>`;
        }
        return xml``;
      };
      _this.pushActionCommand = (actionContext, dataField, chartOperationAvailableMap, action) => {
        if (dataField) {
          const commandAction = {
            actionContext: actionContext,
            onExecuteAction: ChartHelper.getPressEventForDataFieldForActionButton(_this.id, dataField, chartOperationAvailableMap || ""),
            onExecuteIBN: CommonHelper.getPressHandlerForDataFieldForIBN(dataField, `\${internal>selectedContexts}`, false),
            onExecuteManifest: CommonHelper.buildActionWrapper(action, _assertThisInitialized(_this))
          };
          _this._commandActions.push(commandAction);
        }
      };
      _this.getActionCommand = (commandAction, chartContext) => {
        const oAction = commandAction.actionContext;
        const action = oAction.getObject();
        const dataFieldContext = action.annotationPath && _this.contextPath.getModel().createBindingContext(action.annotationPath);
        const dataField = dataFieldContext && dataFieldContext.getObject();
        const dataFieldAction = _this.contextPath.getModel().createBindingContext(action.annotationPath + "/Action");
        const actionContext = CommonHelper.getActionContext(dataFieldAction);
        const isBoundPath = CommonHelper.getPathToBoundActionOverload(dataFieldAction);
        const isBound = _this.contextPath.getModel().createBindingContext(isBoundPath).getObject();
        const chartOperationAvailableMap = escapeXMLAttributeValue(ChartHelper.getOperationAvailableMap(chartContext.getObject(), {
          context: chartContext
        }));
        const isActionEnabled = action.enabled ? action.enabled : ChartHelper.isDataFieldForActionButtonEnabled(isBound && isBound.$IsBound, dataField.Action, _this.contextPath, chartOperationAvailableMap || "", action.enableOnSelect || "");
        let isIBNEnabled;
        if (action.enabled) {
          isIBNEnabled = action.enabled;
        } else if (dataField.RequiresContext) {
          isIBNEnabled = "{= %{internal>numberOfSelectedContexts} >= 1}";
        }
        const actionCommand = xml`<internalMacro:ActionCommand
		action="${action}"
		onExecuteAction="${commandAction.onExecuteAction}"
		onExecuteIBN="${commandAction.onExecuteIBN}"
		onExecuteManifest="${commandAction.onExecuteManifest}"
		isIBNEnabled="${isIBNEnabled}"
		isActionEnabled="${isActionEnabled}"
		visible="${_this.getVisible(dataFieldContext)}"
	/>`;
        if (action.type == "ForAction" && (!isBound || isBound.IsBound !== true || actionContext["@Org.OData.Core.V1.OperationAvailable"] !== false)) {
          return actionCommand;
        } else if (action.type == "ForAction") {
          return xml``;
        } else {
          return actionCommand;
        }
      };
      _this.getItems = chartContext => {
        const chart = chartContext.getObject();
        const dimensions = [];
        const measures = [];
        if (chart.Dimensions) {
          ChartHelper.formatDimensions(chartContext).getObject().forEach(dimension => {
            dimension.id = generate([_this.id, "dimension", dimension.key]);
            dimensions.push(_this.getItem({
              id: dimension.id,
              key: dimension.key,
              label: dimension.label,
              role: dimension.role
            }, "_fe_groupable_", "groupable"));
          });
        }
        if (_this.measures) {
          ChartHelper.formatMeasures(_this.measures).forEach(measure => {
            measure.id = generate([_this.id, "measure", measure.key]);
            measures.push(_this.getItem({
              id: measure.id,
              key: measure.key,
              label: measure.label,
              role: measure.role
            }, "_fe_aggregatable_", "aggregatable"));
          });
        }
        if (dimensions.length && measures.length) {
          return dimensions.concat(measures);
        }
        return xml``;
      };
      _this.getItem = (item, prefix, type) => {
        return xml`<chart:Item
			id="${item.id}"
			name="${prefix + item.key}"
			type="${type}"
			label="${resolveBindingString(item.label, "string")}"
			role="${item.role}"
		/>`;
      };
      _this.getToolbarActions = chartContext => {
        const aActions = _this.getActions(chartContext);
        if (_this.onSegmentedButtonPressed) {
          aActions.push(_this.getSegmentedButton());
        }
        if (aActions.length > 0) {
          return xml`<mdc:actions>${aActions}</mdc:actions>`;
        }
        return xml``;
      };
      _this.getActions = chartContext => {
        var _this$chartActions;
        let actions = (_this$chartActions = _this.chartActions) === null || _this$chartActions === void 0 ? void 0 : _this$chartActions.getObject();
        actions = _this.removeMenuItems(actions);
        return actions.map(action => {
          if (action.annotationPath) {
            // Load annotation based actions
            return _this.getAction(action, chartContext, false);
          } else if (action.hasOwnProperty("noWrap")) {
            // Load XML or manifest based actions / action groups
            return _this.getCustomActions(action, chartContext);
          }
        });
      };
      _this.removeMenuItems = actions => {
        // If action is already part of menu in action group, then it will
        // be removed from the main actions list
        for (const action of actions) {
          if (action.menu) {
            action.menu.forEach(item => {
              if (actions.indexOf(item) !== -1) {
                actions.splice(actions.indexOf(item), 1);
              }
            });
          }
        }
        return actions;
      };
      _this.getCustomActions = (action, chartContext) => {
        let actionEnabled = action.enabled;
        if ((action.requiresSelection ?? false) && action.enabled === "true") {
          actionEnabled = "{= %{internal>numberOfSelectedContexts} >= 1}";
        }
        if (action.type === "Default") {
          // Load XML or manifest based toolbar actions
          return _this.getActionToolbarAction(action, {
            id: generate([_this.id, action.id]),
            unittestid: "DataFieldForActionButtonAction",
            label: action.text ? action.text : "",
            ariaHasPopup: undefined,
            press: action.press ? action.press : "",
            enabled: actionEnabled,
            visible: action.visible ? action.visible : false
          }, false);
        } else if (action.type === "Menu") {
          // Load action groups (Menu)
          return _this.getActionToolbarMenuAction({
            id: generate([_this.id, action.id]),
            text: action.text,
            visible: action.visible,
            enabled: actionEnabled,
            useDefaultActionOnly: DefaultActionHandler.getUseDefaultActionOnly(action),
            buttonMode: DefaultActionHandler.getButtonMode(action),
            defaultAction: undefined,
            actions: action
          }, chartContext);
        }
      };
      _this.getMenuItemFromMenu = (menuItemAction, chartContext) => {
        let pressHandler;
        if (menuItemAction.annotationPath) {
          //Annotation based action is passed as menu item for menu button
          return _this.getAction(menuItemAction, chartContext, true);
        }
        if (menuItemAction.command) {
          pressHandler = "cmd:" + menuItemAction.command;
        } else if (menuItemAction.noWrap ?? false) {
          pressHandler = menuItemAction.press;
        } else {
          pressHandler = CommonHelper.buildActionWrapper(menuItemAction, _assertThisInitialized(_this));
        }
        return xml`<MenuItem
		core:require="{FPM: 'sap/fe/core/helpers/FPMHelper'}"
		text="${menuItemAction.text}"
		press="${pressHandler}"
		visible="${menuItemAction.visible}"
		enabled="${menuItemAction.enabled}"
	/>`;
      };
      _this.getActionToolbarMenuAction = (props, chartContext) => {
        var _props$actions, _props$actions$menu;
        const aMenuItems = (_props$actions = props.actions) === null || _props$actions === void 0 ? void 0 : (_props$actions$menu = _props$actions.menu) === null || _props$actions$menu === void 0 ? void 0 : _props$actions$menu.map(action => {
          return _this.getMenuItemFromMenu(action, chartContext);
        });
        return xml`<mdcat:ActionToolbarAction>
			<MenuButton
			text="${props.text}"
			type="Transparent"
			menuPosition="BeginBottom"
			id="${props.id}"
			visible="${props.visible}"
			enabled="${props.enabled}"
			useDefaultActionOnly="${props.useDefaultActionOnly}"
			buttonMode="${props.buttonMode}"
			defaultAction="${props.defaultAction}"
			>
				<menu>
					<Menu>
						${aMenuItems}
					</Menu>
				</menu>
			</MenuButton>
		</mdcat:ActionToolbarAction>`;
      };
      _this.getAction = (action, chartContext, isMenuItem) => {
        const dataFieldContext = _this.contextPath.getModel().createBindingContext(action.annotationPath || "");
        if (action.type === "ForNavigation") {
          return _this.getNavigationActions(action, dataFieldContext, isMenuItem);
        } else if (action.type === "ForAction") {
          return _this.getAnnotationActions(chartContext, action, dataFieldContext, isMenuItem);
        }
        return xml``;
      };
      _this.getNavigationActions = (action, dataFieldContext, isMenuItem) => {
        let bEnabled = "true";
        const dataField = dataFieldContext.getObject();
        if (action.enabled !== undefined) {
          bEnabled = action.enabled;
        } else if (dataField.RequiresContext) {
          bEnabled = "{= %{internal>numberOfSelectedContexts} >= 1}";
        }
        return _this.getActionToolbarAction(action, {
          id: undefined,
          unittestid: "DataFieldForIntentBasedNavigationButtonAction",
          label: dataField.Label,
          ariaHasPopup: undefined,
          press: CommonHelper.getPressHandlerForDataFieldForIBN(dataField, `\${internal>selectedContexts}`, false),
          enabled: bEnabled,
          visible: _this.getVisible(dataFieldContext)
        }, isMenuItem);
      };
      _this.getAnnotationActions = (chartContext, action, dataFieldContext, isMenuItem) => {
        const dataFieldAction = _this.contextPath.getModel().createBindingContext(action.annotationPath + "/Action");
        const actionContext = _this.contextPath.getModel().createBindingContext(CommonHelper.getActionContext(dataFieldAction));
        const actionObject = actionContext.getObject();
        const isBoundPath = CommonHelper.getPathToBoundActionOverload(dataFieldAction);
        const isBound = _this.contextPath.getModel().createBindingContext(isBoundPath).getObject();
        const dataField = dataFieldContext.getObject();
        if (!isBound || isBound.$IsBound !== true || actionObject["@Org.OData.Core.V1.OperationAvailable"] !== false) {
          const bEnabled = _this.getAnnotationActionsEnabled(action, isBound, dataField, chartContext);
          const ariaHasPopup = CommonHelper.isDialog(actionObject, {
            context: actionContext
          });
          const chartOperationAvailableMap = escapeXMLAttributeValue(ChartHelper.getOperationAvailableMap(chartContext.getObject(), {
            context: chartContext
          })) || "";
          return _this.getActionToolbarAction(action, {
            id: generate([_this.id, getInvolvedDataModelObjects(dataFieldContext)]),
            unittestid: "DataFieldForActionButtonAction",
            label: dataField.Label,
            ariaHasPopup: ariaHasPopup,
            press: ChartHelper.getPressEventForDataFieldForActionButton(_this.id, dataField, chartOperationAvailableMap),
            enabled: bEnabled,
            visible: _this.getVisible(dataFieldContext)
          }, isMenuItem);
        }
        return xml``;
      };
      _this.getActionToolbarAction = (action, toolbarAction, isMenuItem) => {
        if (isMenuItem) {
          return xml`
			<MenuItem
				text="${toolbarAction.label}"
				press="${action.command ? "cmd:" + action.command : toolbarAction.press}"
				enabled="${toolbarAction.enabled}"
				visible="${toolbarAction.visible}"
			/>`;
        } else {
          return _this.buildAction(action, toolbarAction);
        }
      };
      _this.buildAction = (action, toolbarAction) => {
        let actionPress = "";
        if (action.hasOwnProperty("noWrap")) {
          if (action.command) {
            actionPress = "cmd:" + action.command;
          } else if (action.noWrap === true) {
            actionPress = toolbarAction.press;
          } else if (!action.annotationPath) {
            actionPress = CommonHelper.buildActionWrapper(action, _assertThisInitialized(_this));
          }
          return xml`<mdcat:ActionToolbarAction>
			<Button
				core:require="{FPM: 'sap/fe/core/helpers/FPMHelper'}"
				unittest:id="${toolbarAction.unittestid}"
				id="${toolbarAction.id}"
				text="${toolbarAction.label}"
				ariaHasPopup="${toolbarAction.ariaHasPopup}"
				press="${actionPress}"
				enabled="${toolbarAction.enabled}"
				visible="${toolbarAction.visible}"
			/>
		   </mdcat:ActionToolbarAction>`;
        } else {
          return xml`<mdcat:ActionToolbarAction>
			<Button
				unittest:id="${toolbarAction.unittestid}"
				id="${toolbarAction.id}"
				text="${toolbarAction.label}"
				ariaHasPopup="${toolbarAction.ariaHasPopup}"
				press="${action.command ? "cmd:" + action.command : toolbarAction.press}"
				enabled="${toolbarAction.enabled}"
				visible="${toolbarAction.visible}"
			/>
		</mdcat:ActionToolbarAction>`;
        }
      };
      _this.getAnnotationActionsEnabled = (action, isBound, dataField, chartContext) => {
        return action.enabled !== undefined ? action.enabled : ChartHelper.isDataFieldForActionButtonEnabled(isBound && isBound.$IsBound, dataField.Action, _this.contextPath, ChartHelper.getOperationAvailableMap(chartContext.getObject(), {
          context: chartContext
        }), action.enableOnSelect || "");
      };
      _this.getSegmentedButton = () => {
        return xml`<mdcat:ActionToolbarAction layoutInformation="{
			aggregationName: 'end',
			alignment: 'End'
		}">
			<SegmentedButton
				id="${generate([_this.id, "SegmentedButton", "TemplateContentView"])}"
				select="${_this.onSegmentedButtonPressed}"
				visible="{= \${pageInternal>alpContentView} !== 'Table' }"
				selectedKey="{pageInternal>alpContentView}"
			>
				<items>
					${_this.getSegmentedButtonItems()}
				</items>
			</SegmentedButton>
		</mdcat:ActionToolbarAction>`;
      };
      _this.getSegmentedButtonItems = () => {
        const sSegmentedButtonItems = [];
        if (CommonHelper.isDesktop()) {
          sSegmentedButtonItems.push(_this.getSegmentedButtonItem("{sap.fe.i18n>M_COMMON_HYBRID_SEGMENTED_BUTTON_ITEM_TOOLTIP}", "Hybrid", "sap-icon://chart-table-view"));
        }
        sSegmentedButtonItems.push(_this.getSegmentedButtonItem("{sap.fe.i18n>M_COMMON_CHART_SEGMENTED_BUTTON_ITEM_TOOLTIP}", "Chart", "sap-icon://bar-chart"));
        sSegmentedButtonItems.push(_this.getSegmentedButtonItem("{sap.fe.i18n>M_COMMON_TABLE_SEGMENTED_BUTTON_ITEM_TOOLTIP}", "Table", "sap-icon://table-view"));
        return sSegmentedButtonItems;
      };
      _this.getSegmentedButtonItem = (tooltip, key, icon) => {
        return xml`<SegmentedButtonItem
			tooltip="${tooltip}"
			key="${key}"
			icon="${icon}"
		/>`;
      };
      _this.getVisible = dataFieldContext => {
        const dataField = dataFieldContext.getObject();
        if (dataField["@com.sap.vocabularies.UI.v1.Hidden"] && dataField["@com.sap.vocabularies.UI.v1.Hidden"].$Path) {
          const hiddenPathContext = _this.contextPath.getModel().createBindingContext(dataFieldContext.getPath() + "/@com.sap.vocabularies.UI.v1.Hidden/$Path", dataField["@com.sap.vocabularies.UI.v1.Hidden"].$Path);
          return ChartHelper.getHiddenPathExpressionForTableActionsAndIBN(dataField["@com.sap.vocabularies.UI.v1.Hidden"].$Path, {
            context: hiddenPathContext
          });
        } else if (dataField["@com.sap.vocabularies.UI.v1.Hidden"]) {
          return !dataField["@com.sap.vocabularies.UI.v1.Hidden"];
        } else {
          return true;
        }
      };
      _this.getContextPath = () => {
        return _this.contextPath.getPath().lastIndexOf("/") === _this.contextPath.getPath().length - 1 ? _this.contextPath.getPath().replaceAll("/", "") : _this.contextPath.getPath().split("/")[_this.contextPath.getPath().split("/").length - 1];
      };
      const _oContextObjectPath = getInvolvedDataModelObjects(_oProps.metaPath, _oProps.contextPath);
      const initialConverterContext = _this.getConverterContext(_oContextObjectPath, /*oProps.contextPath*/undefined, _mSettings);
      const visualizationPath = ChartBuildingBlock.getVisualizationPath(_oProps, _oContextObjectPath, initialConverterContext);
      const extraParams = ChartBuildingBlock.getExtraParams(_oProps, visualizationPath);
      const _oConverterContext = _this.getConverterContext(_oContextObjectPath, /*oProps.contextPath*/undefined, _mSettings, extraParams);
      const _aggregationHelper = new AggregationHelper(_oConverterContext.getEntityType(), _oConverterContext);
      const _oChartDefinition = _oProps.chartDefinition === undefined || _oProps.chartDefinition === null ? _this.createChartDefinition(_oProps, _oConverterContext, _oContextObjectPath) : _oProps.chartDefinition;
      // API Properties
      _this.navigationPath = _oChartDefinition.navigationPath;
      _this.autoBindOnInit = _oChartDefinition.autoBindOnInit;
      _this.vizProperties = _oChartDefinition.vizProperties;
      _this.chartActions = _this.createBindingContext(_oChartDefinition.actions, _mSettings);
      _this.selectionMode = _oProps.selectionMode.toUpperCase();
      if (_oProps.filterBar) {
        _this.filter = _this.getContentId(_oProps.filterBar);
      } else if (!_oProps.filter) {
        _this.filter = _oChartDefinition.filterId;
      }
      _this.onSegmentedButtonPressed = _oChartDefinition.onSegmentedButtonPressed;
      _this.checkPersonalizationInChartProperties(_oProps);
      _this.variantManagement = _this.getVariantManagement(_oProps, _oChartDefinition);
      _this.visible = _oChartDefinition.visible;
      let _sContextPath = _oProps.contextPath.getPath();
      _sContextPath = _sContextPath[_sContextPath.length - 1] === "/" ? _sContextPath.slice(0, -1) : _sContextPath;
      _this.draftSupported = ModelHelper.isDraftSupported(_mSettings.models.metaModel, _sContextPath);
      if (_oProps._applyIdToContent ?? false) {
        _this._apiId = _oProps.id + "::Chart";
        _this._contentId = _oProps.id;
      } else {
        _this._apiId = _oProps.id;
        _this._contentId = _this.getContentId(_oProps.id);
      }
      const _chartContext = ChartHelper.getUiChart(_this.metaPath);
      const _chart = _chartContext.getObject();
      _this._chartType = ChartHelper.formatChartType(_chart.ChartType);
      const operationAvailableMap = ChartHelper.getOperationAvailableMap(_chartContext.getObject(), {
        context: _chartContext
      });
      if (Object.keys((_this$chartDefinition = _this.chartDefinition) === null || _this$chartDefinition === void 0 ? void 0 : _this$chartDefinition.commandActions).length > 0) {
        var _this$chartDefinition2;
        Object.keys((_this$chartDefinition2 = _this.chartDefinition) === null || _this$chartDefinition2 === void 0 ? void 0 : _this$chartDefinition2.commandActions).forEach(sKey => {
          var _this$chartDefinition3;
          const action = (_this$chartDefinition3 = _this.chartDefinition) === null || _this$chartDefinition3 === void 0 ? void 0 : _this$chartDefinition3.commandActions[sKey];
          const actionContext = _this.createBindingContext(action, _mSettings);
          const dataFieldContext = action.annotationPath && _this.contextPath.getModel().createBindingContext(action.annotationPath);
          const dataField = dataFieldContext && dataFieldContext.getObject();
          const chartOperationAvailableMap = escapeXMLAttributeValue(operationAvailableMap);
          _this.pushActionCommand(actionContext, dataField, chartOperationAvailableMap, action);
        });
      }
      _this.measures = _this.getChartMeasures(_oProps, _aggregationHelper);
      const presentationPath = CommonHelper.createPresentationPathContext(_this.metaPath);
      _this._sortCondtions = ChartHelper.getSortConditions(_this.metaPath, _this.metaPath.getObject(), presentationPath.getPath(), _this.chartDefinition.applySupported);
      const chartActionsContext = _this.contextPath.getModel().createBindingContext(_chartContext.getPath() + "/Actions", _chart.Actions);
      const contextPathContext = _this.contextPath.getModel().createBindingContext(_this.contextPath.getPath(), _this.contextPath);
      const contextPathPath = CommonHelper.getContextPath(_this.contextPath, {
        context: contextPathContext
      });
      const targetCollectionPath = CommonHelper.getTargetCollection(_this.contextPath);
      const targetCollectionPathContext = _this.contextPath.getModel().createBindingContext(targetCollectionPath, _this.contextPath);
      _this._customData = {
        targetCollectionPath: contextPathPath,
        entitySet: typeof targetCollectionPathContext.getObject() === "string" ? targetCollectionPathContext.getObject() : targetCollectionPathContext.getObject("@sapui.name"),
        entityType: contextPathPath + "/",
        operationAvailableMap: CommonHelper.stringifyCustomData(JSON.parse(operationAvailableMap)),
        multiSelectDisabledActions: ActionHelper.getMultiSelectDisabledActions(_chart.Actions, {
          context: chartActionsContext
        }) + "",
        segmentedButtonId: generate([_this.id, "SegmentedButton", "TemplateContentView"]),
        customAgg: CommonHelper.stringifyCustomData((_this$chartDefinition4 = _this.chartDefinition) === null || _this$chartDefinition4 === void 0 ? void 0 : _this$chartDefinition4.customAgg),
        transAgg: CommonHelper.stringifyCustomData((_this$chartDefinition5 = _this.chartDefinition) === null || _this$chartDefinition5 === void 0 ? void 0 : _this$chartDefinition5.transAgg),
        applySupported: CommonHelper.stringifyCustomData((_this$chartDefinition6 = _this.chartDefinition) === null || _this$chartDefinition6 === void 0 ? void 0 : _this$chartDefinition6.applySupported),
        vizProperties: _this.vizProperties,
        draftSupported: _this.draftSupported,
        multiViews: (_this$chartDefinition7 = _this.chartDefinition) === null || _this$chartDefinition7 === void 0 ? void 0 : _this$chartDefinition7.multiViews
      };
      _this._actions = _this.chartActions ? _this.getToolbarActions(_chartContext) : xml``;
      return _this;
    }
    _exports = ChartBuildingBlock;
    var _proto = ChartBuildingBlock.prototype;
    _proto.getContentId = function getContentId(sMacroId) {
      return `${sMacroId}-content`;
    };
    ChartBuildingBlock.getExtraParams = function getExtraParams(props, visualizationPath) {
      const extraParams = {};
      if (props.actions) {
        var _Object$values;
        (_Object$values = Object.values(props.actions)) === null || _Object$values === void 0 ? void 0 : _Object$values.forEach(item => {
          props.actions = {
            ...props.actions,
            ...item.menuContentActions
          };
          delete item.menuContentActions;
        });
      }
      if (visualizationPath) {
        extraParams[visualizationPath] = {
          actions: props.actions
        };
      }
      return extraParams;
    };
    _proto.getTemplate = function getTemplate() {
      const chartContext = ChartHelper.getUiChart(this.metaPath);
      const chart = chartContext.getObject();
      let chartdelegate = "";
      if (this.chartDelegate) {
        chartdelegate = this.chartDelegate;
      } else {
        const sContextPath = this.getContextPath();
        chartdelegate = "{name:'sap/fe/macros/chart/ChartDelegate', payload: {contextPath: '" + sContextPath + "', parameters:{$$groupId:'$auto.Workers'}, selectionMode: '" + this.selectionMode + "'}}";
      }
      const binding = "{internal>controls/" + this.id + "}";
      if (!this.header) {
        this.header = chart.Title;
      }
      return xml`
			<macro:ChartAPI xmlns="sap.m" xmlns:macro="sap.fe.macros.chart" xmlns:variant="sap.ui.fl.variants" xmlns:p13n="sap.ui.mdc.p13n" xmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1" xmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1" xmlns:internalMacro="sap.fe.macros.internal" xmlns:chart="sap.ui.mdc.chart" xmlns:mdc="sap.ui.mdc" xmlns:mdcat="sap.ui.mdc.actiontoolbar" xmlns:core="sap.ui.core" id="${this._apiId}" selectionChange="${this.selectionChange}" stateChange="${this.stateChange}">
				<macro:layoutData>
					<FlexItemData growFactor="1" shrinkFactor="1" />
				</macro:layoutData>
				<mdc:Chart
					binding="${binding}"
					unittest:id="ChartMacroFragment"
					id="${this._contentId}"
					chartType="${this._chartType}"
					sortConditions="${this._sortCondtions}"
					header="${this.header}"
					headerVisible="${this.headerVisible}"
					height="${this.height}"
					width="${this.width}"
					headerLevel="${this.headerLevel}"
					p13nMode="${this.personalization}"
					filter="${this.filter}"
					noDataText="${this.noDataText}"
					autoBindOnInit="${this.autoBindOnInit}"
					delegate="${chartdelegate}"
					macrodata:targetCollectionPath="${this._customData.targetCollectionPath}"
					macrodata:entitySet="${this._customData.entitySet}"
					macrodata:entityType="${this._customData.entityType}"
					macrodata:operationAvailableMap="${this._customData.operationAvailableMap}"
					macrodata:multiSelectDisabledActions="${this._customData.multiSelectDisabledActions}"
					macrodata:segmentedButtonId="${this._customData.segmentedButtonId}"
					macrodata:customAgg="${this._customData.customAgg}"
					macrodata:transAgg="${this._customData.transAgg}"
					macrodata:applySupported="${this._customData.applySupported}"
					macrodata:vizProperties="${this._customData.vizProperties}"
					macrodata:draftSupported="${this._customData.draftSupported}"
					macrodata:multiViews="${this._customData.multiViews}"
					visible="${this.visible}"
				>
				<mdc:dependents>
					${this.getDependents(chartContext)}
					${this.getPersistenceProvider()}
				</mdc:dependents>
				<mdc:items>
					${this.getItems(chartContext)}
				</mdc:items>
				${this._actions}
				${this.createVariantManagement()}
			</mdc:Chart>
		</macro:ChartAPI>`;
    };
    return ChartBuildingBlock;
  }(BuildingBlockBase), _class3.checkChartVisualizationPath = (aVisualizations, sVisualizationPath) => {
    aVisualizations.forEach(function (oVisualization) {
      if (oVisualization.$AnnotationPath.indexOf("@com.sap.vocabularies.UI.v1.Chart") > -1) {
        sVisualizationPath = oVisualization.$AnnotationPath;
      }
    });
    return sVisualizationPath;
  }, _class3.getVisualizationPath = (props, contextObjectPath, converterContext) => {
    var _props$metaPath;
    let metaPath = getContextRelativeTargetObjectPath(contextObjectPath);
    if (contextObjectPath.targetObject.term === "com.sap.vocabularies.UI.v1.Chart") {
      return metaPath; // MetaPath is already pointing to a Chart
    }

    if (((_props$metaPath = props.metaPath) === null || _props$metaPath === void 0 ? void 0 : _props$metaPath.getObject().$Type) === "com.sap.vocabularies.UI.v1.PresentationVariantType") {
      const aVisualizations = props.metaPath.getObject().Visualizations;
      metaPath = _class3.checkChartVisualizationPath(aVisualizations, metaPath);
    }
    if (metaPath) {
      var _contextObjectPath$ta;
      //Need to switch to the context related the PV or SPV
      const resolvedTarget = converterContext.getEntityTypeAnnotation(metaPath);
      let visualizations = [];
      switch ((_contextObjectPath$ta = contextObjectPath.targetObject) === null || _contextObjectPath$ta === void 0 ? void 0 : _contextObjectPath$ta.term) {
        case "com.sap.vocabularies.UI.v1.SelectionPresentationVariant":
          if (contextObjectPath.targetObject.PresentationVariant) {
            visualizations = getVisualizationsFromPresentationVariant(contextObjectPath.targetObject.PresentationVariant, metaPath, resolvedTarget.converterContext);
          }
          break;
        case "com.sap.vocabularies.UI.v1.PresentationVariant":
          visualizations = getVisualizationsFromPresentationVariant(contextObjectPath.targetObject, metaPath, resolvedTarget.converterContext);
          break;
        default:
          Log.error(`Bad metapath parameter for chart : ${contextObjectPath.targetObject.term}`);
      }
      const chartViz = visualizations.find(viz => {
        return viz.visualization.term === "com.sap.vocabularies.UI.v1.Chart";
      });
      if (chartViz) {
        return chartViz.annotationPath;
      } else {
        return metaPath; // Fallback
      }
    } else {
      Log.error(`Bad metapath parameter for chart : ${contextObjectPath.targetObject.term}`);
      return metaPath;
    }
  }, _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "chartDefinition", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "height", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "width", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "header", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "headerVisible", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "headerLevel", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "selectionMode", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "personalization", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "filterBar", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "noDataText", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "chartDelegate", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "vizProperties", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "chartActions", [_dec17], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "draftSupported", [_dec18], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "autoBindOnInit", [_dec19], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec20], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "navigationPath", [_dec21], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "filter", [_dec22], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "measures", [_dec23], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "_applyIdToContent", [_dec24], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "variantManagement", [_dec25], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "variantSelected", [_dec26], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "variantSaved", [_dec27], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "actions", [_dec28], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "onSegmentedButtonPressed", [_dec29], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "selectionChange", [_dec30], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "stateChange", [_dec31], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = ChartBuildingBlock;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/chart/ChartBuildingBlock", ["sap/base/Log","sap/base/util/uid","sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/converters/controls/Common/DataVisualization","sap/fe/core/converters/helpers/Aggregation","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/BindingToolkit","sap/fe/core/helpers/ModelHelper","sap/fe/core/helpers/StableIdHelper","sap/fe/core/templating/DataModelPathHelper","sap/fe/macros/CommonHelper","sap/ui/model/json/JSONModel","../internal/helpers/ActionHelper","../internal/helpers/DefaultActionHandler","../ODataMetaModelUtil","./ChartHelper"],function(e,t,n,a,i,r,o,s,l,c,u,d,g,p,m,b,h){"use strict";var f,v,P,A,y,x,M,C,$,O,D,B,I,T,z,S,_,w,j,E,V,k,F,N,H,U,L,R,W,q,G,J,K,X,Y,Q,Z,ee,te,ne,ae,ie,re,oe,se,le,ce,ue,de,ge,pe,me,be,he,fe,ve,Pe,Ae,ye,xe,Me,Ce,$e,Oe;var De={};var Be=u.getContextRelativeTargetObjectPath;var Ie=c.generate;var Te=s.resolveBindingString;var ze=o.getInvolvedDataModelObjects;var Se=r.AggregationHelper;var _e=i.getVisualizationsFromPresentationVariant;var we=i.getDataVisualizationConfiguration;var je=a.xml;var Ee=a.escapeXMLAttributeValue;var Ve=n.defineBuildingBlock;var ke=n.BuildingBlockBase;var Fe=n.blockEvent;var Ne=n.blockAttribute;var He=n.blockAggregation;function Ue(e,t,n,a){if(!n)return;Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(a):void 0})}function Le(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function Re(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;We(e,t)}function We(e,t){We=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,n){t.__proto__=n;return t};return We(e,t)}function qe(e,t,n,a,i){var r={};Object.keys(a).forEach(function(e){r[e]=a[e]});r.enumerable=!!r.enumerable;r.configurable=!!r.configurable;if("value"in r||r.initializer){r.writable=true}r=n.slice().reverse().reduce(function(n,a){return a(e,t,n)||n},r);if(i&&r.initializer!==void 0){r.value=r.initializer?r.initializer.call(i):void 0;r.initializer=undefined}if(r.initializer===void 0){Object.defineProperty(e,t,r);r=null}return r}function Ge(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}const Je={"com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis1":"axis1","com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis2":"axis2","com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis3":"axis3","com.sap.vocabularies.UI.v1.ChartMeasureRoleType/Axis4":"axis4"};var Ke;(function(e){e["Sort"]="Sort";e["Type"]="Type";e["Item"]="Item"})(Ke||(Ke={}));const Xe=function(e){var t;let n=null;const a=e;let i=[];const r=(t=a.getAttribute("key"))===null||t===void 0?void 0:t.replace("InlineXML_","");if(a.children.length&&a.localName==="ActionGroup"&&a.namespaceURI==="sap.fe.macros"){const e=Array.prototype.slice.apply(a.children);let t=0;n=e.reduce((e,n)=>{var a;const i=((a=n.getAttribute("key"))===null||a===void 0?void 0:a.replace("InlineXML_",""))||r+"_Menu_"+t;const o={key:i,text:n.getAttribute("text"),__noWrap:true,press:n.getAttribute("press"),requiresSelection:n.getAttribute("requiresSelection")==="true",enabled:n.getAttribute("enabled")===null?true:n.getAttribute("enabled")===true};e[o.key]=o;t++;return e},{});i=Object.values(n).slice(-a.children.length).map(function(e){return e.key})}return{key:r,text:a.getAttribute("text"),position:{placement:a.getAttribute("placement"),anchor:a.getAttribute("anchor")},__noWrap:true,press:a.getAttribute("press"),requiresSelection:a.getAttribute("requiresSelection")==="true",enabled:a.getAttribute("enabled")===null?true:a.getAttribute("enabled"),menu:i.length?i:null,menuContentActions:n}};let Ye=(f=Ve({name:"Chart",namespace:"sap.fe.macros.internal",publicNamespace:"sap.fe.macros"}),v=Ne({type:"string",isPublic:true}),P=Ne({type:"sap.ui.model.Context"}),A=Ne({type:"sap.ui.model.Context",isPublic:true}),y=Ne({type:"sap.ui.model.Context",isPublic:true}),x=Ne({type:"string",defaultValue:"100%"}),M=Ne({type:"string",defaultValue:"100%"}),C=Ne({type:"string",isPublic:true}),$=Ne({type:"boolean",isPublic:true}),O=Ne({type:"sap.ui.core.TitleLevel",defaultValue:"Auto",isPublic:true}),D=Ne({type:"string",defaultValue:"MULTIPLE",isPublic:true}),B=Ne({type:"string|boolean",isPublic:true}),I=Ne({type:"string",isPublic:true}),T=Ne({type:"string"}),z=Ne({type:"string"}),S=Ne({type:"string"}),_=Ne({type:"sap.ui.model.Context"}),w=Ne({type:"boolean"}),j=Ne({type:"boolean"}),E=Ne({type:"string"}),V=Ne({type:"string"}),k=Ne({type:"string"}),F=Ne({type:"string"}),N=Ne({type:"boolean",defaultValue:false}),H=Ne({type:"string",isPublic:true}),U=Fe(),L=Fe(),R=He({type:"sap.fe.macros.internal.chart.Action | sap.fe.macros.internal.chart.ActionGroup",isPublic:true,processAggregations:Xe}),W=Fe(),q=Fe(),G=Fe(),f(J=(K=(Oe=function(n){Re(a,n);function a(i,r,o){var s,c,u,f,v;var P;P=n.call(this,i,r,o)||this;Ue(P,"id",X,Le(P));Ue(P,"chartDefinition",Y,Le(P));Ue(P,"metaPath",Q,Le(P));Ue(P,"contextPath",Z,Le(P));Ue(P,"height",ee,Le(P));Ue(P,"width",te,Le(P));Ue(P,"header",ne,Le(P));Ue(P,"headerVisible",ae,Le(P));Ue(P,"headerLevel",ie,Le(P));Ue(P,"selectionMode",re,Le(P));Ue(P,"personalization",oe,Le(P));Ue(P,"filterBar",se,Le(P));Ue(P,"noDataText",le,Le(P));Ue(P,"chartDelegate",ce,Le(P));Ue(P,"vizProperties",ue,Le(P));Ue(P,"chartActions",de,Le(P));Ue(P,"draftSupported",ge,Le(P));Ue(P,"autoBindOnInit",pe,Le(P));Ue(P,"visible",me,Le(P));Ue(P,"navigationPath",be,Le(P));Ue(P,"filter",he,Le(P));Ue(P,"measures",fe,Le(P));Ue(P,"_applyIdToContent",ve,Le(P));Ue(P,"variantManagement",Pe,Le(P));Ue(P,"variantSelected",Ae,Le(P));Ue(P,"variantSaved",ye,Le(P));Ue(P,"actions",xe,Le(P));Ue(P,"onSegmentedButtonPressed",Me,Le(P));Ue(P,"selectionChange",Ce,Le(P));Ue(P,"stateChange",$e,Le(P));P._commandActions=[];P.createChartDefinition=(e,t,n)=>{var i;let r=Be(n);if(((i=e.metaPath)===null||i===void 0?void 0:i.getObject().$Type)==="com.sap.vocabularies.UI.v1.PresentationVariantType"){const t=e.metaPath.getObject().Visualizations;r=a.checkChartVisualizationPath(t,r)}const o=we(r,e.useCondensedLayout,t);e.chartDefinition=o.visualizations[0];P.chartDefinition=o.visualizations[0];return P.chartDefinition};P.createBindingContext=function(e,n){const a=`/${t()}`;n.models.converterContext.setProperty(a,e);return n.models.converterContext.createBindingContext(a)};P.getChartMeasures=(t,n)=>{const a=t.chartDefinition.annotationPath.split("/");const i=a.filter(function(e,t){return a.indexOf(e)==t}).toString().replaceAll(",","/");const r=ze(P.metaPath.getModel().createBindingContext(i),P.contextPath).targetObject;const o=h.getUiChart(P.metaPath);const s=o.getObject();const l=n.getAggregatedProperties("AggregatedProperty");let c=[];const u=t.metaPath.getPath();const d=n.getAggregatedProperties("AggregatedProperties");const p=r.Measures?r.Measures:[];const m=r.DynamicMeasures?r.DynamicMeasures:[];const b=d[0]?d[0].filter(function(e){return p.some(function(t){return e.Name===t.value})}):undefined;const f=u.replace(/@com.sap.vocabularies.UI.v1.(Chart|PresentationVariant|SelectionPresentationVariant).*/,"");const v=t.chartDefinition.transAgg;const A=t.chartDefinition.customAgg;if(l.length>0&&!m&&b.length>0){e.warning("The transformational aggregate measures are configured as Chart.Measures but should be configured as Chart.DynamicMeasures instead. Please check the SAP Help documentation and correct the configuration accordingly.")}const y=p.some(e=>{const t=P.getCustomAggMeasure(A,e);return!!t});if(l.length>0&&!m.length&&!y){throw new Error("Please configure DynamicMeasures for the chart")}if(l.length>0){for(const e of m){c=P.getDynamicMeasures(c,e,f,r)}}for(const e of p){const t=e.value;const n=P.getCustomAggMeasure(A,e);const a={};if(n){c=P.setCustomAggMeasure(c,a,n,t)}else if(l.length===0&&v[t]){c=P.setTransAggMeasure(c,a,v,t)}P.setChartMeasureAttributes(s.MeasureAttributes,f,a)}const x=new g(c);x.$$valueAsPromise=true;return x.createBindingContext("/")};P.setCustomAggMeasure=(t,n,a,i)=>{if(i.indexOf("/")>-1){e.error("$expand is not yet supported. Measure: ${sKey} from an association cannot be used")}n.key=a.value;n.role="axis1";n.propertyPath=a.value;t.push(n);return t};P.setTransAggMeasure=(e,t,n,a)=>{const i=n[a];t.key=i.name;t.role="axis1";t.propertyPath=a;t.aggregationMethod=i.aggregationMethod;t.label=i.label||t.label;e.push(t);return e};P.getDynamicMeasures=(t,n,a,i)=>{var r;const o=n.value||"";const s=ze(P.metaPath.getModel().createBindingContext(a+o),P.contextPath).targetObject;if(o.indexOf("/")>-1){e.error("$expand is not yet supported. Measure: ${sKey} from an association cannot be used")}else if(!s){throw new Error("Please provide the right AnnotationPath to the Dynamic Measure "+n.value)}else if(((r=n.value)===null||r===void 0?void 0:r.startsWith("@com.sap.vocabularies.Analytics.v1.AggregatedProperty"))===null){throw new Error("Please provide the right AnnotationPath to the Dynamic Measure "+n.value)}else{const e={key:s.Name,role:"axis1"};e.propertyPath=s.AggregatableProperty.value;e.aggregationMethod=s.AggregationMethod;e.label=Te(s.annotations._annotations["com.sap.vocabularies.Common.v1.Label"]||ze(P.metaPath.getModel().createBindingContext(a+e.propertyPath+"@com.sap.vocabularies.Common.v1.Label"),P.contextPath).targetObject);P.setChartMeasureAttributes(i.MeasureAttributes,a,e);t.push(e)}return t};P.getCustomAggMeasure=(e,t)=>{if(t.value&&e[t.value]){return t}return null};P.setChartMeasureAttributes=(e,t,n)=>{if(e!==null&&e!==void 0&&e.length){for(const a of e){P._setChartMeasureAttribute(a,t,n)}}};P._setChartMeasureAttribute=(e,t,n)=>{var a,i,r;const o=e.DynamicMeasure?e===null||e===void 0?void 0:(a=e.DynamicMeasure)===null||a===void 0?void 0:a.value:e===null||e===void 0?void 0:(i=e.Measure)===null||i===void 0?void 0:i.value;const s=e.DataPoint?e===null||e===void 0?void 0:(r=e.DataPoint)===null||r===void 0?void 0:r.value:null;const l=e.Role;const c=s&&ze(P.metaPath.getModel().createBindingContext(t+s),P.contextPath).targetObject;if(n.key===o){P.setMeasureRole(n,l);P.setMeasureDataPoint(n,c)}};P.setMeasureDataPoint=(e,t)=>{if(t&&t.Value.$Path==e.key){e.dataPoint=P.formatJSONToString(b.createDataPointProperty(t))||""}};P.setMeasureRole=(e,t)=>{if(t){const n=t.$EnumMember;e.role=Je[n]}};P.formatJSONToString=e=>{if(!e){return undefined}let t=JSON.stringify(e);t=t.replace(new RegExp("{","g"),"\\{");t=t.replace(new RegExp("}","g"),"\\}");return t};P.getDependents=e=>{if(P._commandActions.length>0){return P._commandActions.map(t=>P.getActionCommand(t,e))}return je``};P.checkPersonalizationInChartProperties=e=>{if(e.personalization){if(e.personalization==="false"){P.personalization=undefined}else if(e.personalization==="true"){P.personalization=Object.values(Ke).join(",")}else if(P.verifyValidPersonlization(e.personalization)===true){P.personalization=e.personalization}else{P.personalization=undefined}}};P.verifyValidPersonlization=e=>{let t=true;const n=e.split(",");const a=Object.values(Ke);n.forEach(e=>{if(!a.includes(e)){t=false}});return t};P.getVariantManagement=(e,t)=>{let n=e.variantManagement?e.variantManagement:t.variantManagement;n=P.personalization===undefined?"None":n;return n};P.createVariantManagement=()=>{const t=P.personalization;if(t){const e=P.variantManagement;if(e==="Control"){return je`
					<mdc:variant>
					<variant:VariantManagement
						id="${Ie([P.id,"VM"])}"
						for="${P.id}"
						showSetAsDefault="${true}"
						select="${P.variantSelected}"
						headerLevel="${P.headerLevel}"
						save="${P.variantSaved}"
					/>
					</mdc:variant>
			`}else if(e==="None"||e==="Page"){return je``}}else if(!t){e.warning("Variant Management cannot be enabled when personalization is disabled")}return je``};P.getPersistenceProvider=()=>{if(P.variantManagement==="None"){return je`<p13n:PersistenceProvider id="${Ie([P.id,"PersistenceProvider"])}" for="${P.id}"/>`}return je``};P.pushActionCommand=(e,t,n,a)=>{if(t){const i={actionContext:e,onExecuteAction:h.getPressEventForDataFieldForActionButton(P.id,t,n||""),onExecuteIBN:d.getPressHandlerForDataFieldForIBN(t,`\${internal>selectedContexts}`,false),onExecuteManifest:d.buildActionWrapper(a,Le(P))};P._commandActions.push(i)}};P.getActionCommand=(e,t)=>{const n=e.actionContext;const a=n.getObject();const i=a.annotationPath&&P.contextPath.getModel().createBindingContext(a.annotationPath);const r=i&&i.getObject();const o=P.contextPath.getModel().createBindingContext(a.annotationPath+"/Action");const s=d.getActionContext(o);const l=d.getPathToBoundActionOverload(o);const c=P.contextPath.getModel().createBindingContext(l).getObject();const u=Ee(h.getOperationAvailableMap(t.getObject(),{context:t}));const g=a.enabled?a.enabled:h.isDataFieldForActionButtonEnabled(c&&c.$IsBound,r.Action,P.contextPath,u||"",a.enableOnSelect||"");let p;if(a.enabled){p=a.enabled}else if(r.RequiresContext){p="{= %{internal>numberOfSelectedContexts} >= 1}"}const m=je`<internalMacro:ActionCommand
		action="${a}"
		onExecuteAction="${e.onExecuteAction}"
		onExecuteIBN="${e.onExecuteIBN}"
		onExecuteManifest="${e.onExecuteManifest}"
		isIBNEnabled="${p}"
		isActionEnabled="${g}"
		visible="${P.getVisible(i)}"
	/>`;if(a.type=="ForAction"&&(!c||c.IsBound!==true||s["@Org.OData.Core.V1.OperationAvailable"]!==false)){return m}else if(a.type=="ForAction"){return je``}else{return m}};P.getItems=e=>{const t=e.getObject();const n=[];const a=[];if(t.Dimensions){h.formatDimensions(e).getObject().forEach(e=>{e.id=Ie([P.id,"dimension",e.key]);n.push(P.getItem({id:e.id,key:e.key,label:e.label,role:e.role},"_fe_groupable_","groupable"))})}if(P.measures){h.formatMeasures(P.measures).forEach(e=>{e.id=Ie([P.id,"measure",e.key]);a.push(P.getItem({id:e.id,key:e.key,label:e.label,role:e.role},"_fe_aggregatable_","aggregatable"))})}if(n.length&&a.length){return n.concat(a)}return je``};P.getItem=(e,t,n)=>je`<chart:Item
			id="${e.id}"
			name="${t+e.key}"
			type="${n}"
			label="${Te(e.label,"string")}"
			role="${e.role}"
		/>`;P.getToolbarActions=e=>{const t=P.getActions(e);if(P.onSegmentedButtonPressed){t.push(P.getSegmentedButton())}if(t.length>0){return je`<mdc:actions>${t}</mdc:actions>`}return je``};P.getActions=e=>{var t;let n=(t=P.chartActions)===null||t===void 0?void 0:t.getObject();n=P.removeMenuItems(n);return n.map(t=>{if(t.annotationPath){return P.getAction(t,e,false)}else if(t.hasOwnProperty("noWrap")){return P.getCustomActions(t,e)}})};P.removeMenuItems=e=>{for(const t of e){if(t.menu){t.menu.forEach(t=>{if(e.indexOf(t)!==-1){e.splice(e.indexOf(t),1)}})}}return e};P.getCustomActions=(e,t)=>{let n=e.enabled;if((e.requiresSelection??false)&&e.enabled==="true"){n="{= %{internal>numberOfSelectedContexts} >= 1}"}if(e.type==="Default"){return P.getActionToolbarAction(e,{id:Ie([P.id,e.id]),unittestid:"DataFieldForActionButtonAction",label:e.text?e.text:"",ariaHasPopup:undefined,press:e.press?e.press:"",enabled:n,visible:e.visible?e.visible:false},false)}else if(e.type==="Menu"){return P.getActionToolbarMenuAction({id:Ie([P.id,e.id]),text:e.text,visible:e.visible,enabled:n,useDefaultActionOnly:m.getUseDefaultActionOnly(e),buttonMode:m.getButtonMode(e),defaultAction:undefined,actions:e},t)}};P.getMenuItemFromMenu=(e,t)=>{let n;if(e.annotationPath){return P.getAction(e,t,true)}if(e.command){n="cmd:"+e.command}else if(e.noWrap??false){n=e.press}else{n=d.buildActionWrapper(e,Le(P))}return je`<MenuItem
		core:require="{FPM: 'sap/fe/core/helpers/FPMHelper'}"
		text="${e.text}"
		press="${n}"
		visible="${e.visible}"
		enabled="${e.enabled}"
	/>`};P.getActionToolbarMenuAction=(e,t)=>{var n,a;const i=(n=e.actions)===null||n===void 0?void 0:(a=n.menu)===null||a===void 0?void 0:a.map(e=>P.getMenuItemFromMenu(e,t));return je`<mdcat:ActionToolbarAction>
			<MenuButton
			text="${e.text}"
			type="Transparent"
			menuPosition="BeginBottom"
			id="${e.id}"
			visible="${e.visible}"
			enabled="${e.enabled}"
			useDefaultActionOnly="${e.useDefaultActionOnly}"
			buttonMode="${e.buttonMode}"
			defaultAction="${e.defaultAction}"
			>
				<menu>
					<Menu>
						${i}
					</Menu>
				</menu>
			</MenuButton>
		</mdcat:ActionToolbarAction>`};P.getAction=(e,t,n)=>{const a=P.contextPath.getModel().createBindingContext(e.annotationPath||"");if(e.type==="ForNavigation"){return P.getNavigationActions(e,a,n)}else if(e.type==="ForAction"){return P.getAnnotationActions(t,e,a,n)}return je``};P.getNavigationActions=(e,t,n)=>{let a="true";const i=t.getObject();if(e.enabled!==undefined){a=e.enabled}else if(i.RequiresContext){a="{= %{internal>numberOfSelectedContexts} >= 1}"}return P.getActionToolbarAction(e,{id:undefined,unittestid:"DataFieldForIntentBasedNavigationButtonAction",label:i.Label,ariaHasPopup:undefined,press:d.getPressHandlerForDataFieldForIBN(i,`\${internal>selectedContexts}`,false),enabled:a,visible:P.getVisible(t)},n)};P.getAnnotationActions=(e,t,n,a)=>{const i=P.contextPath.getModel().createBindingContext(t.annotationPath+"/Action");const r=P.contextPath.getModel().createBindingContext(d.getActionContext(i));const o=r.getObject();const s=d.getPathToBoundActionOverload(i);const l=P.contextPath.getModel().createBindingContext(s).getObject();const c=n.getObject();if(!l||l.$IsBound!==true||o["@Org.OData.Core.V1.OperationAvailable"]!==false){const i=P.getAnnotationActionsEnabled(t,l,c,e);const s=d.isDialog(o,{context:r});const u=Ee(h.getOperationAvailableMap(e.getObject(),{context:e}))||"";return P.getActionToolbarAction(t,{id:Ie([P.id,ze(n)]),unittestid:"DataFieldForActionButtonAction",label:c.Label,ariaHasPopup:s,press:h.getPressEventForDataFieldForActionButton(P.id,c,u),enabled:i,visible:P.getVisible(n)},a)}return je``};P.getActionToolbarAction=(e,t,n)=>{if(n){return je`
			<MenuItem
				text="${t.label}"
				press="${e.command?"cmd:"+e.command:t.press}"
				enabled="${t.enabled}"
				visible="${t.visible}"
			/>`}else{return P.buildAction(e,t)}};P.buildAction=(e,t)=>{let n="";if(e.hasOwnProperty("noWrap")){if(e.command){n="cmd:"+e.command}else if(e.noWrap===true){n=t.press}else if(!e.annotationPath){n=d.buildActionWrapper(e,Le(P))}return je`<mdcat:ActionToolbarAction>
			<Button
				core:require="{FPM: 'sap/fe/core/helpers/FPMHelper'}"
				unittest:id="${t.unittestid}"
				id="${t.id}"
				text="${t.label}"
				ariaHasPopup="${t.ariaHasPopup}"
				press="${n}"
				enabled="${t.enabled}"
				visible="${t.visible}"
			/>
		   </mdcat:ActionToolbarAction>`}else{return je`<mdcat:ActionToolbarAction>
			<Button
				unittest:id="${t.unittestid}"
				id="${t.id}"
				text="${t.label}"
				ariaHasPopup="${t.ariaHasPopup}"
				press="${e.command?"cmd:"+e.command:t.press}"
				enabled="${t.enabled}"
				visible="${t.visible}"
			/>
		</mdcat:ActionToolbarAction>`}};P.getAnnotationActionsEnabled=(e,t,n,a)=>e.enabled!==undefined?e.enabled:h.isDataFieldForActionButtonEnabled(t&&t.$IsBound,n.Action,P.contextPath,h.getOperationAvailableMap(a.getObject(),{context:a}),e.enableOnSelect||"");P.getSegmentedButton=()=>je`<mdcat:ActionToolbarAction layoutInformation="{
			aggregationName: 'end',
			alignment: 'End'
		}">
			<SegmentedButton
				id="${Ie([P.id,"SegmentedButton","TemplateContentView"])}"
				select="${P.onSegmentedButtonPressed}"
				visible="{= \${pageInternal>alpContentView} !== 'Table' }"
				selectedKey="{pageInternal>alpContentView}"
			>
				<items>
					${P.getSegmentedButtonItems()}
				</items>
			</SegmentedButton>
		</mdcat:ActionToolbarAction>`;P.getSegmentedButtonItems=()=>{const e=[];if(d.isDesktop()){e.push(P.getSegmentedButtonItem("{sap.fe.i18n>M_COMMON_HYBRID_SEGMENTED_BUTTON_ITEM_TOOLTIP}","Hybrid","sap-icon://chart-table-view"))}e.push(P.getSegmentedButtonItem("{sap.fe.i18n>M_COMMON_CHART_SEGMENTED_BUTTON_ITEM_TOOLTIP}","Chart","sap-icon://bar-chart"));e.push(P.getSegmentedButtonItem("{sap.fe.i18n>M_COMMON_TABLE_SEGMENTED_BUTTON_ITEM_TOOLTIP}","Table","sap-icon://table-view"));return e};P.getSegmentedButtonItem=(e,t,n)=>je`<SegmentedButtonItem
			tooltip="${e}"
			key="${t}"
			icon="${n}"
		/>`;P.getVisible=e=>{const t=e.getObject();if(t["@com.sap.vocabularies.UI.v1.Hidden"]&&t["@com.sap.vocabularies.UI.v1.Hidden"].$Path){const n=P.contextPath.getModel().createBindingContext(e.getPath()+"/@com.sap.vocabularies.UI.v1.Hidden/$Path",t["@com.sap.vocabularies.UI.v1.Hidden"].$Path);return h.getHiddenPathExpressionForTableActionsAndIBN(t["@com.sap.vocabularies.UI.v1.Hidden"].$Path,{context:n})}else if(t["@com.sap.vocabularies.UI.v1.Hidden"]){return!t["@com.sap.vocabularies.UI.v1.Hidden"]}else{return true}};P.getContextPath=()=>P.contextPath.getPath().lastIndexOf("/")===P.contextPath.getPath().length-1?P.contextPath.getPath().replaceAll("/",""):P.contextPath.getPath().split("/")[P.contextPath.getPath().split("/").length-1];const A=ze(i.metaPath,i.contextPath);const y=P.getConverterContext(A,undefined,o);const x=a.getVisualizationPath(i,A,y);const M=a.getExtraParams(i,x);const C=P.getConverterContext(A,undefined,o,M);const $=new Se(C.getEntityType(),C);const O=i.chartDefinition===undefined||i.chartDefinition===null?P.createChartDefinition(i,C,A):i.chartDefinition;P.navigationPath=O.navigationPath;P.autoBindOnInit=O.autoBindOnInit;P.vizProperties=O.vizProperties;P.chartActions=P.createBindingContext(O.actions,o);P.selectionMode=i.selectionMode.toUpperCase();if(i.filterBar){P.filter=P.getContentId(i.filterBar)}else if(!i.filter){P.filter=O.filterId}P.onSegmentedButtonPressed=O.onSegmentedButtonPressed;P.checkPersonalizationInChartProperties(i);P.variantManagement=P.getVariantManagement(i,O);P.visible=O.visible;let D=i.contextPath.getPath();D=D[D.length-1]==="/"?D.slice(0,-1):D;P.draftSupported=l.isDraftSupported(o.models.metaModel,D);if(i._applyIdToContent??false){P._apiId=i.id+"::Chart";P._contentId=i.id}else{P._apiId=i.id;P._contentId=P.getContentId(i.id)}const B=h.getUiChart(P.metaPath);const I=B.getObject();P._chartType=h.formatChartType(I.ChartType);const T=h.getOperationAvailableMap(B.getObject(),{context:B});if(Object.keys((s=P.chartDefinition)===null||s===void 0?void 0:s.commandActions).length>0){var z;Object.keys((z=P.chartDefinition)===null||z===void 0?void 0:z.commandActions).forEach(e=>{var t;const n=(t=P.chartDefinition)===null||t===void 0?void 0:t.commandActions[e];const a=P.createBindingContext(n,o);const i=n.annotationPath&&P.contextPath.getModel().createBindingContext(n.annotationPath);const r=i&&i.getObject();const s=Ee(T);P.pushActionCommand(a,r,s,n)})}P.measures=P.getChartMeasures(i,$);const S=d.createPresentationPathContext(P.metaPath);P._sortCondtions=h.getSortConditions(P.metaPath,P.metaPath.getObject(),S.getPath(),P.chartDefinition.applySupported);const _=P.contextPath.getModel().createBindingContext(B.getPath()+"/Actions",I.Actions);const w=P.contextPath.getModel().createBindingContext(P.contextPath.getPath(),P.contextPath);const j=d.getContextPath(P.contextPath,{context:w});const E=d.getTargetCollection(P.contextPath);const V=P.contextPath.getModel().createBindingContext(E,P.contextPath);P._customData={targetCollectionPath:j,entitySet:typeof V.getObject()==="string"?V.getObject():V.getObject("@sapui.name"),entityType:j+"/",operationAvailableMap:d.stringifyCustomData(JSON.parse(T)),multiSelectDisabledActions:p.getMultiSelectDisabledActions(I.Actions,{context:_})+"",segmentedButtonId:Ie([P.id,"SegmentedButton","TemplateContentView"]),customAgg:d.stringifyCustomData((c=P.chartDefinition)===null||c===void 0?void 0:c.customAgg),transAgg:d.stringifyCustomData((u=P.chartDefinition)===null||u===void 0?void 0:u.transAgg),applySupported:d.stringifyCustomData((f=P.chartDefinition)===null||f===void 0?void 0:f.applySupported),vizProperties:P.vizProperties,draftSupported:P.draftSupported,multiViews:(v=P.chartDefinition)===null||v===void 0?void 0:v.multiViews};P._actions=P.chartActions?P.getToolbarActions(B):je``;return P}De=a;var i=a.prototype;i.getContentId=function e(t){return`${t}-content`};a.getExtraParams=function e(t,n){const a={};if(t.actions){var i;(i=Object.values(t.actions))===null||i===void 0?void 0:i.forEach(e=>{t.actions={...t.actions,...e.menuContentActions};delete e.menuContentActions})}if(n){a[n]={actions:t.actions}}return a};i.getTemplate=function e(){const t=h.getUiChart(this.metaPath);const n=t.getObject();let a="";if(this.chartDelegate){a=this.chartDelegate}else{const e=this.getContextPath();a="{name:'sap/fe/macros/chart/ChartDelegate', payload: {contextPath: '"+e+"', parameters:{$$groupId:'$auto.Workers'}, selectionMode: '"+this.selectionMode+"'}}"}const i="{internal>controls/"+this.id+"}";if(!this.header){this.header=n.Title}return je`
			<macro:ChartAPI xmlns="sap.m" xmlns:macro="sap.fe.macros.chart" xmlns:variant="sap.ui.fl.variants" xmlns:p13n="sap.ui.mdc.p13n" xmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1" xmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1" xmlns:internalMacro="sap.fe.macros.internal" xmlns:chart="sap.ui.mdc.chart" xmlns:mdc="sap.ui.mdc" xmlns:mdcat="sap.ui.mdc.actiontoolbar" xmlns:core="sap.ui.core" id="${this._apiId}" selectionChange="${this.selectionChange}" stateChange="${this.stateChange}">
				<macro:layoutData>
					<FlexItemData growFactor="1" shrinkFactor="1" />
				</macro:layoutData>
				<mdc:Chart
					binding="${i}"
					unittest:id="ChartMacroFragment"
					id="${this._contentId}"
					chartType="${this._chartType}"
					sortConditions="${this._sortCondtions}"
					header="${this.header}"
					headerVisible="${this.headerVisible}"
					height="${this.height}"
					width="${this.width}"
					headerLevel="${this.headerLevel}"
					p13nMode="${this.personalization}"
					filter="${this.filter}"
					noDataText="${this.noDataText}"
					autoBindOnInit="${this.autoBindOnInit}"
					delegate="${a}"
					macrodata:targetCollectionPath="${this._customData.targetCollectionPath}"
					macrodata:entitySet="${this._customData.entitySet}"
					macrodata:entityType="${this._customData.entityType}"
					macrodata:operationAvailableMap="${this._customData.operationAvailableMap}"
					macrodata:multiSelectDisabledActions="${this._customData.multiSelectDisabledActions}"
					macrodata:segmentedButtonId="${this._customData.segmentedButtonId}"
					macrodata:customAgg="${this._customData.customAgg}"
					macrodata:transAgg="${this._customData.transAgg}"
					macrodata:applySupported="${this._customData.applySupported}"
					macrodata:vizProperties="${this._customData.vizProperties}"
					macrodata:draftSupported="${this._customData.draftSupported}"
					macrodata:multiViews="${this._customData.multiViews}"
					visible="${this.visible}"
				>
				<mdc:dependents>
					${this.getDependents(t)}
					${this.getPersistenceProvider()}
				</mdc:dependents>
				<mdc:items>
					${this.getItems(t)}
				</mdc:items>
				${this._actions}
				${this.createVariantManagement()}
			</mdc:Chart>
		</macro:ChartAPI>`};return a}(ke),Oe.checkChartVisualizationPath=(e,t)=>{e.forEach(function(e){if(e.$AnnotationPath.indexOf("@com.sap.vocabularies.UI.v1.Chart")>-1){t=e.$AnnotationPath}});return t},Oe.getVisualizationPath=(t,n,a)=>{var i;let r=Be(n);if(n.targetObject.term==="com.sap.vocabularies.UI.v1.Chart"){return r}if(((i=t.metaPath)===null||i===void 0?void 0:i.getObject().$Type)==="com.sap.vocabularies.UI.v1.PresentationVariantType"){const e=t.metaPath.getObject().Visualizations;r=Oe.checkChartVisualizationPath(e,r)}if(r){var o;const t=a.getEntityTypeAnnotation(r);let i=[];switch((o=n.targetObject)===null||o===void 0?void 0:o.term){case"com.sap.vocabularies.UI.v1.SelectionPresentationVariant":if(n.targetObject.PresentationVariant){i=_e(n.targetObject.PresentationVariant,r,t.converterContext)}break;case"com.sap.vocabularies.UI.v1.PresentationVariant":i=_e(n.targetObject,r,t.converterContext);break;default:e.error(`Bad metapath parameter for chart : ${n.targetObject.term}`)}const s=i.find(e=>e.visualization.term==="com.sap.vocabularies.UI.v1.Chart");if(s){return s.annotationPath}else{return r}}else{e.error(`Bad metapath parameter for chart : ${n.targetObject.term}`);return r}},Oe),X=qe(K.prototype,"id",[v],{configurable:true,enumerable:true,writable:true,initializer:null}),Y=qe(K.prototype,"chartDefinition",[P],{configurable:true,enumerable:true,writable:true,initializer:null}),Q=qe(K.prototype,"metaPath",[A],{configurable:true,enumerable:true,writable:true,initializer:null}),Z=qe(K.prototype,"contextPath",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),ee=qe(K.prototype,"height",[x],{configurable:true,enumerable:true,writable:true,initializer:null}),te=qe(K.prototype,"width",[M],{configurable:true,enumerable:true,writable:true,initializer:null}),ne=qe(K.prototype,"header",[C],{configurable:true,enumerable:true,writable:true,initializer:null}),ae=qe(K.prototype,"headerVisible",[$],{configurable:true,enumerable:true,writable:true,initializer:null}),ie=qe(K.prototype,"headerLevel",[O],{configurable:true,enumerable:true,writable:true,initializer:null}),re=qe(K.prototype,"selectionMode",[D],{configurable:true,enumerable:true,writable:true,initializer:null}),oe=qe(K.prototype,"personalization",[B],{configurable:true,enumerable:true,writable:true,initializer:null}),se=qe(K.prototype,"filterBar",[I],{configurable:true,enumerable:true,writable:true,initializer:null}),le=qe(K.prototype,"noDataText",[T],{configurable:true,enumerable:true,writable:true,initializer:null}),ce=qe(K.prototype,"chartDelegate",[z],{configurable:true,enumerable:true,writable:true,initializer:null}),ue=qe(K.prototype,"vizProperties",[S],{configurable:true,enumerable:true,writable:true,initializer:null}),de=qe(K.prototype,"chartActions",[_],{configurable:true,enumerable:true,writable:true,initializer:null}),ge=qe(K.prototype,"draftSupported",[w],{configurable:true,enumerable:true,writable:true,initializer:null}),pe=qe(K.prototype,"autoBindOnInit",[j],{configurable:true,enumerable:true,writable:true,initializer:null}),me=qe(K.prototype,"visible",[E],{configurable:true,enumerable:true,writable:true,initializer:null}),be=qe(K.prototype,"navigationPath",[V],{configurable:true,enumerable:true,writable:true,initializer:null}),he=qe(K.prototype,"filter",[k],{configurable:true,enumerable:true,writable:true,initializer:null}),fe=qe(K.prototype,"measures",[F],{configurable:true,enumerable:true,writable:true,initializer:null}),ve=qe(K.prototype,"_applyIdToContent",[N],{configurable:true,enumerable:true,writable:true,initializer:null}),Pe=qe(K.prototype,"variantManagement",[H],{configurable:true,enumerable:true,writable:true,initializer:null}),Ae=qe(K.prototype,"variantSelected",[U],{configurable:true,enumerable:true,writable:true,initializer:null}),ye=qe(K.prototype,"variantSaved",[L],{configurable:true,enumerable:true,writable:true,initializer:null}),xe=qe(K.prototype,"actions",[R],{configurable:true,enumerable:true,writable:true,initializer:null}),Me=qe(K.prototype,"onSegmentedButtonPressed",[W],{configurable:true,enumerable:true,writable:true,initializer:null}),Ce=qe(K.prototype,"selectionChange",[q],{configurable:true,enumerable:true,writable:true,initializer:null}),$e=qe(K.prototype,"stateChange",[G],{configurable:true,enumerable:true,writable:true,initializer:null}),K))||J);De=Ye;return De},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/chart/ChartDelegate-dbg", ["sap/base/Log", "sap/base/util/merge", "sap/fe/core/CommonUtils", "sap/fe/macros/chart/ChartUtils", "sap/fe/macros/CommonHelper", "sap/fe/macros/filter/FilterUtils", "sap/fe/macros/ODataMetaModelUtil", "sap/ui/mdc/library", "sap/ui/mdc/odata/v4/util/DelegateUtil", "sap/ui/mdc/odata/v4/vizChart/ChartDelegate", "sap/ui/model/Filter", "sap/ui/model/FilterOperator"], function (Log, merge, CommonUtils, ChartUtils, CommonHelper, FilterUtils, ODataMetaModelUtil, MDCLib, DelegateUtil, BaseChartDelegate, Filter, FilterOperator) {
  "use strict";

  const ChartItemRoleType = MDCLib.ChartItemRoleType;
  // /**
  //  * Helper class for sap.ui.mdc.Chart.
  //  * <h3><b>Note:</b></h3>
  //  * The class is experimental and the API/behaviour is not finalised
  //  * and hence this should not be used for productive usage.
  //  * Especially this class is not intended to be used for the FE scenario,
  //  * here we shall use sap.fe.macros.ChartDelegate that is especially tailored for V4
  //  * meta model
  //  *
  //  * @author SAP SE
  //  * @private
  //  * @experimental
  //  * @since 1.62
  //  * @alias sap.fe.macros.ChartDelegate
  //  */
  const ChartDelegate = Object.assign({}, BaseChartDelegate);
  ChartDelegate._setChartNoDataText = function (oChart, oBindingInfo) {
    let sNoDataKey = "";
    const oChartFilterInfo = ChartUtils.getAllFilterInfo(oChart),
      suffixResourceKey = oBindingInfo.path.startsWith("/") ? oBindingInfo.path.substr(1) : oBindingInfo.path;
    const _getNoDataTextWithFilters = function () {
      if (oChart.data("multiViews")) {
        return "M_TABLE_AND_CHART_NO_DATA_TEXT_MULTI_VIEW";
      } else {
        return "T_TABLE_AND_CHART_NO_DATA_TEXT_WITH_FILTER";
      }
    };
    if (oChart.getFilter()) {
      if (oChartFilterInfo.search || oChartFilterInfo.filters && oChartFilterInfo.filters.length) {
        sNoDataKey = _getNoDataTextWithFilters();
      } else {
        sNoDataKey = "T_TABLE_AND_CHART_NO_DATA_TEXT";
      }
    } else if (oChartFilterInfo.search || oChartFilterInfo.filters && oChartFilterInfo.filters.length) {
      sNoDataKey = _getNoDataTextWithFilters();
    } else {
      sNoDataKey = "M_TABLE_AND_CHART_NO_FILTERS_NO_DATA_TEXT";
    }
    return oChart.getModel("sap.fe.i18n").getResourceBundle().then(function (oResourceBundle) {
      oChart.setNoDataText(CommonUtils.getTranslatedText(sNoDataKey, oResourceBundle, undefined, suffixResourceKey));
    }).catch(function (error) {
      Log.error(error);
    });
  };
  ChartDelegate._handleProperty = function (oMDCChart, mEntitySetAnnotations, mKnownAggregatableProps, mCustomAggregates, aProperties, sCriticality) {
    const oApplySupported = CommonHelper.parseCustomData(oMDCChart.data("applySupported"));
    const sortRestrictionsInfo = ODataMetaModelUtil.getSortRestrictionsInfo(mEntitySetAnnotations);
    const oFilterRestrictions = mEntitySetAnnotations["@Org.OData.Capabilities.V1.FilterRestrictions"];
    const oFilterRestrictionsInfo = ODataMetaModelUtil.getFilterRestrictionsInfo(oFilterRestrictions);
    const oObj = this.getModel().getObject(this.getPath());
    const sKey = this.getModel().getObject(`${this.getPath()}@sapui.name`);
    const oMetaModel = this.getModel();
    if (oObj && oObj.$kind === "Property") {
      // ignore (as for now) all complex properties
      // not clear if they might be nesting (complex in complex)
      // not clear how they are represented in non-filterable annotation
      // etc.
      if (oObj.$isCollection) {
        //Log.warning("Complex property with type " + oObj.$Type + " has been ignored");
        return;
      }
      const oPropertyAnnotations = oMetaModel.getObject(`${this.getPath()}@`);
      const sPath = oMetaModel.getObject("@sapui.name", oMetaModel.getMetaContext(this.getPath()));
      const aGroupableProperties = oApplySupported && oApplySupported.GroupableProperties;
      const aAggregatableProperties = oApplySupported && oApplySupported.AggregatableProperties;
      let bGroupable = false,
        bAggregatable = false;
      if (aGroupableProperties && aGroupableProperties.length) {
        for (let i = 0; i < aGroupableProperties.length; i++) {
          if (aGroupableProperties[i].$PropertyPath === sPath) {
            bGroupable = true;
            break;
          }
        }
      }
      if (aAggregatableProperties && aAggregatableProperties.length) {
        for (let j = 0; j < aAggregatableProperties.length; j++) {
          if (aAggregatableProperties[j].Property.$PropertyPath === sPath) {
            bAggregatable = true;
            break;
          }
        }
      }
      if (!aGroupableProperties || aGroupableProperties && !aGroupableProperties.length) {
        bGroupable = oPropertyAnnotations["@Org.OData.Aggregation.V1.Groupable"];
      }
      if (!aAggregatableProperties || aAggregatableProperties && !aAggregatableProperties.length) {
        bAggregatable = oPropertyAnnotations["@Org.OData.Aggregation.V1.Aggregatable"];
      }

      //Right now: skip them, since we can't create a chart from it
      if (!bGroupable && !bAggregatable) {
        return;
      }
      if (bAggregatable) {
        const aAggregateProperties = ChartDelegate._createPropertyInfosForAggregatable(oMDCChart, sKey, oPropertyAnnotations, oFilterRestrictionsInfo, sortRestrictionsInfo, mKnownAggregatableProps, mCustomAggregates);
        aAggregateProperties.forEach(function (oAggregateProperty) {
          aProperties.push(oAggregateProperty);
        });
      }
      if (bGroupable) {
        const sName = sKey || "",
          sTextProperty = oPropertyAnnotations["@com.sap.vocabularies.Common.v1.Text"] ? oPropertyAnnotations["@com.sap.vocabularies.Common.v1.Text"].$Path : null;
        let bIsNavigationText = false;
        if (sName && sName.indexOf("/") > -1) {
          Log.error(`$expand is not yet supported. Property: ${sName} from an association cannot be used`);
          return;
        }
        if (sTextProperty && sTextProperty.indexOf("/") > -1) {
          Log.error(`$expand is not yet supported. Text Property: ${sTextProperty} from an association cannot be used`);
          bIsNavigationText = true;
        }
        aProperties.push({
          name: "_fe_groupable_" + sKey,
          propertyPath: sKey,
          label: oPropertyAnnotations["@com.sap.vocabularies.Common.v1.Label"] || sKey,
          sortable: ChartDelegate._getSortable(oMDCChart, sortRestrictionsInfo.propertyInfo[sKey], false),
          filterable: oFilterRestrictionsInfo[sKey] ? oFilterRestrictionsInfo[sKey].filterable : true,
          groupable: true,
          aggregatable: false,
          maxConditions: ODataMetaModelUtil.isMultiValueFilterExpression(oFilterRestrictionsInfo.propertyInfo[sKey]) ? -1 : 1,
          sortKey: sKey,
          role: ChartItemRoleType.category,
          //standard, normally this should be interpreted from UI.Chart annotation
          criticality: sCriticality,
          //To be implemented by FE
          textProperty: !bIsNavigationText && oPropertyAnnotations["@com.sap.vocabularies.Common.v1.Text"] ? oPropertyAnnotations["@com.sap.vocabularies.Common.v1.Text"].$Path : null,
          //To be implemented by FE
          textFormatter: oPropertyAnnotations["@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement"]
        });
      }
    }
  };
  ChartDelegate.formatText = function (oValue1, oValue2) {
    const oTextArrangementAnnotation = this.textFormatter;
    if (oTextArrangementAnnotation.$EnumMember === "com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst") {
      return `${oValue2} (${oValue1})`;
    } else if (oTextArrangementAnnotation.$EnumMember === "com.sap.vocabularies.UI.v1.TextArrangementType/TextLast") {
      return `${oValue1} (${oValue2})`;
    } else if (oTextArrangementAnnotation.$EnumMember === "com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly") {
      return oValue2;
    }
    return oValue2 ? oValue2 : oValue1;
  };
  ChartDelegate.updateBindingInfo = function (oChart, oBindingInfo) {
    ChartDelegate._setChartNoDataText(oChart, oBindingInfo);
    const oFilter = sap.ui.getCore().byId(oChart.getFilter());
    if (oFilter) {
      const mConditions = oFilter.getConditions();
      if (mConditions) {
        if (!oBindingInfo) {
          oBindingInfo = {};
        }
        oBindingInfo.sorter = this.getSorters(oChart);
        const oInnerChart = oChart.getControlDelegate().getInnerChart(oChart);
        let oFilterInfo;
        if (oInnerChart) {
          // if the action is a drill down, chart selections must be considered
          if (ChartUtils.getChartSelectionsExist(oChart)) {
            oFilterInfo = ChartUtils.getAllFilterInfo(oChart);
          }
        }
        oFilterInfo = oFilterInfo ? oFilterInfo : ChartUtils.getFilterBarFilterInfo(oChart);
        if (oFilterInfo) {
          oBindingInfo.filters = oFilterInfo.filters;
        }
        const sParameterPath = DelegateUtil.getParametersInfo(oFilter, mConditions);
        if (sParameterPath) {
          oBindingInfo.path = sParameterPath;
        }
      }

      // Search
      const oInfo = FilterUtils.getFilterInfo(oFilter, {});
      const oApplySupported = CommonHelper.parseCustomData(oChart.data("applySupported"));
      if (oApplySupported && oApplySupported.enableSearch && oInfo.search) {
        oBindingInfo.parameters.$search = CommonUtils.normalizeSearchTerm(oInfo.search);
      } else if (oBindingInfo.parameters.$search) {
        delete oBindingInfo.parameters.$search;
      }
    } else {
      if (!oBindingInfo) {
        oBindingInfo = {};
      }
      oBindingInfo.sorter = this.getSorters(oChart);
    }
    ChartDelegate._checkAndAddDraftFilter(oChart, oBindingInfo);
  };
  ChartDelegate.fetchProperties = function (oMDCChart) {
    const oModel = this._getModel(oMDCChart);
    let pCreatePropertyInfos;
    if (!oModel) {
      pCreatePropertyInfos = new Promise(resolve => {
        oMDCChart.attachModelContextChange({
          resolver: resolve
        }, onModelContextChange, this);
      }).then(oRetrievedModel => {
        return this._createPropertyInfos(oMDCChart, oRetrievedModel);
      });
    } else {
      pCreatePropertyInfos = this._createPropertyInfos(oMDCChart, oModel);
    }
    return pCreatePropertyInfos.then(function (aProperties) {
      if (oMDCChart.data) {
        oMDCChart.data("$mdcChartPropertyInfo", aProperties);
      }
      return aProperties;
    });
  };
  function onModelContextChange(oEvent, oData) {
    const oMDCChart = oEvent.getSource();
    const oModel = this._getModel(oMDCChart);
    if (oModel) {
      oMDCChart.detachModelContextChange(onModelContextChange);
      oData.resolver(oModel);
    }
  }
  ChartDelegate._createPropertyInfos = async function (oMDCChart, oModel) {
    const sEntitySetPath = `/${oMDCChart.data("entitySet")}`;
    const oMetaModel = oModel.getMetaModel();
    const aResults = await Promise.all([oMetaModel.requestObject(`${sEntitySetPath}/`), oMetaModel.requestObject(`${sEntitySetPath}@`)]);
    const aProperties = [];
    const oEntityType = aResults[0],
      mEntitySetAnnotations = aResults[1];
    const mCustomAggregates = CommonHelper.parseCustomData(oMDCChart.data("customAgg"));
    let sAnno;
    const aPropertyPromise = [];
    for (const sAnnoKey in mEntitySetAnnotations) {
      if (sAnnoKey.startsWith("@Org.OData.Aggregation.V1.CustomAggregate")) {
        sAnno = sAnnoKey.replace("@Org.OData.Aggregation.V1.CustomAggregate#", "");
        const aAnno = sAnno.split("@");
        if (aAnno.length == 2 && aAnno[1] == "com.sap.vocabularies.Common.v1.Label") {
          mCustomAggregates[aAnno[0]] = mEntitySetAnnotations[sAnnoKey];
        }
      }
    }
    const aDimensions = [],
      aMeasures = [];
    if (Object.keys(mCustomAggregates).length >= 1) {
      const aChartItems = oMDCChart.getItems();
      for (const key in aChartItems) {
        if (aChartItems[key].isA("sap.ui.mdc.chart.DimensionItem")) {
          aDimensions.push(aChartItems[key].getKey());
        } else if (aChartItems[key].isA("sap.ui.mdc.chart.MeasureItem")) {
          aMeasures.push(aChartItems[key].getKey());
        }
      }
      if (aMeasures.filter(function (val) {
        return aDimensions.indexOf(val) != -1;
      }).length >= 1) {
        Log.error("Dimension and Measure has the sameProperty Configured");
      }
    }
    const mTypeAggregatableProps = CommonHelper.parseCustomData(oMDCChart.data("transAgg"));
    const mKnownAggregatableProps = {};
    for (const sAggregatable in mTypeAggregatableProps) {
      const sPropKey = mTypeAggregatableProps[sAggregatable].propertyPath;
      mKnownAggregatableProps[sPropKey] = mKnownAggregatableProps[sPropKey] || {};
      mKnownAggregatableProps[sPropKey][mTypeAggregatableProps[sAggregatable].aggregationMethod] = {
        name: mTypeAggregatableProps[sAggregatable].name,
        label: mTypeAggregatableProps[sAggregatable].label
      };
    }
    for (const sKey in oEntityType) {
      if (sKey.indexOf("$") !== 0) {
        aPropertyPromise.push(ODataMetaModelUtil.fetchCriticality(oMetaModel, oMetaModel.createBindingContext(`${sEntitySetPath}/${sKey}`)).then(ChartDelegate._handleProperty.bind(oMetaModel.getMetaContext(`${sEntitySetPath}/${sKey}`), oMDCChart, mEntitySetAnnotations, mKnownAggregatableProps, mCustomAggregates, aProperties)));
      }
    }
    await Promise.all(aPropertyPromise);
    return aProperties;
  };
  ChartDelegate._createPropertyInfosForAggregatable = function (oMDCChart, sKey, oPropertyAnnotations, oFilterRestrictionsInfo, sortRestrictionsInfo, mKnownAggregatableProps, mCustomAggregates) {
    const aAggregateProperties = [];
    if (Object.keys(mKnownAggregatableProps).indexOf(sKey) > -1) {
      for (const sAggregatable in mKnownAggregatableProps[sKey]) {
        aAggregateProperties.push({
          name: "_fe_aggregatable_" + mKnownAggregatableProps[sKey][sAggregatable].name,
          propertyPath: sKey,
          label: mKnownAggregatableProps[sKey][sAggregatable].label || `${oPropertyAnnotations["@com.sap.vocabularies.Common.v1.Label"]} (${sAggregatable})` || `${sKey} (${sAggregatable})`,
          sortable: sortRestrictionsInfo.propertyInfo[sKey] ? sortRestrictionsInfo.propertyInfo[sKey].sortable : true,
          filterable: oFilterRestrictionsInfo[sKey] ? oFilterRestrictionsInfo[sKey].filterable : true,
          groupable: false,
          aggregatable: true,
          aggregationMethod: sAggregatable,
          maxConditions: ODataMetaModelUtil.isMultiValueFilterExpression(oFilterRestrictionsInfo.propertyInfo[sKey]) ? -1 : 1,
          role: ChartItemRoleType.axis1,
          datapoint: null //To be implemented by FE
        });
      }
    }

    if (Object.keys(mCustomAggregates).indexOf(sKey) > -1) {
      for (const sCustom in mCustomAggregates) {
        if (sCustom === sKey) {
          const oItem = merge({}, mCustomAggregates[sCustom], {
            name: "_fe_aggregatable_" + sCustom,
            groupable: false,
            aggregatable: true,
            role: ChartItemRoleType.axis1,
            datapoint: null //To be implemented by FE
          });

          aAggregateProperties.push(oItem);
          break;
        }
      }
    }
    return aAggregateProperties;
  };
  ChartDelegate.rebind = function (oMDCChart, oBindingInfo) {
    const sSearch = oBindingInfo.parameters.$search;
    if (sSearch) {
      delete oBindingInfo.parameters.$search;
    }
    BaseChartDelegate.rebind(oMDCChart, oBindingInfo);
    if (sSearch) {
      const oInnerChart = oMDCChart.getControlDelegate().getInnerChart(oMDCChart),
        oChartBinding = oInnerChart && oInnerChart.getBinding("data");

      // Temporary workaround until this is fixed in MDCChart / UI5 Chart
      // In order to avoid having 2 OData requests, we need to suspend the binding before setting some aggregation properties
      // and resume it once the chart has added other aggregation properties (in onBeforeRendering)
      oChartBinding.suspend();
      oChartBinding.setAggregation({
        search: sSearch
      });
      const oInnerChartDelegate = {
        onBeforeRendering: function () {
          oChartBinding.resume();
          oInnerChart.removeEventDelegate(oInnerChartDelegate);
        }
      };
      oInnerChart.addEventDelegate(oInnerChartDelegate);
    }
    oMDCChart.fireEvent("bindingUpdated");
  };
  ChartDelegate._setChart = function (oMDCChart, oInnerChart) {
    const oChartAPI = oMDCChart.getParent();
    oInnerChart.setVizProperties(oMDCChart.data("vizProperties"));
    oInnerChart.detachSelectData(oChartAPI.handleSelectionChange.bind(oChartAPI));
    oInnerChart.detachDeselectData(oChartAPI.handleSelectionChange.bind(oChartAPI));
    oInnerChart.detachDrilledUp(oChartAPI.handleSelectionChange.bind(oChartAPI));
    oInnerChart.attachSelectData(oChartAPI.handleSelectionChange.bind(oChartAPI));
    oInnerChart.attachDeselectData(oChartAPI.handleSelectionChange.bind(oChartAPI));
    oInnerChart.attachDrilledUp(oChartAPI.handleSelectionChange.bind(oChartAPI));
    oInnerChart.setSelectionMode(oMDCChart.getPayload().selectionMode.toUpperCase());
    BaseChartDelegate._setChart(oMDCChart, oInnerChart);
  };
  ChartDelegate._getBindingInfo = function (oMDCChart) {
    if (this._getBindingInfoFromState(oMDCChart)) {
      return this._getBindingInfoFromState(oMDCChart);
    }
    const oMetadataInfo = oMDCChart.getDelegate().payload;
    const oMetaModel = oMDCChart.getModel() && oMDCChart.getModel().getMetaModel();
    const sTargetCollectionPath = oMDCChart.data("targetCollectionPath");
    const sEntitySetPath = (oMetaModel.getObject(`${sTargetCollectionPath}/$kind`) !== "NavigationProperty" ? "/" : "") + oMetadataInfo.contextPath;
    const oParams = merge({}, oMetadataInfo.parameters, {
      entitySet: oMDCChart.data("entitySet")
    });
    return {
      path: sEntitySetPath,
      events: {
        dataRequested: oMDCChart.getParent().onInternalDataRequested.bind(oMDCChart.getParent())
      },
      parameters: oParams
    };
  };
  ChartDelegate.removeItemFromInnerChart = function (oMDCChart, oMDCChartItem) {
    BaseChartDelegate.removeItemFromInnerChart.call(this, oMDCChart, oMDCChartItem);
    if (oMDCChartItem.getType() === "groupable") {
      const oInnerChart = this._getChart(oMDCChart);
      oInnerChart.fireDeselectData();
    }
  };
  ChartDelegate._getSortable = function (oMDCChart, sortRestrictionsProperty, bIsTransAggregate) {
    if (bIsTransAggregate) {
      if (oMDCChart.data("draftSupported") === "true") {
        return false;
      } else {
        return sortRestrictionsProperty ? sortRestrictionsProperty.sortable : true;
      }
    }
    return sortRestrictionsProperty ? sortRestrictionsProperty.sortable : true;
  };
  ChartDelegate._checkAndAddDraftFilter = function (oChart, oBindingInfo) {
    if (oChart.data("draftSupported") === "true") {
      if (!oBindingInfo) {
        oBindingInfo = {};
      }
      if (!oBindingInfo.filters) {
        oBindingInfo.filters = [];
      }
      oBindingInfo.filters.push(new Filter("IsActiveEntity", FilterOperator.EQ, true));
    }
  };

  /**
   * This function returns an ID which should be used in the internal chart for the measure/dimension.
   * For standard cases, this is just the id of the property.
   * If it is necessary to use another id internally inside the chart (e.g. on duplicate property ids) this method can be overwritten.
   * In this case, <code>getPropertyFromNameAndKind</code> needs to be overwritten as well.
   *
   * @param {string} name ID of the property
   * @param {string} kind Type of the Property (Measure/Dimension)
   * @returns {string} Internal id for the sap.chart.Chart
   */
  ChartDelegate.getInternalChartNameFromPropertyNameAndKind = function (name, kind) {
    return name.replace("_fe_" + kind + "_", "");
  };

  /**
   * This maps an id of an internal chart dimension/measure & type of a property to its corresponding property entry.
   *
   * @param {string} name ID of internal chart measure/dimension
   * @param {string} kind Kind of the property
   * @param {sap.ui.mdc.Chart} mdcChart Reference to the MDC chart
   * @returns {object} PropertyInfo object
   */
  ChartDelegate.getPropertyFromNameAndKind = function (name, kind, mdcChart) {
    return mdcChart.getPropertyHelper().getProperty("_fe_" + kind + "_" + name);
  };
  return ChartDelegate;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/chart/ChartDelegate", ["sap/base/Log","sap/base/util/merge","sap/fe/core/CommonUtils","sap/fe/macros/chart/ChartUtils","sap/fe/macros/CommonHelper","sap/fe/macros/filter/FilterUtils","sap/fe/macros/ODataMetaModelUtil","sap/ui/mdc/library","sap/ui/mdc/odata/v4/util/DelegateUtil","sap/ui/mdc/odata/v4/vizChart/ChartDelegate","sap/ui/model/Filter","sap/ui/model/FilterOperator"],function(e,t,a,r,n,o,s,i,l,c,g,f){"use strict";const p=i.ChartItemRoleType;const u=Object.assign({},c);u._setChartNoDataText=function(t,n){let o="";const s=r.getAllFilterInfo(t),i=n.path.startsWith("/")?n.path.substr(1):n.path;const l=function(){if(t.data("multiViews")){return"M_TABLE_AND_CHART_NO_DATA_TEXT_MULTI_VIEW"}else{return"T_TABLE_AND_CHART_NO_DATA_TEXT_WITH_FILTER"}};if(t.getFilter()){if(s.search||s.filters&&s.filters.length){o=l()}else{o="T_TABLE_AND_CHART_NO_DATA_TEXT"}}else if(s.search||s.filters&&s.filters.length){o=l()}else{o="M_TABLE_AND_CHART_NO_FILTERS_NO_DATA_TEXT"}return t.getModel("sap.fe.i18n").getResourceBundle().then(function(e){t.setNoDataText(a.getTranslatedText(o,e,undefined,i))}).catch(function(t){e.error(t)})};u._handleProperty=function(t,a,r,o,i,l){const c=n.parseCustomData(t.data("applySupported"));const g=s.getSortRestrictionsInfo(a);const f=a["@Org.OData.Capabilities.V1.FilterRestrictions"];const d=s.getFilterRestrictionsInfo(f);const h=this.getModel().getObject(this.getPath());const m=this.getModel().getObject(`${this.getPath()}@sapui.name`);const b=this.getModel();if(h&&h.$kind==="Property"){if(h.$isCollection){return}const a=b.getObject(`${this.getPath()}@`);const n=b.getObject("@sapui.name",b.getMetaContext(this.getPath()));const f=c&&c.GroupableProperties;const _=c&&c.AggregatableProperties;let C=false,y=false;if(f&&f.length){for(let e=0;e<f.length;e++){if(f[e].$PropertyPath===n){C=true;break}}}if(_&&_.length){for(let e=0;e<_.length;e++){if(_[e].Property.$PropertyPath===n){y=true;break}}}if(!f||f&&!f.length){C=a["@Org.OData.Aggregation.V1.Groupable"]}if(!_||_&&!_.length){y=a["@Org.OData.Aggregation.V1.Aggregatable"]}if(!C&&!y){return}if(y){const e=u._createPropertyInfosForAggregatable(t,m,a,d,g,r,o);e.forEach(function(e){i.push(e)})}if(C){const r=m||"",n=a["@com.sap.vocabularies.Common.v1.Text"]?a["@com.sap.vocabularies.Common.v1.Text"].$Path:null;let o=false;if(r&&r.indexOf("/")>-1){e.error(`$expand is not yet supported. Property: ${r} from an association cannot be used`);return}if(n&&n.indexOf("/")>-1){e.error(`$expand is not yet supported. Text Property: ${n} from an association cannot be used`);o=true}i.push({name:"_fe_groupable_"+m,propertyPath:m,label:a["@com.sap.vocabularies.Common.v1.Label"]||m,sortable:u._getSortable(t,g.propertyInfo[m],false),filterable:d[m]?d[m].filterable:true,groupable:true,aggregatable:false,maxConditions:s.isMultiValueFilterExpression(d.propertyInfo[m])?-1:1,sortKey:m,role:p.category,criticality:l,textProperty:!o&&a["@com.sap.vocabularies.Common.v1.Text"]?a["@com.sap.vocabularies.Common.v1.Text"].$Path:null,textFormatter:a["@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement"]})}}};u.formatText=function(e,t){const a=this.textFormatter;if(a.$EnumMember==="com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst"){return`${t} (${e})`}else if(a.$EnumMember==="com.sap.vocabularies.UI.v1.TextArrangementType/TextLast"){return`${e} (${t})`}else if(a.$EnumMember==="com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly"){return t}return t?t:e};u.updateBindingInfo=function(e,t){u._setChartNoDataText(e,t);const s=sap.ui.getCore().byId(e.getFilter());if(s){const i=s.getConditions();if(i){if(!t){t={}}t.sorter=this.getSorters(e);const a=e.getControlDelegate().getInnerChart(e);let n;if(a){if(r.getChartSelectionsExist(e)){n=r.getAllFilterInfo(e)}}n=n?n:r.getFilterBarFilterInfo(e);if(n){t.filters=n.filters}const o=l.getParametersInfo(s,i);if(o){t.path=o}}const c=o.getFilterInfo(s,{});const g=n.parseCustomData(e.data("applySupported"));if(g&&g.enableSearch&&c.search){t.parameters.$search=a.normalizeSearchTerm(c.search)}else if(t.parameters.$search){delete t.parameters.$search}}else{if(!t){t={}}t.sorter=this.getSorters(e)}u._checkAndAddDraftFilter(e,t)};u.fetchProperties=function(e){const t=this._getModel(e);let a;if(!t){a=new Promise(t=>{e.attachModelContextChange({resolver:t},d,this)}).then(t=>this._createPropertyInfos(e,t))}else{a=this._createPropertyInfos(e,t)}return a.then(function(t){if(e.data){e.data("$mdcChartPropertyInfo",t)}return t})};function d(e,t){const a=e.getSource();const r=this._getModel(a);if(r){a.detachModelContextChange(d);t.resolver(r)}}u._createPropertyInfos=async function(t,a){const r=`/${t.data("entitySet")}`;const o=a.getMetaModel();const i=await Promise.all([o.requestObject(`${r}/`),o.requestObject(`${r}@`)]);const l=[];const c=i[0],g=i[1];const f=n.parseCustomData(t.data("customAgg"));let p;const d=[];for(const e in g){if(e.startsWith("@Org.OData.Aggregation.V1.CustomAggregate")){p=e.replace("@Org.OData.Aggregation.V1.CustomAggregate#","");const t=p.split("@");if(t.length==2&&t[1]=="com.sap.vocabularies.Common.v1.Label"){f[t[0]]=g[e]}}}const h=[],m=[];if(Object.keys(f).length>=1){const a=t.getItems();for(const e in a){if(a[e].isA("sap.ui.mdc.chart.DimensionItem")){h.push(a[e].getKey())}else if(a[e].isA("sap.ui.mdc.chart.MeasureItem")){m.push(a[e].getKey())}}if(m.filter(function(e){return h.indexOf(e)!=-1}).length>=1){e.error("Dimension and Measure has the sameProperty Configured")}}const b=n.parseCustomData(t.data("transAgg"));const _={};for(const e in b){const t=b[e].propertyPath;_[t]=_[t]||{};_[t][b[e].aggregationMethod]={name:b[e].name,label:b[e].label}}for(const e in c){if(e.indexOf("$")!==0){d.push(s.fetchCriticality(o,o.createBindingContext(`${r}/${e}`)).then(u._handleProperty.bind(o.getMetaContext(`${r}/${e}`),t,g,_,f,l)))}}await Promise.all(d);return l};u._createPropertyInfosForAggregatable=function(e,a,r,n,o,i,l){const c=[];if(Object.keys(i).indexOf(a)>-1){for(const e in i[a]){c.push({name:"_fe_aggregatable_"+i[a][e].name,propertyPath:a,label:i[a][e].label||`${r["@com.sap.vocabularies.Common.v1.Label"]} (${e})`||`${a} (${e})`,sortable:o.propertyInfo[a]?o.propertyInfo[a].sortable:true,filterable:n[a]?n[a].filterable:true,groupable:false,aggregatable:true,aggregationMethod:e,maxConditions:s.isMultiValueFilterExpression(n.propertyInfo[a])?-1:1,role:p.axis1,datapoint:null})}}if(Object.keys(l).indexOf(a)>-1){for(const e in l){if(e===a){const a=t({},l[e],{name:"_fe_aggregatable_"+e,groupable:false,aggregatable:true,role:p.axis1,datapoint:null});c.push(a);break}}}return c};u.rebind=function(e,t){const a=t.parameters.$search;if(a){delete t.parameters.$search}c.rebind(e,t);if(a){const t=e.getControlDelegate().getInnerChart(e),r=t&&t.getBinding("data");r.suspend();r.setAggregation({search:a});const n={onBeforeRendering:function(){r.resume();t.removeEventDelegate(n)}};t.addEventDelegate(n)}e.fireEvent("bindingUpdated")};u._setChart=function(e,t){const a=e.getParent();t.setVizProperties(e.data("vizProperties"));t.detachSelectData(a.handleSelectionChange.bind(a));t.detachDeselectData(a.handleSelectionChange.bind(a));t.detachDrilledUp(a.handleSelectionChange.bind(a));t.attachSelectData(a.handleSelectionChange.bind(a));t.attachDeselectData(a.handleSelectionChange.bind(a));t.attachDrilledUp(a.handleSelectionChange.bind(a));t.setSelectionMode(e.getPayload().selectionMode.toUpperCase());c._setChart(e,t)};u._getBindingInfo=function(e){if(this._getBindingInfoFromState(e)){return this._getBindingInfoFromState(e)}const a=e.getDelegate().payload;const r=e.getModel()&&e.getModel().getMetaModel();const n=e.data("targetCollectionPath");const o=(r.getObject(`${n}/$kind`)!=="NavigationProperty"?"/":"")+a.contextPath;const s=t({},a.parameters,{entitySet:e.data("entitySet")});return{path:o,events:{dataRequested:e.getParent().onInternalDataRequested.bind(e.getParent())},parameters:s}};u.removeItemFromInnerChart=function(e,t){c.removeItemFromInnerChart.call(this,e,t);if(t.getType()==="groupable"){const t=this._getChart(e);t.fireDeselectData()}};u._getSortable=function(e,t,a){if(a){if(e.data("draftSupported")==="true"){return false}else{return t?t.sortable:true}}return t?t.sortable:true};u._checkAndAddDraftFilter=function(e,t){if(e.data("draftSupported")==="true"){if(!t){t={}}if(!t.filters){t.filters=[]}t.filters.push(new g("IsActiveEntity",f.EQ,true))}};u.getInternalChartNameFromPropertyNameAndKind=function(e,t){return e.replace("_fe_"+t+"_","")};u.getPropertyFromNameAndKind=function(e,t,a){return a.getPropertyHelper().getProperty("_fe_"+t+"_"+e)};return u},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/chart/ChartHelper-dbg", ["sap/base/Log", "sap/fe/core/converters/controls/Common/DataVisualization", "sap/fe/macros/CommonHelper", "sap/fe/macros/internal/helpers/ActionHelper", "sap/fe/macros/ODataMetaModelUtil", "sap/ui/model/json/JSONModel", "sap/ui/model/odata/v4/AnnotationHelper"], function (Log, DataVisualization, CommonHelper, ActionHelper, ODataMetaModelUtil, JSONModel, ODataModelAnnotationHelper) {
  "use strict";

  var getUiControl = DataVisualization.getUiControl;
  function formatJSONToString(oCrit) {
    if (!oCrit) {
      return undefined;
    }
    let sCriticality = JSON.stringify(oCrit);
    sCriticality = sCriticality.replace(new RegExp("{", "g"), "\\{");
    sCriticality = sCriticality.replace(new RegExp("}", "g"), "\\}");
    return sCriticality;
  }
  function getEntitySetPath(oAnnotationContext) {
    const sAnnoPath = oAnnotationContext.getPath(),
      sPathEntitySetPath = sAnnoPath.replace(/@com.sap.vocabularies.UI.v1.(Chart|PresentationVariant).*/, "");
    return sPathEntitySetPath;
  }
  const mChartType = {
    "com.sap.vocabularies.UI.v1.ChartType/Column": "column",
    "com.sap.vocabularies.UI.v1.ChartType/ColumnStacked": "stacked_column",
    "com.sap.vocabularies.UI.v1.ChartType/ColumnDual": "dual_column",
    "com.sap.vocabularies.UI.v1.ChartType/ColumnStackedDual": "dual_stacked_column",
    "com.sap.vocabularies.UI.v1.ChartType/ColumnStacked100": "100_stacked_column",
    "com.sap.vocabularies.UI.v1.ChartType/ColumnStackedDual100": "100_dual_stacked_column",
    "com.sap.vocabularies.UI.v1.ChartType/Bar": "bar",
    "com.sap.vocabularies.UI.v1.ChartType/BarStacked": "stacked_bar",
    "com.sap.vocabularies.UI.v1.ChartType/BarDual": "dual_bar",
    "com.sap.vocabularies.UI.v1.ChartType/BarStackedDual": "dual_stacked_bar",
    "com.sap.vocabularies.UI.v1.ChartType/BarStacked100": "100_stacked_bar",
    "com.sap.vocabularies.UI.v1.ChartType/BarStackedDual100": "100_dual_stacked_bar",
    "com.sap.vocabularies.UI.v1.ChartType/Area": "area",
    "com.sap.vocabularies.UI.v1.ChartType/AreaStacked": "stacked_column",
    "com.sap.vocabularies.UI.v1.ChartType/AreaStacked100": "100_stacked_column",
    "com.sap.vocabularies.UI.v1.ChartType/HorizontalArea": "bar",
    "com.sap.vocabularies.UI.v1.ChartType/HorizontalAreaStacked": "stacked_bar",
    "com.sap.vocabularies.UI.v1.ChartType/HorizontalAreaStacked100": "100_stacked_bar",
    "com.sap.vocabularies.UI.v1.ChartType/Line": "line",
    "com.sap.vocabularies.UI.v1.ChartType/LineDual": "dual_line",
    "com.sap.vocabularies.UI.v1.ChartType/Combination": "combination",
    "com.sap.vocabularies.UI.v1.ChartType/CombinationStacked": "stacked_combination",
    "com.sap.vocabularies.UI.v1.ChartType/CombinationDual": "dual_combination",
    "com.sap.vocabularies.UI.v1.ChartType/CombinationStackedDual": "dual_stacked_combination",
    "com.sap.vocabularies.UI.v1.ChartType/HorizontalCombinationStacked": "horizontal_stacked_combination",
    "com.sap.vocabularies.UI.v1.ChartType/Pie": "pie",
    "com.sap.vocabularies.UI.v1.ChartType/Donut": "donut",
    "com.sap.vocabularies.UI.v1.ChartType/Scatter": "scatter",
    "com.sap.vocabularies.UI.v1.ChartType/Bubble": "bubble",
    "com.sap.vocabularies.UI.v1.ChartType/Radar": "line",
    "com.sap.vocabularies.UI.v1.ChartType/HeatMap": "heatmap",
    "com.sap.vocabularies.UI.v1.ChartType/TreeMap": "treemap",
    "com.sap.vocabularies.UI.v1.ChartType/Waterfall": "waterfall",
    "com.sap.vocabularies.UI.v1.ChartType/Bullet": "bullet",
    "com.sap.vocabularies.UI.v1.ChartType/VerticalBullet": "vertical_bullet",
    "com.sap.vocabularies.UI.v1.ChartType/HorizontalWaterfall": "horizontal_waterfall",
    "com.sap.vocabularies.UI.v1.ChartType/HorizontalCombinationDual": "dual_horizontal_combination",
    "com.sap.vocabularies.UI.v1.ChartType/HorizontalCombinationStackedDual": "dual_horizontal_stacked_combination"
  };
  const mDimensionRole = {
    "com.sap.vocabularies.UI.v1.ChartDimensionRoleType/Category": "category",
    "com.sap.vocabularies.UI.v1.ChartDimensionRoleType/Series": "series",
    "com.sap.vocabularies.UI.v1.ChartDimensionRoleType/Category2": "category2"
  };
  /**
   * Helper class for sap.fe.macros Chart phantom control for prepecosseing.
   * <h3><b>Note:</b></h3>
   * The class is experimental and the API/behaviour is not finalised
   * and hence this should not be used for productive usage.
   * Especially this class is not intended to be used for the FE scenario,
   * here we shall use sap.fe.macros.ChartHelper that is especially tailored for V4
   * meta model
   *
   * @author SAP SE
   * @private
   * @experimental
   * @since 1.62
   * @alias sap.fe.macros.ChartHelper
   */
  const ChartHelper = {
    getP13nMode(oViewData) {
      const aPersonalization = [],
        bVariantManagement = oViewData.variantManagement && (oViewData.variantManagement === "Page" || oViewData.variantManagement === "Control"),
        personalization = true; // by default enabled
      if (bVariantManagement && personalization) {
        if (personalization) {
          // full personalization scope
          return "Sort,Type,Item";
        } else if (typeof personalization === "object") {
          if (personalization.type) {
            aPersonalization.push("Type");
          }
          if (personalization.sort) {
            aPersonalization.push("Sort");
          }
          return aPersonalization.join(",");
        }
      }
    },
    formatChartType(oChartType) {
      return mChartType[oChartType.$EnumMember];
    },
    formatDimensions(oAnnotationContext) {
      const oAnnotation = oAnnotationContext.getObject("./"),
        oMetaModel = oAnnotationContext.getModel(),
        sEntitySetPath = getEntitySetPath(oAnnotationContext),
        aDimensions = [];
      let i, j;
      let bIsNavigationText = false;

      //perhaps there are no dimension attributes
      oAnnotation.DimensionAttributes = oAnnotation.DimensionAttributes || [];
      for (i = 0; i < oAnnotation.Dimensions.length; i++) {
        const sKey = oAnnotation.Dimensions[i].$PropertyPath;
        const oText = oMetaModel.getObject(`${sEntitySetPath + sKey}@com.sap.vocabularies.Common.v1.Text`) || {};
        if (sKey.indexOf("/") > -1) {
          Log.error(`$expand is not yet supported. Dimension: ${sKey} from an association cannot be used`);
        }
        if (oText.$Path && oText.$Path.indexOf("/") > -1) {
          Log.error(`$expand is not yet supported. Text Property: ${oText.$Path} from an association cannot be used for the dimension ${sKey}`);
          bIsNavigationText = true;
        }
        const oDimension = {
          key: sKey,
          textPath: !bIsNavigationText ? oText.$Path : undefined,
          label: oMetaModel.getObject(`${sEntitySetPath + sKey}@com.sap.vocabularies.Common.v1.Label`),
          role: "category"
        };
        for (j = 0; j < oAnnotation.DimensionAttributes.length; j++) {
          const oAttribute = oAnnotation.DimensionAttributes[j];
          if (oDimension.key === oAttribute.Dimension.$PropertyPath) {
            oDimension.role = mDimensionRole[oAttribute.Role.$EnumMember] || oDimension.role;
            break;
          }
        }
        oDimension.criticality = ODataMetaModelUtil.fetchCriticality(oMetaModel, oMetaModel.createBindingContext(sEntitySetPath + sKey)).then(formatJSONToString);
        aDimensions.push(oDimension);
      }
      const oDimensionModel = new JSONModel(aDimensions);
      oDimensionModel.$$valueAsPromise = true;
      return oDimensionModel.createBindingContext("/");
    },
    formatMeasures(oAnnotationContext) {
      return oAnnotationContext.getModel().getData();
    },
    getUiChart(oPresentationContext) {
      return getUiControl(oPresentationContext, "@com.sap.vocabularies.UI.v1.Chart");
    },
    getOperationAvailableMap(oChartContext, oContext) {
      const aChartCollection = oChartContext.Actions || [];
      return JSON.stringify(ActionHelper.getOperationAvailableMap(aChartCollection, "chart", oContext));
    },
    /**
     * Returns a stringified JSON object containing Presentation Variant sort conditions.
     *
     * @param oContext
     * @param oPresentationVariant Presentation Variant annotation
     * @param sPresentationVariantPath
     * @param oApplySupported
     * @returns Stringified JSON object
     */
    getSortConditions: function (oContext, oPresentationVariant, sPresentationVariantPath, oApplySupported) {
      if (oPresentationVariant && CommonHelper._isPresentationVariantAnnotation(sPresentationVariantPath) && oPresentationVariant.SortOrder) {
        const aSortConditions = {
          sorters: []
        };
        const sEntityPath = oContext.getPath(0).split("@")[0];
        oPresentationVariant.SortOrder.forEach(function () {
          let oCondition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
          let oSortProperty = "";
          const oSorter = {};
          if (oCondition.DynamicProperty) {
            var _oContext$getModel$ge;
            oSortProperty = "_fe_aggregatable_" + ((_oContext$getModel$ge = oContext.getModel(0).getObject(sEntityPath + oCondition.DynamicProperty.$AnnotationPath)) === null || _oContext$getModel$ge === void 0 ? void 0 : _oContext$getModel$ge.Name);
          } else if (oCondition.Property) {
            const aGroupableProperties = oApplySupported.GroupableProperties;
            if (aGroupableProperties && aGroupableProperties.length) {
              for (let i = 0; i < aGroupableProperties.length; i++) {
                if (aGroupableProperties[i].$PropertyPath === oCondition.Property.$PropertyPath) {
                  oSortProperty = "_fe_groupable_" + oCondition.Property.$PropertyPath;
                  break;
                }
                if (!oSortProperty) {
                  oSortProperty = "_fe_aggregatable_" + oCondition.Property.$PropertyPath;
                }
              }
            } else if (oContext.getModel(0).getObject(sEntityPath + oCondition.Property.$PropertyPath + "@Org.OData.Aggregation.V1.Groupable")) {
              oSortProperty = "_fe_groupable_" + oCondition.Property.$PropertyPath;
            } else {
              oSortProperty = "_fe_aggregatable_" + oCondition.Property.$PropertyPath;
            }
          }
          if (oSortProperty) {
            oSorter.name = oSortProperty;
            oSorter.descending = !!oCondition.Descending;
            aSortConditions.sorters.push(oSorter);
          } else {
            throw new Error("Please define the right path to the sort property");
          }
        });
        return JSON.stringify(aSortConditions);
      }
      return undefined;
    },
    getBindingData(sTargetCollection, oContext, aActions) {
      const aOperationAvailablePath = [];
      let sSelect;
      for (const i in aActions) {
        if (aActions[i].$Type === "com.sap.vocabularies.UI.v1.DataFieldForAction") {
          const sActionName = aActions[i].Action;
          const oActionOperationAvailable = CommonHelper.getActionPath(oContext, false, sActionName, true);
          if (oActionOperationAvailable && oActionOperationAvailable.$Path) {
            aOperationAvailablePath.push(`'${oActionOperationAvailable.$Path}'`);
          } else if (oActionOperationAvailable === null) {
            // We disabled action advertisement but kept it in the code for the time being
            //aOperationAvailablePath.push(sActionName);
          }
        }
      }
      if (aOperationAvailablePath.length > 0) {
        //TODO: request fails with $select. check this with odata v4 model
        sSelect = " $select: '" + aOperationAvailablePath.join() + "'";
      }
      return "'{path: '" + (oContext.getObject("$kind") === "EntitySet" ? "/" : "") + oContext.getObject("@sapui.name") + "'" + (sSelect ? ",parameters:{" + sSelect + "}" : "") + "}'";
    },
    _getModel(oCollection, oInterface) {
      return oInterface.context;
    },
    // TODO: combine this one with the one from the table
    isDataFieldForActionButtonEnabled(bIsBound, sAction, oCollection, sOperationAvailableMap, sEnableSelectOn) {
      if (bIsBound !== true) {
        return "true";
      }
      const oModel = oCollection.getModel();
      const sNavPath = oCollection.getPath();
      const sPartner = oModel.getObject(sNavPath).$Partner;
      const oOperationAvailableMap = sOperationAvailableMap && JSON.parse(sOperationAvailableMap);
      const aPath = oOperationAvailableMap && oOperationAvailableMap[sAction] && oOperationAvailableMap[sAction].split("/");
      const sNumberOfSelectedContexts = ActionHelper.getNumberOfContextsExpression(sEnableSelectOn);
      if (aPath && aPath[0] === sPartner) {
        const sPath = oOperationAvailableMap[sAction].replace(sPartner + "/", "");
        return "{= ${" + sNumberOfSelectedContexts + " && ${" + sPath + "}}";
      } else {
        return "{= ${" + sNumberOfSelectedContexts + "}";
      }
    },
    getHiddenPathExpressionForTableActionsAndIBN(sHiddenPath, oDetails) {
      const oContext = oDetails.context,
        sPropertyPath = oContext.getPath(),
        sEntitySetPath = ODataModelAnnotationHelper.getNavigationPath(sPropertyPath);
      if (sHiddenPath.indexOf("/") > 0) {
        const aSplitHiddenPath = sHiddenPath.split("/");
        const sNavigationPath = aSplitHiddenPath[0];
        // supports visiblity based on the property from the partner association
        if (oContext.getObject(sEntitySetPath + "/$Partner") === sNavigationPath) {
          return "{= !%{" + aSplitHiddenPath.slice(1).join("/") + "} }";
        }
        // any other association will be ignored and the button will be made visible
      }

      return true;
    },
    /**
     * Method to get press event for DataFieldForActionButton.
     *
     * @function
     * @name getPressEventForDataFieldForActionButton
     * @param sId Id of the current control
     * @param oAction Action model
     * @param sOperationAvailableMap OperationAvailableMap Stringified JSON object
     * @returns A binding expression for press property of DataFieldForActionButton
     */
    getPressEventForDataFieldForActionButton(sId, oAction, sOperationAvailableMap) {
      const oParams = {
        contexts: "${internal>selectedContexts}"
      };
      return ActionHelper.getPressEventDataFieldForActionButton(sId, oAction, oParams, sOperationAvailableMap);
    },
    /**
     * @function
     * @name getActionType
     * @param oAction Action model
     * @returns A Boolean value depending on the action type
     */
    getActionType(oAction) {
      return (oAction["$Type"].indexOf("com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation") > -1 || oAction["$Type"].indexOf("com.sap.vocabularies.UI.v1.DataFieldForAction") > -1) && oAction["Inline"];
    },
    getCollectionName(sCollection) {
      return sCollection.split("/")[sCollection.split("/").length - 1];
    }
  };
  ChartHelper.getSortConditions.requiresIContext = true;
  return ChartHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/chart/ChartHelper", ["sap/base/Log","sap/fe/core/converters/controls/Common/DataVisualization","sap/fe/macros/CommonHelper","sap/fe/macros/internal/helpers/ActionHelper","sap/fe/macros/ODataMetaModelUtil","sap/ui/model/json/JSONModel","sap/ui/model/odata/v4/AnnotationHelper"],function(e,a,t,o,r,n,i){"use strict";var s=a.getUiControl;function c(e){if(!e){return undefined}let a=JSON.stringify(e);a=a.replace(new RegExp("{","g"),"\\{");a=a.replace(new RegExp("}","g"),"\\}");return a}function l(e){const a=e.getPath(),t=a.replace(/@com.sap.vocabularies.UI.v1.(Chart|PresentationVariant).*/,"");return t}const p={"com.sap.vocabularies.UI.v1.ChartType/Column":"column","com.sap.vocabularies.UI.v1.ChartType/ColumnStacked":"stacked_column","com.sap.vocabularies.UI.v1.ChartType/ColumnDual":"dual_column","com.sap.vocabularies.UI.v1.ChartType/ColumnStackedDual":"dual_stacked_column","com.sap.vocabularies.UI.v1.ChartType/ColumnStacked100":"100_stacked_column","com.sap.vocabularies.UI.v1.ChartType/ColumnStackedDual100":"100_dual_stacked_column","com.sap.vocabularies.UI.v1.ChartType/Bar":"bar","com.sap.vocabularies.UI.v1.ChartType/BarStacked":"stacked_bar","com.sap.vocabularies.UI.v1.ChartType/BarDual":"dual_bar","com.sap.vocabularies.UI.v1.ChartType/BarStackedDual":"dual_stacked_bar","com.sap.vocabularies.UI.v1.ChartType/BarStacked100":"100_stacked_bar","com.sap.vocabularies.UI.v1.ChartType/BarStackedDual100":"100_dual_stacked_bar","com.sap.vocabularies.UI.v1.ChartType/Area":"area","com.sap.vocabularies.UI.v1.ChartType/AreaStacked":"stacked_column","com.sap.vocabularies.UI.v1.ChartType/AreaStacked100":"100_stacked_column","com.sap.vocabularies.UI.v1.ChartType/HorizontalArea":"bar","com.sap.vocabularies.UI.v1.ChartType/HorizontalAreaStacked":"stacked_bar","com.sap.vocabularies.UI.v1.ChartType/HorizontalAreaStacked100":"100_stacked_bar","com.sap.vocabularies.UI.v1.ChartType/Line":"line","com.sap.vocabularies.UI.v1.ChartType/LineDual":"dual_line","com.sap.vocabularies.UI.v1.ChartType/Combination":"combination","com.sap.vocabularies.UI.v1.ChartType/CombinationStacked":"stacked_combination","com.sap.vocabularies.UI.v1.ChartType/CombinationDual":"dual_combination","com.sap.vocabularies.UI.v1.ChartType/CombinationStackedDual":"dual_stacked_combination","com.sap.vocabularies.UI.v1.ChartType/HorizontalCombinationStacked":"horizontal_stacked_combination","com.sap.vocabularies.UI.v1.ChartType/Pie":"pie","com.sap.vocabularies.UI.v1.ChartType/Donut":"donut","com.sap.vocabularies.UI.v1.ChartType/Scatter":"scatter","com.sap.vocabularies.UI.v1.ChartType/Bubble":"bubble","com.sap.vocabularies.UI.v1.ChartType/Radar":"line","com.sap.vocabularies.UI.v1.ChartType/HeatMap":"heatmap","com.sap.vocabularies.UI.v1.ChartType/TreeMap":"treemap","com.sap.vocabularies.UI.v1.ChartType/Waterfall":"waterfall","com.sap.vocabularies.UI.v1.ChartType/Bullet":"bullet","com.sap.vocabularies.UI.v1.ChartType/VerticalBullet":"vertical_bullet","com.sap.vocabularies.UI.v1.ChartType/HorizontalWaterfall":"horizontal_waterfall","com.sap.vocabularies.UI.v1.ChartType/HorizontalCombinationDual":"dual_horizontal_combination","com.sap.vocabularies.UI.v1.ChartType/HorizontalCombinationStackedDual":"dual_horizontal_stacked_combination"};const u={"com.sap.vocabularies.UI.v1.ChartDimensionRoleType/Category":"category","com.sap.vocabularies.UI.v1.ChartDimensionRoleType/Series":"series","com.sap.vocabularies.UI.v1.ChartDimensionRoleType/Category2":"category2"};const m={getP13nMode(e){const a=[],t=e.variantManagement&&(e.variantManagement==="Page"||e.variantManagement==="Control"),o=true;if(t&&o){if(o){return"Sort,Type,Item"}else if(typeof o==="object"){if(o.type){a.push("Type")}if(o.sort){a.push("Sort")}return a.join(",")}}},formatChartType(e){return p[e.$EnumMember]},formatDimensions(a){const t=a.getObject("./"),o=a.getModel(),i=l(a),s=[];let p,m;let b=false;t.DimensionAttributes=t.DimensionAttributes||[];for(p=0;p<t.Dimensions.length;p++){const a=t.Dimensions[p].$PropertyPath;const n=o.getObject(`${i+a}@com.sap.vocabularies.Common.v1.Text`)||{};if(a.indexOf("/")>-1){e.error(`$expand is not yet supported. Dimension: ${a} from an association cannot be used`)}if(n.$Path&&n.$Path.indexOf("/")>-1){e.error(`$expand is not yet supported. Text Property: ${n.$Path} from an association cannot be used for the dimension ${a}`);b=true}const l={key:a,textPath:!b?n.$Path:undefined,label:o.getObject(`${i+a}@com.sap.vocabularies.Common.v1.Label`),role:"category"};for(m=0;m<t.DimensionAttributes.length;m++){const e=t.DimensionAttributes[m];if(l.key===e.Dimension.$PropertyPath){l.role=u[e.Role.$EnumMember]||l.role;break}}l.criticality=r.fetchCriticality(o,o.createBindingContext(i+a)).then(c);s.push(l)}const v=new n(s);v.$$valueAsPromise=true;return v.createBindingContext("/")},formatMeasures(e){return e.getModel().getData()},getUiChart(e){return s(e,"@com.sap.vocabularies.UI.v1.Chart")},getOperationAvailableMap(e,a){const t=e.Actions||[];return JSON.stringify(o.getOperationAvailableMap(t,"chart",a))},getSortConditions:function(e,a,o,r){if(a&&t._isPresentationVariantAnnotation(o)&&a.SortOrder){const t={sorters:[]};const o=e.getPath(0).split("@")[0];a.SortOrder.forEach(function(){let a=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let n="";const i={};if(a.DynamicProperty){var s;n="_fe_aggregatable_"+((s=e.getModel(0).getObject(o+a.DynamicProperty.$AnnotationPath))===null||s===void 0?void 0:s.Name)}else if(a.Property){const t=r.GroupableProperties;if(t&&t.length){for(let e=0;e<t.length;e++){if(t[e].$PropertyPath===a.Property.$PropertyPath){n="_fe_groupable_"+a.Property.$PropertyPath;break}if(!n){n="_fe_aggregatable_"+a.Property.$PropertyPath}}}else if(e.getModel(0).getObject(o+a.Property.$PropertyPath+"@Org.OData.Aggregation.V1.Groupable")){n="_fe_groupable_"+a.Property.$PropertyPath}else{n="_fe_aggregatable_"+a.Property.$PropertyPath}}if(n){i.name=n;i.descending=!!a.Descending;t.sorters.push(i)}else{throw new Error("Please define the right path to the sort property")}});return JSON.stringify(t)}return undefined},getBindingData(e,a,o){const r=[];let n;for(const e in o){if(o[e].$Type==="com.sap.vocabularies.UI.v1.DataFieldForAction"){const n=o[e].Action;const i=t.getActionPath(a,false,n,true);if(i&&i.$Path){r.push(`'${i.$Path}'`)}else if(i===null){}}}if(r.length>0){n=" $select: '"+r.join()+"'"}return"'{path: '"+(a.getObject("$kind")==="EntitySet"?"/":"")+a.getObject("@sapui.name")+"'"+(n?",parameters:{"+n+"}":"")+"}'"},_getModel(e,a){return a.context},isDataFieldForActionButtonEnabled(e,a,t,r,n){if(e!==true){return"true"}const i=t.getModel();const s=t.getPath();const c=i.getObject(s).$Partner;const l=r&&JSON.parse(r);const p=l&&l[a]&&l[a].split("/");const u=o.getNumberOfContextsExpression(n);if(p&&p[0]===c){const e=l[a].replace(c+"/","");return"{= ${"+u+" && ${"+e+"}}"}else{return"{= ${"+u+"}"}},getHiddenPathExpressionForTableActionsAndIBN(e,a){const t=a.context,o=t.getPath(),r=i.getNavigationPath(o);if(e.indexOf("/")>0){const a=e.split("/");const o=a[0];if(t.getObject(r+"/$Partner")===o){return"{= !%{"+a.slice(1).join("/")+"} }"}}return true},getPressEventForDataFieldForActionButton(e,a,t){const r={contexts:"${internal>selectedContexts}"};return o.getPressEventDataFieldForActionButton(e,a,r,t)},getActionType(e){return(e["$Type"].indexOf("com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation")>-1||e["$Type"].indexOf("com.sap.vocabularies.UI.v1.DataFieldForAction")>-1)&&e["Inline"]},getCollectionName(e){return e.split("/")[e.split("/").length-1]}};m.getSortConditions.requiresIContext=true;return m},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/chart/ChartRuntime-dbg", ["sap/fe/core/ActionRuntime", "sap/fe/macros/chart/ChartUtils", "sap/fe/macros/DelegateUtil"], function (ActionRuntime, ChartUtils, DelegateUtil) {
  "use strict";

  /**
   * Static class used by MDC_Chart during runtime
   *
   * @private
   * @experimental This module is only for internal/experimental use!
   */
  const ChartRuntime = {
    /**
     * Updates the chart after selection or deselection of data points.
     *
     * @function
     * @static
     * @name sap.fe.macros.chart.ChartRuntime.fnUpdateChart
     * @memberof sap.fe.macros.chart.ChartRuntime
     * @param oEvent Chart event
     * @ui5-restricted
     */
    fnUpdateChart: function (oEvent) {
      const oInnerChart = oEvent.getSource();
      const oMdcChart = oInnerChart.getParent();
      let sActionsMultiselectDisabled,
        oActionOperationAvailableMap = {},
        aActionsMultiselectDisabled = [];
      // changing drill stack changes order of custom data, looping through all
      oMdcChart.getCustomData().forEach(function (oCustomData) {
        if (oCustomData.getKey() === "operationAvailableMap") {
          oActionOperationAvailableMap = DelegateUtil.getCustomData(oMdcChart, "operationAvailableMap") && DelegateUtil.getCustomData(oMdcChart, "operationAvailableMap").customData;
        } else if (oCustomData.getKey() === "multiSelectDisabledActions") {
          sActionsMultiselectDisabled = oCustomData.getValue();
          aActionsMultiselectDisabled = sActionsMultiselectDisabled ? sActionsMultiselectDisabled.split(",") : [];
        }
      });
      const oInternalModelContext = oMdcChart.getBindingContext("internal");
      const aSelectedContexts = [];
      let oModelObject;
      const aSelectedDataPoints = ChartUtils.getChartSelectedData(oInnerChart);
      for (let i = 0; i < aSelectedDataPoints.length; i++) {
        aSelectedContexts.push(aSelectedDataPoints[i].context);
      }
      oInternalModelContext.setProperty("selectedContexts", aSelectedContexts);
      oInternalModelContext.getModel().setProperty(`${oInternalModelContext.getPath()}/numberOfSelectedContexts`, oInnerChart.getSelectedDataPoints().count);
      for (let j = 0; j < aSelectedContexts.length; j++) {
        const oSelectedContext = aSelectedContexts[j];
        const oContextData = oSelectedContext.getObject();
        for (const key in oContextData) {
          if (key.indexOf("#") === 0) {
            let sActionPath = key;
            sActionPath = sActionPath.substring(1, sActionPath.length);
            oModelObject = oInternalModelContext.getObject();
            oModelObject[sActionPath] = true;
            oInternalModelContext.setProperty("", oModelObject);
          }
        }
        oModelObject = oInternalModelContext.getObject();
      }
      ActionRuntime.setActionEnablement(oInternalModelContext, oActionOperationAvailableMap, aSelectedContexts, "chart");
      if (aSelectedContexts.length > 1) {
        aActionsMultiselectDisabled.forEach(function (sAction) {
          oInternalModelContext.setProperty(sAction, false);
        });
      }
    }
  };
  return ChartRuntime;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/chart/ChartRuntime", ["sap/fe/core/ActionRuntime","sap/fe/macros/chart/ChartUtils","sap/fe/macros/DelegateUtil"],function(t,e,n){"use strict";const a={fnUpdateChart:function(a){const o=a.getSource();const s=o.getParent();let c,i={},l=[];s.getCustomData().forEach(function(t){if(t.getKey()==="operationAvailableMap"){i=n.getCustomData(s,"operationAvailableMap")&&n.getCustomData(s,"operationAvailableMap").customData}else if(t.getKey()==="multiSelectDisabledActions"){c=t.getValue();l=c?c.split(","):[]}});const r=s.getBindingContext("internal");const g=[];let f;const u=e.getChartSelectedData(o);for(let t=0;t<u.length;t++){g.push(u[t].context)}r.setProperty("selectedContexts",g);r.getModel().setProperty(`${r.getPath()}/numberOfSelectedContexts`,o.getSelectedDataPoints().count);for(let t=0;t<g.length;t++){const e=g[t];const n=e.getObject();for(const t in n){if(t.indexOf("#")===0){let e=t;e=e.substring(1,e.length);f=r.getObject();f[e]=true;r.setProperty("",f)}}f=r.getObject()}t.setActionEnablement(r,i,g,"chart");if(g.length>1){l.forEach(function(t){r.setProperty(t,false)})}}};return a},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/chart/ChartUtils-dbg", ["sap/fe/macros/filter/FilterUtils", "sap/ui/model/Filter", "sap/ui/model/FilterOperator"], function (FilterUtil, Filter, FilterOperator) {
  "use strict";

  let aPrevDrillStack = [];
  const ChartUtils = {
    /**
     * Method to check if selections exist in the chart.
     *
     * @param oMdcChart The MDC chart control
     * @param oInSource The control that has to apply chart filters
     * @returns `true` if chart selection exists, false otherwise
     */
    getChartSelectionsExist: function (oMdcChart, oInSource) {
      // consider chart selections in the current drill stack or on any further drill downs
      const oSource = oInSource || oMdcChart;
      if (oMdcChart) {
        try {
          const oChart = oMdcChart.getControlDelegate()._getChart(oMdcChart);
          if (oChart) {
            const aDimensions = this.getDimensionsFromDrillStack(oChart);
            const bIsDrillDown = aDimensions.length > aPrevDrillStack.length;
            const bIsDrillUp = aDimensions.length < aPrevDrillStack.length;
            const bNoChange = aDimensions.toString() === aPrevDrillStack.toString();
            let aFilters;
            if (bIsDrillUp && aDimensions.length === 1) {
              // drilling up to level0 would clear all selections
              aFilters = this.getChartSelections(oMdcChart, true);
            } else {
              // apply filters of selections of previous drillstack when drilling up/down
              // to the chart and table
              aFilters = this.getChartSelections(oMdcChart);
            }
            if (bIsDrillDown || bIsDrillUp) {
              // update the drillstack on a drill up/ drill down
              aPrevDrillStack = aDimensions;
              return aFilters.length > 0;
            } else if (bNoChange && oSource.isA("sap.ui.mdc.Table")) {
              // bNoChange is true when chart is selected
              return aFilters.length > 0;
            }
          }
        } catch (sError) {
          return false;
        }
      }
      return false;
    },
    /**
     * Method that returns the chart filters stored in the UI model.
     *
     * @param oMdcChart The MDC chart control
     * @param bClearSelections Clears chart selections in the UI model if true
     * @returns The chart selections
     */
    getChartSelections: function (oMdcChart, bClearSelections) {
      // get chart selections
      if (bClearSelections) {
        this.getChartModel(oMdcChart, "", {});
      }
      const aVizSelections = this.getChartModel(oMdcChart, "filters");
      return aVizSelections || [];
    },
    /**
     * Method that returns the chart selections as a filter.
     *
     * @param oMdcChart The MDC chart control
     * @returns Filter containing chart selections
     */
    getChartFilters: function (oMdcChart) {
      // get chart selections as a filter
      const aFilters = this.getChartSelections(oMdcChart) || [];
      return new Filter(aFilters);
    },
    /**
     * Method that sets the chart selections as in the UI model.
     *
     * @param oMdcChart The MDC chart control
     */
    setChartFilters: function (oMdcChart) {
      // saving selections in each drill stack for future use
      const oDrillStack = this.getChartModel(oMdcChart, "drillStack") || {};
      const oChart = oMdcChart.getControlDelegate()._getChart(oMdcChart);
      const aChartFilters = [];
      let aVisibleDimensions;
      function addChartFilters(aSelectedData) {
        for (const item in aSelectedData) {
          const aDimFilters = [];
          for (const i in aVisibleDimensions) {
            const sPath = aVisibleDimensions[i];
            const sValue = aSelectedData[item].data[sPath];
            if (sValue !== undefined) {
              aDimFilters.push(new Filter({
                path: sPath,
                operator: FilterOperator.EQ,
                value1: sValue
              }));
            }
          }
          if (aDimFilters.length > 0) {
            aChartFilters.push(new Filter(aDimFilters, true));
          }
        }
      }
      if (oChart) {
        const aVizSelections = this.getVizSelection(oChart);
        aVisibleDimensions = oChart.getVisibleDimensions();
        const aDimensions = this.getDimensionsFromDrillStack(oChart);
        if (aDimensions.length > 0) {
          this.getChartModel(oMdcChart, "drillStack", {});
          oDrillStack[aDimensions.toString()] = aVizSelections;
          this.getChartModel(oMdcChart, "drillStack", oDrillStack);
        }
        if (aVizSelections.length > 0) {
          // creating filters with selections in the current drillstack
          addChartFilters(aVizSelections);
        } else {
          // creating filters with selections in the previous drillstack when there are no selections in the current drillstack
          const aDrillStackKeys = Object.keys(oDrillStack) || [];
          const aPrevDrillStackData = oDrillStack[aDrillStackKeys[aDrillStackKeys.length - 2]] || [];
          addChartFilters(aPrevDrillStackData);
        }
        this.getChartModel(oMdcChart, "filters", aChartFilters);
      }
    },
    /**
     * Method that returns the chart selections as a filter.
     *
     * @param oChart The inner chart control
     * @returns The filters in the filter bar
     */
    getFilterBarFilterInfo: function (oChart) {
      return FilterUtil.getFilterInfo(oChart.getFilter(), {
        targetControl: oChart
      });
    },
    /**
     * Method that returns the filters for the chart and filter bar.
     *
     * @param oChart The inner chart control
     * @returns The new filter containing the filters for both the chart and the filter bar
     */
    getAllFilterInfo: function (oChart) {
      const oFilters = this.getFilterBarFilterInfo(oChart);
      const aChartFilters = this.getChartFilters(oChart);
      if (aChartFilters && aChartFilters.aFilters && aChartFilters.aFilters.length) {
        oFilters.filters.push(aChartFilters);
      }
      // filterbar + chart filters
      return oFilters;
    },
    /**
     * Method that returns selected data in the chart.
     *
     * @param oChart The inner chart control
     * @returns The selected chart data
     */
    getChartSelectedData: function (oChart) {
      let aSelectedPoints = [];
      // eslint-disable-next-line @typescript-eslint/switch-exhaustiveness-check
      switch (oChart.getSelectionBehavior()) {
        case "DATAPOINT":
          aSelectedPoints = oChart.getSelectedDataPoints().dataPoints;
          break;
        case "CATEGORY":
          aSelectedPoints = oChart.getSelectedCategories().categories;
          break;
        case "SERIES":
          aSelectedPoints = oChart.getSelectedSeries().series;
          break;
      }
      return aSelectedPoints;
    },
    /**
     * Method to get filters, drillstack and selected contexts in the UI model.
     * Can also be used to set data in the model.
     *
     * @param oMdcChart The MDC chart control
     * @param sPath The path in the UI model from which chart data is to be set/fetched
     * @param vData The chart info to be set
     * @returns The chart info (filters/drillstack/selectedContexts)
     */
    getChartModel: function (oMdcChart, sPath, vData) {
      const oInternalModelContext = oMdcChart.getBindingContext("internal");
      if (!oInternalModelContext) {
        return false;
      }
      if (vData) {
        oInternalModelContext.setProperty(sPath, vData);
      }
      return oInternalModelContext && oInternalModelContext.getObject(sPath);
    },
    /**
     * Method to fetch the current drillstack dimensions.
     *
     * @param oChart The inner chart control
     * @returns The current drillstack dimensions
     */
    getDimensionsFromDrillStack: function (oChart) {
      const aCurrentDrillStack = oChart.getDrillStack() || [];
      const aCurrentDrillView = aCurrentDrillStack.pop() || {};
      return aCurrentDrillView.dimension || [];
    },
    /**
     * Method to fetch chart selections.
     *
     * @param oChart The inner chart control
     * @returns The chart selections
     */
    getVizSelection: function (oChart) {
      return oChart && oChart._getVizFrame() && oChart._getVizFrame().vizSelection() || [];
    }
  };
  return ChartUtils;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/chart/ChartUtils", ["sap/fe/macros/filter/FilterUtils","sap/ui/model/Filter","sap/ui/model/FilterOperator"],function(t,e,n){"use strict";let i=[];const r={getChartSelectionsExist:function(t,e){const n=e||t;if(t){try{const e=t.getControlDelegate()._getChart(t);if(e){const r=this.getDimensionsFromDrillStack(e);const s=r.length>i.length;const o=r.length<i.length;const l=r.toString()===i.toString();let c;if(o&&r.length===1){c=this.getChartSelections(t,true)}else{c=this.getChartSelections(t)}if(s||o){i=r;return c.length>0}else if(l&&n.isA("sap.ui.mdc.Table")){return c.length>0}}}catch(t){return false}}return false},getChartSelections:function(t,e){if(e){this.getChartModel(t,"",{})}const n=this.getChartModel(t,"filters");return n||[]},getChartFilters:function(t){const n=this.getChartSelections(t)||[];return new e(n)},setChartFilters:function(t){const i=this.getChartModel(t,"drillStack")||{};const r=t.getControlDelegate()._getChart(t);const s=[];let o;function l(t){for(const i in t){const r=[];for(const s in o){const l=o[s];const c=t[i].data[l];if(c!==undefined){r.push(new e({path:l,operator:n.EQ,value1:c}))}}if(r.length>0){s.push(new e(r,true))}}}if(r){const e=this.getVizSelection(r);o=r.getVisibleDimensions();const n=this.getDimensionsFromDrillStack(r);if(n.length>0){this.getChartModel(t,"drillStack",{});i[n.toString()]=e;this.getChartModel(t,"drillStack",i)}if(e.length>0){l(e)}else{const t=Object.keys(i)||[];const e=i[t[t.length-2]]||[];l(e)}this.getChartModel(t,"filters",s)}},getFilterBarFilterInfo:function(e){return t.getFilterInfo(e.getFilter(),{targetControl:e})},getAllFilterInfo:function(t){const e=this.getFilterBarFilterInfo(t);const n=this.getChartFilters(t);if(n&&n.aFilters&&n.aFilters.length){e.filters.push(n)}return e},getChartSelectedData:function(t){let e=[];switch(t.getSelectionBehavior()){case"DATAPOINT":e=t.getSelectedDataPoints().dataPoints;break;case"CATEGORY":e=t.getSelectedCategories().categories;break;case"SERIES":e=t.getSelectedSeries().series;break}return e},getChartModel:function(t,e,n){const i=t.getBindingContext("internal");if(!i){return false}if(n){i.setProperty(e,n)}return i&&i.getObject(e)},getDimensionsFromDrillStack:function(t){const e=t.getDrillStack()||[];const n=e.pop()||{};return n.dimension||[]},getVizSelection:function(t){return t&&t._getVizFrame()&&t._getVizFrame().vizSelection()||[]}};return r},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/contact/Contact-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/templating/DataModelPathHelper"], function (BuildingBlock, BuildingBlockRuntime, MetaModelConverter, BindingToolkit, StableIdHelper, DataModelPathHelper) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;
  var _exports = {};
  var getRelativePaths = DataModelPathHelper.getRelativePaths;
  var generate = StableIdHelper.generate;
  var getExpressionFromAnnotation = BindingToolkit.getExpressionFromAnnotation;
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  var convertMetaModelContext = MetaModelConverter.convertMetaModelContext;
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let Contact = (_dec = defineBuildingBlock({
    /**
     * Name of the macro control.
     */
    name: "Contact",
    /**
     * Namespace of the macro control
     */
    namespace: "sap.fe.macros",
    /**
     * Location of the designtime info
     */
    designtime: "sap/fe/macros/Contact.designtime"
  }), _dec2 = blockAttribute({
    type: "string"
  }), _dec3 = blockAttribute({
    type: "string"
  }), _dec4 = blockAttribute({
    type: "sap.ui.model.Context",
    $Type: ["com.sap.vocabularies.Communication.v1.ContactType"],
    required: true
  }), _dec5 = blockAttribute({
    type: "sap.ui.model.Context",
    $kind: ["EntitySet", "NavigationProperty", "EntityType", "Singleton"]
  }), _dec6 = blockAttribute({
    type: "string"
  }), _dec7 = blockAttribute({
    type: "boolean"
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(Contact, _BuildingBlockBase);
    function Contact() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _BuildingBlockBase.call(this, ...args) || this;
      _initializerDefineProperty(_this, "idPrefix", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "_flexId", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "ariaLabelledBy", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visible", _descriptor6, _assertThisInitialized(_this));
      return _this;
    }
    _exports = Contact;
    var _proto = Contact.prototype;
    /**
     * The building block template function.
     *
     * @returns An XML-based string with the definition of the field control
     */
    _proto.getTemplate = function getTemplate() {
      let id;
      if (this._flexId) {
        //in case a flex id is given, take this one
        id = this._flexId;
      } else {
        //alternatively check for idPrefix and generate an appropriate id
        id = this.idPrefix ? generate([this.idPrefix, "Field-content"]) : undefined;
      }
      const convertedContact = convertMetaModelContext(this.metaPath);
      const myDataModel = getInvolvedDataModelObjects(this.metaPath, this.contextPath);
      const value = getExpressionFromAnnotation(convertedContact.fn, getRelativePaths(myDataModel));
      const delegateConfiguration = {
        name: "sap/fe/macros/contact/ContactDelegate",
        payload: {
          contact: this.metaPath.getPath()
        }
      };
      return xml`<mdc:Field
		xmlns:mdc="sap.ui.mdc"
		delegate="{name: 'sap/ui/mdc/odata/v4/FieldBaseDelegate'}"
		${this.attr("id", id)}
		editMode="Display"
		width="100%"
		${this.attr("visible", this.visible)}
		${this.attr("value", value)}
		${this.attr("ariaLabelledBy", this.ariaLabelledBy)}
	>
		<mdc:fieldInfo>
			<mdc:Link
				core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}"
				enablePersonalization="false"
				${this.attr("delegate", JSON.stringify(delegateConfiguration))}
			/>
		</mdc:fieldInfo>
	</mdc:Field>
			`;
    };
    return Contact;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "idPrefix", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "_flexId", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "ariaLabelledBy", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = Contact;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/contact/Contact", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/BindingToolkit","sap/fe/core/helpers/StableIdHelper","sap/fe/core/templating/DataModelPathHelper"],function(e,t,i,r,a,n){"use strict";var l,o,u,s,c,d,f,p,b,m,h,v,g,y,P;var x={};var B=n.getRelativePaths;var w=a.generate;var z=r.getExpressionFromAnnotation;var k=i.getInvolvedDataModelObjects;var O=i.convertMetaModelContext;var C=t.xml;var I=e.defineBuildingBlock;var _=e.BuildingBlockBase;var j=e.blockAttribute;function F(e,t,i,r){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(r):void 0})}function M(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function $(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;D(e,t)}function D(e,t){D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return D(e,t)}function E(e,t,i,r,a){var n={};Object.keys(r).forEach(function(e){n[e]=r[e]});n.enumerable=!!n.enumerable;n.configurable=!!n.configurable;if("value"in n||n.initializer){n.writable=true}n=i.slice().reverse().reduce(function(i,r){return r(e,t,i)||i},n);if(a&&n.initializer!==void 0){n.value=n.initializer?n.initializer.call(a):void 0;n.initializer=undefined}if(n.initializer===void 0){Object.defineProperty(e,t,n);n=null}return n}function L(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let R=(l=I({name:"Contact",namespace:"sap.fe.macros",designtime:"sap/fe/macros/Contact.designtime"}),o=j({type:"string"}),u=j({type:"string"}),s=j({type:"sap.ui.model.Context",$Type:["com.sap.vocabularies.Communication.v1.ContactType"],required:true}),c=j({type:"sap.ui.model.Context",$kind:["EntitySet","NavigationProperty","EntityType","Singleton"]}),d=j({type:"string"}),f=j({type:"boolean"}),l(p=(b=function(e){$(t,e);function t(){var t;for(var i=arguments.length,r=new Array(i),a=0;a<i;a++){r[a]=arguments[a]}t=e.call(this,...r)||this;F(t,"idPrefix",m,M(t));F(t,"_flexId",h,M(t));F(t,"metaPath",v,M(t));F(t,"contextPath",g,M(t));F(t,"ariaLabelledBy",y,M(t));F(t,"visible",P,M(t));return t}x=t;var i=t.prototype;i.getTemplate=function e(){let t;if(this._flexId){t=this._flexId}else{t=this.idPrefix?w([this.idPrefix,"Field-content"]):undefined}const i=O(this.metaPath);const r=k(this.metaPath,this.contextPath);const a=z(i.fn,B(r));const n={name:"sap/fe/macros/contact/ContactDelegate",payload:{contact:this.metaPath.getPath()}};return C`<mdc:Field
		xmlns:mdc="sap.ui.mdc"
		delegate="{name: 'sap/ui/mdc/odata/v4/FieldBaseDelegate'}"
		${this.attr("id",t)}
		editMode="Display"
		width="100%"
		${this.attr("visible",this.visible)}
		${this.attr("value",a)}
		${this.attr("ariaLabelledBy",this.ariaLabelledBy)}
	>
		<mdc:fieldInfo>
			<mdc:Link
				core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}"
				enablePersonalization="false"
				${this.attr("delegate",JSON.stringify(n))}
			/>
		</mdc:fieldInfo>
	</mdc:Field>
			`};return t}(_),m=E(b.prototype,"idPrefix",[o],{configurable:true,enumerable:true,writable:true,initializer:null}),h=E(b.prototype,"_flexId",[u],{configurable:true,enumerable:true,writable:true,initializer:null}),v=E(b.prototype,"metaPath",[s],{configurable:true,enumerable:true,writable:true,initializer:null}),g=E(b.prototype,"contextPath",[c],{configurable:true,enumerable:true,writable:true,initializer:null}),y=E(b.prototype,"ariaLabelledBy",[d],{configurable:true,enumerable:true,writable:true,initializer:null}),P=E(b.prototype,"visible",[f],{configurable:true,enumerable:true,writable:true,initializer:null}),b))||p);x=R;return x},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/contact/ContactDelegate-dbg", ["sap/ui/core/Fragment", "sap/ui/core/util/XMLPreprocessor", "sap/ui/core/XMLTemplateProcessor", "sap/ui/mdc/LinkDelegate"], function (Fragment, XMLPreprocessor, XMLTemplateProcessor, LinkDelegate) {
  "use strict";

  return Object.assign({}, LinkDelegate, {
    /**
     * Method called to do the templating of the popover content.
     *
     * @param payload
     * @param metaModel
     * @returns  A promise containing the popover content
     */
    _fnTemplateFragment: async function (payload, metaModel) {
      const fragmentName = "sap.fe.macros.contact.ContactQuickView";
      const preProcessorSettings = {
        bindingContexts: {},
        models: {}
      };
      const contactContext = metaModel.createBindingContext(payload.contact);
      if (payload.contact && contactContext) {
        preProcessorSettings.bindingContexts = {
          contact: contactContext
        };
        preProcessorSettings.models = {
          contact: metaModel
        };
      }
      const fragment = XMLTemplateProcessor.loadTemplate(fragmentName, "fragment");
      const templatedFragment = await XMLPreprocessor.process(fragment, {
        name: fragmentName
      }, preProcessorSettings);
      return Fragment.load({
        definition: templatedFragment,
        controller: this
      });
    },
    /**
     * Method calls by the mdc.field to determine what should be the content of the popup when mdcLink#open is called.
     *
     * @param payload
     * @param mdcLinkControl
     * @returns A promise containing the popover content
     */
    fetchAdditionalContent: async function (payload, mdcLinkControl) {
      var _payload$navigationPa;
      const navigateRegexpMatch = (_payload$navigationPa = payload.navigationPath) === null || _payload$navigationPa === void 0 ? void 0 : _payload$navigationPa.match(/{(.*?)}/);
      const bindingContext = navigateRegexpMatch && navigateRegexpMatch.length > 1 && navigateRegexpMatch[1] ? mdcLinkControl.getModel().bindContext(navigateRegexpMatch[1], mdcLinkControl.getBindingContext(), {
        $$ownRequest: true
      }) : null;
      if (mdcLinkControl.isA("sap.ui.mdc.Link")) {
        const metaModel = mdcLinkControl.getModel().getMetaModel();
        const popoverContent = await this._fnTemplateFragment(payload, metaModel);
        if (bindingContext) {
          popoverContent.setBindingContext(bindingContext.getBoundContext());
        }
        return [popoverContent];
      }
      return Promise.resolve([]);
    },
    fetchLinkType: async function () {
      return {
        initialType: {
          type: 2,
          // this means mdcLink.open will open a popup which shows content retrieved by fetchAdditionalContent
          directLink: undefined
        },
        runtimeType: undefined
      };
    }
  });
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/contact/ContactDelegate", ["sap/ui/core/Fragment","sap/ui/core/util/XMLPreprocessor","sap/ui/core/XMLTemplateProcessor","sap/ui/mdc/LinkDelegate"],function(t,n,e,i){"use strict";return Object.assign({},i,{_fnTemplateFragment:async function(i,o){const c="sap.fe.macros.contact.ContactQuickView";const a={bindingContexts:{},models:{}};const s=o.createBindingContext(i.contact);if(i.contact&&s){a.bindingContexts={contact:s};a.models={contact:o}}const r=e.loadTemplate(c,"fragment");const d=await n.process(r,{name:c},a);return t.load({definition:d,controller:this})},fetchAdditionalContent:async function(t,n){var e;const i=(e=t.navigationPath)===null||e===void 0?void 0:e.match(/{(.*?)}/);const o=i&&i.length>1&&i[1]?n.getModel().bindContext(i[1],n.getBindingContext(),{$$ownRequest:true}):null;if(n.isA("sap.ui.mdc.Link")){const e=n.getModel().getMetaModel();const i=await this._fnTemplateFragment(t,e);if(o){i.setBindingContext(o.getBoundContext())}return[i]}return Promise.resolve([])},fetchLinkType:async function(){return{initialType:{type:2,directLink:undefined},runtimeType:undefined}}})},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/contact/ContactHelper-dbg", ["sap/ui/core/Core"], function (Core) {
  "use strict";

  const oRB = Core.getLibraryResourceBundle("sap.ui.mdc");
  const ContactHelper = {
    // emails: first preferred, then work
    // phones : first work, then cell, then fax, then preferred
    // address : first preferred, then work
    formatUri: function (itemType, value) {
      switch (itemType) {
        case "phone":
          return `tel:${value}`;
        case "mail":
          return `mailto:${value}`;
        default:
          return value;
      }
    },
    formatAddress: function (street, code, locality, region, country) {
      const textToWrite = [];
      if (street) {
        textToWrite.push(street);
      }
      if (code && locality) {
        textToWrite.push(`${code} ${locality}`);
      } else {
        if (code) {
          textToWrite.push(code);
        }
        if (locality) {
          textToWrite.push(locality);
        }
      }
      if (region) {
        textToWrite.push(region);
      }
      if (country) {
        textToWrite.push(country);
      }
      return textToWrite.join(", ");
    },
    computeLabel: function (itemType, subType) {
      switch (itemType) {
        case "role":
          return oRB.getText("info.POPOVER_CONTACT_SECTION_ROLE");
        case "title":
          return oRB.getText("info.POPOVER_CONTACT_SECTION_JOBTITLE");
        case "org":
          return oRB.getText("info.POPOVER_CONTACT_SECTION_DEPARTMENT");
        case "phone":
          if (subType.indexOf("fax") > -1) {
            return oRB.getText("info.POPOVER_CONTACT_SECTION_FAX");
          } else if (subType.indexOf("work") > -1) {
            return oRB.getText("info.POPOVER_CONTACT_SECTION_PHONE");
          } else if (subType.indexOf("cell") > -1) {
            return oRB.getText("info.POPOVER_CONTACT_SECTION_MOBILE");
          } else if (subType.indexOf("preferred") > -1) {
            return oRB.getText("info.POPOVER_CONTACT_SECTION_PHONE");
          }
          break;
        case "mail":
          return oRB.getText("info.POPOVER_CONTACT_SECTION_EMAIL");
        case "address":
          return oRB.getText("info.POPOVER_CONTACT_SECTION_ADR");
        default:
          return "contactItem";
      }
    },
    getContactTitle: function () {
      return oRB.getText("info.POPOVER_CONTACT_SECTION_TITLE");
    },
    getAvatarInitials: function (oInitials) {
      return oInitials ? oInitials : "";
    }
  };
  return ContactHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/contact/ContactHelper", ["sap/ui/core/Core"],function(e){"use strict";const t=e.getLibraryResourceBundle("sap.ui.mdc");const n={formatUri:function(e,t){switch(e){case"phone":return`tel:${t}`;case"mail":return`mailto:${t}`;default:return t}},formatAddress:function(e,t,n,r,O){const i=[];if(e){i.push(e)}if(t&&n){i.push(`${t} ${n}`)}else{if(t){i.push(t)}if(n){i.push(n)}}if(r){i.push(r)}if(O){i.push(O)}return i.join(", ")},computeLabel:function(e,n){switch(e){case"role":return t.getText("info.POPOVER_CONTACT_SECTION_ROLE");case"title":return t.getText("info.POPOVER_CONTACT_SECTION_JOBTITLE");case"org":return t.getText("info.POPOVER_CONTACT_SECTION_DEPARTMENT");case"phone":if(n.indexOf("fax")>-1){return t.getText("info.POPOVER_CONTACT_SECTION_FAX")}else if(n.indexOf("work")>-1){return t.getText("info.POPOVER_CONTACT_SECTION_PHONE")}else if(n.indexOf("cell")>-1){return t.getText("info.POPOVER_CONTACT_SECTION_MOBILE")}else if(n.indexOf("preferred")>-1){return t.getText("info.POPOVER_CONTACT_SECTION_PHONE")}break;case"mail":return t.getText("info.POPOVER_CONTACT_SECTION_EMAIL");case"address":return t.getText("info.POPOVER_CONTACT_SECTION_ADR");default:return"contactItem"}},getContactTitle:function(){return t.getText("info.POPOVER_CONTACT_SECTION_TITLE")},getAvatarInitials:function(e){return e?e:""}};return n},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/draftIndicator/DraftIndicator.block-dbg", ["sap/base/strings/formatMessage", "sap/base/util/deepClone", "sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/CommonUtils", "sap/fe/core/converters/helpers/BindingHelper", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/BindingToolkit", "sap/fe/macros/ResourceModel", "sap/m/Button", "sap/m/library", "sap/m/ObjectMarker", "sap/m/Popover", "sap/m/Text", "sap/m/VBox", "sap/fe/core/jsx-runtime/jsx", "sap/fe/core/jsx-runtime/jsxs"], function (formatMessage, deepClone, BuildingBlock, CommonUtils, BindingHelper, MetaModelConverter, BindingToolkit, ResourceModel, Button, library, ObjectMarker, Popover, Text, VBox, _jsx, _jsxs) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6;
  var _exports = {};
  var ObjectMarkerVisibility = library.ObjectMarkerVisibility;
  var ObjectMarkerType = library.ObjectMarkerType;
  var pathInModel = BindingToolkit.pathInModel;
  var or = BindingToolkit.or;
  var not = BindingToolkit.not;
  var isEmpty = BindingToolkit.isEmpty;
  var ifElse = BindingToolkit.ifElse;
  var and = BindingToolkit.and;
  var convertMetaModelContext = MetaModelConverter.convertMetaModelContext;
  var UI = BindingHelper.UI;
  var Entity = BindingHelper.Entity;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let DraftIndicator = (
  /**
   * Building block for creating a DraftIndicator based on the metadata provided by OData V4.
   *
   * Usage example:
   * <pre>
   * &lt;macro:DraftIndicator
   *   id="SomeID"
   * /&gt;
   * </pre>
   *
   * @private
   */
  _dec = defineBuildingBlock({
    name: "DraftIndicator",
    namespace: "sap.fe.macros",
    isRuntime: true
  }), _dec2 = blockAttribute({
    type: "string"
  }), _dec3 = blockAttribute({
    type: "string"
  }), _dec4 = blockAttribute({
    type: "string",
    defaultValue: "IconAndText",
    validate: value => {
      if (value && ![ObjectMarkerVisibility.IconOnly, ObjectMarkerVisibility.IconAndText].includes(value)) {
        throw new Error(`Allowed value ${value} does not match`);
      }
    }
  }), _dec5 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true,
    $kind: ["EntitySet", "NavigationProperty"]
  }), _dec6 = blockAttribute({
    type: "boolean",
    defaultValue: false,
    bindable: true
  }), _dec7 = blockAttribute({
    type: "string",
    defaultValue: ""
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(DraftIndicator, _BuildingBlockBase);
    function DraftIndicator() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _BuildingBlockBase.call(this, ...args) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "ariaLabelledBy", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "draftIndicatorType", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "entitySet", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "isDraftIndicatorVisible", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "class", _descriptor6, _assertThisInitialized(_this));
      return _this;
    }
    _exports = DraftIndicator;
    /**
     * Runtime formatter function to format the correct text that displays the owner of a draft.
     *
     * This is used in case the DraftIndicator is shown for an active entity that has a draft of another user.
     *
     * @param hasDraftEntity
     * @param draftInProcessByUser
     * @param draftLastChangedByUser
     * @param draftInProcessByUserDesc
     * @param draftLastChangedByUserDesc
     * @returns Text to display
     */
    DraftIndicator.formatDraftOwnerTextInPopover = function formatDraftOwnerTextInPopover(hasDraftEntity, draftInProcessByUser, draftLastChangedByUser, draftInProcessByUserDesc, draftLastChangedByUserDesc) {
      if (hasDraftEntity) {
        const userDescription = draftInProcessByUserDesc || draftInProcessByUser || draftLastChangedByUserDesc || draftLastChangedByUser;
        if (!userDescription) {
          return ResourceModel.getText("M_FIELD_RUNTIME_DRAFT_POPOVER_UNSAVED_CHANGES_BY_UNKNOWN");
        } else {
          return draftInProcessByUser ? ResourceModel.getText("M_FIELD_RUNTIME_DRAFT_POPOVER_LOCKED_BY_KNOWN", [userDescription]) : ResourceModel.getText("M_FIELD_RUNTIME_DRAFT_POPOVER_UNSAVED_CHANGES_BY_KNOWN", [userDescription]);
        }
      } else {
        return ResourceModel.getText("M_FIELD_RUNTIME_DRAFT_POPOVER_NO_DATA_TEXT");
      }
    }

    /***
     * Gets the properties of the DraftAdministrativeData entity connected to the given entity set
     *
     * @returns List of property names
     */;
    var _proto = DraftIndicator.prototype;
    _proto.getDraftAdministrativeDataProperties = function getDraftAdministrativeDataProperties() {
      const draftAdministrativeDataContext = this.entitySet.getModel().createBindingContext("DraftAdministrativeData", this.entitySet);
      const convertedDraftAdministrativeData = convertMetaModelContext(draftAdministrativeDataContext);
      return convertedDraftAdministrativeData.targetType.entityProperties.map(property => property.name);
    }

    /**
     * Constructs the binding expression for the text displayed as title of the popup.
     *
     * @returns The binding expression
     */;
    _proto.getPopoverTitleBindingExpression = function getPopoverTitleBindingExpression() {
      return ifElse(not(Entity.IsActive), pathInModel("M_COMMON_DRAFT_OBJECT", "sap.fe.i18n"), ifElse(Entity.HasDraft, ifElse(not(isEmpty(pathInModel("DraftAdministrativeData/InProcessByUser"))), pathInModel("M_COMMON_DRAFT_LOCKED_OBJECT", "sap.fe.i18n"), pathInModel("M_DRAFT_POPOVER_ADMIN_UNSAVED_OBJECT", "sap.fe.i18n")), this.draftIndicatorType === ObjectMarkerVisibility.IconAndText ? " " : pathInModel("C_DRAFT_POPOVER_ADMIN_DATA_DRAFTINFO_FLAGGED_OBJECT", "sap.fe.i18n")));
    }

    /**
     * Constructs the binding expression for the text displayed to identify the draft owner in the popup.
     * This binding is configured to call formatDraftOwnerTextInPopover at runtime.
     *
     * We cannot reference formatDraftOwnerTextInPopover directly as we need to conditionally pass properties that might exist or not,
     * and referring to non-existing properties fails the binding.
     *
     * @returns The binding expression
     */;
    _proto.getDraftOwnerTextBindingExpression = function getDraftOwnerTextBindingExpression() {
      const draftAdministrativeDataProperties = this.getDraftAdministrativeDataProperties();
      const parts = [{
        path: "HasDraftEntity",
        targetType: "any"
      }, {
        path: "DraftAdministrativeData/InProcessByUser"
      }, {
        path: "DraftAdministrativeData/LastChangedByUser"
      }];
      if (draftAdministrativeDataProperties.includes("InProcessByUserDescription")) {
        parts.push({
          path: "DraftAdministrativeData/InProcessByUserDescription"
        });
      }
      if (draftAdministrativeDataProperties.includes("LastChangedByUserDescription")) {
        parts.push({
          path: "DraftAdministrativeData/LastChangedByUserDescription"
        });
      }
      return {
        parts,
        formatter: DraftIndicator.formatDraftOwnerTextInPopover
      };
    }

    /**
     * Creates a popover control to display draft information.
     *
     * @param control Control that the popover is to be created for
     * @returns The created popover control
     */;
    _proto.createPopover = function createPopover(control) {
      const isDraftWithNoChangesBinding = and(not(Entity.IsActive), isEmpty(pathInModel("DraftAdministrativeData/LastChangeDateTime")));
      const draftWithNoChangesTextBinding = this.draftIndicatorType === ObjectMarkerVisibility.IconAndText ? pathInModel("M_DRAFT_POPOVER_ADMIN_GENERIC_LOCKED_OBJECT_POPOVER_TEXT", "sap.fe.i18n") : pathInModel("C_DRAFT_POPOVER_ADMIN_DATA_DRAFTINFO_POPOVER_NO_DATA_TEXT", "sap.fe.i18n");
      const isDraftWithChangesBinding = and(not(Entity.IsActive), not(isEmpty(pathInModel("DraftAdministrativeData/LastChangeDateTime"))));
      const draftWithChangesTextBinding = {
        parts: [{
          path: "M_DRAFT_POPOVER_ADMIN_LAST_CHANGE_TEXT",
          model: "sap.fe.i18n"
        }, {
          path: "DraftAdministrativeData/LastChangeDateTime"
        }],
        formatter: formatMessage
      };
      const isActiveInstanceBinding = and(Entity.IsActive, not(isEmpty(pathInModel("DraftAdministrativeData/LastChangeDateTime"))));
      const activeInstanceTextBinding = deepClone(draftWithChangesTextBinding);
      const popover = _jsx(Popover, {
        title: this.getPopoverTitleBindingExpression(),
        showHeader: true,
        contentWidth: "15.625rem",
        verticalScrolling: false,
        class: "sapUiContentPadding",
        endButton: _jsx(Button, {
          icon: "sap-icon://decline",
          press: () => {
            var _this$draftPopover;
            return (_this$draftPopover = this.draftPopover) === null || _this$draftPopover === void 0 ? void 0 : _this$draftPopover.close();
          }
        }),
        children: _jsxs(VBox, {
          class: "sapUiContentPadding",
          children: [_jsx(VBox, {
            visible: isDraftWithNoChangesBinding,
            children: _jsx(Text, {
              text: draftWithNoChangesTextBinding
            })
          }), _jsx(VBox, {
            visible: isDraftWithChangesBinding,
            children: _jsx(Text, {
              text: draftWithChangesTextBinding
            })
          }), _jsxs(VBox, {
            visible: isActiveInstanceBinding,
            children: [_jsx(Text, {
              text: this.getDraftOwnerTextBindingExpression()
            }), _jsx(Text, {
              class: "sapUiSmallMarginTop",
              text: activeInstanceTextBinding
            })]
          })]
        })
      });
      CommonUtils.getTargetView(control).addDependent(popover);
      return popover;
    }

    /**
     * Handles pressing of the object marker by opening a corresponding popover.
     *
     * @param event Event object passed from the press event
     */;
    _proto.onObjectMarkerPressed = function onObjectMarkerPressed(event) {
      const source = event.getSource();
      const bindingContext = source.getBindingContext();
      this.draftPopover ??= this.createPopover(source);
      this.draftPopover.setBindingContext(bindingContext);
      this.draftPopover.openBy(source, false);
    }

    /**
     * Constructs the binding expression for the "additionalInfo" attribute in the "IconAndText" case.
     *
     * @returns The binding expression
     */;
    _proto.getIconAndTextAdditionalInfoBindingExpression = function getIconAndTextAdditionalInfoBindingExpression() {
      const draftAdministrativeDataProperties = this.getDraftAdministrativeDataProperties();
      const orBindings = [];
      if (draftAdministrativeDataProperties.includes("InProcessByUserDescription")) {
        orBindings.push(pathInModel("DraftAdministrativeData/InProcessByUserDescription"));
      }
      orBindings.push(pathInModel("DraftAdministrativeData/InProcessByUser"));
      if (draftAdministrativeDataProperties.includes("LastChangedByUserDescription")) {
        orBindings.push(pathInModel("DraftAdministrativeData/LastChangedByUserDescription"));
      }
      orBindings.push(pathInModel("DraftAdministrativeData/LastChangedByUser"));
      return ifElse(Entity.HasDraft, or(...orBindings), "");
    }

    /**
     * Returns the content of this building block for the "IconAndText" type.
     *
     * @returns The control tree
     */;
    _proto.getIconAndTextContent = function getIconAndTextContent() {
      const type = ifElse(not(Entity.IsActive), ObjectMarkerType.Draft, ifElse(Entity.HasDraft, ifElse(pathInModel("DraftAdministrativeData/InProcessByUser"), ObjectMarkerType.LockedBy, ifElse(pathInModel("DraftAdministrativeData/LastChangedByUser"), ObjectMarkerType.UnsavedBy, ObjectMarkerType.Unsaved)), ObjectMarkerType.Flagged));
      const visibility = ifElse(not(Entity.HasDraft), ObjectMarkerVisibility.TextOnly, ObjectMarkerVisibility.IconAndText);
      return _jsx(ObjectMarker, {
        type: type,
        press: this.onObjectMarkerPressed.bind(this),
        visibility: visibility,
        visible: this.isDraftIndicatorVisible,
        additionalInfo: this.getIconAndTextAdditionalInfoBindingExpression(),
        ariaLabelledBy: this.ariaLabelledBy ? [this.ariaLabelledBy] : [],
        class: this.class
      });
    }

    /**
     * Returns the content of this building block for the "IconOnly" type.
     *
     * @returns The control tree
     */;
    _proto.getIconOnlyContent = function getIconOnlyContent() {
      const type = ifElse(not(Entity.IsActive), ObjectMarkerType.Draft, ifElse(Entity.HasDraft, ifElse(pathInModel("DraftAdministrativeData/InProcessByUser"), ObjectMarkerType.Locked, ObjectMarkerType.Unsaved), ObjectMarkerType.Flagged));
      const visible = and(not(UI.IsEditable), Entity.HasDraft, not(pathInModel("DraftAdministrativeData/DraftIsCreatedByMe")));
      return _jsx(ObjectMarker, {
        type: type,
        press: this.onObjectMarkerPressed.bind(this),
        visibility: ObjectMarkerVisibility.IconOnly,
        visible: visible,
        ariaLabelledBy: this.ariaLabelledBy ? [this.ariaLabelledBy] : [],
        class: this.class
      });
    }

    /**
     * Returns the content of this building block.
     *
     * @returns The control tree
     */;
    _proto.getContent = function getContent() {
      if (this.draftIndicatorType === ObjectMarkerVisibility.IconAndText) {
        return this.getIconAndTextContent();
      } else {
        return this.getIconOnlyContent();
      }
    };
    return DraftIndicator;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "ariaLabelledBy", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "draftIndicatorType", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "entitySet", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "isDraftIndicatorVisible", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "class", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = DraftIndicator;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/draftIndicator/DraftIndicator.block", ["sap/base/strings/formatMessage","sap/base/util/deepClone","sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/CommonUtils","sap/fe/core/converters/helpers/BindingHelper","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/BindingToolkit","sap/fe/macros/ResourceModel","sap/m/Button","sap/m/library","sap/m/ObjectMarker","sap/m/Popover","sap/m/Text","sap/m/VBox","sap/fe/core/jsx-runtime/jsx","sap/fe/core/jsx-runtime/jsxs"],function(e,t,i,r,a,n,s,o,l,c,d,u,f,p,D,v){"use strict";var y,g,b,A,_,h,T,m,O,I,B,P,E,C,x;var M={};var R=c.ObjectMarkerVisibility;var U=c.ObjectMarkerType;var L=s.pathInModel;var N=s.or;var w=s.not;var V=s.isEmpty;var F=s.ifElse;var j=s.and;var k=n.convertMetaModelContext;var z=a.UI;var S=a.Entity;var H=i.defineBuildingBlock;var G=i.BuildingBlockBase;var K=i.blockAttribute;function J(e,t,i,r){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(r):void 0})}function W(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function X(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;Y(e,t)}function Y(e,t){Y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return Y(e,t)}function $(e,t,i,r,a){var n={};Object.keys(r).forEach(function(e){n[e]=r[e]});n.enumerable=!!n.enumerable;n.configurable=!!n.configurable;if("value"in n||n.initializer){n.writable=true}n=i.slice().reverse().reduce(function(i,r){return r(e,t,i)||i},n);if(a&&n.initializer!==void 0){n.value=n.initializer?n.initializer.call(a):void 0;n.initializer=undefined}if(n.initializer===void 0){Object.defineProperty(e,t,n);n=null}return n}function q(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let Q=(y=H({name:"DraftIndicator",namespace:"sap.fe.macros",isRuntime:true}),g=K({type:"string"}),b=K({type:"string"}),A=K({type:"string",defaultValue:"IconAndText",validate:e=>{if(e&&![R.IconOnly,R.IconAndText].includes(e)){throw new Error(`Allowed value ${e} does not match`)}}}),_=K({type:"sap.ui.model.Context",required:true,$kind:["EntitySet","NavigationProperty"]}),h=K({type:"boolean",defaultValue:false,bindable:true}),T=K({type:"string",defaultValue:""}),y(m=(O=function(i){X(a,i);function a(){var e;for(var t=arguments.length,r=new Array(t),a=0;a<t;a++){r[a]=arguments[a]}e=i.call(this,...r)||this;J(e,"id",I,W(e));J(e,"ariaLabelledBy",B,W(e));J(e,"draftIndicatorType",P,W(e));J(e,"entitySet",E,W(e));J(e,"isDraftIndicatorVisible",C,W(e));J(e,"class",x,W(e));return e}M=a;a.formatDraftOwnerTextInPopover=function e(t,i,r,a,n){if(t){const e=a||i||n||r;if(!e){return o.getText("M_FIELD_RUNTIME_DRAFT_POPOVER_UNSAVED_CHANGES_BY_UNKNOWN")}else{return i?o.getText("M_FIELD_RUNTIME_DRAFT_POPOVER_LOCKED_BY_KNOWN",[e]):o.getText("M_FIELD_RUNTIME_DRAFT_POPOVER_UNSAVED_CHANGES_BY_KNOWN",[e])}}else{return o.getText("M_FIELD_RUNTIME_DRAFT_POPOVER_NO_DATA_TEXT")}};var n=a.prototype;n.getDraftAdministrativeDataProperties=function e(){const t=this.entitySet.getModel().createBindingContext("DraftAdministrativeData",this.entitySet);const i=k(t);return i.targetType.entityProperties.map(e=>e.name)};n.getPopoverTitleBindingExpression=function e(){return F(w(S.IsActive),L("M_COMMON_DRAFT_OBJECT","sap.fe.i18n"),F(S.HasDraft,F(w(V(L("DraftAdministrativeData/InProcessByUser"))),L("M_COMMON_DRAFT_LOCKED_OBJECT","sap.fe.i18n"),L("M_DRAFT_POPOVER_ADMIN_UNSAVED_OBJECT","sap.fe.i18n")),this.draftIndicatorType===R.IconAndText?" ":L("C_DRAFT_POPOVER_ADMIN_DATA_DRAFTINFO_FLAGGED_OBJECT","sap.fe.i18n")))};n.getDraftOwnerTextBindingExpression=function e(){const t=this.getDraftAdministrativeDataProperties();const i=[{path:"HasDraftEntity",targetType:"any"},{path:"DraftAdministrativeData/InProcessByUser"},{path:"DraftAdministrativeData/LastChangedByUser"}];if(t.includes("InProcessByUserDescription")){i.push({path:"DraftAdministrativeData/InProcessByUserDescription"})}if(t.includes("LastChangedByUserDescription")){i.push({path:"DraftAdministrativeData/LastChangedByUserDescription"})}return{parts:i,formatter:a.formatDraftOwnerTextInPopover}};n.createPopover=function i(a){const n=j(w(S.IsActive),V(L("DraftAdministrativeData/LastChangeDateTime")));const s=this.draftIndicatorType===R.IconAndText?L("M_DRAFT_POPOVER_ADMIN_GENERIC_LOCKED_OBJECT_POPOVER_TEXT","sap.fe.i18n"):L("C_DRAFT_POPOVER_ADMIN_DATA_DRAFTINFO_POPOVER_NO_DATA_TEXT","sap.fe.i18n");const o=j(w(S.IsActive),w(V(L("DraftAdministrativeData/LastChangeDateTime"))));const c={parts:[{path:"M_DRAFT_POPOVER_ADMIN_LAST_CHANGE_TEXT",model:"sap.fe.i18n"},{path:"DraftAdministrativeData/LastChangeDateTime"}],formatter:e};const d=j(S.IsActive,w(V(L("DraftAdministrativeData/LastChangeDateTime"))));const y=t(c);const g=D(u,{title:this.getPopoverTitleBindingExpression(),showHeader:true,contentWidth:"15.625rem",verticalScrolling:false,class:"sapUiContentPadding",endButton:D(l,{icon:"sap-icon://decline",press:()=>{var e;return(e=this.draftPopover)===null||e===void 0?void 0:e.close()}}),children:v(p,{class:"sapUiContentPadding",children:[D(p,{visible:n,children:D(f,{text:s})}),D(p,{visible:o,children:D(f,{text:c})}),v(p,{visible:d,children:[D(f,{text:this.getDraftOwnerTextBindingExpression()}),D(f,{class:"sapUiSmallMarginTop",text:y})]})]})});r.getTargetView(a).addDependent(g);return g};n.onObjectMarkerPressed=function e(t){const i=t.getSource();const r=i.getBindingContext();this.draftPopover??=this.createPopover(i);this.draftPopover.setBindingContext(r);this.draftPopover.openBy(i,false)};n.getIconAndTextAdditionalInfoBindingExpression=function e(){const t=this.getDraftAdministrativeDataProperties();const i=[];if(t.includes("InProcessByUserDescription")){i.push(L("DraftAdministrativeData/InProcessByUserDescription"))}i.push(L("DraftAdministrativeData/InProcessByUser"));if(t.includes("LastChangedByUserDescription")){i.push(L("DraftAdministrativeData/LastChangedByUserDescription"))}i.push(L("DraftAdministrativeData/LastChangedByUser"));return F(S.HasDraft,N(...i),"")};n.getIconAndTextContent=function e(){const t=F(w(S.IsActive),U.Draft,F(S.HasDraft,F(L("DraftAdministrativeData/InProcessByUser"),U.LockedBy,F(L("DraftAdministrativeData/LastChangedByUser"),U.UnsavedBy,U.Unsaved)),U.Flagged));const i=F(w(S.HasDraft),R.TextOnly,R.IconAndText);return D(d,{type:t,press:this.onObjectMarkerPressed.bind(this),visibility:i,visible:this.isDraftIndicatorVisible,additionalInfo:this.getIconAndTextAdditionalInfoBindingExpression(),ariaLabelledBy:this.ariaLabelledBy?[this.ariaLabelledBy]:[],class:this.class})};n.getIconOnlyContent=function e(){const t=F(w(S.IsActive),U.Draft,F(S.HasDraft,F(L("DraftAdministrativeData/InProcessByUser"),U.Locked,U.Unsaved),U.Flagged));const i=j(w(z.IsEditable),S.HasDraft,w(L("DraftAdministrativeData/DraftIsCreatedByMe")));return D(d,{type:t,press:this.onObjectMarkerPressed.bind(this),visibility:R.IconOnly,visible:i,ariaLabelledBy:this.ariaLabelledBy?[this.ariaLabelledBy]:[],class:this.class})};n.getContent=function e(){if(this.draftIndicatorType===R.IconAndText){return this.getIconAndTextContent()}else{return this.getIconOnlyContent()}};return a}(G),I=$(O.prototype,"id",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),B=$(O.prototype,"ariaLabelledBy",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),P=$(O.prototype,"draftIndicatorType",[A],{configurable:true,enumerable:true,writable:true,initializer:null}),E=$(O.prototype,"entitySet",[_],{configurable:true,enumerable:true,writable:true,initializer:null}),C=$(O.prototype,"isDraftIndicatorVisible",[h],{configurable:true,enumerable:true,writable:true,initializer:null}),x=$(O.prototype,"class",[T],{configurable:true,enumerable:true,writable:true,initializer:null}),O))||m);M=Q;return M},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/fcl/FlexibleColumnLayoutActions-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime"], function (BuildingBlock, BuildingBlockRuntime) {
  "use strict";

  var _dec, _class;
  var _exports = {};
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  let FlexibleColumnLayoutActions = (_dec = defineBuildingBlock({
    name: "FlexibleColumnLayoutActions",
    namespace: "sap.fe.macros.fcl",
    publicNamespace: "sap.fe.macros"
  }), _dec(_class = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(FlexibleColumnLayoutActions, _BuildingBlockBase);
    function FlexibleColumnLayoutActions() {
      return _BuildingBlockBase.apply(this, arguments) || this;
    }
    _exports = FlexibleColumnLayoutActions;
    var _proto = FlexibleColumnLayoutActions.prototype;
    _proto.getTemplate = function getTemplate() {
      return xml`
            <m:OverflowToolbarButton
                id="fe::FCLStandardAction::FullScreen"
                type="Transparent"
                icon="{fclhelper>/actionButtonsInfo/switchIcon}"
                visible="{fclhelper>/actionButtonsInfo/switchVisible}"
                press="._routing.switchFullScreen()"
            />
            <m:OverflowToolbarButton
                id="fe::FCLStandardAction::Close"
                type="Transparent"
                icon="sap-icon://decline"
                tooltip="{sap.fe.i18n>C_COMMON_SAPFE_CLOSE}"
                visible="{fclhelper>/actionButtonsInfo/closeVisible}"
                press="._routing.closeColumn()"
            />`;
    };
    return FlexibleColumnLayoutActions;
  }(BuildingBlockBase)) || _class);
  _exports = FlexibleColumnLayoutActions;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/fcl/FlexibleColumnLayoutActions", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime"],function(e,t){"use strict";var o,n;var i={};var r=t.xml;var c=e.defineBuildingBlock;var l=e.BuildingBlockBase;function s(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;a(e,t)}function a(e,t){a=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,o){t.__proto__=o;return t};return a(e,t)}let u=(o=c({name:"FlexibleColumnLayoutActions",namespace:"sap.fe.macros.fcl",publicNamespace:"sap.fe.macros"}),o(n=function(e){s(t,e);function t(){return e.apply(this,arguments)||this}i=t;var o=t.prototype;o.getTemplate=function e(){return r`
            <m:OverflowToolbarButton
                id="fe::FCLStandardAction::FullScreen"
                type="Transparent"
                icon="{fclhelper>/actionButtonsInfo/switchIcon}"
                visible="{fclhelper>/actionButtonsInfo/switchVisible}"
                press="._routing.switchFullScreen()"
            />
            <m:OverflowToolbarButton
                id="fe::FCLStandardAction::Close"
                type="Transparent"
                icon="sap-icon://decline"
                tooltip="{sap.fe.i18n>C_COMMON_SAPFE_CLOSE}"
                visible="{fclhelper>/actionButtonsInfo/closeVisible}"
                press="._routing.closeColumn()"
            />`};return t}(l))||n);i=u;return i},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/FieldAPI-dbg", ["sap/fe/core/helpers/ClassSupport", "sap/ui/core/message/Message", "../MacroAPI"], function (ClassSupport, Message, MacroAPI) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11;
  var xmlEventHandler = ClassSupport.xmlEventHandler;
  var property = ClassSupport.property;
  var event = ClassSupport.event;
  var defineUI5Class = ClassSupport.defineUI5Class;
  var association = ClassSupport.association;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  /**
   * Returns the first visible control in the FieldWrapper.
   *
   * @param oControl FieldWrapper
   * @returns The first visible control
   */
  function getControlInFieldWrapper(oControl) {
    if (oControl.isA("sap.fe.core.controls.FieldWrapper")) {
      const oFieldWrapper = oControl;
      const aControls = oFieldWrapper.getEditMode() === "Display" ? [oFieldWrapper.getContentDisplay()] : oFieldWrapper.getContentEdit();
      if (aControls.length >= 1) {
        return aControls.length ? aControls[0] : undefined;
      }
    } else {
      return oControl;
    }
    return undefined;
  }

  /**
   * Building block for creating a field based on the metadata provided by OData V4.
   * <br>
   * Usually, a DataField or DataPoint annotation is expected, but the field can also be used to display a property from the entity type.
   *
   *
   * Usage example:
   * <pre>
   * &lt;macro:Field id="MyField" metaPath="MyProperty" /&gt;
   * </pre>
   *
   * @alias sap.fe.macros.Field
   * @public
   */
  let FieldAPI = (_dec = defineUI5Class("sap.fe.macros.field.FieldAPI"), _dec2 = property({
    type: "boolean"
  }), _dec3 = property({
    type: "boolean"
  }), _dec4 = property({
    type: "string"
  }), _dec5 = property({
    type: "string",
    expectedAnnotations: [],
    expectedTypes: ["EntitySet", "EntityType", "Singleton", "NavigationProperty", "Property"]
  }), _dec6 = event(), _dec7 = association({
    type: "sap.ui.core.Control",
    multiple: true,
    singularName: "ariaLabelledBy"
  }), _dec8 = property({
    type: "boolean"
  }), _dec9 = property({
    type: "sap.fe.macros.FieldFormatOptions"
  }), _dec10 = property({
    type: "string"
  }), _dec11 = property({
    type: "boolean"
  }), _dec12 = property({
    type: "boolean"
  }), _dec13 = xmlEventHandler(), _dec(_class = (_class2 = /*#__PURE__*/function (_MacroAPI) {
    _inheritsLoose(FieldAPI, _MacroAPI);
    function FieldAPI() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _MacroAPI.call(this, ...args) || this;
      _initializerDefineProperty(_this, "editable", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "readOnly", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "id", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "change", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "ariaLabelledBy", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "required", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "formatOptions", _descriptor8, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "semanticObject", _descriptor9, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "collaborationEnabled", _descriptor10, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visible", _descriptor11, _assertThisInitialized(_this));
      return _this;
    }
    var _proto = FieldAPI.prototype;
    _proto.handleChange = function handleChange(oEvent) {
      this.fireChange({
        value: this.getValue(),
        isValid: oEvent.getParameter("valid")
      });
    };
    _proto.onBeforeRendering = function onBeforeRendering() {
      const oContent = this.content;
      if (oContent && oContent.isA(["sap.m.Button"]) && oContent.addAriaLabelledBy) {
        const aAriaLabelledBy = this.getAriaLabelledBy();
        for (let i = 0; i < aAriaLabelledBy.length; i++) {
          const sId = aAriaLabelledBy[i];
          const aAriaLabelledBys = oContent.getAriaLabelledBy() || [];
          if (aAriaLabelledBys.indexOf(sId) === -1) {
            oContent.addAriaLabelledBy(sId);
          }
        }
      }
    };
    _proto.enhanceAccessibilityState = function enhanceAccessibilityState(_oElement, mAriaProps) {
      const oParent = this.getParent();
      if (oParent && oParent.enhanceAccessibilityState) {
        // use FieldWrapper as control, but aria properties of rendered inner control.
        oParent.enhanceAccessibilityState(this, mAriaProps);
      }
      return mAriaProps;
    };
    _proto.getAccessibilityInfo = function getAccessibilityInfo() {
      const oContent = this.content;
      return oContent && oContent.getAccessibilityInfo ? oContent.getAccessibilityInfo() : {};
    }
    /**
     * Returns the DOMNode ID to be used for the "labelFor" attribute.
     *
     * We forward the call of this method to the content control.
     *
     * @returns ID to be used for the <code>labelFor</code>
     */;
    _proto.getIdForLabel = function getIdForLabel() {
      const oContent = this.content;
      return oContent.getIdForLabel();
    }
    /**
     * Retrieves the current value of the field.
     *
     * @public
     * @returns The current value of the field
     */;
    _proto.getValue = function getValue() {
      var _oControl, _oControl2, _oControl3, _oControl4;
      let oControl = getControlInFieldWrapper(this.content);
      if (this.collaborationEnabled && (_oControl = oControl) !== null && _oControl !== void 0 && _oControl.isA("sap.m.HBox")) {
        oControl = oControl.getItems()[0];
      }
      if ((_oControl2 = oControl) !== null && _oControl2 !== void 0 && _oControl2.isA("sap.m.CheckBox")) {
        return oControl.getSelected();
      } else if ((_oControl3 = oControl) !== null && _oControl3 !== void 0 && _oControl3.isA("sap.m.InputBase")) {
        return oControl.getValue();
      } else if ((_oControl4 = oControl) !== null && _oControl4 !== void 0 && _oControl4.isA("sap.ui.mdc.Field")) {
        return oControl.getValue(); // FieldWrapper
      } else {
        throw "getting value not yet implemented for this field type";
      }
    }

    /**
     * Adds a message to the field.
     *
     * @param [parameters] The parameters to create message
     * @param parameters.type Type of the message
     * @param parameters.message Message text
     * @param parameters.description Message description
     * @param parameters.persistent True if the message is persistent
     * @returns The id of the message
     * @public
     */;
    _proto.addMessage = function addMessage(parameters) {
      const msgManager = this.getMessageManager();
      const oControl = getControlInFieldWrapper(this.content);
      let path; //target for oMessage
      if (oControl !== null && oControl !== void 0 && oControl.isA("sap.m.CheckBox")) {
        var _getBinding;
        path = (_getBinding = oControl.getBinding("selected")) === null || _getBinding === void 0 ? void 0 : _getBinding.getResolvedPath();
      } else if (oControl !== null && oControl !== void 0 && oControl.isA("sap.m.InputBase")) {
        var _getBinding2;
        path = (_getBinding2 = oControl.getBinding("value")) === null || _getBinding2 === void 0 ? void 0 : _getBinding2.getResolvedPath();
      } else if (oControl !== null && oControl !== void 0 && oControl.isA("sap.ui.mdc.Field")) {
        path = oControl.getBinding("value").getResolvedPath();
      }
      const oMessage = new Message({
        target: path,
        type: parameters.type,
        message: parameters.message,
        processor: oControl === null || oControl === void 0 ? void 0 : oControl.getModel(),
        description: parameters.description,
        persistent: parameters.persistent
      });
      msgManager.addMessages(oMessage);
      return oMessage.getId();
    }

    /**
     * Removes a message from the field.
     *
     * @param id The id of the message
     * @public
     */;
    _proto.removeMessage = function removeMessage(id) {
      const msgManager = this.getMessageManager();
      const arr = msgManager.getMessageModel().getData();
      const result = arr.find(e => e.id === id);
      if (result) {
        msgManager.removeMessages(result);
      }
    };
    _proto.getMessageManager = function getMessageManager() {
      return sap.ui.getCore().getMessageManager();
    };
    return FieldAPI;
  }(MacroAPI), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "editable", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "readOnly", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "change", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "ariaLabelledBy", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "required", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "formatOptions", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "semanticObject", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "collaborationEnabled", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class2.prototype, "handleChange", [_dec13], Object.getOwnPropertyDescriptor(_class2.prototype, "handleChange"), _class2.prototype)), _class2)) || _class);
  return FieldAPI;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/FieldAPI", ["sap/fe/core/helpers/ClassSupport","sap/ui/core/message/Message","../MacroAPI"],function(e,t,i){"use strict";var r,n,a,l,o,s,u,c,p,d,g,f,b,y,v,h,m,A,w,z,M,O,B,P,C,I;var E=e.xmlEventHandler;var j=e.property;var L=e.event;var F=e.defineUI5Class;var x=e.association;function S(e,t,i,r){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(r):void 0})}function D(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function R(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;V(e,t)}function V(e,t){V=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return V(e,t)}function _(e,t,i,r,n){var a={};Object.keys(r).forEach(function(e){a[e]=r[e]});a.enumerable=!!a.enumerable;a.configurable=!!a.configurable;if("value"in a||a.initializer){a.writable=true}a=i.slice().reverse().reduce(function(i,r){return r(e,t,i)||i},a);if(n&&a.initializer!==void 0){a.value=a.initializer?a.initializer.call(n):void 0;a.initializer=undefined}if(a.initializer===void 0){Object.defineProperty(e,t,a);a=null}return a}function k(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}function q(e){if(e.isA("sap.fe.core.controls.FieldWrapper")){const t=e;const i=t.getEditMode()==="Display"?[t.getContentDisplay()]:t.getContentEdit();if(i.length>=1){return i.length?i[0]:undefined}}else{return e}return undefined}let H=(r=F("sap.fe.macros.field.FieldAPI"),n=j({type:"boolean"}),a=j({type:"boolean"}),l=j({type:"string"}),o=j({type:"string",expectedAnnotations:[],expectedTypes:["EntitySet","EntityType","Singleton","NavigationProperty","Property"]}),s=L(),u=x({type:"sap.ui.core.Control",multiple:true,singularName:"ariaLabelledBy"}),c=j({type:"boolean"}),p=j({type:"sap.fe.macros.FieldFormatOptions"}),d=j({type:"string"}),g=j({type:"boolean"}),f=j({type:"boolean"}),b=E(),r(y=(v=function(e){R(i,e);function i(){var t;for(var i=arguments.length,r=new Array(i),n=0;n<i;n++){r[n]=arguments[n]}t=e.call(this,...r)||this;S(t,"editable",h,D(t));S(t,"readOnly",m,D(t));S(t,"id",A,D(t));S(t,"metaPath",w,D(t));S(t,"change",z,D(t));S(t,"ariaLabelledBy",M,D(t));S(t,"required",O,D(t));S(t,"formatOptions",B,D(t));S(t,"semanticObject",P,D(t));S(t,"collaborationEnabled",C,D(t));S(t,"visible",I,D(t));return t}var r=i.prototype;r.handleChange=function e(t){this.fireChange({value:this.getValue(),isValid:t.getParameter("valid")})};r.onBeforeRendering=function e(){const t=this.content;if(t&&t.isA(["sap.m.Button"])&&t.addAriaLabelledBy){const e=this.getAriaLabelledBy();for(let i=0;i<e.length;i++){const r=e[i];const n=t.getAriaLabelledBy()||[];if(n.indexOf(r)===-1){t.addAriaLabelledBy(r)}}}};r.enhanceAccessibilityState=function e(t,i){const r=this.getParent();if(r&&r.enhanceAccessibilityState){r.enhanceAccessibilityState(this,i)}return i};r.getAccessibilityInfo=function e(){const t=this.content;return t&&t.getAccessibilityInfo?t.getAccessibilityInfo():{}};r.getIdForLabel=function e(){const t=this.content;return t.getIdForLabel()};r.getValue=function e(){var t,i,r,n;let a=q(this.content);if(this.collaborationEnabled&&(t=a)!==null&&t!==void 0&&t.isA("sap.m.HBox")){a=a.getItems()[0]}if((i=a)!==null&&i!==void 0&&i.isA("sap.m.CheckBox")){return a.getSelected()}else if((r=a)!==null&&r!==void 0&&r.isA("sap.m.InputBase")){return a.getValue()}else if((n=a)!==null&&n!==void 0&&n.isA("sap.ui.mdc.Field")){return a.getValue()}else{throw"getting value not yet implemented for this field type"}};r.addMessage=function e(i){const r=this.getMessageManager();const n=q(this.content);let a;if(n!==null&&n!==void 0&&n.isA("sap.m.CheckBox")){var l;a=(l=n.getBinding("selected"))===null||l===void 0?void 0:l.getResolvedPath()}else if(n!==null&&n!==void 0&&n.isA("sap.m.InputBase")){var o;a=(o=n.getBinding("value"))===null||o===void 0?void 0:o.getResolvedPath()}else if(n!==null&&n!==void 0&&n.isA("sap.ui.mdc.Field")){a=n.getBinding("value").getResolvedPath()}const s=new t({target:a,type:i.type,message:i.message,processor:n===null||n===void 0?void 0:n.getModel(),description:i.description,persistent:i.persistent});r.addMessages(s);return s.getId()};r.removeMessage=function e(t){const i=this.getMessageManager();const r=i.getMessageModel().getData();const n=r.find(e=>e.id===t);if(n){i.removeMessages(n)}};r.getMessageManager=function e(){return sap.ui.getCore().getMessageManager()};return i}(i),h=_(v.prototype,"editable",[n],{configurable:true,enumerable:true,writable:true,initializer:null}),m=_(v.prototype,"readOnly",[a],{configurable:true,enumerable:true,writable:true,initializer:null}),A=_(v.prototype,"id",[l],{configurable:true,enumerable:true,writable:true,initializer:null}),w=_(v.prototype,"metaPath",[o],{configurable:true,enumerable:true,writable:true,initializer:null}),z=_(v.prototype,"change",[s],{configurable:true,enumerable:true,writable:true,initializer:null}),M=_(v.prototype,"ariaLabelledBy",[u],{configurable:true,enumerable:true,writable:true,initializer:null}),O=_(v.prototype,"required",[c],{configurable:true,enumerable:true,writable:true,initializer:null}),B=_(v.prototype,"formatOptions",[p],{configurable:true,enumerable:true,writable:true,initializer:null}),P=_(v.prototype,"semanticObject",[d],{configurable:true,enumerable:true,writable:true,initializer:null}),C=_(v.prototype,"collaborationEnabled",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),I=_(v.prototype,"visible",[f],{configurable:true,enumerable:true,writable:true,initializer:null}),_(v.prototype,"handleChange",[b],Object.getOwnPropertyDescriptor(v.prototype,"handleChange"),v.prototype),v))||y);return H},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/FieldBaseDelegate-dbg", ["sap/base/Log", "sap/fe/core/CommonUtils", "sap/fe/core/type/TypeUtil", "sap/ui/mdc/field/FieldBaseDelegate", "sap/ui/model/Filter"], function (Log, CommonUtils, TypeUtil, FieldBaseDelegate, Filter) {
  "use strict";

  return Object.assign({}, FieldBaseDelegate, {
    /**
     * If the <code>Field</code> control is used, the used data type might come from the binding.
     * In V4-unit or currency case it might need to be formatted once.
     * To initialize the internal type later on, the currencies must be returned.
     *
     * @param _payload Payload for delegate
     * @param type Type from binding
     * @param value Given value
     * @returns Information needed to initialize internal type (needs to set bTypeInitialized to true if initialized)
     */
    initializeTypeFromBinding: function (_payload, type, value) {
      // V4 Unit and Currency types have a map with valid units and create an internal customizing for it.
      // The Field needs to keep this customizing logic when creating the internal type.
      // (As external RAW binding is used there is no formatting on parsing.)

      const result = {};
      if (type && type.isA(["sap.ui.model.odata.type.Unit", "sap.ui.model.odata.type.Currency"]) && Array.isArray(value) && value.length > 2 && value[2] !== undefined) {
        // format once to set internal customizing. Allow null as valid values for custom units
        type.formatValue(value, "string");
        result.bTypeInitialized = true;
        result.mCustomUnits = value[2]; // TODO: find a better way to provide custom units to internal type
      }

      return result;
    },
    /**
     * This function initializes the unit type.
     * If the <code>Field</code> control is used, the used data type might come from the binding.
     * If the type is a V4 unit or currency, it might need to be formatted once.
     *
     * @param _payload Payload for delegate
     * @param type Type from binding
     * @param typeInitialization Information needed to initialize internal type
     */
    initializeInternalUnitType: function (_payload, type, typeInitialization) {
      if ((typeInitialization === null || typeInitialization === void 0 ? void 0 : typeInitialization.mCustomUnits) !== undefined) {
        // if already initialized initialize new type too.
        type.formatValue([null, null, typeInitialization.mCustomUnits], "string");
      }
    },
    /**
     * This function enhances the value with unit or currency information if needed by the data type.
     *
     * @param _payload Payload for delegate
     * @param  values Values
     * @param  typeInitialization Information needed to initialize internal type
     * @returns Values
     */
    enhanceValueForUnit: function (_payload, values, typeInitialization) {
      if ((typeInitialization === null || typeInitialization === void 0 ? void 0 : typeInitialization.bTypeInitialized) === true && values.length === 2) {
        values.push(typeInitialization.mCustomUnits);
        return values;
      }
      return undefined;
    },
    /**
     * This function returns which <code>ValueHelpDelegate</code> is used
     * if a default field help (for example, for defining conditions in </code>FilterField</code>)
     * is created.
     *
     * @param _payload Payload for delegate
     * @returns Delegate object with name and payload
     */
    getDefaultValueHelpDelegate: function (_payload) {
      return {
        name: "sap/ui/mdc/odata/v4/ValueHelpDelegate",
        payload: {}
      };
    },
    getTypeUtil: function (_payload) {
      return TypeUtil;
    },
    /**
     * Determine all parameters in a value help that use a specific property.
     *
     * @param valueListInfo Value list info
     * @param propertyName Name of the property
     * @returns List of all found parameters
     */
    _getValueListParameter: function (valueListInfo, propertyName) {
      //determine path to value list property
      return valueListInfo.Parameters.filter(function (entry) {
        if (entry.LocalDataProperty) {
          return entry.LocalDataProperty.$PropertyPath === propertyName;
        } else {
          return false;
        }
      });
    },
    /**
     * Build filters for each in-parameter.
     *
     * @param valueList Value list info
     * @param propertyName Name of the property
     * @param valueHelpProperty Name of the value help property
     * @param vKey Value of the property
     * @param valuehelpPayload Payload of the value help
     * @returns List of filters
     */
    _getFilter: function (valueList, propertyName, valueHelpProperty, vKey, valuehelpPayload) {
      const filters = [];
      const parameters = valueList.Parameters.filter(function (parameter) {
        var _parameter$LocalDataP;
        return parameter.$Type === "com.sap.vocabularies.Common.v1.ValueListParameterIn" || parameter.$Type === "com.sap.vocabularies.Common.v1.ValueListParameterInOut" || ((_parameter$LocalDataP = parameter.LocalDataProperty) === null || _parameter$LocalDataP === void 0 ? void 0 : _parameter$LocalDataP.$PropertyPath) === propertyName && parameter.ValueListProperty === valueHelpProperty;
      });
      for (const parameter of parameters) {
        var _parameter$LocalDataP2;
        if (((_parameter$LocalDataP2 = parameter.LocalDataProperty) === null || _parameter$LocalDataP2 === void 0 ? void 0 : _parameter$LocalDataP2.$PropertyPath) === propertyName) {
          filters.push(new Filter({
            path: valueHelpProperty,
            operator: "EQ",
            value1: vKey
          }));
        } else if ((parameter.$Type === "com.sap.vocabularies.Common.v1.ValueListParameterIn" || parameter.$Type === "com.sap.vocabularies.Common.v1.ValueListParameterInOut") && valuehelpPayload !== null && valuehelpPayload !== void 0 && valuehelpPayload.isActionParameterDialog) {
          var _parameter$LocalDataP3;
          const apdFieldPath = `APD_::${(_parameter$LocalDataP3 = parameter.LocalDataProperty) === null || _parameter$LocalDataP3 === void 0 ? void 0 : _parameter$LocalDataP3.$PropertyPath}`;
          const apdField = sap.ui.getCore().byId(apdFieldPath);
          const apdFieldValue = apdField === null || apdField === void 0 ? void 0 : apdField.getValue();
          if (apdFieldValue !== null) {
            filters.push(new Filter({
              path: parameter.ValueListProperty,
              operator: "EQ",
              value1: apdFieldValue
            }));
          }
        }
      }
      return filters;
    },
    getItemForValue: function (payload, fieldHelp, config) {
      //BCP: 2270162887 . The MDC field should not try to get the item when the field is emptied
      if (config.value !== "") {
        return FieldBaseDelegate.getItemForValue(payload, fieldHelp, config);
      }
      return undefined;
    },
    /**
     * Determines the description for a given key.
     *
     * @param payload Payload for delegate
     * @param valueHelp Field help assigned to the <code>Field</code> or <code>FilterField</code> control
     * @param key Key value of the description
     * @param _conditionIn In parameters for the key (no longer supported)
     * @param _conditionOut Out parameters for the key (no longer supported)
     * @param bindingContext BindingContext <code>BindingContext</code> of the checked field. Inside a table, the <code>FieldHelp</code> element can be connected to a different row
     * @param _ConditionModel ConditionModel</code>, if bound to one
     * @param _conditionModelName Name of the <code>ConditionModel</code>, if bound to one
     * @param _conditionPayload Additional context information for this key
     * @param control Instance of the calling control
     * @param _type Type of the value
     * @returns Description for the key or object containing a description, key and payload. If the description is not available right away (it must be requested), a <code>Promise</code> is returned
     */
    getDescription: async function (payload, valueHelp, key, _conditionIn, _conditionOut, bindingContext, _ConditionModel, _conditionModelName, _conditionPayload, control, _type) {
      var _payload2, _payload3;
      //JIRA: FIORITECHP1-22022 . The MDC field should not  tries to determine description with the initial GET of the data.
      // it should rely on the data we already received from the backend
      // But The getDescription function is also called in the FilterField case if a variant is loaded.
      // As the description text could be language dependent it is not stored in the variant, so it needs to be read on rendering.

      /* Retrieve text from value help, if value was set by out-parameter (BCP 2270160633) */
      if (!payload && control !== null && control !== void 0 && control.getDisplay().includes("Description")) {
        payload = {
          retrieveTextFromValueList: true
        };
      }
      if (((_payload2 = payload) === null || _payload2 === void 0 ? void 0 : _payload2.retrieveTextFromValueList) === true || ((_payload3 = payload) === null || _payload3 === void 0 ? void 0 : _payload3.isFilterField) === true) {
        const dataModel = valueHelp.getModel();
        const metaModel = dataModel ? dataModel.getMetaModel() : CommonUtils.getAppComponent(valueHelp).getModel().getMetaModel();
        const valuehelpPayload = valueHelp.getPayload();
        const propertyPath = valuehelpPayload === null || valuehelpPayload === void 0 ? void 0 : valuehelpPayload.propertyPath;
        let textProperty;
        try {
          var _valueHelpParameters$;
          /* Request value help metadata */
          const valueListInfo = await metaModel.requestValueListInfo(propertyPath, true, bindingContext);
          const propertyName = metaModel.getObject(`${propertyPath}@sapui.name`);
          // take the first value list annotation - alternatively take the one without qualifier or the first one
          const valueList = valueListInfo[Object.keys(valueListInfo)[0]];
          const valueHelpParameters = this._getValueListParameter(valueList, propertyName);
          const valueHelpProperty = valueHelpParameters === null || valueHelpParameters === void 0 ? void 0 : (_valueHelpParameters$ = valueHelpParameters[0]) === null || _valueHelpParameters$ === void 0 ? void 0 : _valueHelpParameters$.ValueListProperty;
          if (!valueHelpProperty) {
            throw Error(`Inconsistent value help annotation for ${propertyName}`);
          }
          // get text annotation for this value list property
          const valueListModel = valueList.$model;
          const textAnnotation = valueListModel.getMetaModel().getObject(`/${valueList.CollectionPath}/${valueHelpProperty}@com.sap.vocabularies.Common.v1.Text`);
          if (textAnnotation && textAnnotation.$Path) {
            textProperty = textAnnotation.$Path;
            /* Build the filter for each in-parameter */
            const filters = this._getFilter(valueList, propertyName, valueHelpProperty, key, valuehelpPayload);
            const listBinding = valueListModel.bindList(`/${valueList.CollectionPath}`, undefined, undefined, filters, {
              $select: textProperty
            });
            /* Request description for given key from value list entity */
            const contexts = await listBinding.requestContexts(0, 2);
            return contexts.length ? contexts[0].getObject(textProperty) : undefined;
          } else {
            const message = `Text Annotation for ${valueHelpProperty} is not defined`;
            Log.error(message);
            return undefined;
          }
        } catch (error) {
          const status = error ? error.status : undefined;
          const message = error instanceof Error ? error.message : String(error);
          const msg = status === 404 ? `Metadata not found (${status}) for value help of property ${propertyPath}` : message;
          Log.error(msg);
        }
      }
      return undefined;
    }
  });
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/FieldBaseDelegate", ["sap/base/Log","sap/fe/core/CommonUtils","sap/fe/core/type/TypeUtil","sap/ui/mdc/field/FieldBaseDelegate","sap/ui/model/Filter"],function(e,t,n,o,a){"use strict";return Object.assign({},o,{initializeTypeFromBinding:function(e,t,n){const o={};if(t&&t.isA(["sap.ui.model.odata.type.Unit","sap.ui.model.odata.type.Currency"])&&Array.isArray(n)&&n.length>2&&n[2]!==undefined){t.formatValue(n,"string");o.bTypeInitialized=true;o.mCustomUnits=n[2]}return o},initializeInternalUnitType:function(e,t,n){if((n===null||n===void 0?void 0:n.mCustomUnits)!==undefined){t.formatValue([null,null,n.mCustomUnits],"string")}},enhanceValueForUnit:function(e,t,n){if((n===null||n===void 0?void 0:n.bTypeInitialized)===true&&t.length===2){t.push(n.mCustomUnits);return t}return undefined},getDefaultValueHelpDelegate:function(e){return{name:"sap/ui/mdc/odata/v4/ValueHelpDelegate",payload:{}}},getTypeUtil:function(e){return n},_getValueListParameter:function(e,t){return e.Parameters.filter(function(e){if(e.LocalDataProperty){return e.LocalDataProperty.$PropertyPath===t}else{return false}})},_getFilter:function(e,t,n,o,i){const r=[];const l=e.Parameters.filter(function(e){var o;return e.$Type==="com.sap.vocabularies.Common.v1.ValueListParameterIn"||e.$Type==="com.sap.vocabularies.Common.v1.ValueListParameterInOut"||((o=e.LocalDataProperty)===null||o===void 0?void 0:o.$PropertyPath)===t&&e.ValueListProperty===n});for(const e of l){var u;if(((u=e.LocalDataProperty)===null||u===void 0?void 0:u.$PropertyPath)===t){r.push(new a({path:n,operator:"EQ",value1:o}))}else if((e.$Type==="com.sap.vocabularies.Common.v1.ValueListParameterIn"||e.$Type==="com.sap.vocabularies.Common.v1.ValueListParameterInOut")&&i!==null&&i!==void 0&&i.isActionParameterDialog){var s;const t=`APD_::${(s=e.LocalDataProperty)===null||s===void 0?void 0:s.$PropertyPath}`;const n=sap.ui.getCore().byId(t);const o=n===null||n===void 0?void 0:n.getValue();if(o!==null){r.push(new a({path:e.ValueListProperty,operator:"EQ",value1:o}))}}}return r},getItemForValue:function(e,t,n){if(n.value!==""){return o.getItemForValue(e,t,n)}return undefined},getDescription:async function(n,o,a,i,r,l,u,s,c,d,p){var f,m;if(!n&&d!==null&&d!==void 0&&d.getDisplay().includes("Description")){n={retrieveTextFromValueList:true}}if(((f=n)===null||f===void 0?void 0:f.retrieveTextFromValueList)===true||((m=n)===null||m===void 0?void 0:m.isFilterField)===true){const n=o.getModel();const i=n?n.getMetaModel():t.getAppComponent(o).getModel().getMetaModel();const r=o.getPayload();const u=r===null||r===void 0?void 0:r.propertyPath;let s;try{var v;const t=await i.requestValueListInfo(u,true,l);const n=i.getObject(`${u}@sapui.name`);const o=t[Object.keys(t)[0]];const c=this._getValueListParameter(o,n);const d=c===null||c===void 0?void 0:(v=c[0])===null||v===void 0?void 0:v.ValueListProperty;if(!d){throw Error(`Inconsistent value help annotation for ${n}`)}const p=o.$model;const f=p.getMetaModel().getObject(`/${o.CollectionPath}/${d}@com.sap.vocabularies.Common.v1.Text`);if(f&&f.$Path){s=f.$Path;const e=this._getFilter(o,n,d,a,r);const t=p.bindList(`/${o.CollectionPath}`,undefined,undefined,e,{$select:s});const i=await t.requestContexts(0,2);return i.length?i[0].getObject(s):undefined}else{const t=`Text Annotation for ${d} is not defined`;e.error(t);return undefined}}catch(t){const n=t?t.status:undefined;const o=t instanceof Error?t.message:String(t);const a=n===404?`Metadata not found (${n}) for value help of property ${u}`:o;e.error(a)}}return undefined}})},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/FieldHelper-dbg", ["sap/base/Log", "sap/fe/core/CommonUtils", "sap/fe/core/converters/helpers/BindingHelper", "sap/fe/core/converters/helpers/Key", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/helpers/ModelHelper", "sap/fe/core/helpers/SideEffectsHelper", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/templating/FieldControlHelper", "sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/UIFormatters", "sap/fe/macros/CommonHelper", "sap/fe/macros/internal/valuehelp/ValueListHelper", "sap/fe/macros/ResourceModel", "sap/ui/base/ManagedObject", "sap/ui/core/format/DateFormat", "sap/ui/model/json/JSONModel", "sap/ui/model/odata/v4/AnnotationHelper"], function (Log, CommonUtils, BindingHelper, Key, BindingToolkit, ModelHelper, SideEffectsHelper, StableIdHelper, FieldControlHelper, PropertyHelper, UIFormatters, CommonHelper, ValueListHelper, ResourceModel, ManagedObject, DateFormat, JSONModel, AnnotationHelper) {
  "use strict";

  var getAlignmentExpression = UIFormatters.getAlignmentExpression;
  var isProperty = PropertyHelper.isProperty;
  var isRequiredExpression = FieldControlHelper.isRequiredExpression;
  var generate = StableIdHelper.generate;
  var pathInModel = BindingToolkit.pathInModel;
  var or = BindingToolkit.or;
  var ifElse = BindingToolkit.ifElse;
  var equal = BindingToolkit.equal;
  var constant = BindingToolkit.constant;
  var compileExpression = BindingToolkit.compileExpression;
  var KeyHelper = Key.KeyHelper;
  var UI = BindingHelper.UI;
  const ISOCurrency = "@Org.OData.Measures.V1.ISOCurrency",
    Unit = "@Org.OData.Measures.V1.Unit";

  /**
   * What does the map look like?
   *    {
   *  	'namespace.of.entityType' : [
   * 			[namespace.of.entityType1#Qualifier,namespace.of.entityType2#Qualifier], --> Search For: mappingSourceEntities
   * 			{
   * 				'property' : [namespace.of.entityType3#Qualifier,namespace.of.entityType4#Qualifier] --> Search For: mappingSourceProperties
   * 			}
   * 	}.
   *
   * @param oInterface Interface instance
   * @returns Promise resolved when the map is ready and provides the map
   */
  async function _generateSideEffectsMap(oInterface) {
    const oMetaModel = oInterface.getModel();
    const oFieldSettings = oInterface.getSetting("sap.fe.macros.internal.Field");
    const oSideEffects = oFieldSettings.sideEffects;

    // Generate map once
    if (oSideEffects) {
      return oSideEffects;
    }
    return SideEffectsHelper.generateSideEffectsMapFromMetaModel(oMetaModel);
  }
  const FieldHelper = {
    /**
     * Determine how to show the value by analyzing Text and TextArrangement Annotations.
     *
     * @function
     * @name sap.fe.macros.field.FieldHelper#displayMode
     * @memberof sap.fe.macros.field.FieldHelper
     * @static
     * @param oPropertyAnnotations The Property annotations
     * @param oCollectionAnnotations The EntityType annotations
     * @returns The display mode of the field
     * @private
     * @ui5-restricted
     */
    displayMode: function (oPropertyAnnotations, oCollectionAnnotations) {
      const oTextAnnotation = oPropertyAnnotations["@com.sap.vocabularies.Common.v1.Text"],
        oTextArrangementAnnotation = oTextAnnotation && (oPropertyAnnotations && oPropertyAnnotations["@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement"] || oCollectionAnnotations && oCollectionAnnotations["@com.sap.vocabularies.UI.v1.TextArrangement"]);
      if (oTextArrangementAnnotation) {
        if (oTextArrangementAnnotation.$EnumMember === "com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly") {
          return "Description";
        } else if (oTextArrangementAnnotation.$EnumMember === "com.sap.vocabularies.UI.v1.TextArrangementType/TextLast") {
          return "ValueDescription";
        }
        //Default should be TextFirst if there is a Text annotation and neither TextOnly nor TextLast are set
        return "DescriptionValue";
      }
      return oTextAnnotation ? "DescriptionValue" : "Value";
    },
    buildExpressionForTextValue: function (sPropertyPath, oDataField) {
      const oMetaModel = oDataField.context.getModel();
      const sPath = oDataField.context.getPath();
      const oTextAnnotationContext = oMetaModel.createBindingContext(`${sPath}@com.sap.vocabularies.Common.v1.Text`);
      const oTextAnnotation = oTextAnnotationContext.getProperty();
      const sTextExpression = oTextAnnotation ? AnnotationHelper.value(oTextAnnotation, {
        context: oTextAnnotationContext
      }) : undefined;
      let sExpression = "";
      sPropertyPath = AnnotationHelper.getNavigationPath(sPropertyPath);
      if (sPropertyPath.indexOf("/") > -1 && sTextExpression) {
        sExpression = sPropertyPath.replace(/[^\/]*$/, sTextExpression.substr(1, sTextExpression.length - 2));
      } else {
        sExpression = sTextExpression;
      }
      if (sExpression) {
        sExpression = "{ path : '" + sExpression.replace(/^\{+/g, "").replace(/\}+$/g, "") + "', parameters: {'$$noPatch': true}}";
      }
      return sExpression;
    },
    buildTargetPathFromDataModelObjectPath: function (oDataModelObjectPath) {
      const sSartEntitySet = oDataModelObjectPath.startingEntitySet.name;
      let sPath = `/${sSartEntitySet}`;
      const aNavigationProperties = oDataModelObjectPath.navigationProperties;
      for (let i = 0; i < aNavigationProperties.length; i++) {
        sPath += `/${aNavigationProperties[i].name}`;
      }
      return sPath;
    },
    hasSemanticObjectTargets: function (oPropertyDataModelObjectPath) {
      var _oPropertyDefinition$, _oPropertyDefinition$2, _oPropertyDefinition$3, _oPropertyDefinition$4, _sSemanticObject$valu;
      const oPropertyDefinition = isProperty(oPropertyDataModelObjectPath.targetObject) ? oPropertyDataModelObjectPath.targetObject : oPropertyDataModelObjectPath.targetObject.$target;
      const sSemanticObject = (_oPropertyDefinition$ = oPropertyDefinition.annotations) === null || _oPropertyDefinition$ === void 0 ? void 0 : (_oPropertyDefinition$2 = _oPropertyDefinition$.Common) === null || _oPropertyDefinition$2 === void 0 ? void 0 : _oPropertyDefinition$2.SemanticObject;
      const aSemanticObjectUnavailableActions = (_oPropertyDefinition$3 = oPropertyDefinition.annotations) === null || _oPropertyDefinition$3 === void 0 ? void 0 : (_oPropertyDefinition$4 = _oPropertyDefinition$3.Common) === null || _oPropertyDefinition$4 === void 0 ? void 0 : _oPropertyDefinition$4.SemanticObjectUnavailableActions;
      const sPropertyLocationPath = FieldHelper.buildTargetPathFromDataModelObjectPath(oPropertyDataModelObjectPath);
      const sPropertyPath = `${sPropertyLocationPath}/${oPropertyDefinition.name}`;
      let sBindingExpression;
      if (sSemanticObject !== null && sSemanticObject !== void 0 && sSemanticObject.path) {
        sBindingExpression = compileExpression(pathInModel(sSemanticObject.path));
      }
      if (sPropertyPath && (sBindingExpression || (sSemanticObject === null || sSemanticObject === void 0 ? void 0 : (_sSemanticObject$valu = sSemanticObject.valueOf()) === null || _sSemanticObject$valu === void 0 ? void 0 : _sSemanticObject$valu.length) > 0)) {
        const sAlternatePath = sPropertyPath.replace(/\//g, "_"); //replaceAll("/","_");
        if (!sBindingExpression) {
          const sBindingPath = "pageInternal>semanticsTargets/" + (sSemanticObject === null || sSemanticObject === void 0 ? void 0 : sSemanticObject.valueOf()) + "/" + sAlternatePath + (!aSemanticObjectUnavailableActions ? "/HasTargetsNotFiltered" : "/HasTargets");
          return "{parts:[{path:'" + sBindingPath + "'}], formatter:'FieldRuntime.hasTargets'}";
        } else {
          // Semantic Object Name is a path we return undefined
          // this will be updated later via modelContextChange
          return undefined;
        }
      } else {
        return false;
      }
    },
    getStateDependingOnSemanticObjectTargets: function (oPropertyDataModelObjectPath) {
      var _oPropertyDefinition$5, _oPropertyDefinition$6, _oPropertyDefinition$7, _oPropertyDefinition$8, _sSemanticObject$valu2;
      const oPropertyDefinition = isProperty(oPropertyDataModelObjectPath.targetObject) ? oPropertyDataModelObjectPath.targetObject : oPropertyDataModelObjectPath.targetObject.$target;
      const sSemanticObject = (_oPropertyDefinition$5 = oPropertyDefinition.annotations) === null || _oPropertyDefinition$5 === void 0 ? void 0 : (_oPropertyDefinition$6 = _oPropertyDefinition$5.Common) === null || _oPropertyDefinition$6 === void 0 ? void 0 : _oPropertyDefinition$6.SemanticObject;
      const aSemanticObjectUnavailableActions = (_oPropertyDefinition$7 = oPropertyDefinition.annotations) === null || _oPropertyDefinition$7 === void 0 ? void 0 : (_oPropertyDefinition$8 = _oPropertyDefinition$7.Common) === null || _oPropertyDefinition$8 === void 0 ? void 0 : _oPropertyDefinition$8.SemanticObjectUnavailableActions;
      const sPropertyLocationPath = FieldHelper.buildTargetPathFromDataModelObjectPath(oPropertyDataModelObjectPath);
      const sPropertyPath = `${sPropertyLocationPath}/${oPropertyDefinition.name}`;
      let sBindingExpression;
      if (sSemanticObject !== null && sSemanticObject !== void 0 && sSemanticObject.path) {
        sBindingExpression = compileExpression(pathInModel(sSemanticObject.path));
      }
      if (sPropertyPath && (sBindingExpression || (sSemanticObject === null || sSemanticObject === void 0 ? void 0 : (_sSemanticObject$valu2 = sSemanticObject.valueOf()) === null || _sSemanticObject$valu2 === void 0 ? void 0 : _sSemanticObject$valu2.length) > 0)) {
        const sAlternatePath = sPropertyPath.replace(/\//g, "_");
        if (!sBindingExpression) {
          const sBindingPath = `pageInternal>semanticsTargets/${sSemanticObject === null || sSemanticObject === void 0 ? void 0 : sSemanticObject.valueOf()}/${sAlternatePath}${!aSemanticObjectUnavailableActions ? "/HasTargetsNotFiltered" : "/HasTargets"}`;
          return `{parts:[{path:'${sBindingPath}'}], formatter:'FieldRuntime.getStateDependingOnSemanticObjectTargets'}`;
        } else {
          return "Information";
        }
      } else {
        return "None";
      }
    },
    isNotAlwaysHidden: function (oDataField, oDetails) {
      const oContext = oDetails.context;
      let isAlwaysHidden = false;
      if (oDataField.Value && oDataField.Value.$Path) {
        isAlwaysHidden = oContext.getObject("Value/$Path@com.sap.vocabularies.UI.v1.Hidden");
      }
      if (!isAlwaysHidden || isAlwaysHidden.$Path) {
        isAlwaysHidden = oContext.getObject("@com.sap.vocabularies.UI.v1.Hidden");
        if (!isAlwaysHidden || isAlwaysHidden.$Path) {
          isAlwaysHidden = false;
        }
      }
      return !isAlwaysHidden;
    },
    isDraftIndicatorVisibleInFieldGroup: function (column) {
      if (column && column.formatOptions && column.formatOptions.fieldGroupDraftIndicatorPropertyPath && column.formatOptions.fieldGroupName) {
        return "{parts: [" + "{value: '" + column.formatOptions.fieldGroupName + "'}," + "{path: 'internal>semanticKeyHasDraftIndicator'} , " + "{path: 'HasDraftEntity', targetType: 'any'}, " + "{path: 'IsActiveEntity', targetType: 'any'}, " + "{path: 'pageInternal>hideDraftInfo', targetType: 'any'}], " + "formatter: 'sap.fe.macros.field.FieldRuntime.isDraftIndicatorVisible'}";
      } else {
        return false;
      }
    },
    isRequired: function (oFieldControl, sEditMode) {
      if (sEditMode === "Display" || sEditMode === "ReadOnly" || sEditMode === "Disabled") {
        return false;
      }
      if (oFieldControl) {
        if (ManagedObject.bindingParser(oFieldControl)) {
          return "{= %" + oFieldControl + " === 7}";
        } else {
          return oFieldControl == "com.sap.vocabularies.Common.v1.FieldControlType/Mandatory";
        }
      }
      return false;
    },
    getActionParameterVisibility: function (oParam, oContext) {
      // To use the UI.Hidden annotation for controlling visibility the value needs to be negated
      if (typeof oParam === "object") {
        if (oParam && oParam.$If && oParam.$If.length === 3) {
          // In case the UI.Hidden contains a dynamic expression we do this
          // by just switching the "then" and "else" part of the erpression
          // oParam.$If[0] <== Condition part
          // oParam.$If[1] <== Then part
          // oParam.$If[2] <== Else part
          const oNegParam = {
            $If: []
          };
          oNegParam.$If[0] = oParam.$If[0];
          oNegParam.$If[1] = oParam.$If[2];
          oNegParam.$If[2] = oParam.$If[1];
          return AnnotationHelper.value(oNegParam, oContext);
        } else {
          return "{= !%{" + oParam.$Path + "} }";
        }
      } else if (typeof oParam === "boolean") {
        return AnnotationHelper.value(!oParam, oContext);
      } else {
        return undefined;
      }
    },
    /**
     * Computed annotation that returns vProperty for a string and @sapui.name for an object.
     *
     * @param vProperty The property
     * @param oInterface The interface instance
     * @returns The property name
     */
    propertyName: function (vProperty, oInterface) {
      let sPropertyName;
      if (typeof vProperty === "string") {
        if (oInterface.context.getPath().indexOf("$Path") > -1 || oInterface.context.getPath().indexOf("$PropertyPath") > -1) {
          // We could end up with a pure string property (no $Path), and this is not a real property in that case
          sPropertyName = vProperty;
        }
      } else if (vProperty.$Path || vProperty.$PropertyPath) {
        const sPath = vProperty.$Path ? "/$Path" : "/$PropertyPath";
        const sContextPath = oInterface.context.getPath();
        sPropertyName = oInterface.context.getObject(`${sContextPath + sPath}/$@sapui.name`);
      } else if (vProperty.Value && vProperty.Value.$Path) {
        sPropertyName = vProperty.Value.$Path;
      } else {
        sPropertyName = oInterface.context.getObject("@sapui.name");
      }
      return sPropertyName;
    },
    /**
     * This method getFieldGroupIDs uses a map stored in preprocessing data for the macro Field
     * _generateSideEffectsMap generates this map once during templating for the first macro field
     * and then reuses it. Map exists only during templating.
     * The map is used to set the field group IDs for the macro field.
     * A field group ID has the format -- namespace.of.entityType#Qualifier
     * where 'namespace.of.entityType' is the target entity type of the side effect annotation
     * and 'Qualifier' is the qualififer of the side effect annotation.
     * This information is enough to identify the side effect annotation.
     *
     * @param oContext Context instance
     * @param sPropertyPath Property path
     * @returns A promise which provides a string of field group IDs separated by a comma
     */
    getFieldGroupIds: function (oContext, sPropertyPath) {
      if (!sPropertyPath) {
        return undefined;
      }
      const oInterface = oContext.getInterface(0);
      // generate the mapping for side effects or get the generated map if it is already generated
      return _generateSideEffectsMap(oInterface).then(function (oSideEffects) {
        const oFieldSettings = oInterface.getSetting("sap.fe.macros.internal.Field");
        oFieldSettings.sideEffects = oSideEffects;
        const sOwnerEntityType = oContext.getPath(1).substr(1);
        const aFieldGroupIds = FieldHelper.getSideEffectsOnEntityAndProperty(sPropertyPath, sOwnerEntityType, oSideEffects);
        let sFieldGroupIds;
        if (aFieldGroupIds.length) {
          sFieldGroupIds = aFieldGroupIds.reduce(function (sResult, sId) {
            return sResult && `${sResult},${sId}` || sId;
          });
        }
        return sFieldGroupIds; //"ID1,ID2,ID3..."
      });
    },

    /**
     * Generate map which has data from source entity as well as source property for a given field.
     *
     * @param sPath
     * @param sOwnerEntityType
     * @param oSideEffects
     * @returns An array of side Effect Ids.
     */
    getSideEffectsOnEntityAndProperty: function (sPath, sOwnerEntityType, oSideEffects) {
      const bIsNavigationPath = sPath.indexOf("/") > 0;
      sPath = bIsNavigationPath ? sPath.substr(sPath.lastIndexOf("/") + 1) : sPath;
      // add to fieldGroupIds, all side effects which mention sPath as source property or sOwnerEntityType as source entity
      return oSideEffects[sOwnerEntityType] && oSideEffects[sOwnerEntityType][0].concat(oSideEffects[sOwnerEntityType][1][sPath] || []) || [];
    },
    fieldControl: function (sPropertyPath, oInterface) {
      const oModel = oInterface && oInterface.context.getModel();
      const sPath = oInterface && oInterface.context.getPath();
      const oFieldControlContext = oModel && oModel.createBindingContext(`${sPath}@com.sap.vocabularies.Common.v1.FieldControl`);
      const oFieldControl = oFieldControlContext && oFieldControlContext.getProperty();
      if (oFieldControl) {
        if (oFieldControl.hasOwnProperty("$EnumMember")) {
          return oFieldControl.$EnumMember;
        } else if (oFieldControl.hasOwnProperty("$Path")) {
          return AnnotationHelper.value(oFieldControl, {
            context: oFieldControlContext
          });
        }
      } else {
        return undefined;
      }
    },
    /**
     * Method to get the value help property from a DataField or a PropertyPath (in case a SelectionField is used)
     * Priority from where to get the property value of the field (examples are "Name" and "Supplier"):
     * 1. If oPropertyContext.getObject() has key '$Path', then we take the value at '$Path'.
     * 2. Else, value at oPropertyContext.getObject().
     * If there is an ISOCurrency or if there are Unit annotations for the field property,
     * then the Path at the ISOCurrency or Unit annotations of the field property is considered.
     *
     * @memberof sap.fe.macros.field.FieldHelper.js
     * @param oPropertyContext The context from which value help property need to be extracted.
     * @param bInFilterField Whether or not we're in the filter field and should ignore
     * @returns The value help property path
     */
    valueHelpProperty: function (oPropertyContext, bInFilterField) {
      /* For currency (and later Unit) we need to forward the value help to the annotated field */
      const sContextPath = oPropertyContext.getPath();
      const oContent = oPropertyContext.getObject() || {};
      let sPath = oContent.$Path ? `${sContextPath}/$Path` : sContextPath;
      const sAnnoPath = `${sPath}@`;
      const oPropertyAnnotations = oPropertyContext.getObject(sAnnoPath);
      let sAnnotation;
      if (oPropertyAnnotations) {
        sAnnotation = oPropertyAnnotations.hasOwnProperty(ISOCurrency) && ISOCurrency || oPropertyAnnotations.hasOwnProperty(Unit) && Unit;
        if (sAnnotation && !bInFilterField) {
          const sUnitOrCurrencyPath = `${sPath + sAnnotation}/$Path`;
          // we check that the currency or unit is a Property and not a fixed value
          if (oPropertyContext.getObject(sUnitOrCurrencyPath)) {
            sPath = sUnitOrCurrencyPath;
          }
        }
      }
      return sPath;
    },
    /**
     * Dedicated method to avoid looking for unit properties.
     *
     * @param oPropertyContext
     * @returns The value help property path
     */
    valueHelpPropertyForFilterField: function (oPropertyContext) {
      return FieldHelper.valueHelpProperty(oPropertyContext, true);
    },
    /**
     * Method to generate the ID for Value Help.
     *
     * @function
     * @name getIDForFieldValueHelp
     * @memberof sap.fe.macros.field.FieldHelper.js
     * @param sFlexId Flex ID of the current object
     * @param sIdPrefix Prefix for the ValueHelp ID
     * @param sOriginalPropertyName Name of the property
     * @param sPropertyName Name of the ValueHelp Property
     * @returns The ID generated for the ValueHelp
     */
    getIDForFieldValueHelp: function (sFlexId, sIdPrefix, sOriginalPropertyName, sPropertyName) {
      if (sFlexId) {
        return sFlexId;
      }
      let sProperty = sPropertyName;
      if (sOriginalPropertyName !== sPropertyName) {
        sProperty = `${sOriginalPropertyName}::${sPropertyName}`;
      }
      return generate([sIdPrefix, sProperty]);
    },
    /**
     * Method to get the fieldHelp property of the FilterField.
     *
     * @function
     * @name getFieldHelpPropertyForFilterField
     * @memberof sap.fe.macros.field.FieldHelper.js
     * @param propertyContext Property context for filter field
     * @param oProperty The object of the FieldHelp property
     * @param sPropertyType The $Type of the property
     * @param sVhIdPrefix The ID prefix of the value help
     * @param sPropertyName The name of the property
     * @param sValueHelpPropertyName The property name of the value help
     * @param bHasValueListWithFixedValues `true` if there is a value list with a fixed value annotation
     * @param bUseSemanticDateRange `true` if the semantic date range is set to 'true' in the manifest
     * @returns The field help property of the value help
     */
    getFieldHelpPropertyForFilterField: function (propertyContext, oProperty, sPropertyType, sVhIdPrefix, sPropertyName, sValueHelpPropertyName, bHasValueListWithFixedValues, bUseSemanticDateRange) {
      const sProperty = FieldHelper.propertyName(oProperty, {
          context: propertyContext
        }),
        bSemanticDateRange = bUseSemanticDateRange === "true" || bUseSemanticDateRange === true;
      const oModel = propertyContext.getModel(),
        sPropertyPath = propertyContext.getPath(),
        sPropertyLocationPath = CommonHelper.getLocationForPropertyPath(oModel, sPropertyPath),
        oFilterRestrictions = CommonUtils.getFilterRestrictionsByPath(sPropertyLocationPath, oModel);
      if ((sPropertyType === "Edm.DateTimeOffset" || sPropertyType === "Edm.Date") && bSemanticDateRange && oFilterRestrictions && oFilterRestrictions.FilterAllowedExpressions && oFilterRestrictions.FilterAllowedExpressions[sProperty] && (oFilterRestrictions.FilterAllowedExpressions[sProperty].indexOf("SingleRange") !== -1 || oFilterRestrictions.FilterAllowedExpressions[sProperty].indexOf("SingleValue") !== -1) || sPropertyType === "Edm.Boolean" && !bHasValueListWithFixedValues) {
        return undefined;
      }
      return FieldHelper.getIDForFieldValueHelp(null, sVhIdPrefix || "FilterFieldValueHelp", sPropertyName, sValueHelpPropertyName);
    },
    /**
     * Method to get semantic key title
     *
     * @function
     * @name getSemanticKeyTitle
     * @memberof sap.fe.macros.field.FieldHelper.js
     * @param {string} sPropertyTextValue String containing the binding of text associated to the property
     * @param {string} sPropertyValue String containing the binding of a property
     * @param {string} sDataField String containing the name of a data field
     * @param {object} oTextArrangement Object containing the text arrangement
     * @param {string} sSemanticKeyStyle enum containing the style of the semantic key
     * @param {object} oDraftRoot Draft root object
     * @returns {string} - Binding that resolves to the title of the semantic key
     */

    getSemanticKeyTitle: function (sPropertyTextValue, sPropertyValue, sDataField, oTextArrangement, sSemanticKeyStyle, oDraftRoot) {
      const sNewObject = ResourceModel.getText("T_NEW_OBJECT");
      const sUnnamedObject = ResourceModel.getText("T_ANNOTATION_HELPER_DEFAULT_OBJECT_PAGE_HEADER_TITLE_NO_HEADER_INFO");
      let sNewObjectExpression, sUnnnamedObjectExpression;
      let sSemanticKeyTitleExpression;
      const addNewObjectUnNamedObjectExpression = function (sValue) {
        sNewObjectExpression = "($" + sValue + " === '' || $" + sValue + " === undefined || $" + sValue + " === null ? '" + sNewObject + "': $" + sValue + ")";
        sUnnnamedObjectExpression = "($" + sValue + " === '' || $" + sValue + " === undefined || $" + sValue + " === null ? '" + sUnnamedObject + "': $" + sValue + ")";
        return "(!%{IsActiveEntity} ? !%{HasActiveEntity} ? " + sNewObjectExpression + " : " + sUnnnamedObjectExpression + " : " + sUnnnamedObjectExpression + ")";
      };
      const buildExpressionForSemantickKeyTitle = function (sValue, bIsExpressionBinding) {
        let sExpression;
        if (oDraftRoot) {
          //check if it is draft root so that we can add NewObject and UnnamedObject feature
          sExpression = addNewObjectUnNamedObjectExpression(sValue);
          return bIsExpressionBinding ? "{= " + sExpression + "}" : sExpression;
        } else {
          return bIsExpressionBinding ? sValue : "$" + sValue;
        }
      };
      if (sPropertyTextValue) {
        // check for text association
        if (oTextArrangement && sSemanticKeyStyle !== "ObjectIdentifier") {
          // check if text arrangement is present and table type is GridTable
          const sTextArrangement = oTextArrangement.$EnumMember;
          if (sTextArrangement === "com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst") {
            // Eg: English (EN)
            sSemanticKeyTitleExpression = buildExpressionForSemantickKeyTitle(sPropertyTextValue, false);
            return "{= " + sSemanticKeyTitleExpression + " +' (' + " + "($" + sPropertyValue + (sDataField ? " || ${" + sDataField + "}" : "") + ") +')' }";
          } else if (sTextArrangement === "com.sap.vocabularies.UI.v1.TextArrangementType/TextLast") {
            // Eg: EN (English)
            sSemanticKeyTitleExpression = buildExpressionForSemantickKeyTitle(sPropertyTextValue, false);
            return "{= ($" + sPropertyValue + (sDataField ? " || ${" + sDataField + "}" : "") + ")" + " + ' (' + " + sSemanticKeyTitleExpression + " +')' }";
          } else {
            // for a Grid table when text is available and text arrangement is TextOnly or TextSeperate or no text arrangement then we return Text
            return buildExpressionForSemantickKeyTitle(sPropertyTextValue, true);
          }
        } else {
          return buildExpressionForSemantickKeyTitle(sPropertyTextValue, true);
        }
      } else {
        // if there is no text association then we return the property value
        return buildExpressionForSemantickKeyTitle(sPropertyValue, true);
      }
    },
    getObjectIdentifierText: function (oTextAnnotation, oTextArrangementAnnotation, sPropertyValueBinding, sDataFieldName) {
      if (oTextAnnotation) {
        // There is a text annotation. In this case, the ObjectIdentifier shows:
        //  - the *text* as the ObjectIdentifier's title
        //  - the *value* as the ObjectIdentifier's text
        //
        // So if the TextArrangement is #TextOnly or #TextSeparate, do not set the ObjectIdentifier's text
        // property
        if (oTextArrangementAnnotation && (oTextArrangementAnnotation.$EnumMember === "com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly" || oTextArrangementAnnotation.$EnumMember === "com.sap.vocabularies.UI.v1.TextArrangementType/TextSeparate" || oTextArrangementAnnotation.$EnumMember === "com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst")) {
          return undefined;
        } else {
          return sPropertyValueBinding || `{${sDataFieldName}}`;
        }
      }

      // no text annotation: the property value is part of the ObjectIdentifier's title already
      return undefined;
    },
    getSemanticObjectsList: function (propertyAnnotations) {
      // look for annotations SemanticObject with and without qualifier
      // returns : list of SemanticObjects
      const annotations = propertyAnnotations;
      const aSemanticObjects = [];
      for (const key in annotations.getObject()) {
        // var qualifier;
        if (key.indexOf("com.sap.vocabularies.Common.v1.SemanticObject") > -1 && key.indexOf("com.sap.vocabularies.Common.v1.SemanticObjectMapping") === -1 && key.indexOf("com.sap.vocabularies.Common.v1.SemanticObjectUnavailableActions") === -1) {
          let semanticObjectValue = annotations.getObject()[key];
          if (typeof semanticObjectValue === "object") {
            semanticObjectValue = AnnotationHelper.value(semanticObjectValue, {
              context: propertyAnnotations
            });
          }
          if (aSemanticObjects.indexOf(semanticObjectValue) === -1) {
            aSemanticObjects.push(semanticObjectValue);
          }
        }
      }
      const oSemanticObjectsModel = new JSONModel(aSemanticObjects);
      oSemanticObjectsModel.$$valueAsPromise = true;
      return oSemanticObjectsModel.createBindingContext("/");
    },
    getSemanticObjectsQualifiers: function (propertyAnnotations) {
      // look for annotations SemanticObject, SemanticObjectUnavailableActions, SemanticObjectMapping
      // returns : list of qualifiers (array of objects with qualifiers : {qualifier, SemanticObject, SemanticObjectUnavailableActions, SemanticObjectMapping for this qualifier}
      const annotations = propertyAnnotations;
      let qualifiersAnnotations = [];
      const findObject = function (qualifier) {
        return qualifiersAnnotations.find(function (object) {
          return object.qualifier === qualifier;
        });
      };
      for (const key in annotations.getObject()) {
        // var qualifier;
        if (key.indexOf("com.sap.vocabularies.Common.v1.SemanticObject#") > -1 || key.indexOf("com.sap.vocabularies.Common.v1.SemanticObjectMapping#") > -1 || key.indexOf("com.sap.vocabularies.Common.v1.SemanticObjectUnavailableActions#") > -1) {
          const annotationContent = annotations.getObject()[key],
            annotation = key.split("#")[0],
            qualifier = key.split("#")[1];
          let qualifierObject = findObject(qualifier);
          if (!qualifierObject) {
            qualifierObject = {
              qualifier: qualifier
            };
            qualifierObject[annotation] = annotationContent;
            qualifiersAnnotations.push(qualifierObject);
          } else {
            qualifierObject[annotation] = annotationContent;
          }
        }
      }
      qualifiersAnnotations = qualifiersAnnotations.filter(function (oQualifier) {
        return !!oQualifier["@com.sap.vocabularies.Common.v1.SemanticObject"];
      });
      const oQualifiersModel = new JSONModel(qualifiersAnnotations);
      oQualifiersModel.$$valueAsPromise = true;
      return oQualifiersModel.createBindingContext("/");
    },
    computeSemanticLinkModelContextChange: function (aSemanticObjects, oDataModelObjectPath) {
      if (FieldHelper.hasSemanticObjectsWithPath(aSemanticObjects)) {
        const sPathToProperty = FieldHelper.buildTargetPathFromDataModelObjectPath(oDataModelObjectPath);
        return `FieldRuntime.LinkModelContextChange($event, '${oDataModelObjectPath.targetObject.name}', '${sPathToProperty}')`;
      } else {
        return undefined;
      }
    },
    hasSemanticObjectsWithPath: function (aSemanticObjects) {
      let bSemanticObjectHasAPath = false;
      if (aSemanticObjects && aSemanticObjects.length) {
        for (let i = 0; i < aSemanticObjects.length; i++) {
          if (aSemanticObjects[i] && aSemanticObjects[i].value && aSemanticObjects[i].value.indexOf("{") === 0) {
            bSemanticObjectHasAPath = true;
            break;
          }
        }
      }
      return bSemanticObjectHasAPath;
    },
    isSemanticKeyHasFieldGroupColumn: function (isFieldGroupColumn) {
      return isFieldGroupColumn;
    },
    /*
     * Method to compute the delegate with payload
     * @function
     * @param {object} delegateName - name of the delegate methode
     * @param {boolean} retrieveTextFromValueList - added to the payload of the delegate methode
     * @return {object} - returns the delegate with payload
     */
    computeFieldBaseDelegate: function (delegateName, retrieveTextFromValueList) {
      if (retrieveTextFromValueList) {
        return JSON.stringify({
          name: delegateName,
          payload: {
            retrieveTextFromValueList: retrieveTextFromValueList
          }
        });
      }
      return `{name: '${delegateName}'}`;
    },
    _getPrimaryIntents: function (aSemanticObjectsList) {
      const aPromises = [];
      if (aSemanticObjectsList) {
        const oUshellContainer = sap.ushell && sap.ushell.Container;
        const oService = oUshellContainer && oUshellContainer.getService("CrossApplicationNavigation");
        aSemanticObjectsList.forEach(function (semObject) {
          if (typeof semObject === "string") {
            aPromises.push(oService.getPrimaryIntent(semObject, {}));
          }
        });
      }
      return Promise.all(aPromises).then(function (aSemObjectPrimaryAction) {
        return aSemObjectPrimaryAction;
      }).catch(function (oError) {
        Log.error("Error fetching primary intents", oError);
        return [];
      });
    },
    _SemanticObjectsHasPrimaryAction: function (oSemantics, aSemanticObjectsPrimaryActions) {
      const _fnIsSemanticObjectActionUnavailable = function (_oSemantics, _oPrimaryAction, _index) {
        for (const unavailableActionsIndex in _oSemantics.semanticObjectUnavailableActions[_index].actions) {
          if (_oPrimaryAction.intent.split("-")[1].indexOf(_oSemantics.semanticObjectUnavailableActions[_index].actions[unavailableActionsIndex]) === 0) {
            return false;
          }
        }
        return true;
      };
      oSemantics.semanticPrimaryActions = aSemanticObjectsPrimaryActions;
      const oPrimaryAction = oSemantics.semanticObjects && oSemantics.mainSemanticObject && oSemantics.semanticPrimaryActions[oSemantics.semanticObjects.indexOf(oSemantics.mainSemanticObject)];
      const sCurrentHash = CommonUtils.getHash();
      if (oSemantics.mainSemanticObject && oPrimaryAction !== null && oPrimaryAction.intent !== sCurrentHash) {
        for (const index in oSemantics.semanticObjectUnavailableActions) {
          if (oSemantics.mainSemanticObject.indexOf(oSemantics.semanticObjectUnavailableActions[index].semanticObject) === 0) {
            return _fnIsSemanticObjectActionUnavailable(oSemantics, oPrimaryAction, index);
          }
        }
        return true;
      } else {
        return false;
      }
    },
    checkPrimaryActions: function (oSemantics, bGetTitleLink) {
      return this._getPrimaryIntents(oSemantics && oSemantics.semanticObjects).then(aSemanticObjectsPrimaryActions => {
        return bGetTitleLink ? {
          titleLink: aSemanticObjectsPrimaryActions,
          hasTitleLink: this._SemanticObjectsHasPrimaryAction(oSemantics, aSemanticObjectsPrimaryActions)
        } : this._SemanticObjectsHasPrimaryAction(oSemantics, aSemanticObjectsPrimaryActions);
      }).catch(function (oError) {
        Log.error("Error in checkPrimaryActions", oError);
      });
    },
    _getTitleLinkWithParameters: function (_oSemanticObjectModel, _linkIntent) {
      if (_oSemanticObjectModel && _oSemanticObjectModel.titlelink) {
        return _oSemanticObjectModel.titlelink;
      } else {
        return _linkIntent;
      }
    },
    getPrimaryAction: function (oSemantics) {
      return oSemantics.semanticPrimaryActions[oSemantics.semanticObjects.indexOf(oSemantics.mainSemanticObject)].intent ? FieldHelper._getTitleLinkWithParameters(oSemantics, oSemantics.semanticPrimaryActions[oSemantics.semanticObjects.indexOf(oSemantics.mainSemanticObject)].intent) : oSemantics.primaryIntentAction;
    },
    /**
     * Method to fetch the filter restrictions. Filter restrictions can be annotated on an entity set or a navigation property.
     * Depending on the path to which the control is bound, we check for filter restrictions on the context path of the control,
     * or on the navigation property (if there is a navigation).
     * Eg. If the table is bound to '/EntitySet', for property path '/EntitySet/_Association/PropertyName', the filter restrictions
     * on '/EntitySet' win over filter restrictions on '/EntitySet/_Association'.
     * If the table is bound to '/EntitySet/_Association', the filter restrictions on '/EntitySet/_Association' win over filter
     * retrictions on '/AssociationEntitySet'.
     *
     * @param oContext Property Context
     * @param oProperty Property object in the metadata
     * @param bUseSemanticDateRange Boolean Suggests if semantic date range should be used
     * @param sSettings Stringified object of the property settings
     * @param contextPath Path to which the parent control (the table or the filter bar) is bound
     * @returns String containing comma-separated list of operators for filtering
     */
    operators: function (oContext, oProperty, bUseSemanticDateRange, sSettings, contextPath) {
      if (!oProperty || !contextPath) {
        return undefined;
      }
      let operators;
      const sProperty = FieldHelper.propertyName(oProperty, {
        context: oContext
      });
      const oModel = oContext.getModel(),
        sPropertyPath = oContext.getPath(),
        sPropertyLocationPath = CommonHelper.getLocationForPropertyPath(oModel, sPropertyPath),
        propertyType = oProperty.$Type;
      if (propertyType === "Edm.Guid") {
        return CommonUtils.getOperatorsForGuidProperty();
      }

      // remove '/'
      contextPath = contextPath.slice(0, -1);
      const isTableBoundToNavigation = contextPath.lastIndexOf("/") > 0;
      const isNavigationPath = isTableBoundToNavigation && contextPath !== sPropertyLocationPath || !isTableBoundToNavigation && sPropertyLocationPath.lastIndexOf("/") > 0;
      const navigationPath = isNavigationPath && sPropertyLocationPath.substr(sPropertyLocationPath.indexOf(contextPath) + contextPath.length + 1) || "";
      const propertyPath = isNavigationPath && navigationPath + "/" + sProperty || sProperty;
      if (!isTableBoundToNavigation) {
        if (!isNavigationPath) {
          // /SalesOrderManage/ID
          operators = CommonUtils.getOperatorsForProperty(sProperty, sPropertyLocationPath, oModel, propertyType, bUseSemanticDateRange, sSettings);
        } else {
          // /SalesOrderManange/_Item/Material
          //let operators
          operators = CommonUtils.getOperatorsForProperty(propertyPath, contextPath, oModel, propertyType, bUseSemanticDateRange, sSettings);
          if (operators.length === 0) {
            operators = CommonUtils.getOperatorsForProperty(sProperty, sPropertyLocationPath, oModel, propertyType, bUseSemanticDateRange, sSettings);
          }
        }
      } else if (!isNavigationPath) {
        var _operators;
        // /SalesOrderManage/_Item/Material
        operators = CommonUtils.getOperatorsForProperty(propertyPath, contextPath, oModel, propertyType, bUseSemanticDateRange, sSettings);
        if (operators.length === 0) {
          operators = CommonUtils.getOperatorsForProperty(sProperty, ModelHelper.getEntitySetPath(contextPath), oModel, propertyType, bUseSemanticDateRange, sSettings);
        }
        return ((_operators = operators) === null || _operators === void 0 ? void 0 : _operators.length) > 0 ? operators.toString() : undefined;
      } else {
        // /SalesOrderManage/_Item/_Association/PropertyName
        // This is currently not supported for tables
        operators = CommonUtils.getOperatorsForProperty(propertyPath, contextPath, oModel, propertyType, bUseSemanticDateRange, sSettings);
        if (operators.length === 0) {
          operators = CommonUtils.getOperatorsForProperty(propertyPath, ModelHelper.getEntitySetPath(contextPath), oModel, propertyType, bUseSemanticDateRange, sSettings);
        }
      }
      if ((!operators || operators.length === 0) && (propertyType === "Edm.Date" || propertyType === "Edm.DateTimeOffset")) {
        operators = CommonUtils.getOperatorsForDateProperty(propertyType);
      }
      return operators.length > 0 ? operators.toString() : undefined;
    },
    /**
     * Return the property context for usage in QuickView.
     *
     * @param oDataFieldContext Context of the data field or associated property
     * @returns Binding context
     */
    getPropertyContextForQuickView: function (oDataFieldContext) {
      if (oDataFieldContext.getObject("Value") !== undefined) {
        // Create a binding context to the property from the data field.
        const oInterface = oDataFieldContext.getInterface(),
          oModel = oInterface.getModel();
        let sPath = oInterface.getPath();
        sPath = sPath + (sPath.endsWith("/") ? "Value" : "/Value");
        return oModel.createBindingContext(sPath);
      } else {
        // It is a property. Just return the context as it is.
        return oDataFieldContext;
      }
    },
    /**
     * Return the binding context corresponding to the property path.
     *
     * @param oPropertyContext Context of the property
     * @returns Binding context
     */
    getPropertyPathForQuickView: function (oPropertyContext) {
      if (oPropertyContext && oPropertyContext.getObject("$Path")) {
        const oInterface = oPropertyContext.getInterface(),
          oModel = oInterface.getModel();
        let sPath = oInterface.getPath();
        sPath = sPath + (sPath.endsWith("/") ? "$Path" : "/$Path");
        return oModel.createBindingContext(sPath);
      }
      return oPropertyContext;
    },
    /**
     * Return the path of the DaFieldDefault (if any). Otherwise, the DataField path is returned.
     *
     * @param oDataFieldContext Context of the DataField
     * @returns Object path
     */
    getDataFieldDefault: function (oDataFieldContext) {
      const oDataFieldDefault = oDataFieldContext.getModel().getObject(`${oDataFieldContext.getPath()}@com.sap.vocabularies.UI.v1.DataFieldDefault`);
      return oDataFieldDefault ? `${oDataFieldContext.getPath()}@com.sap.vocabularies.UI.v1.DataFieldDefault` : oDataFieldContext.getPath();
    },
    /*
     * Method to get visible expression for DataFieldActionButton
     * @function
     * @name isDataFieldActionButtonVisible
     * @param {object} oThis - Current Object
     * @param {object} oDataField - DataPoint's Value
     * @param {boolean} bIsBound - DataPoint action bound
     * @param {object} oActionContext - ActionContext Value
     * @return {boolean} - returns boolean
     */
    isDataFieldActionButtonVisible: function (oThis, oDataField, bIsBound, oActionContext) {
      return oDataField["@com.sap.vocabularies.UI.v1.Hidden"] !== true && (bIsBound !== true || oActionContext !== false);
    },
    /**
     * Method to get press event for DataFieldActionButton.
     *
     * @function
     * @name getPressEventForDataFieldActionButton
     * @param oThis Current Object
     * @param oDataField DataPoint's Value
     * @returns The binding expression for the DataFieldActionButton press event
     */
    getPressEventForDataFieldActionButton: function (oThis, oDataField) {
      var _oThis$entitySet;
      let sInvocationGrouping = "Isolated";
      if (oDataField.InvocationGrouping && oDataField.InvocationGrouping.$EnumMember === "com.sap.vocabularies.UI.v1.OperationGroupingType/ChangeSet") {
        sInvocationGrouping = "ChangeSet";
      }
      let bIsNavigable = oThis.navigateAfterAction;
      bIsNavigable = bIsNavigable === "false" ? false : true;
      const entities = oThis === null || oThis === void 0 ? void 0 : (_oThis$entitySet = oThis.entitySet) === null || _oThis$entitySet === void 0 ? void 0 : _oThis$entitySet.getPath().split("/");
      const entitySetName = entities[entities.length - 1];
      const oParams = {
        contexts: "${$source>/}.getBindingContext()",
        invocationGrouping: CommonHelper.addSingleQuotes(sInvocationGrouping),
        model: "${$source>/}.getModel()",
        label: CommonHelper.addSingleQuotes(oDataField.Label, true),
        isNavigable: bIsNavigable,
        entitySetName: CommonHelper.addSingleQuotes(entitySetName)
      };
      return CommonHelper.generateFunction(".editFlow.invokeAction", CommonHelper.addSingleQuotes(oDataField.Action), CommonHelper.objectToString(oParams));
    },
    isNumericDataType: function (sDataFieldType) {
      const _sDataFieldType = sDataFieldType;
      if (_sDataFieldType !== undefined) {
        const aNumericDataTypes = ["Edm.Int16", "Edm.Int32", "Edm.Int64", "Edm.Byte", "Edm.SByte", "Edm.Single", "Edm.Decimal", "Edm.Double"];
        return aNumericDataTypes.indexOf(_sDataFieldType) === -1 ? false : true;
      } else {
        return false;
      }
    },
    isDateOrTimeDataType: function (sPropertyType) {
      if (sPropertyType !== undefined) {
        const aDateTimeDataTypes = ["Edm.DateTimeOffset", "Edm.DateTime", "Edm.Date", "Edm.TimeOfDay", "Edm.Time"];
        return aDateTimeDataTypes.indexOf(sPropertyType) > -1;
      } else {
        return false;
      }
    },
    isDateTimeDataType: function (sPropertyType) {
      if (sPropertyType !== undefined) {
        const aDateDataTypes = ["Edm.DateTimeOffset", "Edm.DateTime"];
        return aDateDataTypes.indexOf(sPropertyType) > -1;
      } else {
        return false;
      }
    },
    isDateDataType: function (sPropertyType) {
      return sPropertyType === "Edm.Date";
    },
    isTimeDataType: function (sPropertyType) {
      if (sPropertyType !== undefined) {
        const aDateDataTypes = ["Edm.TimeOfDay", "Edm.Time"];
        return aDateDataTypes.indexOf(sPropertyType) > -1;
      } else {
        return false;
      }
    },
    /**
     * Method to return the underlying property data type in case TextArrangement annotation of Text annotation 'TextOnly' exists.
     *
     * @param oAnnotations All the annotations of a property
     * @param oModel An instance of OData v4 model
     * @param sEntityPath The path to root Entity
     * @param sType The property data type
     * @returns The underlying property data type for TextOnly annotated property, otherwise the original data type.
     * @private
     */
    getUnderlyingPropertyDataType: function (oAnnotations, oModel, sEntityPath, sType) {
      const sTextAnnotation = "@com.sap.vocabularies.Common.v1.Text",
        sTextArrangementAnnotation = "@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement";
      if (!!oAnnotations && !!oAnnotations[sTextArrangementAnnotation] && oAnnotations[sTextArrangementAnnotation].$EnumMember === "com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly" && !!oAnnotations[sTextAnnotation] && !!oAnnotations[sTextAnnotation].$Path) {
        return oModel.getObject(`${sEntityPath}/${oAnnotations[sTextAnnotation].$Path}/$Type`);
      }
      return sType;
    },
    getColumnAlignment: function (oDataField, oTable) {
      const sEntityPath = oTable.collection.sPath,
        oModel = oTable.collection.oModel;
      if ((oDataField["$Type"] === "com.sap.vocabularies.UI.v1.DataFieldForAction" || oDataField["$Type"] === "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation") && oDataField.Inline && oDataField.IconUrl) {
        return "Center";
      }
      // Columns containing a Semantic Key must be Begin aligned
      const aSemanticKeys = oModel.getObject(`${sEntityPath}/@com.sap.vocabularies.Common.v1.SemanticKey`);
      if (oDataField["$Type"] === "com.sap.vocabularies.UI.v1.DataField") {
        const sPropertyPath = oDataField.Value.$Path;
        const bIsSemanticKey = aSemanticKeys && !aSemanticKeys.every(function (oKey) {
          return oKey.$PropertyPath !== sPropertyPath;
        });
        if (bIsSemanticKey) {
          return "Begin";
        }
      }
      return FieldHelper.getDataFieldAlignment(oDataField, oModel, sEntityPath);
    },
    /**
     * Get alignment based only on the property.
     *
     * @param sType The property's type
     * @param oFormatOptions The field format options
     * @param [oComputedEditMode] The computed Edit mode of the property is empty when directly called from the ColumnProperty fragment
     * @returns The property alignment
     */
    getPropertyAlignment: function (sType, oFormatOptions, oComputedEditMode) {
      let sDefaultAlignment = "Begin";
      const sTextAlignment = oFormatOptions ? oFormatOptions.textAlignMode : "";
      switch (sTextAlignment) {
        case "Form":
          if (this.isNumericDataType(sType)) {
            sDefaultAlignment = "Begin";
            if (oComputedEditMode) {
              sDefaultAlignment = getAlignmentExpression(oComputedEditMode, "Begin", "End");
            }
          }
          break;
        default:
          if (this.isNumericDataType(sType) || this.isDateOrTimeDataType(sType)) {
            sDefaultAlignment = "Right";
          }
          break;
      }
      return sDefaultAlignment;
    },
    getDataFieldAlignment: function (oDataField, oModel, sEntityPath, oFormatOptions, oComputedEditMode) {
      let sDataFieldPath,
        sDefaultAlignment = "Begin",
        sType,
        oAnnotations;
      if (oDataField["$Type"] === "com.sap.vocabularies.UI.v1.DataFieldForAnnotation") {
        sDataFieldPath = oDataField.Target.$AnnotationPath;
        if (oDataField.Target["$AnnotationPath"] && oDataField.Target["$AnnotationPath"].indexOf("com.sap.vocabularies.UI.v1.FieldGroup") >= 0) {
          const oFieldGroup = oModel.getObject(`${sEntityPath}/${sDataFieldPath}`);
          for (let i = 0; i < oFieldGroup.Data.length; i++) {
            sType = oModel.getObject(`${sEntityPath}/${sDataFieldPath}/Data/${i.toString()}/Value/$Path/$Type`);
            oAnnotations = oModel.getObject(`${sEntityPath}/${sDataFieldPath}/Data/${i.toString()}/Value/$Path@`);
            sType = this.getUnderlyingPropertyDataType(oAnnotations, oModel, sEntityPath, sType);
            sDefaultAlignment = this.getPropertyAlignment(sType, oFormatOptions, oComputedEditMode);
            if (sDefaultAlignment === "Begin") {
              break;
            }
          }
          return sDefaultAlignment;
        } else if (oDataField.Target["$AnnotationPath"] && oDataField.Target["$AnnotationPath"].indexOf("com.sap.vocabularies.UI.v1.DataPoint") >= 0 && oModel.getObject(`${sEntityPath}/${sDataFieldPath}/Visualization/$EnumMember`) === "com.sap.vocabularies.UI.v1.VisualizationType/Rating") {
          return sDefaultAlignment;
        } else {
          sType = oModel.getObject(`${sEntityPath}/${sDataFieldPath}/$Type`);
          if (sType === "com.sap.vocabularies.UI.v1.DataPointType") {
            sType = oModel.getObject(`${sEntityPath}/${sDataFieldPath}/Value/$Path/$Type`);
            oAnnotations = oModel.getObject(`${sEntityPath}/${sDataFieldPath}/Value/$Path@`);
            sType = this.getUnderlyingPropertyDataType(oAnnotations, oModel, sEntityPath, sType);
          }
          sDefaultAlignment = this.getPropertyAlignment(sType, oFormatOptions, oComputedEditMode);
        }
      } else {
        sDataFieldPath = oDataField.Value.$Path;
        sType = oModel.getObject(`${sEntityPath}/${sDataFieldPath}/$Type`);
        oAnnotations = oModel.getObject(`${sEntityPath}/${sDataFieldPath}@`);
        sType = this.getUnderlyingPropertyDataType(oAnnotations, oModel, sEntityPath, sType);
        if (!(oModel.getObject(`${sEntityPath}/`)["$Key"].indexOf(sDataFieldPath) === 0)) {
          sDefaultAlignment = this.getPropertyAlignment(sType, oFormatOptions, oComputedEditMode);
        }
      }
      return sDefaultAlignment;
    },
    getTypeAlignment: function (oContext, oDataField, oFormatOptions, sEntityPath, oComputedEditMode, oProperty) {
      const oInterface = oContext.getInterface(0);
      const oModel = oInterface.getModel();
      if (sEntityPath === "/undefined" && oProperty && oProperty.$target) {
        sEntityPath = `/${oProperty.$target.fullyQualifiedName.split("/")[0]}`;
      }
      return FieldHelper.getDataFieldAlignment(oDataField, oModel, sEntityPath, oFormatOptions, oComputedEditMode);
    },
    /**
     * Method to get enabled expression for DataFieldActionButton.
     *
     * @function
     * @name isDataFieldActionButtonEnabled
     * @param oDataField DataPoint's Value
     * @param bIsBound DataPoint action bound
     * @param oActionContext ActionContext Value
     * @param sActionContextFormat Formatted value of ActionContext
     * @returns A boolean or string expression for enabled property
     */
    isDataFieldActionButtonEnabled: function (oDataField, bIsBound, oActionContext, sActionContextFormat) {
      if (bIsBound !== true) {
        return "true";
      }
      return (oActionContext === null ? "{= !${#" + oDataField.Action + "} ? false : true }" : oActionContext) ? sActionContextFormat : "true";
    },
    /**
     * Method to get labelText for DataField.
     *
     * @function
     * @name getLabelTextForDataField
     * @param oEntitySetModel The EntitySet model Object
     * @param oPropertyPath The Property path's object
     * @param sPropertyPathBuildExpression The evaluated value of expression @@FIELD.buildExpressionForTextValue
     * @param sPropertyValue Property value from model
     * @param sUiName The sapui.name annotation value
     * @param sSemanticKeyStyle
     * @returns The binding expression for datafield label.
     */
    getLabelTextForDataField: function (oEntitySetModel, oPropertyPath, sPropertyPathBuildExpression, sPropertyValue, sUiName, sSemanticKeyStyle) {
      const oDraftRoot = oEntitySetModel["@com.sap.vocabularies.Common.v1.DraftRoot"];
      return FieldHelper.getSemanticKeyTitle(oPropertyPath["@com.sap.vocabularies.Common.v1.Text"] && sPropertyPathBuildExpression, sPropertyValue, sUiName, oPropertyPath["@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement"], sSemanticKeyStyle, oDraftRoot);
    },
    /**
     * Method to retrieve text from value list for DataField.
     *
     * @function
     * @name retrieveTextFromValueList
     * @param oEntitySetModel The EntitySet model Object
     * @param sPropertyPath The property path's name
     * @param oFormatOptions The evaluated informations for the format option
     * @returns The binding expression for datafield text.
     */
    retrieveTextFromValueList: function (oEntitySetModel, sPropertyPath, oFormatOptions) {
      const sPropertyFullPath = `${oEntitySetModel.sPath}/${sPropertyPath}`;
      const sDisplayFormat = oFormatOptions.displayMode;
      CommonHelper.setMetaModel(oEntitySetModel.getModel());
      return "{= FieldRuntime.retrieveTextFromValueList(%{" + sPropertyPath + "},'" + sPropertyFullPath + "','" + sDisplayFormat + "')}";
    },
    /**
     * Method to compute the label for a DataField.
     * If the DataField's label is an empty string, it's not rendered even if a fallback exists.
     *
     * @function
     * @name computeLabelText
     * @param {object} oDataField The DataField being processed
     * @param {object} oInterface The interface for context instance
     * @returns {string} The computed text for the DataField label.
     */

    computeLabelText: function (oDataField, oInterface) {
      const oModel = oInterface.context.getModel();
      let sContextPath = oInterface.context.getPath();
      if (sContextPath.endsWith("/")) {
        sContextPath = sContextPath.slice(0, sContextPath.lastIndexOf("/"));
      }
      const sDataFieldLabel = oModel.getObject(`${sContextPath}/Label`);
      //We do not show an additional label text for a button:
      if (oDataField.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAction" || oDataField.$Type === "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation") {
        return undefined;
      }
      if (sDataFieldLabel) {
        return sDataFieldLabel;
      } else if (sDataFieldLabel === "") {
        return "";
      }
      let sDataFieldTargetTitle;
      if (oDataField.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAnnotation") {
        if (oDataField.Target.$AnnotationPath.indexOf("@com.sap.vocabularies.UI.v1.DataPoint") > -1 || oDataField.Target.$AnnotationPath.indexOf("@com.sap.vocabularies.UI.v1.Chart") > -1) {
          sDataFieldTargetTitle = oModel.getObject(`${sContextPath}/Target/$AnnotationPath@/Title`);
        }
        if (oDataField.Target.$AnnotationPath.indexOf("@com.sap.vocabularies.Communication.v1.Contact") > -1) {
          sDataFieldTargetTitle = oModel.getObject(`${sContextPath}/Target/$AnnotationPath@/fn/$Path@com.sap.vocabularies.Common.v1.Label`);
        }
      }
      if (sDataFieldTargetTitle) {
        return sDataFieldTargetTitle;
      }
      let sDataFieldTargetLabel;
      if (oDataField.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAnnotation") {
        sDataFieldTargetLabel = oModel.getObject(`${sContextPath}/Target/$AnnotationPath@/Label`);
      }
      if (sDataFieldTargetLabel) {
        return sDataFieldTargetLabel;
      }
      const sDataFieldValueLabel = oModel.getObject(`${sContextPath}/Value/$Path@com.sap.vocabularies.Common.v1.Label`);
      if (sDataFieldValueLabel) {
        return sDataFieldValueLabel;
      }
      let sDataFieldTargetValueLabel;
      if (oDataField.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAnnotation") {
        sDataFieldTargetValueLabel = oModel.getObject(`${sContextPath}/Target/$AnnotationPath/Value/$Path@com.sap.vocabularies.Common.v1.Label`);
      }
      if (sDataFieldTargetValueLabel) {
        return sDataFieldTargetValueLabel;
      }
      return "";
    },
    /**
     * Method to align the data fields with their label.
     *
     * @function
     * @name buildExpressionForAlignItems
     * @param sVisualization
     * @returns Expression binding for alignItems property
     */
    buildExpressionForAlignItems: function (sVisualization) {
      const fieldVisualizationBindingExpression = constant(sVisualization);
      const progressVisualizationBindingExpression = constant("com.sap.vocabularies.UI.v1.VisualizationType/Progress");
      const ratingVisualizationBindingExpression = constant("com.sap.vocabularies.UI.v1.VisualizationType/Rating");
      return compileExpression(ifElse(or(equal(fieldVisualizationBindingExpression, progressVisualizationBindingExpression), equal(fieldVisualizationBindingExpression, ratingVisualizationBindingExpression)), constant("Center"), ifElse(UI.IsEditable, constant("Center"), constant("Stretch"))));
    },
    /**
     * Method to check ValueListReferences, ValueListMapping and ValueList inside ActionParameters for FieldHelp.
     *
     * @function
     * @name hasValueHelp
     * @param oPropertyAnnotations Action parameter object
     * @returns `true` if there is a ValueList* annotation defined
     */
    hasValueHelpAnnotation: function (oPropertyAnnotations) {
      if (oPropertyAnnotations) {
        return oPropertyAnnotations["@com.sap.vocabularies.Common.v1.ValueListReferences"] || oPropertyAnnotations["@com.sap.vocabularies.Common.v1.ValueListMapping"] || oPropertyAnnotations["@com.sap.vocabularies.Common.v1.ValueList"];
      }
      return false;
    },
    /**
     * Method to get display property for ActionParameter dialog.
     *
     * 	@function
     * @name getAPDialogDisplayFormat
     * @param oProperty The action parameter instance
     * @param oInterface The interface for the context instance
     * @returns The display format  for an action parameter Field
     */
    getAPDialogDisplayFormat: function (oProperty, oInterface) {
      let oAnnotation;
      const oModel = oInterface.context.getModel();
      const sContextPath = oInterface.context.getPath();
      const sPropertyName = oProperty.$Name || oInterface.context.getProperty(`${sContextPath}@sapui.name`);
      const oActionParameterAnnotations = oModel.getObject(`${sContextPath}@`);
      const oValueHelpAnnotation = oActionParameterAnnotations["@com.sap.vocabularies.Common.v1.ValueList"] || oActionParameterAnnotations["@com.sap.vocabularies.Common.v1.ValueListMapping"] || oActionParameterAnnotations["@com.sap.vocabularies.Common.v1.ValueListReferences"];
      const getValueListPropertyName = function (oValueList) {
        const oValueListParameter = oValueList.Parameters.find(function (oParameter) {
          return oParameter.LocalDataProperty && oParameter.LocalDataProperty.$PropertyPath === sPropertyName;
        });
        return oValueListParameter && oValueListParameter.ValueListProperty;
      };
      let sValueListPropertyName;
      if (oActionParameterAnnotations["@com.sap.vocabularies.Common.v1.TextArrangement"] || oActionParameterAnnotations["@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement"]) {
        return CommonUtils.computeDisplayMode(oActionParameterAnnotations, undefined);
      } else if (oValueHelpAnnotation) {
        if (oValueHelpAnnotation.CollectionPath) {
          // get the name of the corresponding property in value list collection
          sValueListPropertyName = getValueListPropertyName(oValueHelpAnnotation);
          if (!sValueListPropertyName) {
            return "Value";
          }
          // get text for this property
          oAnnotation = oModel.getObject(`/${oValueHelpAnnotation.CollectionPath}/${sValueListPropertyName}@`);
          return oAnnotation && oAnnotation["@com.sap.vocabularies.Common.v1.Text"] ? CommonUtils.computeDisplayMode(oAnnotation, undefined) : "Value";
        } else {
          return oModel.requestValueListInfo(sContextPath, true).then(function (oValueListInfo) {
            // get the name of the corresponding property in value list collection
            sValueListPropertyName = getValueListPropertyName(oValueListInfo[""]);
            if (!sValueListPropertyName) {
              return "Value";
            }
            // get text for this property
            oAnnotation = oValueListInfo[""].$model.getMetaModel().getObject(`/${oValueListInfo[""]["CollectionPath"]}/${sValueListPropertyName}@`);
            return oAnnotation && oAnnotation["@com.sap.vocabularies.Common.v1.Text"] ? CommonUtils.computeDisplayMode(oAnnotation, undefined) : "Value";
          });
        }
      } else {
        return "Value";
      }
    },
    /**
     * Method to get display property for ActionParameter dialog FieldHelp.
     *
     * @function
     * @name getActionParameterDialogFieldHelp
     * @param oActionParameter Action parameter object
     * @param sSapUIName Action sapui name
     * @param sParamName The parameter name
     * @returns The ID of the fieldHelp used by this action parameter
     */
    getActionParameterDialogFieldHelp: function (oActionParameter, sSapUIName, sParamName) {
      return this.hasValueHelpAnnotation(oActionParameter) ? generate([sSapUIName, sParamName]) : undefined;
    },
    /**
     * Method to get the delegate configuration for ActionParameter dialog.
     *
     * @function
     * @name getValueHelpDelegate
     * @param isBound Action is bound
     * @param entityTypePath The EntityType Path
     * @param sapUIName The name of the Action
     * @param paramName The name of the ActionParameter
     * @returns The delegate configuration object as a string
     */
    getValueHelpDelegate: function (isBound, entityTypePath, sapUIName, paramName) {
      const delegateConfiguration = {
        name: CommonHelper.addSingleQuotes("sap/fe/macros/valuehelp/ValueHelpDelegate"),
        payload: {
          propertyPath: CommonHelper.addSingleQuotes(ValueListHelper.getPropertyPath({
            UnboundAction: !isBound,
            EntityTypePath: entityTypePath,
            Action: sapUIName,
            Property: paramName
          })),
          qualifiers: {},
          valueHelpQualifier: CommonHelper.addSingleQuotes(""),
          isActionParameterDialog: true
        }
      };
      return CommonHelper.objectToString(delegateConfiguration);
    },
    /**
     * Method to get the delegate configuration for NonComputedVisibleKeyField dialog.
     *
     * @function
     * @name getValueHelpDelegateForNonComputedVisibleKeyField
     * @param propertyPath The current property path
     * @returns The delegate configuration object as a string
     */
    getValueHelpDelegateForNonComputedVisibleKeyField: function (propertyPath) {
      const delegateConfiguration = {
        name: CommonHelper.addSingleQuotes("sap/fe/macros/valuehelp/ValueHelpDelegate"),
        payload: {
          propertyPath: CommonHelper.addSingleQuotes(propertyPath),
          qualifiers: {},
          valueHelpQualifier: CommonHelper.addSingleQuotes("")
        }
      };
      return CommonHelper.objectToString(delegateConfiguration);
    },
    /**
     * Method to fetch entity from a path containing multiple associations.
     *
     * @function
     * @name _getEntitySetFromMultiLevel
     * @param oContext The context whose path is to be checked
     * @param sPath The path from which entity has to be fetched
     * @param sSourceEntity The entity path in which nav entity exists
     * @param iStart The start index : beginning parts of the path to be ignored
     * @param iDiff The diff index : end parts of the path to be ignored
     * @returns The path of the entity set
     */
    _getEntitySetFromMultiLevel: function (oContext, sPath, sSourceEntity, iStart, iDiff) {
      let aNavParts = sPath.split("/").filter(Boolean);
      aNavParts = aNavParts.filter(function (sPart) {
        return sPart !== "$NavigationPropertyBinding";
      });
      if (aNavParts.length > 0) {
        for (let i = iStart; i < aNavParts.length - iDiff; i++) {
          sSourceEntity = `/${oContext.getObject(`${sSourceEntity}/$NavigationPropertyBinding/${aNavParts[i]}`)}`;
        }
      }
      return sSourceEntity;
    },
    /**
     * Method to find the entity of the property.
     *
     * @function
     * @name getPropertyCollection
     * @param oProperty The context from which datafield's path needs to be extracted.
     * @param oContextObject The Metadata Context(Not passed when called with template:with)
     * @returns The entity set path of the property
     */
    getPropertyCollection: function (oProperty, oContextObject) {
      const oContext = oContextObject && oContextObject.context || oProperty;
      const sPath = oContext.getPath();
      const aMainEntityParts = sPath.split("/").filter(Boolean);
      const sMainEntity = aMainEntityParts[0];
      const sPropertyPath = oContext.getObject("$Path");
      let sFieldSourceEntity = `/${sMainEntity}`;
      // checking against prefix of annotations, ie. @com.sap.vocabularies.
      // as annotation path can be of a line item, field group or facet
      if (sPath.indexOf("/@com.sap.vocabularies.") > -1) {
        const iAnnoIndex = sPath.indexOf("/@com.sap.vocabularies.");
        const sInnerPath = sPath.substring(0, iAnnoIndex);
        // the facet or line item's entity could be a navigation entity
        sFieldSourceEntity = FieldHelper._getEntitySetFromMultiLevel(oContext, sInnerPath, sFieldSourceEntity, 1, 0);
      }
      if (sPropertyPath && sPropertyPath.indexOf("/") > -1) {
        // the field within facet or line item could be from a navigation entity
        sFieldSourceEntity = FieldHelper._getEntitySetFromMultiLevel(oContext, sPropertyPath, sFieldSourceEntity, 0, 1);
      }
      return sFieldSourceEntity;
    },
    /**
     * Method used in a template with to retrieve the currency or the unit property inside a templating variable.
     *
     * @param oPropertyAnnotations
     * @returns The annotationPath to be dealt with by template:with
     */
    getUnitOrCurrency: function (oPropertyAnnotations) {
      const oPropertyAnnotationsObject = oPropertyAnnotations.getObject();
      let sAnnotationPath = oPropertyAnnotations.sPath;
      if (oPropertyAnnotationsObject["@Org.OData.Measures.V1.ISOCurrency"]) {
        sAnnotationPath = `${sAnnotationPath}Org.OData.Measures.V1.ISOCurrency`;
      } else {
        sAnnotationPath = `${sAnnotationPath}Org.OData.Measures.V1.Unit`;
      }
      return sAnnotationPath;
    },
    hasStaticUnitOrCurrency: function (oPropertyAnnotations) {
      return oPropertyAnnotations["@Org.OData.Measures.V1.ISOCurrency"] ? !oPropertyAnnotations["@Org.OData.Measures.V1.ISOCurrency"].$Path : !oPropertyAnnotations["@Org.OData.Measures.V1.Unit"].$Path;
    },
    getStaticUnitOrCurrency: function (oPropertyAnnotations, oFormatOptions) {
      if (oFormatOptions && oFormatOptions.measureDisplayMode !== "Hidden") {
        const unit = oPropertyAnnotations["@Org.OData.Measures.V1.ISOCurrency"] || oPropertyAnnotations["@Org.OData.Measures.V1.Unit"];
        const dateFormat = DateFormat.getDateInstance();
        const localeData = dateFormat.oLocaleData.mData;
        if (localeData && localeData.units && localeData.units.short && localeData.units.short[unit] && localeData.units.short[unit].displayName) {
          return localeData.units.short[unit].displayName;
        }
        return unit;
      }
    },
    getEmptyIndicatorTrigger: function (bActive, sBinding, sFullTextBinding) {
      if (sFullTextBinding) {
        return bActive ? sFullTextBinding : "inactive";
      }
      return bActive ? sBinding : "inactive";
    },
    /**
     * When the value displayed is in text arrangement TextOnly we also want to retrieve the Text value for tables even if we don't show it.
     * This method will return the value of the original data field.
     *
     * @param oThis The current object
     * @param oDataFieldTextArrangement DataField using text arrangement annotation
     * @param oDataField DataField containing the value using text arrangement annotation
     * @returns The binding to the value
     */
    getBindingInfoForTextArrangement: function (oThis, oDataFieldTextArrangement, oDataField) {
      if (oDataFieldTextArrangement && oDataFieldTextArrangement.$EnumMember && oDataFieldTextArrangement.$EnumMember === "com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly" && oDataField) {
        return `{${oDataField.Value.$Path}}`;
      }
      return undefined;
    },
    semanticKeyFormat: function (vRaw, oInterface) {
      // The Empty argument ensures that "groupingEnabled" is added to "formatOptions"
      oInterface.arguments = [{}, {
        groupingEnabled: false
      }];
      return AnnotationHelper.format(vRaw, oInterface);
    },
    getIsMediaContentTypeNullExpr: function (sPropertyPath, sOperator) {
      sOperator = sOperator || "===";
      return "{= %{" + sPropertyPath + "@odata.mediaContentType} " + sOperator + " null }";
    },
    getPathForIconSource: function (sPropertyPath) {
      return "{= FIELDRUNTIME.getIconForMimeType(%{" + sPropertyPath + "@odata.mediaContentType})}";
    },
    getFilenameExpr: function (sFilename, sNoFilenameText) {
      if (sFilename) {
        if (sFilename.indexOf("{") === 0) {
          // filename is referenced via path, i.e. @Core.ContentDisposition.Filename : path
          return "{= $" + sFilename + " ? $" + sFilename + " : $" + sNoFilenameText + "}";
        }
        // static filename, i.e. @Core.ContentDisposition.Filename : 'someStaticName'
        return sFilename;
      }
      // no @Core.ContentDisposition.Filename
      return sNoFilenameText;
    },
    calculateMBfromByte: function (iByte) {
      return iByte ? (iByte / (1024 * 1024)).toFixed(6) : undefined;
    },
    getDownloadUrl: function (propertyPath) {
      return propertyPath + "{= ${internal>/stickySessionToken} ? ('?SAP-ContextId=' + ${internal>/stickySessionToken}) : '' }";
    },
    getMarginClass: function (compactSemanticKey) {
      return compactSemanticKey === "true" || compactSemanticKey === true ? "sapMTableContentMargin" : undefined;
    },
    getRequired: function (immutableKey, target, requiredProperties) {
      let targetRequiredExpression = constant(false);
      if (target !== null) {
        targetRequiredExpression = isRequiredExpression(target === null || target === void 0 ? void 0 : target.targetObject);
      }
      return compileExpression(or(targetRequiredExpression, requiredProperties.indexOf(immutableKey) > -1));
    },
    /**
     * The method checks if the field is already part of a form.
     *
     * @param dataFieldCollection The list of the fields of the form
     * @param dataFieldObjectPath The data model object path of the field which needs to be checked in the form
     * @returns `true` if the field is already part of the form, `false` otherwise
     */
    isFieldPartOfForm: function (dataFieldCollection, dataFieldObjectPath) {
      //generating key for the received data field
      const connectedDataFieldKey = KeyHelper.generateKeyFromDataField(dataFieldObjectPath.targetObject);
      // trying to find the generated key in already existing form elements
      const isFieldFound = dataFieldCollection.find(field => {
        return field.key === connectedDataFieldKey;
      });
      return isFieldFound ? true : false;
    }
  };
  FieldHelper.buildExpressionForTextValue.requiresIContext = true;
  FieldHelper.getFieldGroupIds.requiresIContext = true;
  FieldHelper.fieldControl.requiresIContext = true;
  FieldHelper.getTypeAlignment.requiresIContext = true;
  FieldHelper.getPropertyCollection.requiresIContext = true;
  FieldHelper.getAPDialogDisplayFormat.requiresIContext = true;
  FieldHelper.semanticKeyFormat.requiresIContext = true;
  FieldHelper.computeLabelText.requiresIContext = true;
  FieldHelper.retrieveTextFromValueList.requiresIContext = true;
  FieldHelper.getActionParameterVisibility.requiresIContext = true;
  return FieldHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/FieldHelper", ["sap/base/Log","sap/fe/core/CommonUtils","sap/fe/core/converters/helpers/BindingHelper","sap/fe/core/converters/helpers/Key","sap/fe/core/helpers/BindingToolkit","sap/fe/core/helpers/ModelHelper","sap/fe/core/helpers/SideEffectsHelper","sap/fe/core/helpers/StableIdHelper","sap/fe/core/templating/FieldControlHelper","sap/fe/core/templating/PropertyHelper","sap/fe/core/templating/UIFormatters","sap/fe/macros/CommonHelper","sap/fe/macros/internal/valuehelp/ValueListHelper","sap/fe/macros/ResourceModel","sap/ui/base/ManagedObject","sap/ui/core/format/DateFormat","sap/ui/model/json/JSONModel","sap/ui/model/odata/v4/AnnotationHelper"],function(e,t,n,a,r,i,o,s,c,l,u,f,m,p,g,d,v,b){"use strict";var y=u.getAlignmentExpression;var O=l.isProperty;var $=c.isRequiredExpression;var h=s.generate;var P=r.pathInModel;var T=r.or;var x=r.ifElse;var I=r.equal;var F=r.constant;var D=r.compileExpression;var A=a.KeyHelper;var C=n.UI;const j="@Org.OData.Measures.V1.ISOCurrency",E="@Org.OData.Measures.V1.Unit";async function S(e){const t=e.getModel();const n=e.getSetting("sap.fe.macros.internal.Field");const a=n.sideEffects;if(a){return a}return o.generateSideEffectsMapFromMetaModel(t)}const M={displayMode:function(e,t){const n=e["@com.sap.vocabularies.Common.v1.Text"],a=n&&(e&&e["@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement"]||t&&t["@com.sap.vocabularies.UI.v1.TextArrangement"]);if(a){if(a.$EnumMember==="com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly"){return"Description"}else if(a.$EnumMember==="com.sap.vocabularies.UI.v1.TextArrangementType/TextLast"){return"ValueDescription"}return"DescriptionValue"}return n?"DescriptionValue":"Value"},buildExpressionForTextValue:function(e,t){const n=t.context.getModel();const a=t.context.getPath();const r=n.createBindingContext(`${a}@com.sap.vocabularies.Common.v1.Text`);const i=r.getProperty();const o=i?b.value(i,{context:r}):undefined;let s="";e=b.getNavigationPath(e);if(e.indexOf("/")>-1&&o){s=e.replace(/[^\/]*$/,o.substr(1,o.length-2))}else{s=o}if(s){s="{ path : '"+s.replace(/^\{+/g,"").replace(/\}+$/g,"")+"', parameters: {'$$noPatch': true}}"}return s},buildTargetPathFromDataModelObjectPath:function(e){const t=e.startingEntitySet.name;let n=`/${t}`;const a=e.navigationProperties;for(let e=0;e<a.length;e++){n+=`/${a[e].name}`}return n},hasSemanticObjectTargets:function(e){var t,n,a,r,i;const o=O(e.targetObject)?e.targetObject:e.targetObject.$target;const s=(t=o.annotations)===null||t===void 0?void 0:(n=t.Common)===null||n===void 0?void 0:n.SemanticObject;const c=(a=o.annotations)===null||a===void 0?void 0:(r=a.Common)===null||r===void 0?void 0:r.SemanticObjectUnavailableActions;const l=M.buildTargetPathFromDataModelObjectPath(e);const u=`${l}/${o.name}`;let f;if(s!==null&&s!==void 0&&s.path){f=D(P(s.path))}if(u&&(f||(s===null||s===void 0?void 0:(i=s.valueOf())===null||i===void 0?void 0:i.length)>0)){const e=u.replace(/\//g,"_");if(!f){const t="pageInternal>semanticsTargets/"+(s===null||s===void 0?void 0:s.valueOf())+"/"+e+(!c?"/HasTargetsNotFiltered":"/HasTargets");return"{parts:[{path:'"+t+"'}], formatter:'FieldRuntime.hasTargets'}"}else{return undefined}}else{return false}},getStateDependingOnSemanticObjectTargets:function(e){var t,n,a,r,i;const o=O(e.targetObject)?e.targetObject:e.targetObject.$target;const s=(t=o.annotations)===null||t===void 0?void 0:(n=t.Common)===null||n===void 0?void 0:n.SemanticObject;const c=(a=o.annotations)===null||a===void 0?void 0:(r=a.Common)===null||r===void 0?void 0:r.SemanticObjectUnavailableActions;const l=M.buildTargetPathFromDataModelObjectPath(e);const u=`${l}/${o.name}`;let f;if(s!==null&&s!==void 0&&s.path){f=D(P(s.path))}if(u&&(f||(s===null||s===void 0?void 0:(i=s.valueOf())===null||i===void 0?void 0:i.length)>0)){const e=u.replace(/\//g,"_");if(!f){const t=`pageInternal>semanticsTargets/${s===null||s===void 0?void 0:s.valueOf()}/${e}${!c?"/HasTargetsNotFiltered":"/HasTargets"}`;return`{parts:[{path:'${t}'}], formatter:'FieldRuntime.getStateDependingOnSemanticObjectTargets'}`}else{return"Information"}}else{return"None"}},isNotAlwaysHidden:function(e,t){const n=t.context;let a=false;if(e.Value&&e.Value.$Path){a=n.getObject("Value/$Path@com.sap.vocabularies.UI.v1.Hidden")}if(!a||a.$Path){a=n.getObject("@com.sap.vocabularies.UI.v1.Hidden");if(!a||a.$Path){a=false}}return!a},isDraftIndicatorVisibleInFieldGroup:function(e){if(e&&e.formatOptions&&e.formatOptions.fieldGroupDraftIndicatorPropertyPath&&e.formatOptions.fieldGroupName){return"{parts: ["+"{value: '"+e.formatOptions.fieldGroupName+"'},"+"{path: 'internal>semanticKeyHasDraftIndicator'} , "+"{path: 'HasDraftEntity', targetType: 'any'}, "+"{path: 'IsActiveEntity', targetType: 'any'}, "+"{path: 'pageInternal>hideDraftInfo', targetType: 'any'}], "+"formatter: 'sap.fe.macros.field.FieldRuntime.isDraftIndicatorVisible'}"}else{return false}},isRequired:function(e,t){if(t==="Display"||t==="ReadOnly"||t==="Disabled"){return false}if(e){if(g.bindingParser(e)){return"{= %"+e+" === 7}"}else{return e=="com.sap.vocabularies.Common.v1.FieldControlType/Mandatory"}}return false},getActionParameterVisibility:function(e,t){if(typeof e==="object"){if(e&&e.$If&&e.$If.length===3){const n={$If:[]};n.$If[0]=e.$If[0];n.$If[1]=e.$If[2];n.$If[2]=e.$If[1];return b.value(n,t)}else{return"{= !%{"+e.$Path+"} }"}}else if(typeof e==="boolean"){return b.value(!e,t)}else{return undefined}},propertyName:function(e,t){let n;if(typeof e==="string"){if(t.context.getPath().indexOf("$Path")>-1||t.context.getPath().indexOf("$PropertyPath")>-1){n=e}}else if(e.$Path||e.$PropertyPath){const a=e.$Path?"/$Path":"/$PropertyPath";const r=t.context.getPath();n=t.context.getObject(`${r+a}/$@sapui.name`)}else if(e.Value&&e.Value.$Path){n=e.Value.$Path}else{n=t.context.getObject("@sapui.name")}return n},getFieldGroupIds:function(e,t){if(!t){return undefined}const n=e.getInterface(0);return S(n).then(function(a){const r=n.getSetting("sap.fe.macros.internal.Field");r.sideEffects=a;const i=e.getPath(1).substr(1);const o=M.getSideEffectsOnEntityAndProperty(t,i,a);let s;if(o.length){s=o.reduce(function(e,t){return e&&`${e},${t}`||t})}return s})},getSideEffectsOnEntityAndProperty:function(e,t,n){const a=e.indexOf("/")>0;e=a?e.substr(e.lastIndexOf("/")+1):e;return n[t]&&n[t][0].concat(n[t][1][e]||[])||[]},fieldControl:function(e,t){const n=t&&t.context.getModel();const a=t&&t.context.getPath();const r=n&&n.createBindingContext(`${a}@com.sap.vocabularies.Common.v1.FieldControl`);const i=r&&r.getProperty();if(i){if(i.hasOwnProperty("$EnumMember")){return i.$EnumMember}else if(i.hasOwnProperty("$Path")){return b.value(i,{context:r})}}else{return undefined}},valueHelpProperty:function(e,t){const n=e.getPath();const a=e.getObject()||{};let r=a.$Path?`${n}/$Path`:n;const i=`${r}@`;const o=e.getObject(i);let s;if(o){s=o.hasOwnProperty(j)&&j||o.hasOwnProperty(E)&&E;if(s&&!t){const t=`${r+s}/$Path`;if(e.getObject(t)){r=t}}}return r},valueHelpPropertyForFilterField:function(e){return M.valueHelpProperty(e,true)},getIDForFieldValueHelp:function(e,t,n,a){if(e){return e}let r=a;if(n!==a){r=`${n}::${a}`}return h([t,r])},getFieldHelpPropertyForFilterField:function(e,n,a,r,i,o,s,c){const l=M.propertyName(n,{context:e}),u=c==="true"||c===true;const m=e.getModel(),p=e.getPath(),g=f.getLocationForPropertyPath(m,p),d=t.getFilterRestrictionsByPath(g,m);if((a==="Edm.DateTimeOffset"||a==="Edm.Date")&&u&&d&&d.FilterAllowedExpressions&&d.FilterAllowedExpressions[l]&&(d.FilterAllowedExpressions[l].indexOf("SingleRange")!==-1||d.FilterAllowedExpressions[l].indexOf("SingleValue")!==-1)||a==="Edm.Boolean"&&!s){return undefined}return M.getIDForFieldValueHelp(null,r||"FilterFieldValueHelp",i,o)},getSemanticKeyTitle:function(e,t,n,a,r,i){const o=p.getText("T_NEW_OBJECT");const s=p.getText("T_ANNOTATION_HELPER_DEFAULT_OBJECT_PAGE_HEADER_TITLE_NO_HEADER_INFO");let c,l;let u;const f=function(e){c="($"+e+" === '' || $"+e+" === undefined || $"+e+" === null ? '"+o+"': $"+e+")";l="($"+e+" === '' || $"+e+" === undefined || $"+e+" === null ? '"+s+"': $"+e+")";return"(!%{IsActiveEntity} ? !%{HasActiveEntity} ? "+c+" : "+l+" : "+l+")"};const m=function(e,t){let n;if(i){n=f(e);return t?"{= "+n+"}":n}else{return t?e:"$"+e}};if(e){if(a&&r!=="ObjectIdentifier"){const r=a.$EnumMember;if(r==="com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst"){u=m(e,false);return"{= "+u+" +' (' + "+"($"+t+(n?" || ${"+n+"}":"")+") +')' }"}else if(r==="com.sap.vocabularies.UI.v1.TextArrangementType/TextLast"){u=m(e,false);return"{= ($"+t+(n?" || ${"+n+"}":"")+")"+" + ' (' + "+u+" +')' }"}else{return m(e,true)}}else{return m(e,true)}}else{return m(t,true)}},getObjectIdentifierText:function(e,t,n,a){if(e){if(t&&(t.$EnumMember==="com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly"||t.$EnumMember==="com.sap.vocabularies.UI.v1.TextArrangementType/TextSeparate"||t.$EnumMember==="com.sap.vocabularies.UI.v1.TextArrangementType/TextFirst")){return undefined}else{return n||`{${a}}`}}return undefined},getSemanticObjectsList:function(e){const t=e;const n=[];for(const a in t.getObject()){if(a.indexOf("com.sap.vocabularies.Common.v1.SemanticObject")>-1&&a.indexOf("com.sap.vocabularies.Common.v1.SemanticObjectMapping")===-1&&a.indexOf("com.sap.vocabularies.Common.v1.SemanticObjectUnavailableActions")===-1){let r=t.getObject()[a];if(typeof r==="object"){r=b.value(r,{context:e})}if(n.indexOf(r)===-1){n.push(r)}}}const a=new v(n);a.$$valueAsPromise=true;return a.createBindingContext("/")},getSemanticObjectsQualifiers:function(e){const t=e;let n=[];const a=function(e){return n.find(function(t){return t.qualifier===e})};for(const e in t.getObject()){if(e.indexOf("com.sap.vocabularies.Common.v1.SemanticObject#")>-1||e.indexOf("com.sap.vocabularies.Common.v1.SemanticObjectMapping#")>-1||e.indexOf("com.sap.vocabularies.Common.v1.SemanticObjectUnavailableActions#")>-1){const r=t.getObject()[e],i=e.split("#")[0],o=e.split("#")[1];let s=a(o);if(!s){s={qualifier:o};s[i]=r;n.push(s)}else{s[i]=r}}}n=n.filter(function(e){return!!e["@com.sap.vocabularies.Common.v1.SemanticObject"]});const r=new v(n);r.$$valueAsPromise=true;return r.createBindingContext("/")},computeSemanticLinkModelContextChange:function(e,t){if(M.hasSemanticObjectsWithPath(e)){const e=M.buildTargetPathFromDataModelObjectPath(t);return`FieldRuntime.LinkModelContextChange($event, '${t.targetObject.name}', '${e}')`}else{return undefined}},hasSemanticObjectsWithPath:function(e){let t=false;if(e&&e.length){for(let n=0;n<e.length;n++){if(e[n]&&e[n].value&&e[n].value.indexOf("{")===0){t=true;break}}}return t},isSemanticKeyHasFieldGroupColumn:function(e){return e},computeFieldBaseDelegate:function(e,t){if(t){return JSON.stringify({name:e,payload:{retrieveTextFromValueList:t}})}return`{name: '${e}'}`},_getPrimaryIntents:function(t){const n=[];if(t){const e=sap.ushell&&sap.ushell.Container;const a=e&&e.getService("CrossApplicationNavigation");t.forEach(function(e){if(typeof e==="string"){n.push(a.getPrimaryIntent(e,{}))}})}return Promise.all(n).then(function(e){return e}).catch(function(t){e.error("Error fetching primary intents",t);return[]})},_SemanticObjectsHasPrimaryAction:function(e,n){const a=function(e,t,n){for(const a in e.semanticObjectUnavailableActions[n].actions){if(t.intent.split("-")[1].indexOf(e.semanticObjectUnavailableActions[n].actions[a])===0){return false}}return true};e.semanticPrimaryActions=n;const r=e.semanticObjects&&e.mainSemanticObject&&e.semanticPrimaryActions[e.semanticObjects.indexOf(e.mainSemanticObject)];const i=t.getHash();if(e.mainSemanticObject&&r!==null&&r.intent!==i){for(const t in e.semanticObjectUnavailableActions){if(e.mainSemanticObject.indexOf(e.semanticObjectUnavailableActions[t].semanticObject)===0){return a(e,r,t)}}return true}else{return false}},checkPrimaryActions:function(t,n){return this._getPrimaryIntents(t&&t.semanticObjects).then(e=>n?{titleLink:e,hasTitleLink:this._SemanticObjectsHasPrimaryAction(t,e)}:this._SemanticObjectsHasPrimaryAction(t,e)).catch(function(t){e.error("Error in checkPrimaryActions",t)})},_getTitleLinkWithParameters:function(e,t){if(e&&e.titlelink){return e.titlelink}else{return t}},getPrimaryAction:function(e){return e.semanticPrimaryActions[e.semanticObjects.indexOf(e.mainSemanticObject)].intent?M._getTitleLinkWithParameters(e,e.semanticPrimaryActions[e.semanticObjects.indexOf(e.mainSemanticObject)].intent):e.primaryIntentAction},operators:function(e,n,a,r,o){if(!n||!o){return undefined}let s;const c=M.propertyName(n,{context:e});const l=e.getModel(),u=e.getPath(),m=f.getLocationForPropertyPath(l,u),p=n.$Type;if(p==="Edm.Guid"){return t.getOperatorsForGuidProperty()}o=o.slice(0,-1);const g=o.lastIndexOf("/")>0;const d=g&&o!==m||!g&&m.lastIndexOf("/")>0;const v=d&&m.substr(m.indexOf(o)+o.length+1)||"";const b=d&&v+"/"+c||c;if(!g){if(!d){s=t.getOperatorsForProperty(c,m,l,p,a,r)}else{s=t.getOperatorsForProperty(b,o,l,p,a,r);if(s.length===0){s=t.getOperatorsForProperty(c,m,l,p,a,r)}}}else if(!d){var y;s=t.getOperatorsForProperty(b,o,l,p,a,r);if(s.length===0){s=t.getOperatorsForProperty(c,i.getEntitySetPath(o),l,p,a,r)}return((y=s)===null||y===void 0?void 0:y.length)>0?s.toString():undefined}else{s=t.getOperatorsForProperty(b,o,l,p,a,r);if(s.length===0){s=t.getOperatorsForProperty(b,i.getEntitySetPath(o),l,p,a,r)}}if((!s||s.length===0)&&(p==="Edm.Date"||p==="Edm.DateTimeOffset")){s=t.getOperatorsForDateProperty(p)}return s.length>0?s.toString():undefined},getPropertyContextForQuickView:function(e){if(e.getObject("Value")!==undefined){const t=e.getInterface(),n=t.getModel();let a=t.getPath();a=a+(a.endsWith("/")?"Value":"/Value");return n.createBindingContext(a)}else{return e}},getPropertyPathForQuickView:function(e){if(e&&e.getObject("$Path")){const t=e.getInterface(),n=t.getModel();let a=t.getPath();a=a+(a.endsWith("/")?"$Path":"/$Path");return n.createBindingContext(a)}return e},getDataFieldDefault:function(e){const t=e.getModel().getObject(`${e.getPath()}@com.sap.vocabularies.UI.v1.DataFieldDefault`);return t?`${e.getPath()}@com.sap.vocabularies.UI.v1.DataFieldDefault`:e.getPath()},isDataFieldActionButtonVisible:function(e,t,n,a){return t["@com.sap.vocabularies.UI.v1.Hidden"]!==true&&(n!==true||a!==false)},getPressEventForDataFieldActionButton:function(e,t){var n;let a="Isolated";if(t.InvocationGrouping&&t.InvocationGrouping.$EnumMember==="com.sap.vocabularies.UI.v1.OperationGroupingType/ChangeSet"){a="ChangeSet"}let r=e.navigateAfterAction;r=r==="false"?false:true;const i=e===null||e===void 0?void 0:(n=e.entitySet)===null||n===void 0?void 0:n.getPath().split("/");const o=i[i.length-1];const s={contexts:"${$source>/}.getBindingContext()",invocationGrouping:f.addSingleQuotes(a),model:"${$source>/}.getModel()",label:f.addSingleQuotes(t.Label,true),isNavigable:r,entitySetName:f.addSingleQuotes(o)};return f.generateFunction(".editFlow.invokeAction",f.addSingleQuotes(t.Action),f.objectToString(s))},isNumericDataType:function(e){const t=e;if(t!==undefined){const e=["Edm.Int16","Edm.Int32","Edm.Int64","Edm.Byte","Edm.SByte","Edm.Single","Edm.Decimal","Edm.Double"];return e.indexOf(t)===-1?false:true}else{return false}},isDateOrTimeDataType:function(e){if(e!==undefined){const t=["Edm.DateTimeOffset","Edm.DateTime","Edm.Date","Edm.TimeOfDay","Edm.Time"];return t.indexOf(e)>-1}else{return false}},isDateTimeDataType:function(e){if(e!==undefined){const t=["Edm.DateTimeOffset","Edm.DateTime"];return t.indexOf(e)>-1}else{return false}},isDateDataType:function(e){return e==="Edm.Date"},isTimeDataType:function(e){if(e!==undefined){const t=["Edm.TimeOfDay","Edm.Time"];return t.indexOf(e)>-1}else{return false}},getUnderlyingPropertyDataType:function(e,t,n,a){const r="@com.sap.vocabularies.Common.v1.Text",i="@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement";if(!!e&&!!e[i]&&e[i].$EnumMember==="com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly"&&!!e[r]&&!!e[r].$Path){return t.getObject(`${n}/${e[r].$Path}/$Type`)}return a},getColumnAlignment:function(e,t){const n=t.collection.sPath,a=t.collection.oModel;if((e["$Type"]==="com.sap.vocabularies.UI.v1.DataFieldForAction"||e["$Type"]==="com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation")&&e.Inline&&e.IconUrl){return"Center"}const r=a.getObject(`${n}/@com.sap.vocabularies.Common.v1.SemanticKey`);if(e["$Type"]==="com.sap.vocabularies.UI.v1.DataField"){const t=e.Value.$Path;const n=r&&!r.every(function(e){return e.$PropertyPath!==t});if(n){return"Begin"}}return M.getDataFieldAlignment(e,a,n)},getPropertyAlignment:function(e,t,n){let a="Begin";const r=t?t.textAlignMode:"";switch(r){case"Form":if(this.isNumericDataType(e)){a="Begin";if(n){a=y(n,"Begin","End")}}break;default:if(this.isNumericDataType(e)||this.isDateOrTimeDataType(e)){a="Right"}break}return a},getDataFieldAlignment:function(e,t,n,a,r){let i,o="Begin",s,c;if(e["$Type"]==="com.sap.vocabularies.UI.v1.DataFieldForAnnotation"){i=e.Target.$AnnotationPath;if(e.Target["$AnnotationPath"]&&e.Target["$AnnotationPath"].indexOf("com.sap.vocabularies.UI.v1.FieldGroup")>=0){const e=t.getObject(`${n}/${i}`);for(let l=0;l<e.Data.length;l++){s=t.getObject(`${n}/${i}/Data/${l.toString()}/Value/$Path/$Type`);c=t.getObject(`${n}/${i}/Data/${l.toString()}/Value/$Path@`);s=this.getUnderlyingPropertyDataType(c,t,n,s);o=this.getPropertyAlignment(s,a,r);if(o==="Begin"){break}}return o}else if(e.Target["$AnnotationPath"]&&e.Target["$AnnotationPath"].indexOf("com.sap.vocabularies.UI.v1.DataPoint")>=0&&t.getObject(`${n}/${i}/Visualization/$EnumMember`)==="com.sap.vocabularies.UI.v1.VisualizationType/Rating"){return o}else{s=t.getObject(`${n}/${i}/$Type`);if(s==="com.sap.vocabularies.UI.v1.DataPointType"){s=t.getObject(`${n}/${i}/Value/$Path/$Type`);c=t.getObject(`${n}/${i}/Value/$Path@`);s=this.getUnderlyingPropertyDataType(c,t,n,s)}o=this.getPropertyAlignment(s,a,r)}}else{i=e.Value.$Path;s=t.getObject(`${n}/${i}/$Type`);c=t.getObject(`${n}/${i}@`);s=this.getUnderlyingPropertyDataType(c,t,n,s);if(!(t.getObject(`${n}/`)["$Key"].indexOf(i)===0)){o=this.getPropertyAlignment(s,a,r)}}return o},getTypeAlignment:function(e,t,n,a,r,i){const o=e.getInterface(0);const s=o.getModel();if(a==="/undefined"&&i&&i.$target){a=`/${i.$target.fullyQualifiedName.split("/")[0]}`}return M.getDataFieldAlignment(t,s,a,n,r)},isDataFieldActionButtonEnabled:function(e,t,n,a){if(t!==true){return"true"}return(n===null?"{= !${#"+e.Action+"} ? false : true }":n)?a:"true"},getLabelTextForDataField:function(e,t,n,a,r,i){const o=e["@com.sap.vocabularies.Common.v1.DraftRoot"];return M.getSemanticKeyTitle(t["@com.sap.vocabularies.Common.v1.Text"]&&n,a,r,t["@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement"],i,o)},retrieveTextFromValueList:function(e,t,n){const a=`${e.sPath}/${t}`;const r=n.displayMode;f.setMetaModel(e.getModel());return"{= FieldRuntime.retrieveTextFromValueList(%{"+t+"},'"+a+"','"+r+"')}"},computeLabelText:function(e,t){const n=t.context.getModel();let a=t.context.getPath();if(a.endsWith("/")){a=a.slice(0,a.lastIndexOf("/"))}const r=n.getObject(`${a}/Label`);if(e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAction"||e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation"){return undefined}if(r){return r}else if(r===""){return""}let i;if(e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAnnotation"){if(e.Target.$AnnotationPath.indexOf("@com.sap.vocabularies.UI.v1.DataPoint")>-1||e.Target.$AnnotationPath.indexOf("@com.sap.vocabularies.UI.v1.Chart")>-1){i=n.getObject(`${a}/Target/$AnnotationPath@/Title`)}if(e.Target.$AnnotationPath.indexOf("@com.sap.vocabularies.Communication.v1.Contact")>-1){i=n.getObject(`${a}/Target/$AnnotationPath@/fn/$Path@com.sap.vocabularies.Common.v1.Label`)}}if(i){return i}let o;if(e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAnnotation"){o=n.getObject(`${a}/Target/$AnnotationPath@/Label`)}if(o){return o}const s=n.getObject(`${a}/Value/$Path@com.sap.vocabularies.Common.v1.Label`);if(s){return s}let c;if(e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAnnotation"){c=n.getObject(`${a}/Target/$AnnotationPath/Value/$Path@com.sap.vocabularies.Common.v1.Label`)}if(c){return c}return""},buildExpressionForAlignItems:function(e){const t=F(e);const n=F("com.sap.vocabularies.UI.v1.VisualizationType/Progress");const a=F("com.sap.vocabularies.UI.v1.VisualizationType/Rating");return D(x(T(I(t,n),I(t,a)),F("Center"),x(C.IsEditable,F("Center"),F("Stretch"))))},hasValueHelpAnnotation:function(e){if(e){return e["@com.sap.vocabularies.Common.v1.ValueListReferences"]||e["@com.sap.vocabularies.Common.v1.ValueListMapping"]||e["@com.sap.vocabularies.Common.v1.ValueList"]}return false},getAPDialogDisplayFormat:function(e,n){let a;const r=n.context.getModel();const i=n.context.getPath();const o=e.$Name||n.context.getProperty(`${i}@sapui.name`);const s=r.getObject(`${i}@`);const c=s["@com.sap.vocabularies.Common.v1.ValueList"]||s["@com.sap.vocabularies.Common.v1.ValueListMapping"]||s["@com.sap.vocabularies.Common.v1.ValueListReferences"];const l=function(e){const t=e.Parameters.find(function(e){return e.LocalDataProperty&&e.LocalDataProperty.$PropertyPath===o});return t&&t.ValueListProperty};let u;if(s["@com.sap.vocabularies.Common.v1.TextArrangement"]||s["@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement"]){return t.computeDisplayMode(s,undefined)}else if(c){if(c.CollectionPath){u=l(c);if(!u){return"Value"}a=r.getObject(`/${c.CollectionPath}/${u}@`);return a&&a["@com.sap.vocabularies.Common.v1.Text"]?t.computeDisplayMode(a,undefined):"Value"}else{return r.requestValueListInfo(i,true).then(function(e){u=l(e[""]);if(!u){return"Value"}a=e[""].$model.getMetaModel().getObject(`/${e[""]["CollectionPath"]}/${u}@`);return a&&a["@com.sap.vocabularies.Common.v1.Text"]?t.computeDisplayMode(a,undefined):"Value"})}}else{return"Value"}},getActionParameterDialogFieldHelp:function(e,t,n){return this.hasValueHelpAnnotation(e)?h([t,n]):undefined},getValueHelpDelegate:function(e,t,n,a){const r={name:f.addSingleQuotes("sap/fe/macros/valuehelp/ValueHelpDelegate"),payload:{propertyPath:f.addSingleQuotes(m.getPropertyPath({UnboundAction:!e,EntityTypePath:t,Action:n,Property:a})),qualifiers:{},valueHelpQualifier:f.addSingleQuotes(""),isActionParameterDialog:true}};return f.objectToString(r)},getValueHelpDelegateForNonComputedVisibleKeyField:function(e){const t={name:f.addSingleQuotes("sap/fe/macros/valuehelp/ValueHelpDelegate"),payload:{propertyPath:f.addSingleQuotes(e),qualifiers:{},valueHelpQualifier:f.addSingleQuotes("")}};return f.objectToString(t)},_getEntitySetFromMultiLevel:function(e,t,n,a,r){let i=t.split("/").filter(Boolean);i=i.filter(function(e){return e!=="$NavigationPropertyBinding"});if(i.length>0){for(let t=a;t<i.length-r;t++){n=`/${e.getObject(`${n}/$NavigationPropertyBinding/${i[t]}`)}`}}return n},getPropertyCollection:function(e,t){const n=t&&t.context||e;const a=n.getPath();const r=a.split("/").filter(Boolean);const i=r[0];const o=n.getObject("$Path");let s=`/${i}`;if(a.indexOf("/@com.sap.vocabularies.")>-1){const e=a.indexOf("/@com.sap.vocabularies.");const t=a.substring(0,e);s=M._getEntitySetFromMultiLevel(n,t,s,1,0)}if(o&&o.indexOf("/")>-1){s=M._getEntitySetFromMultiLevel(n,o,s,0,1)}return s},getUnitOrCurrency:function(e){const t=e.getObject();let n=e.sPath;if(t["@Org.OData.Measures.V1.ISOCurrency"]){n=`${n}Org.OData.Measures.V1.ISOCurrency`}else{n=`${n}Org.OData.Measures.V1.Unit`}return n},hasStaticUnitOrCurrency:function(e){return e["@Org.OData.Measures.V1.ISOCurrency"]?!e["@Org.OData.Measures.V1.ISOCurrency"].$Path:!e["@Org.OData.Measures.V1.Unit"].$Path},getStaticUnitOrCurrency:function(e,t){if(t&&t.measureDisplayMode!=="Hidden"){const t=e["@Org.OData.Measures.V1.ISOCurrency"]||e["@Org.OData.Measures.V1.Unit"];const n=d.getDateInstance();const a=n.oLocaleData.mData;if(a&&a.units&&a.units.short&&a.units.short[t]&&a.units.short[t].displayName){return a.units.short[t].displayName}return t}},getEmptyIndicatorTrigger:function(e,t,n){if(n){return e?n:"inactive"}return e?t:"inactive"},getBindingInfoForTextArrangement:function(e,t,n){if(t&&t.$EnumMember&&t.$EnumMember==="com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly"&&n){return`{${n.Value.$Path}}`}return undefined},semanticKeyFormat:function(e,t){t.arguments=[{},{groupingEnabled:false}];return b.format(e,t)},getIsMediaContentTypeNullExpr:function(e,t){t=t||"===";return"{= %{"+e+"@odata.mediaContentType} "+t+" null }"},getPathForIconSource:function(e){return"{= FIELDRUNTIME.getIconForMimeType(%{"+e+"@odata.mediaContentType})}"},getFilenameExpr:function(e,t){if(e){if(e.indexOf("{")===0){return"{= $"+e+" ? $"+e+" : $"+t+"}"}return e}return t},calculateMBfromByte:function(e){return e?(e/(1024*1024)).toFixed(6):undefined},getDownloadUrl:function(e){return e+"{= ${internal>/stickySessionToken} ? ('?SAP-ContextId=' + ${internal>/stickySessionToken}) : '' }"},getMarginClass:function(e){return e==="true"||e===true?"sapMTableContentMargin":undefined},getRequired:function(e,t,n){let a=F(false);if(t!==null){a=$(t===null||t===void 0?void 0:t.targetObject)}return D(T(a,n.indexOf(e)>-1))},isFieldPartOfForm:function(e,t){const n=A.generateKeyFromDataField(t.targetObject);const a=e.find(e=>e.key===n);return a?true:false}};M.buildExpressionForTextValue.requiresIContext=true;M.getFieldGroupIds.requiresIContext=true;M.fieldControl.requiresIContext=true;M.getTypeAlignment.requiresIContext=true;M.getPropertyCollection.requiresIContext=true;M.getAPDialogDisplayFormat.requiresIContext=true;M.semanticKeyFormat.requiresIContext=true;M.computeLabelText.requiresIContext=true;M.retrieveTextFromValueList.requiresIContext=true;M.getActionParameterVisibility.requiresIContext=true;return M},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/FieldRuntime-dbg", ["sap/base/Log", "sap/fe/core/CommonUtils", "sap/fe/core/controllerextensions/collaboration/ActivitySync", "sap/fe/core/controllerextensions/collaboration/CollaborationCommon", "sap/fe/core/controllerextensions/editFlow/draft", "sap/fe/core/controls/FieldWrapper", "sap/fe/core/helpers/KeepAliveHelper", "sap/fe/core/helpers/ModelHelper", "sap/fe/macros/CommonHelper", "sap/fe/macros/field/FieldAPI", "sap/fe/macros/ResourceModel", "sap/m/MessageBox", "sap/ui/core/Core", "sap/ui/core/IconPool", "sap/ui/model/Filter", "sap/ui/unified/FileUploaderParameter", "sap/ui/util/openWindow"], function (Log, CommonUtils, CollaborationActivitySync, CollaborationCommon, draft, FieldWrapper, KeepAliveHelper, ModelHelper, CommonHelper, FieldAPI, ResourceModel, MessageBox, Core, IconPool, Filter, FileUploaderParameter, openWindow) {
  "use strict";

  var Activity = CollaborationCommon.Activity;
  /**
   * Gets the binding used for collaboration notifications.
   *
   * @param field
   * @returns The binding
   */
  function getCollaborationBinding(field) {
    let binding = field.getBindingContext().getBinding();
    if (!binding.isA("sap.ui.model.odata.v4.ODataListBinding")) {
      const oView = CommonUtils.getTargetView(field);
      binding = oView.getBindingContext().getBinding();
    }
    return binding;
  }

  /**
   * Static class used by "sap.ui.mdc.Field" during runtime
   *
   * @private
   * @experimental This module is only for internal/experimental use!
   */
  const FieldRuntime = {
    resetChangesHandler: undefined,
    uploadPromises: undefined,
    /**
     * Triggers an internal navigation on the link pertaining to DataFieldWithNavigationPath.
     *
     * @param oSource Source of the press event
     * @param oController Instance of the controller
     * @param sNavPath The navigation path
     */
    onDataFieldWithNavigationPath: function (oSource, oController, sNavPath) {
      if (oController._routing) {
        let oBindingContext = oSource.getBindingContext();
        const oView = CommonUtils.getTargetView(oSource),
          oMetaModel = oBindingContext.getModel().getMetaModel(),
          fnNavigate = function (oContext) {
            if (oContext) {
              oBindingContext = oContext;
            }
            oController._routing.navigateToTarget(oBindingContext, sNavPath, true);
          };
        // Show draft loss confirmation dialog in case of Object page
        if (oView.getViewData().converterType === "ObjectPage" && !ModelHelper.isStickySessionSupported(oMetaModel)) {
          draft.processDataLossOrDraftDiscardConfirmation(fnNavigate, Function.prototype, oBindingContext, oView.getController(), true, draft.NavigationType.ForwardNavigation);
        } else {
          fnNavigate();
        }
      } else {
        Log.error("FieldRuntime: No routing listener controller extension found. Internal navigation aborted.", "sap.fe.macros.field.FieldRuntime", "onDataFieldWithNavigationPath");
      }
    },
    isDraftIndicatorVisible: function (sPropertyPath, sSemanticKeyHasDraftIndicator, HasDraftEntity, IsActiveEntity, hideDraftInfo) {
      if (IsActiveEntity !== undefined && HasDraftEntity !== undefined && (!IsActiveEntity || HasDraftEntity) && !hideDraftInfo) {
        return sPropertyPath === sSemanticKeyHasDraftIndicator;
      } else {
        return false;
      }
    },
    hasTargets: function (bSemanticObjectHasTargets) {
      return bSemanticObjectHasTargets ? bSemanticObjectHasTargets : false;
    },
    getStateDependingOnSemanticObjectTargets: function (bSemanticObjectHasTargets) {
      return bSemanticObjectHasTargets ? "Information" : "None";
    },
    /**
     * Handler for the validateFieldGroup event.
     *
     * @function
     * @name onValidateFieldGroup
     * @param oController The controller of the page containing the field
     * @param oEvent The event object passed by the validateFieldGroup event
     */
    onValidateFieldGroup: function (oController, oEvent) {
      const oFEController = FieldRuntime._getExtensionController(oController);
      oFEController._sideEffects.handleFieldGroupChange(oEvent);
    },
    /**
     * Handler for the change event.
     * Store field group IDs of this field for requesting side effects when required.
     * We store them here to ensure a change in the value of the field has taken place.
     *
     * @function
     * @name handleChange
     * @param oController The controller of the page containing the field
     * @param oEvent The event object passed by the change event
     */
    handleChange: function (oController, oEvent) {
      const oSourceField = oEvent.getSource(),
        bIsTransient = oSourceField && oSourceField.getBindingContext().isTransient(),
        pValueResolved = oEvent.getParameter("promise") || Promise.resolve(),
        oSource = oEvent.getSource(),
        bValid = oEvent.getParameter("valid"),
        fieldValidity = this.getFieldStateOnChange(oEvent).state["validity"];

      // TODO: currently we have undefined and true... and our creation row implementation relies on this.
      // I would move this logic to this place as it's hard to understand for field consumer

      pValueResolved.then(function () {
        // The event is gone. For now we'll just recreate it again
        oEvent.oSource = oSource;
        oEvent.mParameters = {
          valid: bValid
        };
        FieldAPI.handleChange(oEvent, oController);
      }).catch(function /*oError: any*/
      () {
        // The event is gone. For now we'll just recreate it again
        oEvent.oSource = oSource;
        oEvent.mParameters = {
          valid: false
        };

        // as the UI might need to react on. We could provide a parameter to inform if validation
        // was successful?
        FieldAPI.handleChange(oEvent, oController);
      });

      // Use the FE Controller instead of the extensionAPI to access internal FE controllers
      const oFEController = FieldRuntime._getExtensionController(oController);
      oFEController._editFlow.syncTask(pValueResolved);

      // if the context is transient, it means the request would fail anyway as the record does not exist in reality
      // TODO: should the request be made in future if the context is transient?
      if (bIsTransient) {
        return;
      }

      // SIDE EFFECTS
      oFEController._sideEffects.handleFieldChange(oEvent, fieldValidity, pValueResolved);

      // Collaboration Draft Activity Sync
      const oField = oEvent.getSource(),
        bCollaborationEnabled = CollaborationActivitySync.isConnected(oField);
      if (bCollaborationEnabled && fieldValidity) {
        var _ref, _oField$getBindingInf;
        /* TODO: for now we use always the first binding part (so in case of composite bindings like amount and
        		unit or currency only the amount is considered) */
        const binding = getCollaborationBinding(oField);
        const data = [...((_ref = oField.getBindingInfo("value") || oField.getBindingInfo("selected")) === null || _ref === void 0 ? void 0 : _ref.parts), ...(((_oField$getBindingInf = oField.getBindingInfo("additionalValue")) === null || _oField$getBindingInf === void 0 ? void 0 : _oField$getBindingInf.parts) || [])].map(function (part) {
          if (part) {
            var _oField$getBindingCon;
            return `${(_oField$getBindingCon = oField.getBindingContext()) === null || _oField$getBindingCon === void 0 ? void 0 : _oField$getBindingCon.getPath()}/${part.path}`;
          }
        });
        if (binding.hasPendingChanges()) {
          // The value has been changed by the user --> wait until it's sent to the server before sending a notification to other users
          binding.attachEventOnce("patchCompleted", function () {
            CollaborationActivitySync.send(oField, Activity.Change, data);
          });
        } else {
          // No changes --> send a Undo notification
          CollaborationActivitySync.send(oField, Activity.Undo, data);
        }
      }
    },
    handleLiveChange: function (event) {
      // Collaboration Draft Activity Sync
      const field = event.getSource();
      if (CollaborationActivitySync.isConnected(field)) {
        /* TODO: for now we use always the first binding part (so in case of composite bindings like amount and
        		unit or currency only the amount is considered) */
        const bindingPath = field.getBindingInfo("value").parts[0].path;
        const fullPath = `${field.getBindingContext().getPath()}/${bindingPath}`;
        CollaborationActivitySync.send(field, Activity.LiveChange, fullPath);

        // If the user reverted the change no change event is sent therefore we have to handle it here
        if (!this.resetChangesHandler) {
          this.resetChangesHandler = () => {
            // We need to wait a little bit for the focus to be updated
            setTimeout(() => {
              if (field.isA("sap.ui.mdc.Field")) {
                const focusedControl = Core.byId(Core.getCurrentFocusedControlId());
                if ((focusedControl === null || focusedControl === void 0 ? void 0 : focusedControl.getParent()) === field) {
                  // We're still un the same MDC Field --> do nothing
                  return;
                }
              }
              field.detachBrowserEvent("focusout", this.resetChangesHandler);
              delete this.resetChangesHandler;
              CollaborationActivitySync.send(field, Activity.Undo, fullPath);
            }, 100);
          };
          field.attachBrowserEvent("focusout", this.resetChangesHandler);
        }
      }
    },
    handleOpenPicker: function (oEvent) {
      // Collaboration Draft Activity Sync
      const oField = oEvent.getSource();
      const bCollaborationEnabled = CollaborationActivitySync.isConnected(oField);
      if (bCollaborationEnabled) {
        const sBindingPath = oField.getBindingInfo("value").parts[0].path;
        const sFullPath = `${oField.getBindingContext().getPath()}/${sBindingPath}`;
        CollaborationActivitySync.send(oField, Activity.LiveChange, sFullPath);
      }
    },
    handleClosePicker: function (oEvent) {
      // Collaboration Draft Activity Sync
      const oField = oEvent.getSource();
      const bCollaborationEnabled = CollaborationActivitySync.isConnected(oField);
      if (bCollaborationEnabled) {
        const binding = getCollaborationBinding(oField);
        if (!binding.hasPendingChanges()) {
          // If there are no pending changes, the picker was closed without changing the value --> send a UNDO notification
          // In case there were changes, notifications are managed in handleChange
          const sBindingPath = oField.getBindingInfo("value").parts[0].path;
          const sFullPath = `${oField.getBindingContext().getPath()}/${sBindingPath}`;
          CollaborationActivitySync.send(oField, Activity.Undo, sFullPath);
        }
      }
    },
    _sendCollaborationMessageForFileUploader(fileUploader, activity) {
      const isCollaborationEnabled = CollaborationActivitySync.isConnected(fileUploader);
      if (isCollaborationEnabled) {
        var _fileUploader$getPare, _fileUploader$getBind;
        const bindingPath = (_fileUploader$getPare = fileUploader.getParent()) === null || _fileUploader$getPare === void 0 ? void 0 : _fileUploader$getPare.getProperty("propertyPath");
        const fullPath = `${(_fileUploader$getBind = fileUploader.getBindingContext()) === null || _fileUploader$getBind === void 0 ? void 0 : _fileUploader$getBind.getPath()}/${bindingPath}`;
        CollaborationActivitySync.send(fileUploader, activity, fullPath);
      }
    },
    handleOpenUploader: function (event) {
      // Collaboration Draft Activity Sync
      const fileUploader = event.getSource();
      FieldRuntime._sendCollaborationMessageForFileUploader(fileUploader, Activity.LiveChange);
    },
    handleCloseUploader: function (event) {
      // Collaboration Draft Activity Sync
      const fileUploader = event.getSource();
      FieldRuntime._sendCollaborationMessageForFileUploader(fileUploader, Activity.Undo);
    },
    /**
     * Gets the field value and validity on a change event.
     *
     * @function
     * @name fieldValidityOnChange
     * @param oEvent The event object passed by the change event
     * @returns Field value and validity
     */
    getFieldStateOnChange: function (oEvent) {
      let oSourceField = oEvent.getSource(),
        mFieldState = {};
      const _isBindingStateMessages = function (oBinding) {
        return oBinding && oBinding.getDataState() ? oBinding.getDataState().getInvalidValue() === undefined : true;
      };
      if (oSourceField.isA("sap.fe.macros.field.FieldAPI")) {
        oSourceField = oSourceField.getContent();
      }
      if (oSourceField.isA(FieldWrapper.getMetadata().getName()) && oSourceField.getEditMode() === "Editable") {
        oSourceField = oSourceField.getContentEdit()[0];
      }
      if (oSourceField.isA("sap.ui.mdc.Field")) {
        let bIsValid = oEvent.getParameter("valid") || oEvent.getParameter("isValid");
        if (bIsValid === undefined) {
          if (oSourceField.getMaxConditions() === 1) {
            const oValueBindingInfo = oSourceField.getBindingInfo("value");
            bIsValid = _isBindingStateMessages(oValueBindingInfo && oValueBindingInfo.binding);
          }
          if (oSourceField.getValue() === "" && !oSourceField.getProperty("required")) {
            bIsValid = true;
          }
        }
        mFieldState = {
          fieldValue: oSourceField.getValue(),
          validity: !!bIsValid
        };
      } else {
        // oSourceField extends from a FileUploader || Input || is a CheckBox
        const oBinding = oSourceField.getBinding("uploadUrl") || oSourceField.getBinding("value") || oSourceField.getBinding("selected");
        mFieldState = {
          fieldValue: oBinding && oBinding.getValue(),
          validity: _isBindingStateMessages(oBinding)
        };
      }
      return {
        field: oSourceField,
        state: mFieldState
      };
    },
    _fnFixHashQueryString: function (sCurrentHash) {
      if (sCurrentHash && sCurrentHash.indexOf("?") !== -1) {
        // sCurrentHash can contain query string, cut it off!
        sCurrentHash = sCurrentHash.split("?")[0];
      }
      return sCurrentHash;
    },
    _fnGetLinkInformation: function (_oSource, _oLink, _sPropertyPath, _sValue, fnSetActive) {
      const oModel = _oLink && _oLink.getModel();
      const oMetaModel = oModel && oModel.getMetaModel();
      const sSemanticObjectName = _sValue || _oSource && _oSource.getValue();
      const oView = _oLink && CommonUtils.getTargetView(_oLink);
      const oInternalModelContext = oView && oView.getBindingContext("internal");
      const oAppComponent = oView && CommonUtils.getAppComponent(oView);
      const oShellServiceHelper = oAppComponent && oAppComponent.getShellServices();
      const pGetLinksPromise = oShellServiceHelper && oShellServiceHelper.getLinksWithCache([[{
        semanticObject: sSemanticObjectName
      }]]);
      const aSemanticObjectUnavailableActions = oMetaModel && oMetaModel.getObject(`${_sPropertyPath}@com.sap.vocabularies.Common.v1.SemanticObjectUnavailableActions`);
      return {
        SemanticObjectName: sSemanticObjectName,
        SemanticObjectFullPath: _sPropertyPath,
        //sSemanticObjectFullPath,
        MetaModel: oMetaModel,
        InternalModelContext: oInternalModelContext,
        ShellServiceHelper: oShellServiceHelper,
        GetLinksPromise: pGetLinksPromise,
        SemanticObjectUnavailableActions: aSemanticObjectUnavailableActions,
        fnSetActive: fnSetActive
      };
    },
    _fnQuickViewHasNewCondition: function (oSemanticObjectPayload, _oLinkInfo) {
      if (oSemanticObjectPayload && oSemanticObjectPayload.path && oSemanticObjectPayload.path === _oLinkInfo.SemanticObjectFullPath) {
        // Got the resolved Semantic Object!
        const bResultingNewConditionForConditionalWrapper = oSemanticObjectPayload[!_oLinkInfo.SemanticObjectUnavailableActions ? "HasTargetsNotFiltered" : "HasTargets"];
        _oLinkInfo.fnSetActive(!!bResultingNewConditionForConditionalWrapper);
        return true;
      } else {
        return false;
      }
    },
    _fnQuickViewSetNewConditionForConditionalWrapper: function (_oLinkInfo, _oFinalSemanticObjects) {
      if (_oFinalSemanticObjects[_oLinkInfo.SemanticObjectName]) {
        let sTmpPath, oSemanticObjectPayload;
        const aSemanticObjectPaths = Object.keys(_oFinalSemanticObjects[_oLinkInfo.SemanticObjectName]);
        for (const iPathsCount in aSemanticObjectPaths) {
          sTmpPath = aSemanticObjectPaths[iPathsCount];
          oSemanticObjectPayload = _oFinalSemanticObjects[_oLinkInfo.SemanticObjectName] && _oFinalSemanticObjects[_oLinkInfo.SemanticObjectName][sTmpPath];
          if (FieldRuntime._fnQuickViewHasNewCondition(oSemanticObjectPayload, _oLinkInfo)) {
            break;
          }
        }
      }
    },
    _fnUpdateSemanticObjectsTargetModel: function (oEvent, sValue, oControl, _sPropertyPath) {
      const oSource = oEvent && oEvent.getSource();
      let fnSetActive;
      if (oControl.isA("sap.m.ObjectStatus")) {
        fnSetActive = bActive => oControl.setActive(bActive);
      }
      if (oControl.isA("sap.m.ObjectIdentifier")) {
        fnSetActive = bActive => oControl.setTitleActive(bActive);
      }
      const oConditionalWrapper = oControl && oControl.getParent();
      if (oConditionalWrapper && oConditionalWrapper.isA("sap.fe.core.controls.ConditionalWrapper")) {
        fnSetActive = bActive => oConditionalWrapper.setCondition(bActive);
      }
      if (fnSetActive !== undefined) {
        const oLinkInfo = FieldRuntime._fnGetLinkInformation(oSource, oControl, _sPropertyPath, sValue, fnSetActive);
        oLinkInfo.fnSetActive = fnSetActive;
        const sCurrentHash = FieldRuntime._fnFixHashQueryString(CommonUtils.getHash());
        CommonUtils.updateSemanticTargets([oLinkInfo.GetLinksPromise], [{
          semanticObject: oLinkInfo.SemanticObjectName,
          path: oLinkInfo.SemanticObjectFullPath
        }], oLinkInfo.InternalModelContext, sCurrentHash).then(function (oFinalSemanticObjects) {
          if (oFinalSemanticObjects) {
            FieldRuntime._fnQuickViewSetNewConditionForConditionalWrapper(oLinkInfo, oFinalSemanticObjects);
          }
        }).catch(function (oError) {
          Log.error("Cannot update Semantic Targets model", oError);
        });
      }
    },
    _checkControlHasModelAndBindingContext(_control) {
      if (!_control.getModel() || !_control.getBindingContext()) {
        return false;
      } else {
        return true;
      }
    },
    _checkCustomDataValueBeforeUpdatingSemanticObjectModel(_control, propertyPath, aCustomData) {
      let sSemanticObjectPathValue;
      let oValueBinding;
      const _fnCustomDataValueIsString = function (semanticObjectPathValue) {
        return !(semanticObjectPathValue !== null && typeof semanticObjectPathValue === "object");
      };
      // remove technical custom datas set by UI5
      aCustomData = aCustomData.filter(customData => customData.getKey() !== "sap-ui-custom-settings");
      for (const index in aCustomData) {
        sSemanticObjectPathValue = aCustomData[index].getValue();
        if (!sSemanticObjectPathValue && _fnCustomDataValueIsString(sSemanticObjectPathValue)) {
          oValueBinding = aCustomData[index].getBinding("value");
          if (oValueBinding) {
            oValueBinding.attachEventOnce("change", function (_oChangeEvent) {
              FieldRuntime._fnUpdateSemanticObjectsTargetModel(_oChangeEvent, null, _control, propertyPath);
            });
          }
        } else if (_fnCustomDataValueIsString(sSemanticObjectPathValue)) {
          FieldRuntime._fnUpdateSemanticObjectsTargetModel(null, sSemanticObjectPathValue, _control, propertyPath);
        }
      }
    },
    LinkModelContextChange: function (oEvent, sProperty, sPathToProperty) {
      const control = oEvent.getSource();
      if (FieldRuntime._checkControlHasModelAndBindingContext(control)) {
        const sPropertyPath = `${sPathToProperty}/${sProperty}`;
        const mdcLink = control.getDependents().length ? control.getDependents()[0] : undefined;
        const aCustomData = mdcLink === null || mdcLink === void 0 ? void 0 : mdcLink.getCustomData();
        if (aCustomData && aCustomData.length > 0) {
          FieldRuntime._checkCustomDataValueBeforeUpdatingSemanticObjectModel(control, sPropertyPath, aCustomData);
        }
      }
    },
    openExternalLink: function (event) {
      const source = event.getSource();
      if (source.data("url") && source.getProperty("text") !== "") {
        openWindow(source.data("url"));
      }
    },
    pressLink: async function (oEvent) {
      const oSource = oEvent.getSource();
      const oLink = oSource.isA("sap.m.ObjectIdentifier") ? oSource.findElements(false, elem => {
        return elem.isA("sap.m.Link");
      })[0] : oSource;
      async function openLink(mdcLink) {
        try {
          const sHref = await mdcLink.getTriggerHref();
          if (!sHref) {
            try {
              await mdcLink.open(oLink);
            } catch (oError) {
              Log.error("Cannot retrieve the QuickView Popover dialog", oError);
            }
          } else {
            const oView = CommonUtils.getTargetView(oLink);
            const oAppComponent = CommonUtils.getAppComponent(oView);
            const oShellServiceHelper = oAppComponent.getShellServices();
            const oShellHash = oShellServiceHelper.parseShellHash(sHref);
            const oNavArgs = {
              target: {
                semanticObject: oShellHash.semanticObject,
                action: oShellHash.action
              },
              params: oShellHash.params
            };
            KeepAliveHelper.storeControlRefreshStrategyForHash(oView, oShellHash);
            if (CommonUtils.isStickyEditMode(oLink) !== true) {
              //URL params and xappState has been generated earlier hence using toExternal
              oShellServiceHelper.toExternal(oNavArgs, oAppComponent);
            } else {
              try {
                const sNewHref = await oShellServiceHelper.hrefForExternalAsync(oNavArgs, oAppComponent);
                openWindow(sNewHref);
              } catch (oError) {
                Log.error(`Error while retireving hrefForExternal : ${oError}`);
              }
            }
          }
        } catch (oError) {
          Log.error("Error triggering link Href", oError);
        }
      }
      if (oSource.getDependents() && oSource.getDependents().length > 0 && oLink.getProperty("text") !== "") {
        const oFieldInfo = oSource.getDependents()[0];
        if (oFieldInfo && oFieldInfo.isA("sap.ui.mdc.Link")) {
          await openLink(oFieldInfo);
        }
      }
      return oLink;
    },
    uploadStream: function (controller, event) {
      const fileUploader = event.getSource(),
        FEController = FieldRuntime._getExtensionController(controller),
        fileWrapper = fileUploader.getParent(),
        uploadUrl = fileWrapper.getUploadUrl();
      if (uploadUrl !== "") {
        var _fileUploader$getMode, _fileUploader$getBind2;
        fileWrapper.setUIBusy(true);

        // use uploadUrl from FileWrapper which returns a canonical URL
        fileUploader.setUploadUrl(uploadUrl);
        fileUploader.removeAllHeaderParameters();
        const token = (_fileUploader$getMode = fileUploader.getModel()) === null || _fileUploader$getMode === void 0 ? void 0 : _fileUploader$getMode.getHttpHeaders()["X-CSRF-Token"];
        if (token) {
          const headerParameterCSRFToken = new FileUploaderParameter();
          headerParameterCSRFToken.setName("x-csrf-token");
          headerParameterCSRFToken.setValue(token);
          fileUploader.addHeaderParameter(headerParameterCSRFToken);
        }
        const eTag = (_fileUploader$getBind2 = fileUploader.getBindingContext()) === null || _fileUploader$getBind2 === void 0 ? void 0 : _fileUploader$getBind2.getProperty("@odata.etag");
        if (eTag) {
          const headerParameterETag = new FileUploaderParameter();
          headerParameterETag.setName("If-Match");
          // Ignore ETag in collaboration draft
          headerParameterETag.setValue(CollaborationActivitySync.isConnected(fileUploader) ? "*" : eTag);
          fileUploader.addHeaderParameter(headerParameterETag);
        }
        const headerParameterAccept = new FileUploaderParameter();
        headerParameterAccept.setName("Accept");
        headerParameterAccept.setValue("application/json");
        fileUploader.addHeaderParameter(headerParameterAccept);

        // synchronize upload with other requests
        const uploadPromise = new Promise((resolve, reject) => {
          this.uploadPromises = this.uploadPromises || {};
          this.uploadPromises[fileUploader.getId()] = {
            resolve: resolve,
            reject: reject
          };
          fileUploader.upload();
        });
        FEController._editFlow.syncTask(uploadPromise);
      } else {
        MessageBox.error(ResourceModel.getText("M_FIELD_FILEUPLOADER_ABORTED_TEXT"));
      }
    },
    handleUploadComplete: function (event, propertyFileName, propertyPath, controller) {
      const status = event.getParameter("status"),
        fileUploader = event.getSource(),
        fileWrapper = fileUploader.getParent();
      fileWrapper.setUIBusy(false);
      const context = fileUploader.getBindingContext();
      if (status === 0 || status >= 400) {
        this._displayMessageForFailedUpload(event);
        this.uploadPromises[fileUploader.getId()].reject();
      } else {
        const newETag = event.getParameter("headers").etag;
        if (newETag) {
          // set new etag for filename update, but without sending patch request
          context === null || context === void 0 ? void 0 : context.setProperty("@odata.etag", newETag, null);
        }

        // set filename for link text
        if (propertyFileName !== null && propertyFileName !== void 0 && propertyFileName.path) {
          context === null || context === void 0 ? void 0 : context.setProperty(propertyFileName.path, fileUploader.getValue());
        }

        // invalidate the property that not gets updated otherwise
        context === null || context === void 0 ? void 0 : context.setProperty(propertyPath, null, null);
        context === null || context === void 0 ? void 0 : context.setProperty(propertyPath, undefined, null);
        this._callSideEffectsForStream(event, fileWrapper, controller);
        this.uploadPromises[fileUploader.getId()].resolve();
      }
      delete this.uploadPromises[fileUploader.getId()];

      // Collaboration Draft Activity Sync
      const isCollaborationEnabled = CollaborationActivitySync.isConnected(fileUploader);
      if (!isCollaborationEnabled || !context) {
        return;
      }
      const notificationData = [`${context.getPath()}/${propertyPath}`];
      if (propertyFileName !== null && propertyFileName !== void 0 && propertyFileName.path) {
        notificationData.push(`${context.getPath()}/${propertyFileName.path}`);
      }
      let binding = context.getBinding();
      if (!binding.isA("sap.ui.model.odata.v4.ODataListBinding")) {
        const oView = CommonUtils.getTargetView(fileUploader);
        binding = oView.getBindingContext().getBinding();
      }
      if (binding.hasPendingChanges()) {
        binding.attachEventOnce("patchCompleted", () => {
          CollaborationActivitySync.send(fileWrapper, Activity.Change, notificationData);
        });
      } else {
        CollaborationActivitySync.send(fileWrapper, Activity.Change, notificationData);
      }
    },
    _displayMessageForFailedUpload: function (oEvent) {
      // handling of backend errors
      const sError = oEvent.getParameter("responseRaw") || oEvent.getParameter("response");
      let sMessageText, oError;
      try {
        oError = sError && JSON.parse(sError);
        sMessageText = oError.error && oError.error.message;
      } catch (e) {
        sMessageText = sError || ResourceModel.getText("M_FIELD_FILEUPLOADER_ABORTED_TEXT");
      }
      MessageBox.error(sMessageText);
    },
    removeStream: function (event, propertyFileName, propertyPath, controller) {
      const deleteButton = event.getSource();
      const fileWrapper = deleteButton.getParent();
      const context = fileWrapper.getBindingContext();

      // streams are removed by assigning the null value
      context.setProperty(propertyPath, null);
      // When setting the property to null, the uploadUrl (@@MODEL.format) is set to "" by the model
      //	with that another upload is not possible before refreshing the page
      // (refreshing the page would recreate the URL)
      //	This is the workaround:
      //	We set the property to undefined only on the frontend which will recreate the uploadUrl
      context.setProperty(propertyPath, undefined, null);
      this._callSideEffectsForStream(event, fileWrapper, controller);

      // Collaboration Draft Activity Sync
      const bCollaborationEnabled = CollaborationActivitySync.isConnected(deleteButton);
      if (bCollaborationEnabled) {
        let binding = context.getBinding();
        if (!binding.isA("sap.ui.model.odata.v4.ODataListBinding")) {
          const oView = CommonUtils.getTargetView(deleteButton);
          binding = oView.getBindingContext().getBinding();
        }
        const data = [`${context.getPath()}/${propertyPath}`];
        if (propertyFileName !== null && propertyFileName !== void 0 && propertyFileName.path) {
          data.push(`${context.getPath()}/${propertyFileName.path}`);
        }
        CollaborationActivitySync.send(deleteButton, Activity.LiveChange, data);
        binding.attachEventOnce("patchCompleted", function () {
          CollaborationActivitySync.send(deleteButton, Activity.Change, data);
        });
      }
    },
    _callSideEffectsForStream: function (oEvent, oControl, oController) {
      const oFEController = FieldRuntime._getExtensionController(oController);
      if (oControl && oControl.getBindingContext().isTransient()) {
        return;
      }
      if (oControl) {
        oEvent.oSource = oControl;
      }
      oFEController._sideEffects.handleFieldChange(oEvent, this.getFieldStateOnChange(oEvent).state["validity"]);
    },
    getIconForMimeType: function (sMimeType) {
      return IconPool.getIconForMimeType(sMimeType);
    },
    /**
     * Method to retrieve text from value list for DataField.
     *
     * @function
     * @name retrieveTextFromValueList
     * @param sPropertyValue The property value of the datafield
     * @param sPropertyFullPath The property full path's
     * @param sDisplayFormat The display format for the datafield
     * @returns The formatted value in corresponding display format.
     */
    retrieveTextFromValueList: function (sPropertyValue, sPropertyFullPath, sDisplayFormat) {
      let sTextProperty;
      let oMetaModel;
      let sPropertyName;
      if (sPropertyValue) {
        oMetaModel = CommonHelper.getMetaModel();
        sPropertyName = oMetaModel.getObject(`${sPropertyFullPath}@sapui.name`);
        return oMetaModel.requestValueListInfo(sPropertyFullPath, true).then(function (mValueListInfo) {
          // take the "" one if exists, otherwise take the first one in the object TODO: to be discussed
          const oValueListInfo = mValueListInfo[mValueListInfo[""] ? "" : Object.keys(mValueListInfo)[0]];
          const oValueListModel = oValueListInfo.$model;
          const oMetaModelValueList = oValueListModel.getMetaModel();
          const oParamWithKey = oValueListInfo.Parameters.find(function (oParameter) {
            return oParameter.LocalDataProperty && oParameter.LocalDataProperty.$PropertyPath === sPropertyName;
          });
          if (oParamWithKey && !oParamWithKey.ValueListProperty) {
            return Promise.reject(`Inconsistent value help annotation for ${sPropertyName}`);
          }
          const oTextAnnotation = oMetaModelValueList.getObject(`/${oValueListInfo.CollectionPath}/${oParamWithKey.ValueListProperty}@com.sap.vocabularies.Common.v1.Text`);
          if (oTextAnnotation && oTextAnnotation.$Path) {
            sTextProperty = oTextAnnotation.$Path;
            const oFilter = new Filter({
              path: oParamWithKey.ValueListProperty,
              operator: "EQ",
              value1: sPropertyValue
            });
            const oListBinding = oValueListModel.bindList(`/${oValueListInfo.CollectionPath}`, undefined, undefined, oFilter, {
              $select: sTextProperty
            });
            return oListBinding.requestContexts(0, 2);
          } else {
            sDisplayFormat = "Value";
            return sPropertyValue;
          }
        }).then(function (aContexts) {
          var _aContexts$;
          const sDescription = sTextProperty ? (_aContexts$ = aContexts[0]) === null || _aContexts$ === void 0 ? void 0 : _aContexts$.getObject()[sTextProperty] : "";
          switch (sDisplayFormat) {
            case "Description":
              return sDescription;
            case "DescriptionValue":
              return Core.getLibraryResourceBundle("sap.fe.core").getText("C_FORMAT_FOR_TEXT_ARRANGEMENT", [sDescription, sPropertyValue]);
            case "ValueDescription":
              return Core.getLibraryResourceBundle("sap.fe.core").getText("C_FORMAT_FOR_TEXT_ARRANGEMENT", [sPropertyValue, sDescription]);
            default:
              return sPropertyValue;
          }
        }).catch(function (oError) {
          const sMsg = oError.status && oError.status === 404 ? `Metadata not found (${oError.status}) for value help of property ${sPropertyFullPath}` : oError.message;
          Log.error(sMsg);
        });
      }
      return sPropertyValue;
    },
    handleTypeMissmatch: function (oEvent) {
      MessageBox.error(ResourceModel.getText("M_FIELD_FILEUPLOADER_WRONG_MIMETYPE"), {
        details: `<p><strong>${ResourceModel.getText("M_FIELD_FILEUPLOADER_WRONG_MIMETYPE_DETAILS_SELECTED")}</strong></p>${oEvent.getParameters().mimeType}<br><br>` + `<p><strong>${ResourceModel.getText("M_FIELD_FILEUPLOADER_WRONG_MIMETYPE_DETAILS_ALLOWED")}</strong></p>${oEvent.getSource().getMimeType().toString().replaceAll(",", ", ")}`,
        contentWidth: "150px"
      });
    },
    handleFileSizeExceed: function (oEvent) {
      MessageBox.error(ResourceModel.getText("M_FIELD_FILEUPLOADER_FILE_TOO_BIG", oEvent.getSource().getMaximumFileSize().toFixed(3)), {
        contentWidth: "150px"
      });
    },
    _getExtensionController: function (oController) {
      return oController.isA("sap.fe.core.ExtensionAPI") ? oController._controller : oController;
    }
  };

  /**
   * @global
   */
  return FieldRuntime;
}, true);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/FieldRuntime", ["sap/base/Log","sap/fe/core/CommonUtils","sap/fe/core/controllerextensions/collaboration/ActivitySync","sap/fe/core/controllerextensions/collaboration/CollaborationCommon","sap/fe/core/controllerextensions/editFlow/draft","sap/fe/core/controls/FieldWrapper","sap/fe/core/helpers/KeepAliveHelper","sap/fe/core/helpers/ModelHelper","sap/fe/macros/CommonHelper","sap/fe/macros/field/FieldAPI","sap/fe/macros/ResourceModel","sap/m/MessageBox","sap/ui/core/Core","sap/ui/core/IconPool","sap/ui/model/Filter","sap/ui/unified/FileUploaderParameter","sap/ui/util/openWindow"],function(e,t,n,o,i,a,r,s,c,l,d,g,u,f,p,h,m){"use strict";var C=o.Activity;function v(e){let n=e.getBindingContext().getBinding();if(!n.isA("sap.ui.model.odata.v4.ODataListBinding")){const o=t.getTargetView(e);n=o.getBindingContext().getBinding()}return n}const P={resetChangesHandler:undefined,uploadPromises:undefined,onDataFieldWithNavigationPath:function(n,o,a){if(o._routing){let e=n.getBindingContext();const r=t.getTargetView(n),c=e.getModel().getMetaModel(),l=function(t){if(t){e=t}o._routing.navigateToTarget(e,a,true)};if(r.getViewData().converterType==="ObjectPage"&&!s.isStickySessionSupported(c)){i.processDataLossOrDraftDiscardConfirmation(l,Function.prototype,e,r.getController(),true,i.NavigationType.ForwardNavigation)}else{l()}}else{e.error("FieldRuntime: No routing listener controller extension found. Internal navigation aborted.","sap.fe.macros.field.FieldRuntime","onDataFieldWithNavigationPath")}},isDraftIndicatorVisible:function(e,t,n,o,i){if(o!==undefined&&n!==undefined&&(!o||n)&&!i){return e===t}else{return false}},hasTargets:function(e){return e?e:false},getStateDependingOnSemanticObjectTargets:function(e){return e?"Information":"None"},onValidateFieldGroup:function(e,t){const n=P._getExtensionController(e);n._sideEffects.handleFieldGroupChange(t)},handleChange:function(e,t){const o=t.getSource(),i=o&&o.getBindingContext().isTransient(),a=t.getParameter("promise")||Promise.resolve(),r=t.getSource(),s=t.getParameter("valid"),c=this.getFieldStateOnChange(t).state["validity"];a.then(function(){t.oSource=r;t.mParameters={valid:s};l.handleChange(t,e)}).catch(function(){t.oSource=r;t.mParameters={valid:false};l.handleChange(t,e)});const d=P._getExtensionController(e);d._editFlow.syncTask(a);if(i){return}d._sideEffects.handleFieldChange(t,c,a);const g=t.getSource(),u=n.isConnected(g);if(u&&c){var f,p;const e=v(g);const t=[...(f=g.getBindingInfo("value")||g.getBindingInfo("selected"))===null||f===void 0?void 0:f.parts,...((p=g.getBindingInfo("additionalValue"))===null||p===void 0?void 0:p.parts)||[]].map(function(e){if(e){var t;return`${(t=g.getBindingContext())===null||t===void 0?void 0:t.getPath()}/${e.path}`}});if(e.hasPendingChanges()){e.attachEventOnce("patchCompleted",function(){n.send(g,C.Change,t)})}else{n.send(g,C.Undo,t)}}},handleLiveChange:function(e){const t=e.getSource();if(n.isConnected(t)){const e=t.getBindingInfo("value").parts[0].path;const o=`${t.getBindingContext().getPath()}/${e}`;n.send(t,C.LiveChange,o);if(!this.resetChangesHandler){this.resetChangesHandler=()=>{setTimeout(()=>{if(t.isA("sap.ui.mdc.Field")){const e=u.byId(u.getCurrentFocusedControlId());if((e===null||e===void 0?void 0:e.getParent())===t){return}}t.detachBrowserEvent("focusout",this.resetChangesHandler);delete this.resetChangesHandler;n.send(t,C.Undo,o)},100)};t.attachBrowserEvent("focusout",this.resetChangesHandler)}}},handleOpenPicker:function(e){const t=e.getSource();const o=n.isConnected(t);if(o){const e=t.getBindingInfo("value").parts[0].path;const o=`${t.getBindingContext().getPath()}/${e}`;n.send(t,C.LiveChange,o)}},handleClosePicker:function(e){const t=e.getSource();const o=n.isConnected(t);if(o){const e=v(t);if(!e.hasPendingChanges()){const e=t.getBindingInfo("value").parts[0].path;const o=`${t.getBindingContext().getPath()}/${e}`;n.send(t,C.Undo,o)}}},_sendCollaborationMessageForFileUploader(e,t){const o=n.isConnected(e);if(o){var i,a;const o=(i=e.getParent())===null||i===void 0?void 0:i.getProperty("propertyPath");const r=`${(a=e.getBindingContext())===null||a===void 0?void 0:a.getPath()}/${o}`;n.send(e,t,r)}},handleOpenUploader:function(e){const t=e.getSource();P._sendCollaborationMessageForFileUploader(t,C.LiveChange)},handleCloseUploader:function(e){const t=e.getSource();P._sendCollaborationMessageForFileUploader(t,C.Undo)},getFieldStateOnChange:function(e){let t=e.getSource(),n={};const o=function(e){return e&&e.getDataState()?e.getDataState().getInvalidValue()===undefined:true};if(t.isA("sap.fe.macros.field.FieldAPI")){t=t.getContent()}if(t.isA(a.getMetadata().getName())&&t.getEditMode()==="Editable"){t=t.getContentEdit()[0]}if(t.isA("sap.ui.mdc.Field")){let i=e.getParameter("valid")||e.getParameter("isValid");if(i===undefined){if(t.getMaxConditions()===1){const e=t.getBindingInfo("value");i=o(e&&e.binding)}if(t.getValue()===""&&!t.getProperty("required")){i=true}}n={fieldValue:t.getValue(),validity:!!i}}else{const e=t.getBinding("uploadUrl")||t.getBinding("value")||t.getBinding("selected");n={fieldValue:e&&e.getValue(),validity:o(e)}}return{field:t,state:n}},_fnFixHashQueryString:function(e){if(e&&e.indexOf("?")!==-1){e=e.split("?")[0]}return e},_fnGetLinkInformation:function(e,n,o,i,a){const r=n&&n.getModel();const s=r&&r.getMetaModel();const c=i||e&&e.getValue();const l=n&&t.getTargetView(n);const d=l&&l.getBindingContext("internal");const g=l&&t.getAppComponent(l);const u=g&&g.getShellServices();const f=u&&u.getLinksWithCache([[{semanticObject:c}]]);const p=s&&s.getObject(`${o}@com.sap.vocabularies.Common.v1.SemanticObjectUnavailableActions`);return{SemanticObjectName:c,SemanticObjectFullPath:o,MetaModel:s,InternalModelContext:d,ShellServiceHelper:u,GetLinksPromise:f,SemanticObjectUnavailableActions:p,fnSetActive:a}},_fnQuickViewHasNewCondition:function(e,t){if(e&&e.path&&e.path===t.SemanticObjectFullPath){const n=e[!t.SemanticObjectUnavailableActions?"HasTargetsNotFiltered":"HasTargets"];t.fnSetActive(!!n);return true}else{return false}},_fnQuickViewSetNewConditionForConditionalWrapper:function(e,t){if(t[e.SemanticObjectName]){let n,o;const i=Object.keys(t[e.SemanticObjectName]);for(const a in i){n=i[a];o=t[e.SemanticObjectName]&&t[e.SemanticObjectName][n];if(P._fnQuickViewHasNewCondition(o,e)){break}}}},_fnUpdateSemanticObjectsTargetModel:function(n,o,i,a){const r=n&&n.getSource();let s;if(i.isA("sap.m.ObjectStatus")){s=e=>i.setActive(e)}if(i.isA("sap.m.ObjectIdentifier")){s=e=>i.setTitleActive(e)}const c=i&&i.getParent();if(c&&c.isA("sap.fe.core.controls.ConditionalWrapper")){s=e=>c.setCondition(e)}if(s!==undefined){const n=P._fnGetLinkInformation(r,i,a,o,s);n.fnSetActive=s;const c=P._fnFixHashQueryString(t.getHash());t.updateSemanticTargets([n.GetLinksPromise],[{semanticObject:n.SemanticObjectName,path:n.SemanticObjectFullPath}],n.InternalModelContext,c).then(function(e){if(e){P._fnQuickViewSetNewConditionForConditionalWrapper(n,e)}}).catch(function(t){e.error("Cannot update Semantic Targets model",t)})}},_checkControlHasModelAndBindingContext(e){if(!e.getModel()||!e.getBindingContext()){return false}else{return true}},_checkCustomDataValueBeforeUpdatingSemanticObjectModel(e,t,n){let o;let i;const a=function(e){return!(e!==null&&typeof e==="object")};n=n.filter(e=>e.getKey()!=="sap-ui-custom-settings");for(const r in n){o=n[r].getValue();if(!o&&a(o)){i=n[r].getBinding("value");if(i){i.attachEventOnce("change",function(n){P._fnUpdateSemanticObjectsTargetModel(n,null,e,t)})}}else if(a(o)){P._fnUpdateSemanticObjectsTargetModel(null,o,e,t)}}},LinkModelContextChange:function(e,t,n){const o=e.getSource();if(P._checkControlHasModelAndBindingContext(o)){const e=`${n}/${t}`;const i=o.getDependents().length?o.getDependents()[0]:undefined;const a=i===null||i===void 0?void 0:i.getCustomData();if(a&&a.length>0){P._checkCustomDataValueBeforeUpdatingSemanticObjectModel(o,e,a)}}},openExternalLink:function(e){const t=e.getSource();if(t.data("url")&&t.getProperty("text")!==""){m(t.data("url"))}},pressLink:async function(n){const o=n.getSource();const i=o.isA("sap.m.ObjectIdentifier")?o.findElements(false,e=>e.isA("sap.m.Link"))[0]:o;async function a(n){try{const o=await n.getTriggerHref();if(!o){try{await n.open(i)}catch(t){e.error("Cannot retrieve the QuickView Popover dialog",t)}}else{const n=t.getTargetView(i);const a=t.getAppComponent(n);const s=a.getShellServices();const c=s.parseShellHash(o);const l={target:{semanticObject:c.semanticObject,action:c.action},params:c.params};r.storeControlRefreshStrategyForHash(n,c);if(t.isStickyEditMode(i)!==true){s.toExternal(l,a)}else{try{const e=await s.hrefForExternalAsync(l,a);m(e)}catch(t){e.error(`Error while retireving hrefForExternal : ${t}`)}}}}catch(t){e.error("Error triggering link Href",t)}}if(o.getDependents()&&o.getDependents().length>0&&i.getProperty("text")!==""){const e=o.getDependents()[0];if(e&&e.isA("sap.ui.mdc.Link")){await a(e)}}return i},uploadStream:function(e,t){const o=t.getSource(),i=P._getExtensionController(e),a=o.getParent(),r=a.getUploadUrl();if(r!==""){var s,c;a.setUIBusy(true);o.setUploadUrl(r);o.removeAllHeaderParameters();const e=(s=o.getModel())===null||s===void 0?void 0:s.getHttpHeaders()["X-CSRF-Token"];if(e){const t=new h;t.setName("x-csrf-token");t.setValue(e);o.addHeaderParameter(t)}const t=(c=o.getBindingContext())===null||c===void 0?void 0:c.getProperty("@odata.etag");if(t){const e=new h;e.setName("If-Match");e.setValue(n.isConnected(o)?"*":t);o.addHeaderParameter(e)}const l=new h;l.setName("Accept");l.setValue("application/json");o.addHeaderParameter(l);const d=new Promise((e,t)=>{this.uploadPromises=this.uploadPromises||{};this.uploadPromises[o.getId()]={resolve:e,reject:t};o.upload()});i._editFlow.syncTask(d)}else{g.error(d.getText("M_FIELD_FILEUPLOADER_ABORTED_TEXT"))}},handleUploadComplete:function(e,o,i,a){const r=e.getParameter("status"),s=e.getSource(),c=s.getParent();c.setUIBusy(false);const l=s.getBindingContext();if(r===0||r>=400){this._displayMessageForFailedUpload(e);this.uploadPromises[s.getId()].reject()}else{const t=e.getParameter("headers").etag;if(t){l===null||l===void 0?void 0:l.setProperty("@odata.etag",t,null)}if(o!==null&&o!==void 0&&o.path){l===null||l===void 0?void 0:l.setProperty(o.path,s.getValue())}l===null||l===void 0?void 0:l.setProperty(i,null,null);l===null||l===void 0?void 0:l.setProperty(i,undefined,null);this._callSideEffectsForStream(e,c,a);this.uploadPromises[s.getId()].resolve()}delete this.uploadPromises[s.getId()];const d=n.isConnected(s);if(!d||!l){return}const g=[`${l.getPath()}/${i}`];if(o!==null&&o!==void 0&&o.path){g.push(`${l.getPath()}/${o.path}`)}let u=l.getBinding();if(!u.isA("sap.ui.model.odata.v4.ODataListBinding")){const e=t.getTargetView(s);u=e.getBindingContext().getBinding()}if(u.hasPendingChanges()){u.attachEventOnce("patchCompleted",()=>{n.send(c,C.Change,g)})}else{n.send(c,C.Change,g)}},_displayMessageForFailedUpload:function(e){const t=e.getParameter("responseRaw")||e.getParameter("response");let n,o;try{o=t&&JSON.parse(t);n=o.error&&o.error.message}catch(e){n=t||d.getText("M_FIELD_FILEUPLOADER_ABORTED_TEXT")}g.error(n)},removeStream:function(e,o,i,a){const r=e.getSource();const s=r.getParent();const c=s.getBindingContext();c.setProperty(i,null);c.setProperty(i,undefined,null);this._callSideEffectsForStream(e,s,a);const l=n.isConnected(r);if(l){let e=c.getBinding();if(!e.isA("sap.ui.model.odata.v4.ODataListBinding")){const n=t.getTargetView(r);e=n.getBindingContext().getBinding()}const a=[`${c.getPath()}/${i}`];if(o!==null&&o!==void 0&&o.path){a.push(`${c.getPath()}/${o.path}`)}n.send(r,C.LiveChange,a);e.attachEventOnce("patchCompleted",function(){n.send(r,C.Change,a)})}},_callSideEffectsForStream:function(e,t,n){const o=P._getExtensionController(n);if(t&&t.getBindingContext().isTransient()){return}if(t){e.oSource=t}o._sideEffects.handleFieldChange(e,this.getFieldStateOnChange(e).state["validity"])},getIconForMimeType:function(e){return f.getIconForMimeType(e)},retrieveTextFromValueList:function(t,n,o){let i;let a;let r;if(t){a=c.getMetaModel();r=a.getObject(`${n}@sapui.name`);return a.requestValueListInfo(n,true).then(function(e){const n=e[e[""]?"":Object.keys(e)[0]];const a=n.$model;const s=a.getMetaModel();const c=n.Parameters.find(function(e){return e.LocalDataProperty&&e.LocalDataProperty.$PropertyPath===r});if(c&&!c.ValueListProperty){return Promise.reject(`Inconsistent value help annotation for ${r}`)}const l=s.getObject(`/${n.CollectionPath}/${c.ValueListProperty}@com.sap.vocabularies.Common.v1.Text`);if(l&&l.$Path){i=l.$Path;const e=new p({path:c.ValueListProperty,operator:"EQ",value1:t});const o=a.bindList(`/${n.CollectionPath}`,undefined,undefined,e,{$select:i});return o.requestContexts(0,2)}else{o="Value";return t}}).then(function(e){var n;const a=i?(n=e[0])===null||n===void 0?void 0:n.getObject()[i]:"";switch(o){case"Description":return a;case"DescriptionValue":return u.getLibraryResourceBundle("sap.fe.core").getText("C_FORMAT_FOR_TEXT_ARRANGEMENT",[a,t]);case"ValueDescription":return u.getLibraryResourceBundle("sap.fe.core").getText("C_FORMAT_FOR_TEXT_ARRANGEMENT",[t,a]);default:return t}}).catch(function(t){const o=t.status&&t.status===404?`Metadata not found (${t.status}) for value help of property ${n}`:t.message;e.error(o)})}return t},handleTypeMissmatch:function(e){g.error(d.getText("M_FIELD_FILEUPLOADER_WRONG_MIMETYPE"),{details:`<p><strong>${d.getText("M_FIELD_FILEUPLOADER_WRONG_MIMETYPE_DETAILS_SELECTED")}</strong></p>${e.getParameters().mimeType}<br><br>`+`<p><strong>${d.getText("M_FIELD_FILEUPLOADER_WRONG_MIMETYPE_DETAILS_ALLOWED")}</strong></p>${e.getSource().getMimeType().toString().replaceAll(",",", ")}`,contentWidth:"150px"})},handleFileSizeExceed:function(e){g.error(d.getText("M_FIELD_FILEUPLOADER_FILE_TOO_BIG",e.getSource().getMaximumFileSize().toFixed(3)),{contentWidth:"150px"})},_getExtensionController:function(e){return e.isA("sap.fe.core.ExtensionAPI")?e._controller:e}};return P},true);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/FieldTemplating-dbg", ["sap/fe/core/converters/helpers/BindingHelper", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/templating/CommonFormatters", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/core/templating/FieldControlHelper", "sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/SemanticObjectHelper", "sap/fe/core/templating/UIFormatters", "sap/ui/model/json/JSONModel"], function (BindingHelper, BindingToolkit, CommonFormatters, DataModelPathHelper, FieldControlHelper, PropertyHelper, SemanticObjectHelper, UIFormatters, JSONModel) {
  "use strict";

  var _exports = {};
  var getDynamicPathFromSemanticObject = SemanticObjectHelper.getDynamicPathFromSemanticObject;
  var isReadOnlyExpression = FieldControlHelper.isReadOnlyExpression;
  var getContextRelativeTargetObjectPath = DataModelPathHelper.getContextRelativeTargetObjectPath;
  var enhanceDataModelPath = DataModelPathHelper.enhanceDataModelPath;
  var transformRecursively = BindingToolkit.transformRecursively;
  var pathInModel = BindingToolkit.pathInModel;
  var or = BindingToolkit.or;
  var not = BindingToolkit.not;
  var isPathInModelExpression = BindingToolkit.isPathInModelExpression;
  var isComplexTypeExpression = BindingToolkit.isComplexTypeExpression;
  var ifElse = BindingToolkit.ifElse;
  var getExpressionFromAnnotation = BindingToolkit.getExpressionFromAnnotation;
  var formatWithTypeInformation = BindingToolkit.formatWithTypeInformation;
  var equal = BindingToolkit.equal;
  var constant = BindingToolkit.constant;
  var compileExpression = BindingToolkit.compileExpression;
  var and = BindingToolkit.and;
  var UI = BindingHelper.UI;
  /**
   * Recursively add the text arrangement to a binding expression.
   *
   * @param bindingExpressionToEnhance The binding expression to be enhanced
   * @param fullContextPath The current context path we're on (to properly resolve the text arrangement properties)
   * @returns An updated expression containing the text arrangement binding.
   */
  const addTextArrangementToBindingExpression = function (bindingExpressionToEnhance, fullContextPath) {
    return transformRecursively(bindingExpressionToEnhance, "PathInModel", expression => {
      let outExpression = expression;
      if (expression.modelName === undefined) {
        // In case of default model we then need to resolve the text arrangement property
        const oPropertyDataModelPath = enhanceDataModelPath(fullContextPath, expression.path);
        outExpression = CommonFormatters.getBindingWithTextArrangement(oPropertyDataModelPath, expression);
      }
      return outExpression;
    });
  };
  _exports.addTextArrangementToBindingExpression = addTextArrangementToBindingExpression;
  const formatValueRecursively = function (bindingExpressionToEnhance, fullContextPath) {
    return transformRecursively(bindingExpressionToEnhance, "PathInModel", expression => {
      let outExpression = expression;
      if (expression.modelName === undefined) {
        // In case of default model we then need to resolve the text arrangement property
        const oPropertyDataModelPath = enhanceDataModelPath(fullContextPath, expression.path);
        outExpression = formatWithTypeInformation(oPropertyDataModelPath.targetObject, expression);
      }
      return outExpression;
    });
  };
  _exports.formatValueRecursively = formatValueRecursively;
  const getTextBindingExpression = function (oPropertyDataModelObjectPath, fieldFormatOptions) {
    return getTextBinding(oPropertyDataModelObjectPath, fieldFormatOptions, true);
  };
  _exports.getTextBindingExpression = getTextBindingExpression;
  const getTextBinding = function (oPropertyDataModelObjectPath, fieldFormatOptions) {
    var _oPropertyDataModelOb, _oPropertyDataModelOb2, _oPropertyDataModelOb3, _oPropertyDataModelOb4, _oPropertyDataModelOb5, _oPropertyDataModelOb6, _oPropertyDataModelOb7, _oPropertyDataModelOb8, _oPropertyDataModelOb9, _oPropertyDataModelOb10, _oPropertyDataModelOb11, _oPropertyDataModelOb12, _oPropertyDataModelOb13, _oPropertyDataModelOb14, _oPropertyDataModelOb15;
    let asObject = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    if (((_oPropertyDataModelOb = oPropertyDataModelObjectPath.targetObject) === null || _oPropertyDataModelOb === void 0 ? void 0 : _oPropertyDataModelOb.$Type) === "com.sap.vocabularies.UI.v1.DataField" || ((_oPropertyDataModelOb2 = oPropertyDataModelObjectPath.targetObject) === null || _oPropertyDataModelOb2 === void 0 ? void 0 : _oPropertyDataModelOb2.$Type) === "com.sap.vocabularies.UI.v1.DataPointType" || ((_oPropertyDataModelOb3 = oPropertyDataModelObjectPath.targetObject) === null || _oPropertyDataModelOb3 === void 0 ? void 0 : _oPropertyDataModelOb3.$Type) === "com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath" || ((_oPropertyDataModelOb4 = oPropertyDataModelObjectPath.targetObject) === null || _oPropertyDataModelOb4 === void 0 ? void 0 : _oPropertyDataModelOb4.$Type) === "com.sap.vocabularies.UI.v1.DataFieldWithUrl" || ((_oPropertyDataModelOb5 = oPropertyDataModelObjectPath.targetObject) === null || _oPropertyDataModelOb5 === void 0 ? void 0 : _oPropertyDataModelOb5.$Type) === "com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation" || ((_oPropertyDataModelOb6 = oPropertyDataModelObjectPath.targetObject) === null || _oPropertyDataModelOb6 === void 0 ? void 0 : _oPropertyDataModelOb6.$Type) === "com.sap.vocabularies.UI.v1.DataFieldWithAction") {
      // If there is no resolved property, the value is returned as a constant
      const fieldValue = oPropertyDataModelObjectPath.targetObject.Value || "";
      return compileExpression(constant(fieldValue));
    }
    if (PropertyHelper.isPathExpression(oPropertyDataModelObjectPath.targetObject) && oPropertyDataModelObjectPath.targetObject.$target) {
      oPropertyDataModelObjectPath = enhanceDataModelPath(oPropertyDataModelObjectPath, oPropertyDataModelObjectPath.targetObject.path);
    }
    const oBindingExpression = pathInModel(getContextRelativeTargetObjectPath(oPropertyDataModelObjectPath));
    let oTargetBinding;
    if ((_oPropertyDataModelOb7 = oPropertyDataModelObjectPath.targetObject) !== null && _oPropertyDataModelOb7 !== void 0 && (_oPropertyDataModelOb8 = _oPropertyDataModelOb7.annotations) !== null && _oPropertyDataModelOb8 !== void 0 && (_oPropertyDataModelOb9 = _oPropertyDataModelOb8.Measures) !== null && _oPropertyDataModelOb9 !== void 0 && _oPropertyDataModelOb9.Unit || (_oPropertyDataModelOb10 = oPropertyDataModelObjectPath.targetObject) !== null && _oPropertyDataModelOb10 !== void 0 && (_oPropertyDataModelOb11 = _oPropertyDataModelOb10.annotations) !== null && _oPropertyDataModelOb11 !== void 0 && (_oPropertyDataModelOb12 = _oPropertyDataModelOb11.Measures) !== null && _oPropertyDataModelOb12 !== void 0 && _oPropertyDataModelOb12.ISOCurrency) {
      oTargetBinding = UIFormatters.getBindingWithUnitOrCurrency(oPropertyDataModelObjectPath, oBindingExpression);
      if ((fieldFormatOptions === null || fieldFormatOptions === void 0 ? void 0 : fieldFormatOptions.measureDisplayMode) === "Hidden" && isComplexTypeExpression(oTargetBinding)) {
        // TODO: Refactor once types are less generic here
        oTargetBinding.formatOptions = {
          ...oTargetBinding.formatOptions,
          showMeasure: false
        };
      }
    } else if ((_oPropertyDataModelOb13 = oPropertyDataModelObjectPath.targetObject) !== null && _oPropertyDataModelOb13 !== void 0 && (_oPropertyDataModelOb14 = _oPropertyDataModelOb13.annotations) !== null && _oPropertyDataModelOb14 !== void 0 && (_oPropertyDataModelOb15 = _oPropertyDataModelOb14.Common) !== null && _oPropertyDataModelOb15 !== void 0 && _oPropertyDataModelOb15.Timezone) {
      oTargetBinding = UIFormatters.getBindingWithTimezone(oPropertyDataModelObjectPath, oBindingExpression, false, true, fieldFormatOptions.dateFormatOptions);
    } else {
      oTargetBinding = CommonFormatters.getBindingWithTextArrangement(oPropertyDataModelObjectPath, oBindingExpression, fieldFormatOptions);
    }
    if (asObject) {
      return oTargetBinding;
    }
    // We don't include $$nopatch and parseKeepEmptyString as they make no sense in the text binding case
    return compileExpression(oTargetBinding);
  };
  _exports.getTextBinding = getTextBinding;
  const getValueBinding = function (oPropertyDataModelObjectPath, fieldFormatOptions) {
    let ignoreUnit = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
    let ignoreFormatting = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    let bindingParameters = arguments.length > 4 ? arguments[4] : undefined;
    let targetTypeAny = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;
    let keepUnit = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;
    if (PropertyHelper.isPathExpression(oPropertyDataModelObjectPath.targetObject) && oPropertyDataModelObjectPath.targetObject.$target) {
      const oNavPath = oPropertyDataModelObjectPath.targetEntityType.resolvePath(oPropertyDataModelObjectPath.targetObject.path, true);
      oPropertyDataModelObjectPath.targetObject = oNavPath.target;
      oNavPath.visitedObjects.forEach(oNavObj => {
        if (oNavObj && oNavObj._type === "NavigationProperty") {
          oPropertyDataModelObjectPath.navigationProperties.push(oNavObj);
        }
      });
    }
    const targetObject = oPropertyDataModelObjectPath.targetObject;
    if (PropertyHelper.isProperty(targetObject)) {
      let oBindingExpression = pathInModel(getContextRelativeTargetObjectPath(oPropertyDataModelObjectPath));
      if (isPathInModelExpression(oBindingExpression)) {
        var _targetObject$annotat, _targetObject$annotat2, _targetObject$annotat3, _targetObject$annotat4, _targetObject$annotat5, _targetObject$annotat6;
        if ((_targetObject$annotat = targetObject.annotations) !== null && _targetObject$annotat !== void 0 && (_targetObject$annotat2 = _targetObject$annotat.Communication) !== null && _targetObject$annotat2 !== void 0 && _targetObject$annotat2.IsEmailAddress) {
          oBindingExpression.type = "sap.fe.core.type.Email";
        } else if (!ignoreUnit && ((_targetObject$annotat3 = targetObject.annotations) !== null && _targetObject$annotat3 !== void 0 && (_targetObject$annotat4 = _targetObject$annotat3.Measures) !== null && _targetObject$annotat4 !== void 0 && _targetObject$annotat4.ISOCurrency || (_targetObject$annotat5 = targetObject.annotations) !== null && _targetObject$annotat5 !== void 0 && (_targetObject$annotat6 = _targetObject$annotat5.Measures) !== null && _targetObject$annotat6 !== void 0 && _targetObject$annotat6.Unit)) {
          oBindingExpression = UIFormatters.getBindingWithUnitOrCurrency(oPropertyDataModelObjectPath, oBindingExpression, true, keepUnit ? undefined : {
            showMeasure: false
          });
        } else {
          var _oPropertyDataModelOb16, _oPropertyDataModelOb17;
          const oTimezone = (_oPropertyDataModelOb16 = oPropertyDataModelObjectPath.targetObject.annotations) === null || _oPropertyDataModelOb16 === void 0 ? void 0 : (_oPropertyDataModelOb17 = _oPropertyDataModelOb16.Common) === null || _oPropertyDataModelOb17 === void 0 ? void 0 : _oPropertyDataModelOb17.Timezone;
          if (oTimezone) {
            oBindingExpression = UIFormatters.getBindingWithTimezone(oPropertyDataModelObjectPath, oBindingExpression, true);
          } else {
            oBindingExpression = formatWithTypeInformation(targetObject, oBindingExpression);
          }
          if (isPathInModelExpression(oBindingExpression) && oBindingExpression.type === "sap.ui.model.odata.type.String") {
            oBindingExpression.formatOptions = {
              parseKeepsEmptyString: true
            };
          }
        }
        if (isPathInModelExpression(oBindingExpression)) {
          if (ignoreFormatting) {
            delete oBindingExpression.formatOptions;
            delete oBindingExpression.constraints;
            delete oBindingExpression.type;
          }
          if (bindingParameters) {
            oBindingExpression.parameters = bindingParameters;
          }
          if (targetTypeAny) {
            oBindingExpression.targetType = "any";
          }
        }
        return compileExpression(oBindingExpression);
      } else {
        // if somehow we could not compile the binding -> return empty string
        return "";
      }
    } else if ((targetObject === null || targetObject === void 0 ? void 0 : targetObject.$Type) === "com.sap.vocabularies.UI.v1.DataFieldWithUrl" || (targetObject === null || targetObject === void 0 ? void 0 : targetObject.$Type) === "com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath") {
      return compileExpression(getExpressionFromAnnotation(targetObject.Value));
    } else {
      return "";
    }
  };
  _exports.getValueBinding = getValueBinding;
  const getAssociatedTextBinding = function (oPropertyDataModelObjectPath, fieldFormatOptions) {
    const textPropertyPath = PropertyHelper.getAssociatedTextPropertyPath(oPropertyDataModelObjectPath.targetObject);
    if (textPropertyPath) {
      const oTextPropertyPath = enhanceDataModelPath(oPropertyDataModelObjectPath, textPropertyPath);
      return getValueBinding(oTextPropertyPath, fieldFormatOptions, true, true, {
        $$noPatch: true
      });
    }
    return undefined;
  };
  _exports.getAssociatedTextBinding = getAssociatedTextBinding;
  const isUsedInNavigationWithQuickViewFacets = function (oDataModelPath, oProperty) {
    var _oDataModelPath$targe, _oDataModelPath$targe2, _oDataModelPath$targe3, _oDataModelPath$targe4, _oDataModelPath$conte;
    const aNavigationProperties = (oDataModelPath === null || oDataModelPath === void 0 ? void 0 : (_oDataModelPath$targe = oDataModelPath.targetEntityType) === null || _oDataModelPath$targe === void 0 ? void 0 : _oDataModelPath$targe.navigationProperties) || [];
    const aSemanticObjects = (oDataModelPath === null || oDataModelPath === void 0 ? void 0 : (_oDataModelPath$targe2 = oDataModelPath.targetEntityType) === null || _oDataModelPath$targe2 === void 0 ? void 0 : (_oDataModelPath$targe3 = _oDataModelPath$targe2.annotations) === null || _oDataModelPath$targe3 === void 0 ? void 0 : (_oDataModelPath$targe4 = _oDataModelPath$targe3.Common) === null || _oDataModelPath$targe4 === void 0 ? void 0 : _oDataModelPath$targe4.SemanticKey) || [];
    let bIsUsedInNavigationWithQuickViewFacets = false;
    aNavigationProperties.forEach(oNavProp => {
      if (oNavProp.referentialConstraint && oNavProp.referentialConstraint.length) {
        oNavProp.referentialConstraint.forEach(oRefConstraint => {
          if ((oRefConstraint === null || oRefConstraint === void 0 ? void 0 : oRefConstraint.sourceProperty) === oProperty.name) {
            var _oNavProp$targetType, _oNavProp$targetType$, _oNavProp$targetType$2;
            if (oNavProp !== null && oNavProp !== void 0 && (_oNavProp$targetType = oNavProp.targetType) !== null && _oNavProp$targetType !== void 0 && (_oNavProp$targetType$ = _oNavProp$targetType.annotations) !== null && _oNavProp$targetType$ !== void 0 && (_oNavProp$targetType$2 = _oNavProp$targetType$.UI) !== null && _oNavProp$targetType$2 !== void 0 && _oNavProp$targetType$2.QuickViewFacets) {
              bIsUsedInNavigationWithQuickViewFacets = true;
            }
          }
        });
      }
    });
    if (((_oDataModelPath$conte = oDataModelPath.contextLocation) === null || _oDataModelPath$conte === void 0 ? void 0 : _oDataModelPath$conte.targetEntitySet) !== oDataModelPath.targetEntitySet) {
      var _oDataModelPath$targe5, _oDataModelPath$targe6, _oDataModelPath$targe7;
      const aIsTargetSemanticKey = aSemanticObjects.some(function (oSemantic) {
        var _oSemantic$$target;
        return (oSemantic === null || oSemantic === void 0 ? void 0 : (_oSemantic$$target = oSemantic.$target) === null || _oSemantic$$target === void 0 ? void 0 : _oSemantic$$target.name) === oProperty.name;
      });
      if ((aIsTargetSemanticKey || oProperty.isKey) && oDataModelPath !== null && oDataModelPath !== void 0 && (_oDataModelPath$targe5 = oDataModelPath.targetEntityType) !== null && _oDataModelPath$targe5 !== void 0 && (_oDataModelPath$targe6 = _oDataModelPath$targe5.annotations) !== null && _oDataModelPath$targe6 !== void 0 && (_oDataModelPath$targe7 = _oDataModelPath$targe6.UI) !== null && _oDataModelPath$targe7 !== void 0 && _oDataModelPath$targe7.QuickViewFacets) {
        bIsUsedInNavigationWithQuickViewFacets = true;
      }
    }
    return bIsUsedInNavigationWithQuickViewFacets;
  };
  _exports.isUsedInNavigationWithQuickViewFacets = isUsedInNavigationWithQuickViewFacets;
  const isRetrieveTextFromValueListEnabled = function (oPropertyPath, fieldFormatOptions) {
    var _oProperty$annotation, _oProperty$annotation2, _oProperty$annotation3;
    const oProperty = PropertyHelper.isPathExpression(oPropertyPath) && oPropertyPath.$target || oPropertyPath;
    if (!((_oProperty$annotation = oProperty.annotations) !== null && _oProperty$annotation !== void 0 && (_oProperty$annotation2 = _oProperty$annotation.Common) !== null && _oProperty$annotation2 !== void 0 && _oProperty$annotation2.Text) && !((_oProperty$annotation3 = oProperty.annotations) !== null && _oProperty$annotation3 !== void 0 && _oProperty$annotation3.Measures) && PropertyHelper.hasValueHelp(oProperty) && fieldFormatOptions.textAlignMode === "Form") {
      return true;
    }
    return false;
  };

  /**
   * Returns the binding expression to evaluate the visibility of a DataField or DataPoint annotation.
   *
   * SAP Fiori elements will evaluate either the UI.Hidden annotation defined on the annotation itself or on the target property.
   *
   * @param dataFieldModelPath The metapath referring to the annotation we are evaluating.
   * @param [formatOptions] FormatOptions optional.
   * @param formatOptions.isAnalytics This flag is set when using an analytical table.
   * @returns An expression that you can bind to the UI.
   */
  _exports.isRetrieveTextFromValueListEnabled = isRetrieveTextFromValueListEnabled;
  const getVisibleExpression = function (dataFieldModelPath, formatOptions) {
    var _targetObject$Target, _targetObject$Target$, _targetObject$annotat7, _targetObject$annotat8, _propertyValue$annota, _propertyValue$annota2;
    const targetObject = dataFieldModelPath.targetObject;
    let propertyValue;
    if (targetObject) {
      switch (targetObject.$Type) {
        case "com.sap.vocabularies.UI.v1.DataField":
        case "com.sap.vocabularies.UI.v1.DataFieldWithUrl":
        case "com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath":
        case "com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation":
        case "com.sap.vocabularies.UI.v1.DataFieldWithAction":
        case "com.sap.vocabularies.UI.v1.DataPointType":
          propertyValue = targetObject.Value.$target;
          break;
        case "com.sap.vocabularies.UI.v1.DataFieldForAnnotation":
          // if it is a DataFieldForAnnotation pointing to a DataPoint we look at the dataPoint's value
          if ((targetObject === null || targetObject === void 0 ? void 0 : (_targetObject$Target = targetObject.Target) === null || _targetObject$Target === void 0 ? void 0 : (_targetObject$Target$ = _targetObject$Target.$target) === null || _targetObject$Target$ === void 0 ? void 0 : _targetObject$Target$.$Type) === "com.sap.vocabularies.UI.v1.DataPointType") {
            var _targetObject$Target$2;
            propertyValue = (_targetObject$Target$2 = targetObject.Target.$target) === null || _targetObject$Target$2 === void 0 ? void 0 : _targetObject$Target$2.Value.$target;
            break;
          }
        // eslint-disable-next-line no-fallthrough
        case "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation":
        case "com.sap.vocabularies.UI.v1.DataFieldForAction":
        default:
          propertyValue = undefined;
      }
    }
    const isAnalyticalGroupHeaderExpanded = formatOptions !== null && formatOptions !== void 0 && formatOptions.isAnalytics ? UI.IsExpanded : constant(false);
    const isAnalyticalLeaf = formatOptions !== null && formatOptions !== void 0 && formatOptions.isAnalytics ? equal(UI.NodeLevel, 0) : constant(false);

    // A data field is visible if:
    // - the UI.Hidden expression in the original annotation does not evaluate to 'true'
    // - the UI.Hidden expression in the target property does not evaluate to 'true'
    // - in case of Analytics it's not visible for an expanded GroupHeader
    return compileExpression(and(...[not(equal(getExpressionFromAnnotation(targetObject === null || targetObject === void 0 ? void 0 : (_targetObject$annotat7 = targetObject.annotations) === null || _targetObject$annotat7 === void 0 ? void 0 : (_targetObject$annotat8 = _targetObject$annotat7.UI) === null || _targetObject$annotat8 === void 0 ? void 0 : _targetObject$annotat8.Hidden), true)), ifElse(!!propertyValue, propertyValue && not(equal(getExpressionFromAnnotation((_propertyValue$annota = propertyValue.annotations) === null || _propertyValue$annota === void 0 ? void 0 : (_propertyValue$annota2 = _propertyValue$annota.UI) === null || _propertyValue$annota2 === void 0 ? void 0 : _propertyValue$annota2.Hidden), true)), true), or(not(isAnalyticalGroupHeaderExpanded), isAnalyticalLeaf)]));
  };
  _exports.getVisibleExpression = getVisibleExpression;
  const QVTextBinding = function (oPropertyDataModelObjectPath, oPropertyValueDataModelObjectPath, fieldFormatOptions) {
    let asObject = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
    let returnValue = getValueBinding(oPropertyDataModelObjectPath, fieldFormatOptions, asObject);
    if (returnValue === "") {
      returnValue = getTextBinding(oPropertyValueDataModelObjectPath, fieldFormatOptions, asObject);
    }
    return returnValue;
  };
  _exports.QVTextBinding = QVTextBinding;
  const getQuickViewType = function (oPropertyDataModelObjectPath) {
    var _targetObject$$target, _targetObject$$target2, _targetObject$$target3, _targetObject$$target4, _targetObject$$target5, _targetObject$$target6;
    const targetObject = oPropertyDataModelObjectPath.targetObject;
    if (targetObject !== null && targetObject !== void 0 && (_targetObject$$target = targetObject.$target) !== null && _targetObject$$target !== void 0 && (_targetObject$$target2 = _targetObject$$target.annotations) !== null && _targetObject$$target2 !== void 0 && (_targetObject$$target3 = _targetObject$$target2.Communication) !== null && _targetObject$$target3 !== void 0 && _targetObject$$target3.IsEmailAddress) {
      return "email";
    }
    if (targetObject !== null && targetObject !== void 0 && (_targetObject$$target4 = targetObject.$target) !== null && _targetObject$$target4 !== void 0 && (_targetObject$$target5 = _targetObject$$target4.annotations) !== null && _targetObject$$target5 !== void 0 && (_targetObject$$target6 = _targetObject$$target5.Communication) !== null && _targetObject$$target6 !== void 0 && _targetObject$$target6.IsPhoneNumber) {
      return "phone";
    }
    return "text";
  };
  _exports.getQuickViewType = getQuickViewType;
  /**
   * Get the customData key value pair of SemanticObjects.
   *
   * @param propertyAnnotations The value of the Common annotation.
   * @param [dynamicSemanticObjectsOnly] Flag for retrieving dynamic Semantic Objects only.
   * @returns The array of the semantic Objects.
   */
  const getSemanticObjectExpressionToResolve = function (propertyAnnotations, dynamicSemanticObjectsOnly) {
    const aSemObjExprToResolve = [];
    let sSemObjExpression;
    let annotation;
    if (propertyAnnotations) {
      const semanticObjectsKeys = Object.keys(propertyAnnotations).filter(function (element) {
        return element === "SemanticObject" || element.startsWith("SemanticObject#");
      });
      for (const semanticObject of semanticObjectsKeys) {
        var _annotation;
        annotation = propertyAnnotations[semanticObject];
        sSemObjExpression = compileExpression(getExpressionFromAnnotation(annotation));
        if (!dynamicSemanticObjectsOnly || dynamicSemanticObjectsOnly && ((_annotation = annotation) === null || _annotation === void 0 ? void 0 : _annotation.type) === "Path") {
          aSemObjExprToResolve.push({
            key: getDynamicPathFromSemanticObject(sSemObjExpression) || sSemObjExpression,
            value: sSemObjExpression
          });
        }
      }
    }
    return aSemObjExprToResolve;
  };
  _exports.getSemanticObjectExpressionToResolve = getSemanticObjectExpressionToResolve;
  const getSemanticObjects = function (aSemObjExprToResolve) {
    if (aSemObjExprToResolve.length > 0) {
      let sCustomDataKey = "";
      let sCustomDataValue = "";
      const aSemObjCustomData = [];
      for (let iSemObjCount = 0; iSemObjCount < aSemObjExprToResolve.length; iSemObjCount++) {
        sCustomDataKey = aSemObjExprToResolve[iSemObjCount].key;
        sCustomDataValue = compileExpression(getExpressionFromAnnotation(aSemObjExprToResolve[iSemObjCount].value));
        aSemObjCustomData.push({
          key: sCustomDataKey,
          value: sCustomDataValue
        });
      }
      const oSemanticObjectsModel = new JSONModel(aSemObjCustomData);
      oSemanticObjectsModel.$$valueAsPromise = true;
      const oSemObjBindingContext = oSemanticObjectsModel.createBindingContext("/");
      return oSemObjBindingContext;
    } else {
      return new JSONModel([]).createBindingContext("/");
    }
  };

  /**
   * Method to get MultipleLines for a DataField.
   *
   * @name getMultipleLinesForDataField
   * @param {any} oThis The current object
   * @param {string} sPropertyType The property type
   * @param {boolean} isMultiLineText The property isMultiLineText
   * @returns {CompiledBindingToolkitExpression<string>} The binding expression to determine if a data field should be a MultiLineText or not
   * @public
   */
  _exports.getSemanticObjects = getSemanticObjects;
  const getMultipleLinesForDataField = function (oThis, sPropertyType, isMultiLineText) {
    if (oThis.wrap === false) {
      return false;
    }
    if (sPropertyType !== "Edm.String") {
      return isMultiLineText;
    }
    if (oThis.editMode === "Display") {
      return true;
    }
    if (oThis.editMode.indexOf("{") > -1) {
      // If the editMode is computed then we just care about the page editMode to determine if the multiline property should be taken into account
      return compileExpression(or(not(UI.IsEditable), isMultiLineText));
    }
    return isMultiLineText;
  };
  _exports.getMultipleLinesForDataField = getMultipleLinesForDataField;
  const _hasValueHelpToShow = function (oProperty, measureDisplayMode) {
    // we show a value help if teh property has one or if its visible unit has one
    const oPropertyUnit = PropertyHelper.getAssociatedUnitProperty(oProperty);
    const oPropertyCurrency = PropertyHelper.getAssociatedCurrencyProperty(oProperty);
    return PropertyHelper.hasValueHelp(oProperty) && oProperty.type !== "Edm.Boolean" || measureDisplayMode !== "Hidden" && (oPropertyUnit && PropertyHelper.hasValueHelp(oPropertyUnit) || oPropertyCurrency && PropertyHelper.hasValueHelp(oPropertyCurrency));
  };

  /**
   * Sets Edit Style properties for Field in case of Macro Field(Field.metadata.ts) and MassEditDialog fields.
   *
   * @param oProps Field Properties for the Macro Field.
   * @param oDataField DataField Object.
   * @param oDataModelPath DataModel Object Path to the property.
   * @param onlyEditStyle To add only editStyle.
   */
  const setEditStyleProperties = function (oProps, oDataField, oDataModelPath, onlyEditStyle) {
    var _oDataField$Target, _oDataField$Target$$t, _oProps$formatOptions, _oProperty$annotation4, _oProperty$annotation5, _oProperty$annotation6, _oProperty$annotation7, _oProperty$annotation8, _oProperty$annotation9, _oProperty$annotation10, _oProperty$annotation11, _oProperty$annotation12;
    const oProperty = oDataModelPath.targetObject;
    if (!PropertyHelper.isProperty(oProperty)) {
      oProps.editStyle = null;
      return;
    }
    if (!onlyEditStyle) {
      oProps.valueBindingExpression = getValueBinding(oDataModelPath, oProps.formatOptions);
    }
    switch (oDataField.$Type) {
      case "com.sap.vocabularies.UI.v1.DataFieldForAnnotation":
        if (((_oDataField$Target = oDataField.Target) === null || _oDataField$Target === void 0 ? void 0 : (_oDataField$Target$$t = _oDataField$Target.$target) === null || _oDataField$Target$$t === void 0 ? void 0 : _oDataField$Target$$t.Visualization) === "UI.VisualizationType/Rating") {
          oProps.editStyle = "RatingIndicator";
          return;
        }
        break;
      case "com.sap.vocabularies.UI.v1.DataPointType":
        if ((oDataField === null || oDataField === void 0 ? void 0 : oDataField.Visualization) === "UI.VisualizationType/Rating") {
          oProps.editStyle = "RatingIndicator";
          return;
        }
        break;
      case "com.sap.vocabularies.UI.v1.DataFieldForAction":
      case "com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath":
      case "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation":
        oProps.editStyle = null;
        return;
      default:
    }
    if (_hasValueHelpToShow(oProperty, (_oProps$formatOptions = oProps.formatOptions) === null || _oProps$formatOptions === void 0 ? void 0 : _oProps$formatOptions.measureDisplayMode)) {
      if (!onlyEditStyle) {
        var _oProps$formatOptions2;
        oProps.textBindingExpression = getAssociatedTextBinding(oDataModelPath, oProps.formatOptions);
        if (((_oProps$formatOptions2 = oProps.formatOptions) === null || _oProps$formatOptions2 === void 0 ? void 0 : _oProps$formatOptions2.measureDisplayMode) !== "Hidden") {
          // for the MDC Field we need to keep the unit inside the valueBindingExpression
          oProps.valueBindingExpression = getValueBinding(oDataModelPath, oProps.formatOptions, false, false, undefined, false, true);
        }
      }
      oProps.editStyle = "InputWithValueHelp";
      return;
    }
    switch (oProperty.type) {
      case "Edm.Date":
        oProps.editStyle = "DatePicker";
        return;
      case "Edm.Time":
      case "Edm.TimeOfDay":
        oProps.editStyle = "TimePicker";
        return;
      case "Edm.DateTime":
      case "Edm.DateTimeOffset":
        oProps.editStyle = "DateTimePicker";
        // No timezone defined. Also for compatibility reasons.
        if (!((_oProperty$annotation4 = oProperty.annotations) !== null && _oProperty$annotation4 !== void 0 && (_oProperty$annotation5 = _oProperty$annotation4.Common) !== null && _oProperty$annotation5 !== void 0 && _oProperty$annotation5.Timezone)) {
          oProps.showTimezone = undefined;
        } else {
          oProps.showTimezone = true;
        }
        return;
      case "Edm.Boolean":
        oProps.editStyle = "CheckBox";
        return;
      case "Edm.Stream":
        oProps.editStyle = "File";
        return;
      case "Edm.String":
        if ((_oProperty$annotation6 = oProperty.annotations) !== null && _oProperty$annotation6 !== void 0 && (_oProperty$annotation7 = _oProperty$annotation6.UI) !== null && _oProperty$annotation7 !== void 0 && (_oProperty$annotation8 = _oProperty$annotation7.MultiLineText) !== null && _oProperty$annotation8 !== void 0 && _oProperty$annotation8.valueOf()) {
          oProps.editStyle = "TextArea";
          return;
        }
        break;
      default:
        oProps.editStyle = "Input";
    }
    if ((_oProperty$annotation9 = oProperty.annotations) !== null && _oProperty$annotation9 !== void 0 && (_oProperty$annotation10 = _oProperty$annotation9.Measures) !== null && _oProperty$annotation10 !== void 0 && _oProperty$annotation10.ISOCurrency || (_oProperty$annotation11 = oProperty.annotations) !== null && _oProperty$annotation11 !== void 0 && (_oProperty$annotation12 = _oProperty$annotation11.Measures) !== null && _oProperty$annotation12 !== void 0 && _oProperty$annotation12.Unit) {
      if (!onlyEditStyle) {
        oProps.unitBindingExpression = compileExpression(UIFormatters.getBindingForUnitOrCurrency(oDataModelPath));
        oProps.descriptionBindingExpression = UIFormatters.ifUnitEditable(oProperty, "", UIFormatters.getBindingForUnitOrCurrency(oDataModelPath));
        const unitProperty = PropertyHelper.getAssociatedCurrencyProperty(oProperty) || PropertyHelper.getAssociatedUnitProperty(oProperty);
        oProps.unitEditable = compileExpression(not(isReadOnlyExpression(unitProperty)));
      }
      oProps.editStyle = "InputWithUnit";
      return;
    }
    oProps.editStyle = "Input";
  };
  _exports.setEditStyleProperties = setEditStyleProperties;
  const hasSemanticObjectInNavigationOrProperty = propertyDataModelObjectPath => {
    var _propertyDataModelObj, _propertyDataModelObj2, _propertyDataModelObj3, _propertyDataModelObj4;
    const property = propertyDataModelObjectPath.targetObject;
    if (SemanticObjectHelper.hasSemanticObject(property)) {
      return true;
    }
    const lastNavProp = propertyDataModelObjectPath !== null && propertyDataModelObjectPath !== void 0 && (_propertyDataModelObj = propertyDataModelObjectPath.navigationProperties) !== null && _propertyDataModelObj !== void 0 && _propertyDataModelObj.length ? propertyDataModelObjectPath === null || propertyDataModelObjectPath === void 0 ? void 0 : propertyDataModelObjectPath.navigationProperties[(propertyDataModelObjectPath === null || propertyDataModelObjectPath === void 0 ? void 0 : (_propertyDataModelObj2 = propertyDataModelObjectPath.navigationProperties) === null || _propertyDataModelObj2 === void 0 ? void 0 : _propertyDataModelObj2.length) - 1] : null;
    if (!lastNavProp || (_propertyDataModelObj3 = propertyDataModelObjectPath.contextLocation) !== null && _propertyDataModelObj3 !== void 0 && (_propertyDataModelObj4 = _propertyDataModelObj3.navigationProperties) !== null && _propertyDataModelObj4 !== void 0 && _propertyDataModelObj4.find(contextNavProp => contextNavProp.name === lastNavProp.name)) {
      return false;
    }
    return SemanticObjectHelper.hasSemanticObject(lastNavProp);
  };

  /**
   * Get the dataModelObjectPath with the value property as targetObject if it exists
   * for a dataModelObjectPath targeting a DataField or a DataPoint annotation.
   *
   * @param initialDataModelObjectPath
   * @returns The dataModelObjectPath targetiing the value property or undefined
   */
  _exports.hasSemanticObjectInNavigationOrProperty = hasSemanticObjectInNavigationOrProperty;
  const getDataModelObjectPathForValue = initialDataModelObjectPath => {
    if (!initialDataModelObjectPath.targetObject) {
      return undefined;
    }
    let valuePath = "";
    // data point annotations need not have $Type defined, so add it if missing
    if (initialDataModelObjectPath.targetObject.term === "com.sap.vocabularies.UI.v1.DataPoint") {
      initialDataModelObjectPath.targetObject.$Type = initialDataModelObjectPath.targetObject.$Type || "com.sap.vocabularies.UI.v1.DataPointType";
    }
    switch (initialDataModelObjectPath.targetObject.$Type) {
      case "com.sap.vocabularies.UI.v1.DataField":
      case "com.sap.vocabularies.UI.v1.DataPointType":
      case "com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath":
      case "com.sap.vocabularies.UI.v1.DataFieldWithUrl":
      case "com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation":
      case "com.sap.vocabularies.UI.v1.DataFieldWithAction":
        if (typeof initialDataModelObjectPath.targetObject.Value === "object") {
          valuePath = initialDataModelObjectPath.targetObject.Value.path;
        }
        break;
      case "com.sap.vocabularies.UI.v1.DataFieldForAnnotation":
        if (initialDataModelObjectPath.targetObject.Target.$target) {
          if (initialDataModelObjectPath.targetObject.Target.$target.$Type === "com.sap.vocabularies.UI.v1.DataField" || initialDataModelObjectPath.targetObject.Target.$target.$Type === "com.sap.vocabularies.UI.v1.DataPointType") {
            if (initialDataModelObjectPath.targetObject.Target.value.indexOf("/") > 0) {
              var _initialDataModelObje;
              valuePath = initialDataModelObjectPath.targetObject.Target.value.replace(/\/@.*/, `/${(_initialDataModelObje = initialDataModelObjectPath.targetObject.Target.$target.Value) === null || _initialDataModelObje === void 0 ? void 0 : _initialDataModelObje.path}`);
            } else {
              var _initialDataModelObje2;
              valuePath = (_initialDataModelObje2 = initialDataModelObjectPath.targetObject.Target.$target.Value) === null || _initialDataModelObje2 === void 0 ? void 0 : _initialDataModelObje2.path;
            }
          } else {
            var _initialDataModelObje3;
            valuePath = (_initialDataModelObje3 = initialDataModelObjectPath.targetObject.Target) === null || _initialDataModelObje3 === void 0 ? void 0 : _initialDataModelObje3.path;
          }
        }
        break;
    }
    if (valuePath && valuePath.length > 0) {
      return enhanceDataModelPath(initialDataModelObjectPath, valuePath);
    } else {
      return undefined;
    }
  };
  _exports.getDataModelObjectPathForValue = getDataModelObjectPathForValue;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/FieldTemplating", ["sap/fe/core/converters/helpers/BindingHelper","sap/fe/core/helpers/BindingToolkit","sap/fe/core/templating/CommonFormatters","sap/fe/core/templating/DataModelPathHelper","sap/fe/core/templating/FieldControlHelper","sap/fe/core/templating/PropertyHelper","sap/fe/core/templating/SemanticObjectHelper","sap/fe/core/templating/UIFormatters","sap/ui/model/json/JSONModel"],function(e,t,i,a,n,o,r,l,s){"use strict";var u={};var d=r.getDynamicPathFromSemanticObject;var c=n.isReadOnlyExpression;var v=a.getContextRelativeTargetObjectPath;var p=a.enhanceDataModelPath;var g=t.transformRecursively;var f=t.pathInModel;var m=t.or;var y=t.not;var b=t.isPathInModelExpression;var h=t.isComplexTypeExpression;var O=t.ifElse;var T=t.getExpressionFromAnnotation;var I=t.formatWithTypeInformation;var U=t.equal;var j=t.constant;var P=t.compileExpression;var F=t.and;var D=e.UI;const E=function(e,t){return g(e,"PathInModel",e=>{let a=e;if(e.modelName===undefined){const n=p(t,e.path);a=i.getBindingWithTextArrangement(n,e)}return a})};u.addTextArrangementToBindingExpression=E;const x=function(e,t){return g(e,"PathInModel",e=>{let i=e;if(e.modelName===undefined){const a=p(t,e.path);i=I(a.targetObject,e)}return i})};u.formatValueRecursively=x;const $=function(e,t){return S(e,t,true)};u.getTextBindingExpression=$;const S=function(e,t){var a,n,r,s,u,d,c,g,m,y,b,O,T,I,U;let F=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(((a=e.targetObject)===null||a===void 0?void 0:a.$Type)==="com.sap.vocabularies.UI.v1.DataField"||((n=e.targetObject)===null||n===void 0?void 0:n.$Type)==="com.sap.vocabularies.UI.v1.DataPointType"||((r=e.targetObject)===null||r===void 0?void 0:r.$Type)==="com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath"||((s=e.targetObject)===null||s===void 0?void 0:s.$Type)==="com.sap.vocabularies.UI.v1.DataFieldWithUrl"||((u=e.targetObject)===null||u===void 0?void 0:u.$Type)==="com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation"||((d=e.targetObject)===null||d===void 0?void 0:d.$Type)==="com.sap.vocabularies.UI.v1.DataFieldWithAction"){const t=e.targetObject.Value||"";return P(j(t))}if(o.isPathExpression(e.targetObject)&&e.targetObject.$target){e=p(e,e.targetObject.path)}const D=f(v(e));let E;if((c=e.targetObject)!==null&&c!==void 0&&(g=c.annotations)!==null&&g!==void 0&&(m=g.Measures)!==null&&m!==void 0&&m.Unit||(y=e.targetObject)!==null&&y!==void 0&&(b=y.annotations)!==null&&b!==void 0&&(O=b.Measures)!==null&&O!==void 0&&O.ISOCurrency){E=l.getBindingWithUnitOrCurrency(e,D);if((t===null||t===void 0?void 0:t.measureDisplayMode)==="Hidden"&&h(E)){E.formatOptions={...E.formatOptions,showMeasure:false}}}else if((T=e.targetObject)!==null&&T!==void 0&&(I=T.annotations)!==null&&I!==void 0&&(U=I.Common)!==null&&U!==void 0&&U.Timezone){E=l.getBindingWithTimezone(e,D,false,true,t.dateFormatOptions)}else{E=i.getBindingWithTextArrangement(e,D,t)}if(F){return E}return P(E)};u.getTextBinding=S;const B=function(e,t){let i=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;let a=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;let n=arguments.length>4?arguments[4]:undefined;let r=arguments.length>5&&arguments[5]!==undefined?arguments[5]:false;let s=arguments.length>6&&arguments[6]!==undefined?arguments[6]:false;if(o.isPathExpression(e.targetObject)&&e.targetObject.$target){const t=e.targetEntityType.resolvePath(e.targetObject.path,true);e.targetObject=t.target;t.visitedObjects.forEach(t=>{if(t&&t._type==="NavigationProperty"){e.navigationProperties.push(t)}})}const u=e.targetObject;if(o.isProperty(u)){let t=f(v(e));if(b(t)){var d,c,p,g,m,y;if((d=u.annotations)!==null&&d!==void 0&&(c=d.Communication)!==null&&c!==void 0&&c.IsEmailAddress){t.type="sap.fe.core.type.Email"}else if(!i&&((p=u.annotations)!==null&&p!==void 0&&(g=p.Measures)!==null&&g!==void 0&&g.ISOCurrency||(m=u.annotations)!==null&&m!==void 0&&(y=m.Measures)!==null&&y!==void 0&&y.Unit)){t=l.getBindingWithUnitOrCurrency(e,t,true,s?undefined:{showMeasure:false})}else{var h,O;const i=(h=e.targetObject.annotations)===null||h===void 0?void 0:(O=h.Common)===null||O===void 0?void 0:O.Timezone;if(i){t=l.getBindingWithTimezone(e,t,true)}else{t=I(u,t)}if(b(t)&&t.type==="sap.ui.model.odata.type.String"){t.formatOptions={parseKeepsEmptyString:true}}}if(b(t)){if(a){delete t.formatOptions;delete t.constraints;delete t.type}if(n){t.parameters=n}if(r){t.targetType="any"}}return P(t)}else{return""}}else if((u===null||u===void 0?void 0:u.$Type)==="com.sap.vocabularies.UI.v1.DataFieldWithUrl"||(u===null||u===void 0?void 0:u.$Type)==="com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath"){return P(T(u.Value))}else{return""}};u.getValueBinding=B;const C=function(e,t){const i=o.getAssociatedTextPropertyPath(e.targetObject);if(i){const a=p(e,i);return B(a,t,true,true,{$$noPatch:true})}return undefined};u.getAssociatedTextBinding=C;const V=function(e,t){var i,a,n,o,r;const l=(e===null||e===void 0?void 0:(i=e.targetEntityType)===null||i===void 0?void 0:i.navigationProperties)||[];const s=(e===null||e===void 0?void 0:(a=e.targetEntityType)===null||a===void 0?void 0:(n=a.annotations)===null||n===void 0?void 0:(o=n.Common)===null||o===void 0?void 0:o.SemanticKey)||[];let u=false;l.forEach(e=>{if(e.referentialConstraint&&e.referentialConstraint.length){e.referentialConstraint.forEach(i=>{if((i===null||i===void 0?void 0:i.sourceProperty)===t.name){var a,n,o;if(e!==null&&e!==void 0&&(a=e.targetType)!==null&&a!==void 0&&(n=a.annotations)!==null&&n!==void 0&&(o=n.UI)!==null&&o!==void 0&&o.QuickViewFacets){u=true}}})}});if(((r=e.contextLocation)===null||r===void 0?void 0:r.targetEntitySet)!==e.targetEntitySet){var d,c,v;const i=s.some(function(e){var i;return(e===null||e===void 0?void 0:(i=e.$target)===null||i===void 0?void 0:i.name)===t.name});if((i||t.isKey)&&e!==null&&e!==void 0&&(d=e.targetEntityType)!==null&&d!==void 0&&(c=d.annotations)!==null&&c!==void 0&&(v=c.UI)!==null&&v!==void 0&&v.QuickViewFacets){u=true}}return u};u.isUsedInNavigationWithQuickViewFacets=V;const W=function(e,t){var i,a,n;const r=o.isPathExpression(e)&&e.$target||e;if(!((i=r.annotations)!==null&&i!==void 0&&(a=i.Common)!==null&&a!==void 0&&a.Text)&&!((n=r.annotations)!==null&&n!==void 0&&n.Measures)&&o.hasValueHelp(r)&&t.textAlignMode==="Form"){return true}return false};u.isRetrieveTextFromValueListEnabled=W;const A=function(e,t){var i,a,n,o,r,l;const s=e.targetObject;let u;if(s){switch(s.$Type){case"com.sap.vocabularies.UI.v1.DataField":case"com.sap.vocabularies.UI.v1.DataFieldWithUrl":case"com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath":case"com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation":case"com.sap.vocabularies.UI.v1.DataFieldWithAction":case"com.sap.vocabularies.UI.v1.DataPointType":u=s.Value.$target;break;case"com.sap.vocabularies.UI.v1.DataFieldForAnnotation":if((s===null||s===void 0?void 0:(i=s.Target)===null||i===void 0?void 0:(a=i.$target)===null||a===void 0?void 0:a.$Type)==="com.sap.vocabularies.UI.v1.DataPointType"){var d;u=(d=s.Target.$target)===null||d===void 0?void 0:d.Value.$target;break}case"com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation":case"com.sap.vocabularies.UI.v1.DataFieldForAction":default:u=undefined}}const c=t!==null&&t!==void 0&&t.isAnalytics?D.IsExpanded:j(false);const v=t!==null&&t!==void 0&&t.isAnalytics?U(D.NodeLevel,0):j(false);return P(F(...[y(U(T(s===null||s===void 0?void 0:(n=s.annotations)===null||n===void 0?void 0:(o=n.UI)===null||o===void 0?void 0:o.Hidden),true)),O(!!u,u&&y(U(T((r=u.annotations)===null||r===void 0?void 0:(l=r.UI)===null||l===void 0?void 0:l.Hidden),true)),true),m(y(c),v)]))};u.getVisibleExpression=A;const M=function(e,t,i){let a=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;let n=B(e,i,a);if(n===""){n=S(t,i,a)}return n};u.QVTextBinding=M;const k=function(e){var t,i,a,n,o,r;const l=e.targetObject;if(l!==null&&l!==void 0&&(t=l.$target)!==null&&t!==void 0&&(i=t.annotations)!==null&&i!==void 0&&(a=i.Communication)!==null&&a!==void 0&&a.IsEmailAddress){return"email"}if(l!==null&&l!==void 0&&(n=l.$target)!==null&&n!==void 0&&(o=n.annotations)!==null&&o!==void 0&&(r=o.Communication)!==null&&r!==void 0&&r.IsPhoneNumber){return"phone"}return"text"};u.getQuickViewType=k;const N=function(e,t){const i=[];let a;let n;if(e){const r=Object.keys(e).filter(function(e){return e==="SemanticObject"||e.startsWith("SemanticObject#")});for(const l of r){var o;n=e[l];a=P(T(n));if(!t||t&&((o=n)===null||o===void 0?void 0:o.type)==="Path"){i.push({key:d(a)||a,value:a})}}}return i};u.getSemanticObjectExpressionToResolve=N;const w=function(e){if(e.length>0){let t="";let i="";const a=[];for(let n=0;n<e.length;n++){t=e[n].key;i=P(T(e[n].value));a.push({key:t,value:i})}const n=new s(a);n.$$valueAsPromise=true;const o=n.createBindingContext("/");return o}else{return new s([]).createBindingContext("/")}};u.getSemanticObjects=w;const H=function(e,t,i){if(e.wrap===false){return false}if(t!=="Edm.String"){return i}if(e.editMode==="Display"){return true}if(e.editMode.indexOf("{")>-1){return P(m(y(D.IsEditable),i))}return i};u.getMultipleLinesForDataField=H;const z=function(e,t){const i=o.getAssociatedUnitProperty(e);const a=o.getAssociatedCurrencyProperty(e);return o.hasValueHelp(e)&&e.type!=="Edm.Boolean"||t!=="Hidden"&&(i&&o.hasValueHelp(i)||a&&o.hasValueHelp(a))};const R=function(e,t,i,a){var n,r,s,u,d,v,p,g,f,m,b,h;const O=i.targetObject;if(!o.isProperty(O)){e.editStyle=null;return}if(!a){e.valueBindingExpression=B(i,e.formatOptions)}switch(t.$Type){case"com.sap.vocabularies.UI.v1.DataFieldForAnnotation":if(((n=t.Target)===null||n===void 0?void 0:(r=n.$target)===null||r===void 0?void 0:r.Visualization)==="UI.VisualizationType/Rating"){e.editStyle="RatingIndicator";return}break;case"com.sap.vocabularies.UI.v1.DataPointType":if((t===null||t===void 0?void 0:t.Visualization)==="UI.VisualizationType/Rating"){e.editStyle="RatingIndicator";return}break;case"com.sap.vocabularies.UI.v1.DataFieldForAction":case"com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath":case"com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation":e.editStyle=null;return;default:}if(z(O,(s=e.formatOptions)===null||s===void 0?void 0:s.measureDisplayMode)){if(!a){var T;e.textBindingExpression=C(i,e.formatOptions);if(((T=e.formatOptions)===null||T===void 0?void 0:T.measureDisplayMode)!=="Hidden"){e.valueBindingExpression=B(i,e.formatOptions,false,false,undefined,false,true)}}e.editStyle="InputWithValueHelp";return}switch(O.type){case"Edm.Date":e.editStyle="DatePicker";return;case"Edm.Time":case"Edm.TimeOfDay":e.editStyle="TimePicker";return;case"Edm.DateTime":case"Edm.DateTimeOffset":e.editStyle="DateTimePicker";if(!((u=O.annotations)!==null&&u!==void 0&&(d=u.Common)!==null&&d!==void 0&&d.Timezone)){e.showTimezone=undefined}else{e.showTimezone=true}return;case"Edm.Boolean":e.editStyle="CheckBox";return;case"Edm.Stream":e.editStyle="File";return;case"Edm.String":if((v=O.annotations)!==null&&v!==void 0&&(p=v.UI)!==null&&p!==void 0&&(g=p.MultiLineText)!==null&&g!==void 0&&g.valueOf()){e.editStyle="TextArea";return}break;default:e.editStyle="Input"}if((f=O.annotations)!==null&&f!==void 0&&(m=f.Measures)!==null&&m!==void 0&&m.ISOCurrency||(b=O.annotations)!==null&&b!==void 0&&(h=b.Measures)!==null&&h!==void 0&&h.Unit){if(!a){e.unitBindingExpression=P(l.getBindingForUnitOrCurrency(i));e.descriptionBindingExpression=l.ifUnitEditable(O,"",l.getBindingForUnitOrCurrency(i));const t=o.getAssociatedCurrencyProperty(O)||o.getAssociatedUnitProperty(O);e.unitEditable=P(y(c(t)))}e.editStyle="InputWithUnit";return}e.editStyle="Input"};u.setEditStyleProperties=R;const L=e=>{var t,i,a,n;const o=e.targetObject;if(r.hasSemanticObject(o)){return true}const l=e!==null&&e!==void 0&&(t=e.navigationProperties)!==null&&t!==void 0&&t.length?e===null||e===void 0?void 0:e.navigationProperties[(e===null||e===void 0?void 0:(i=e.navigationProperties)===null||i===void 0?void 0:i.length)-1]:null;if(!l||(a=e.contextLocation)!==null&&a!==void 0&&(n=a.navigationProperties)!==null&&n!==void 0&&n.find(e=>e.name===l.name)){return false}return r.hasSemanticObject(l)};u.hasSemanticObjectInNavigationOrProperty=L;const Q=e=>{if(!e.targetObject){return undefined}let t="";if(e.targetObject.term==="com.sap.vocabularies.UI.v1.DataPoint"){e.targetObject.$Type=e.targetObject.$Type||"com.sap.vocabularies.UI.v1.DataPointType"}switch(e.targetObject.$Type){case"com.sap.vocabularies.UI.v1.DataField":case"com.sap.vocabularies.UI.v1.DataPointType":case"com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath":case"com.sap.vocabularies.UI.v1.DataFieldWithUrl":case"com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation":case"com.sap.vocabularies.UI.v1.DataFieldWithAction":if(typeof e.targetObject.Value==="object"){t=e.targetObject.Value.path}break;case"com.sap.vocabularies.UI.v1.DataFieldForAnnotation":if(e.targetObject.Target.$target){if(e.targetObject.Target.$target.$Type==="com.sap.vocabularies.UI.v1.DataField"||e.targetObject.Target.$target.$Type==="com.sap.vocabularies.UI.v1.DataPointType"){if(e.targetObject.Target.value.indexOf("/")>0){var i;t=e.targetObject.Target.value.replace(/\/@.*/,`/${(i=e.targetObject.Target.$target.Value)===null||i===void 0?void 0:i.path}`)}else{var a;t=(a=e.targetObject.Target.$target.Value)===null||a===void 0?void 0:a.path}}else{var n;t=(n=e.targetObject.Target)===null||n===void 0?void 0:n.path}}break}if(t&&t.length>0){return p(e,t)}else{return undefined}};u.getDataModelObjectPathForValue=Q;return u},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/PublicField-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/helpers/BindingToolkit", "sap/fe/macros/field/FieldHelper"], function (BuildingBlock, BuildingBlockRuntime, BindingToolkit, FieldHelper) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8;
  var _exports = {};
  var resolveBindingString = BindingToolkit.resolveBindingString;
  var ifElse = BindingToolkit.ifElse;
  var equal = BindingToolkit.equal;
  var compileExpression = BindingToolkit.compileExpression;
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockEvent = BuildingBlock.blockEvent;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let Field = (
  /**
   * Public external field representation
   */
  _dec = defineBuildingBlock({
    name: "Field",
    namespace: "sap.fe.macros"
  }), _dec2 = blockAttribute({
    type: "string",
    isPublic: true,
    required: true
  }), _dec3 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true
  }), _dec4 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true
  }), _dec5 = blockAttribute({
    type: "boolean",
    required: false
  }), _dec6 = blockAttribute({
    type: "string",
    required: false
  }), _dec7 = blockAttribute({
    type: "string",
    required: false
  }), _dec8 = blockAttribute({
    type: "object",
    validate: function (formatOptionsInput) {
      if (formatOptionsInput.displayMode && !["Value", "Description", "ValueDescription", "DescriptionValue"].includes(formatOptionsInput.displayMode)) {
        throw new Error(`Allowed value ${formatOptionsInput.displayMode} for displayMode does not match`);
      }
      if (formatOptionsInput.measureDisplayMode && !["Hidden", "ReadOnly"].includes(formatOptionsInput.measureDisplayMode)) {
        throw new Error(`Allowed value ${formatOptionsInput.measureDisplayMode} for measureDisplayMode does not match`);
      }
      if (formatOptionsInput.textExpandBehaviorDisplay && !["InPlace", "Popover"].includes(formatOptionsInput.textExpandBehaviorDisplay)) {
        throw new Error(`Allowed value ${formatOptionsInput.textExpandBehaviorDisplay} for textExpandBehaviorDisplay does not match`);
      }
      return formatOptionsInput;
    }
  }), _dec9 = blockEvent(), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(Field, _BuildingBlockBase);
    /**
     * The 'id' property
     */

    /**
     * The meta path provided for the field
     */

    /**
     * The context path provided for the field
     */

    /**
     * The readOnly flag
     */

    /**
     * The semantic object associated to the field
     */

    /**
     * The edit mode expression for the field
     */

    /**
     * The object with the formatting options
     */

    /**
     * The generic change event
     */

    function Field(props) {
      var _this;
      _this = _BuildingBlockBase.call(this, props) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "readOnly", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "semanticObject", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "editModeExpression", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "formatOptions", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "change", _descriptor8, _assertThisInitialized(_this));
      if (_this.readOnly !== undefined) {
        _this.editModeExpression = compileExpression(ifElse(equal(resolveBindingString(_this.readOnly, "boolean"), true), "Display", "Editable"));
      }
      return _this;
    }

    /**
     * Sets the internal formatOptions for the building block.
     *
     * @returns A string with the internal formatOptions for the building block
     */
    _exports = Field;
    var _proto = Field.prototype;
    _proto.getFormatOptions = function getFormatOptions() {
      return xml`
		<internalMacro:formatOptions
			textAlignMode="Form"
			showEmptyIndicator="true"
			displayMode="${this.formatOptions.displayMode}"
			measureDisplayMode="${this.formatOptions.measureDisplayMode}"
			textLinesEdit="${this.formatOptions.textLinesEdit}"
			textMaxLines="${this.formatOptions.textMaxLines}"
			textMaxCharactersDisplay="${this.formatOptions.textMaxCharactersDisplay}"
			textExpandBehaviorDisplay="${this.formatOptions.textExpandBehaviorDisplay}"
			textMaxLength="${this.formatOptions.textMaxLength}"
			>
			${this.writeDateFormatOptions()}
		</internalMacro:formatOptions>
			`;
    };
    _proto.writeDateFormatOptions = function writeDateFormatOptions() {
      if (this.formatOptions.showTime || this.formatOptions.showDate || this.formatOptions.showTimezone) {
        return xml`<internalMacro:dateFormatOptions showTime="${this.formatOptions.showTime}" 
				showDate="${this.formatOptions.showDate}" 
				showTimezone="${this.formatOptions.showTimezone}" 
				/>`;
      }
      return "";
    }

    /**
     * The function calculates the corresponding ValueHelp field in case it´s
     * defined for the specific control.
     *
     * @returns An XML-based string with a possible ValueHelp control.
     */;
    _proto.getPossibleValueHelpTemplate = function getPossibleValueHelpTemplate() {
      const vhp = FieldHelper.valueHelpProperty(this.metaPath);
      const vhpCtx = this.metaPath.getModel().createBindingContext(vhp, this.metaPath);
      const hasValueHelpAnnotations = FieldHelper.hasValueHelpAnnotation(vhpCtx.getObject("@"));
      if (hasValueHelpAnnotations) {
        // depending on whether this one has a value help annotation included, add the dependent
        return xml`
			<internalMacro:dependents>
				<macros:ValueHelp _flexId="${this.id}-content_FieldValueHelp" property="${vhpCtx}" contextPath="${this.contextPath}" />
			</internalMacro:dependents>`;
      }
      return "";
    }

    /**
     * The building block template function.
     *
     * @returns An XML-based string with the definition of the field control
     */;
    _proto.getTemplate = function getTemplate() {
      const contextPathPath = this.contextPath.getPath();
      const metaPathPath = this.metaPath.getPath();
      return xml`
		<internalMacro:Field
			xmlns:internalMacro="sap.fe.macros.internal"
			entitySet="${contextPathPath}"
			dataField="${metaPathPath}"
			editMode="${this.editModeExpression}"
			onChange="${this.change}"
			_flexId="${this.id}"
			semanticObject="${this.semanticObject}"
		>
			${this.getFormatOptions()}
			${this.getPossibleValueHelpTemplate()}
		</internalMacro:Field>`;
    };
    return Field;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "readOnly", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "semanticObject", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "editModeExpression", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "formatOptions", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return {};
    }
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "change", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return "";
    }
  })), _class2)) || _class);
  _exports = Field;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/PublicField", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/helpers/BindingToolkit","sap/fe/macros/field/FieldHelper"],function(e,t,i,r){"use strict";var a,n,o,l,s,u,p,c,d,f,h,m,b,y,x,g,O,v,w;var M={};var $=i.resolveBindingString;var D=i.ifElse;var P=i.equal;var E=i.compileExpression;var B=t.xml;var z=e.defineBuildingBlock;var j=e.BuildingBlockBase;var F=e.blockEvent;var k=e.blockAttribute;function T(e,t,i,r){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(r):void 0})}function H(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function V(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;q(e,t)}function q(e,t){q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return q(e,t)}function _(e,t,i,r,a){var n={};Object.keys(r).forEach(function(e){n[e]=r[e]});n.enumerable=!!n.enumerable;n.configurable=!!n.configurable;if("value"in n||n.initializer){n.writable=true}n=i.slice().reverse().reduce(function(i,r){return r(e,t,i)||i},n);if(a&&n.initializer!==void 0){n.value=n.initializer?n.initializer.call(a):void 0;n.initializer=undefined}if(n.initializer===void 0){Object.defineProperty(e,t,n);n=null}return n}function A(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let C=(a=z({name:"Field",namespace:"sap.fe.macros"}),n=k({type:"string",isPublic:true,required:true}),o=k({type:"sap.ui.model.Context",required:true}),l=k({type:"sap.ui.model.Context",required:true}),s=k({type:"boolean",required:false}),u=k({type:"string",required:false}),p=k({type:"string",required:false}),c=k({type:"object",validate:function(e){if(e.displayMode&&!["Value","Description","ValueDescription","DescriptionValue"].includes(e.displayMode)){throw new Error(`Allowed value ${e.displayMode} for displayMode does not match`)}if(e.measureDisplayMode&&!["Hidden","ReadOnly"].includes(e.measureDisplayMode)){throw new Error(`Allowed value ${e.measureDisplayMode} for measureDisplayMode does not match`)}if(e.textExpandBehaviorDisplay&&!["InPlace","Popover"].includes(e.textExpandBehaviorDisplay)){throw new Error(`Allowed value ${e.textExpandBehaviorDisplay} for textExpandBehaviorDisplay does not match`)}return e}}),d=F(),a(f=(h=function(e){V(t,e);function t(t){var i;i=e.call(this,t)||this;T(i,"id",m,H(i));T(i,"metaPath",b,H(i));T(i,"contextPath",y,H(i));T(i,"readOnly",x,H(i));T(i,"semanticObject",g,H(i));T(i,"editModeExpression",O,H(i));T(i,"formatOptions",v,H(i));T(i,"change",w,H(i));if(i.readOnly!==undefined){i.editModeExpression=E(D(P($(i.readOnly,"boolean"),true),"Display","Editable"))}return i}M=t;var i=t.prototype;i.getFormatOptions=function e(){return B`
		<internalMacro:formatOptions
			textAlignMode="Form"
			showEmptyIndicator="true"
			displayMode="${this.formatOptions.displayMode}"
			measureDisplayMode="${this.formatOptions.measureDisplayMode}"
			textLinesEdit="${this.formatOptions.textLinesEdit}"
			textMaxLines="${this.formatOptions.textMaxLines}"
			textMaxCharactersDisplay="${this.formatOptions.textMaxCharactersDisplay}"
			textExpandBehaviorDisplay="${this.formatOptions.textExpandBehaviorDisplay}"
			textMaxLength="${this.formatOptions.textMaxLength}"
			>
			${this.writeDateFormatOptions()}
		</internalMacro:formatOptions>
			`};i.writeDateFormatOptions=function e(){if(this.formatOptions.showTime||this.formatOptions.showDate||this.formatOptions.showTimezone){return B`<internalMacro:dateFormatOptions showTime="${this.formatOptions.showTime}" 
				showDate="${this.formatOptions.showDate}" 
				showTimezone="${this.formatOptions.showTimezone}" 
				/>`}return""};i.getPossibleValueHelpTemplate=function e(){const t=r.valueHelpProperty(this.metaPath);const i=this.metaPath.getModel().createBindingContext(t,this.metaPath);const a=r.hasValueHelpAnnotation(i.getObject("@"));if(a){return B`
			<internalMacro:dependents>
				<macros:ValueHelp _flexId="${this.id}-content_FieldValueHelp" property="${i}" contextPath="${this.contextPath}" />
			</internalMacro:dependents>`}return""};i.getTemplate=function e(){const t=this.contextPath.getPath();const i=this.metaPath.getPath();return B`
		<internalMacro:Field
			xmlns:internalMacro="sap.fe.macros.internal"
			entitySet="${t}"
			dataField="${i}"
			editMode="${this.editModeExpression}"
			onChange="${this.change}"
			_flexId="${this.id}"
			semanticObject="${this.semanticObject}"
		>
			${this.getFormatOptions()}
			${this.getPossibleValueHelpTemplate()}
		</internalMacro:Field>`};return t}(j),m=_(h.prototype,"id",[n],{configurable:true,enumerable:true,writable:true,initializer:null}),b=_(h.prototype,"metaPath",[o],{configurable:true,enumerable:true,writable:true,initializer:null}),y=_(h.prototype,"contextPath",[l],{configurable:true,enumerable:true,writable:true,initializer:null}),x=_(h.prototype,"readOnly",[s],{configurable:true,enumerable:true,writable:true,initializer:null}),g=_(h.prototype,"semanticObject",[u],{configurable:true,enumerable:true,writable:true,initializer:null}),O=_(h.prototype,"editModeExpression",[p],{configurable:true,enumerable:true,writable:true,initializer:null}),v=_(h.prototype,"formatOptions",[c],{configurable:true,enumerable:true,writable:true,initializer:function(){return{}}}),w=_(h.prototype,"change",[d],{configurable:true,enumerable:true,writable:true,initializer:function(){return""}}),h))||f);M=C;return M},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/TextAreaEx-dbg", ["sap/fe/core/helpers/ClassSupport", "sap/fe/macros/ResourceModel", "sap/m/TextArea", "sap/ui/core/library"], function (ClassSupport, ResourceModel, _TextArea, library) {
  "use strict";

  var _dec, _class;
  var _exports = {};
  var ValueState = library.ValueState;
  var defineUI5Class = ClassSupport.defineUI5Class;
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  let TextAreaEx = (
  /**
   * Extension of the TextArea control to add a check for the maximum length when setting the value.
   *
   * @extends sap.m.TextArea
   * @public
   */
  _dec = defineUI5Class("sap.fe.macros.field.TextAreaEx"), _dec(_class = /*#__PURE__*/function (_TextArea2) {
    _inheritsLoose(TextAreaEx, _TextArea2);
    function TextAreaEx() {
      return _TextArea2.apply(this, arguments) || this;
    }
    _exports = TextAreaEx;
    var _proto = TextAreaEx.prototype;
    /**
     * Fires live change event.
     *
     * @param {object} [parameters] Parameters to pass along with the event
     * @param parameters.value
     * @returns Reference to `this` in order to allow method chaining
     */
    _proto.fireLiveChange = function fireLiveChange(parameters) {
      _TextArea2.prototype.fireLiveChange.call(this, parameters);
      this._validateTextLength(parameters === null || parameters === void 0 ? void 0 : parameters.value);
      return this;
    }

    /**
     * Sets the value for the text area.
     *
     * @param {string} value New value for the property `value`
     * @returns Reference to `this` in order to allow method chaining
     * @private
     */;
    _proto.setValue = function setValue(value) {
      _TextArea2.prototype.setValue.call(this, value);
      this._validateTextLength(value);
      return this;
    }

    /**
     * Sets an error message for the value state if the maximum length is specified and the new value exceeds this maximum length.
     *
     * @param {string} [value] New value for property `value`
     * @private
     */;
    _proto._validateTextLength = function _validateTextLength(value) {
      const maxLength = this.getMaxLength();
      if (!maxLength || value === undefined) {
        return;
      }
      if (value.length > maxLength) {
        const valueStateText = ResourceModel.getText("M_FIELD_TEXTAREA_TEXT_TOO_LONG");
        this.setValueState(ValueState.Error);
        this.setValueStateText(valueStateText);
      } else {
        this.setValueState(ValueState.None);
      }
    };
    return TextAreaEx;
  }(_TextArea)) || _class);
  _exports = TextAreaEx;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/field/TextAreaEx", ["sap/fe/core/helpers/ClassSupport","sap/fe/macros/ResourceModel","sap/m/TextArea","sap/ui/core/library"],function(t,e,r,a){"use strict";var n,o;var i={};var s=a.ValueState;var u=t.defineUI5Class;function l(t,e){t.prototype=Object.create(e.prototype);t.prototype.constructor=t;p(t,e)}function p(t,e){p=Object.setPrototypeOf?Object.setPrototypeOf.bind():function t(e,r){e.__proto__=r;return e};return p(t,e)}let c=(n=u("sap.fe.macros.field.TextAreaEx"),n(o=function(t){l(r,t);function r(){return t.apply(this,arguments)||this}i=r;var a=r.prototype;a.fireLiveChange=function e(r){t.prototype.fireLiveChange.call(this,r);this._validateTextLength(r===null||r===void 0?void 0:r.value);return this};a.setValue=function e(r){t.prototype.setValue.call(this,r);this._validateTextLength(r);return this};a._validateTextLength=function t(r){const a=this.getMaxLength();if(!a||r===undefined){return}if(r.length>a){const t=e.getText("M_FIELD_TEXTAREA_TEXT_TOO_LONG");this.setValueState(s.Error);this.setValueStateText(t)}else{this.setValueState(s.None)}};return r}(r))||o);i=c;return i},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/DraftEditState-dbg", ["sap/ui/core/Core", "sap/ui/mdc/condition/FilterOperatorUtil", "sap/ui/mdc/condition/Operator", "sap/ui/mdc/enum/ConditionValidated", "sap/ui/model/Filter", "sap/ui/model/FilterOperator", "sap/ui/model/json/JSONModel"], function (Core, FilterOperatorUtil, Operator, ConditionValidated, Filter, FilterOperator, JSONModel) {
  "use strict";

  const feBundle = Core.getLibraryResourceBundle("sap.fe.macros");
  /**
   * Enum for edit state of a document in an draft enabled service collection.
   * Allows to simplify filtering on a set of documents as described by the
   * individual state
   *
   * @readonly
   * @enum {string}
   * @private
   * @ui5-restricted
   */
  const EDITSTATE = {
    /**
     * Active documents that don't have a corresponding draft and all own draft documents
     *
     * @private
     * @ui5-restricted
     */
    ALL: {
      id: "ALL",
      display: feBundle.getText("C_DRAFT_EDIT_STATE_DRAFT_ALL_FILTER")
    },
    /**
     * Active documents that don't have a draft document
     *
     * @private
     * @ui5-restricted
     */
    UNCHANGED: {
      id: "UNCHANGED",
      display: feBundle.getText("C_DRAFT_EDIT_STATE_DRAFT_UNCHANGED_FILTER")
    },
    /**
     * Own draft documents
     *
     * @private
     * @ui5-restricted
     */
    OWN_DRAFT: {
      id: "OWN_DRAFT",
      display: feBundle.getText("C_DRAFT_EDIT_STATE_DRAFT_OWN_DRAFT_FILTER")
    },
    /**
     * Active documents that are locked by other users
     *
     * @private
     * @ui5-restricted
     */
    LOCKED: {
      id: "LOCKED",
      display: feBundle.getText("C_DRAFT_EDIT_STATE_DRAFT_LOCKED_FILTER")
    },
    /**
     * Active documents that have draft documents by other users
     *
     * @private
     * @ui5-restricted
     */
    UNSAVED_CHANGES: {
      id: "UNSAVED_CHANGES",
      display: feBundle.getText("C_DRAFT_EDIT_STATE_DRAFT_UNSAVED_CHANGES_FILTER")
    },
    /**
     * Active documents only
     *
     * @private
     * @ui5-restricted
     */
    ALL_HIDING_DRAFTS: {
      id: "ALL_HIDING_DRAFTS",
      display: feBundle.getText("C_DRAFT_EDIT_STATE_DRAFT_ALL_HIDING_DRAFTS_FILTER")
    },
    /**
     * Active documents only (with collaborative draft)
     *
     * @private
     * @ui5-restricted
     */
    SAVED_ONLY: {
      id: "SAVED_ONLY",
      display: feBundle.getText("C_DRAFT_EDIT_STATE_DRAFT_SAVED_ONLY_FILTER")
    },
    /**
     * My drafts, i.e. the drafts I have created, have been invited to or have made a change in (with collaborative draft)
     *
     * @private
     * @ui5-restricted
     */
    MY_DRAFTS: {
      id: "MY_DRAFTS",
      display: feBundle.getText("C_DRAFT_EDIT_STATE_DRAFT_MY_DRAFTS_FILTER")
    },
    getEditStatesContext: function (macroProps) {
      let availableEditStates;
      if (macroProps.getProperty("isDraftCollaborative")) {
        availableEditStates = [EDITSTATE.ALL, EDITSTATE.MY_DRAFTS, EDITSTATE.SAVED_ONLY];
      } else {
        availableEditStates = [EDITSTATE.ALL, EDITSTATE.ALL_HIDING_DRAFTS, EDITSTATE.UNCHANGED, EDITSTATE.OWN_DRAFT, EDITSTATE.LOCKED, EDITSTATE.UNSAVED_CHANGES];
      }
      return new JSONModel(availableEditStates).bindContext("/").getBoundContext();
    },
    getCurrentUserID: function () {
      var _sap$ushell, _sap$ushell$Container, _sap$ushell$Container2;
      return (_sap$ushell = sap.ushell) === null || _sap$ushell === void 0 ? void 0 : (_sap$ushell$Container = _sap$ushell.Container) === null || _sap$ushell$Container === void 0 ? void 0 : (_sap$ushell$Container2 = _sap$ushell$Container.getUser()) === null || _sap$ushell$Container2 === void 0 ? void 0 : _sap$ushell$Container2.getId();
    },
    getFilterForEditState: function (sEditState) {
      switch (sEditState) {
        case EDITSTATE.UNCHANGED.id:
          return new Filter({
            filters: [new Filter({
              path: "IsActiveEntity",
              operator: FilterOperator.EQ,
              value1: true
            }), new Filter({
              path: "HasDraftEntity",
              operator: FilterOperator.EQ,
              value1: false
            })],
            and: true
          });
        case EDITSTATE.OWN_DRAFT.id:
          return new Filter({
            path: "IsActiveEntity",
            operator: FilterOperator.EQ,
            value1: false
          });
        case EDITSTATE.LOCKED.id:
          return new Filter({
            filters: [new Filter({
              path: "IsActiveEntity",
              operator: FilterOperator.EQ,
              value1: true
            }), new Filter({
              path: "SiblingEntity/IsActiveEntity",
              operator: FilterOperator.EQ,
              value1: null
            }), new Filter({
              path: "DraftAdministrativeData/InProcessByUser",
              operator: FilterOperator.NE,
              value1: ""
            }), new Filter({
              path: "DraftAdministrativeData/InProcessByUser",
              operator: FilterOperator.NE,
              value1: null
            })],
            and: true
          });
        case EDITSTATE.UNSAVED_CHANGES.id:
          return new Filter({
            filters: [new Filter({
              path: "IsActiveEntity",
              operator: FilterOperator.EQ,
              value1: true
            }), new Filter({
              path: "SiblingEntity/IsActiveEntity",
              operator: FilterOperator.EQ,
              value1: null
            }), new Filter({
              path: "DraftAdministrativeData/InProcessByUser",
              operator: FilterOperator.EQ,
              value1: ""
            })],
            and: true
          });
        case EDITSTATE.ALL_HIDING_DRAFTS.id:
        case EDITSTATE.SAVED_ONLY.id:
          return new Filter({
            path: "IsActiveEntity",
            operator: FilterOperator.EQ,
            value1: true
          });
        case EDITSTATE.MY_DRAFTS.id:
          const currentUserID = this.getCurrentUserID();
          return currentUserID ? new Filter({
            filters: [new Filter({
              path: "IsActiveEntity",
              operator: FilterOperator.EQ,
              value1: false
            }), new Filter({
              path: "DraftAdministrativeData/DraftAdministrativeUser",
              operator: FilterOperator.Any,
              variable: "user",
              condition: new Filter({
                path: "user/UserID",
                operator: FilterOperator.EQ,
                value1: this.getCurrentUserID()
              })
            })],
            and: true
          }) : new Filter({
            path: "IsActiveEntity",
            operator: FilterOperator.EQ,
            value1: false
          });
        // Couldn't find current user (e.g. no shell) --> show all drafts
        default:
          // ALL
          return new Filter({
            filters: [new Filter({
              path: "IsActiveEntity",
              operator: FilterOperator.EQ,
              value1: false
            }), new Filter({
              path: "SiblingEntity/IsActiveEntity",
              operator: FilterOperator.EQ,
              value1: null
            })],
            and: false
          });
      }
    }
  };
  FilterOperatorUtil.addOperator(new Operator({
    name: "DRAFT_EDIT_STATE",
    valueTypes: [Operator.ValueType.Self, Operator.ValueType.Self],
    tokenParse: "^(.*)$",
    format: function (vValue) {
      return vValue && vValue.values[1];
    },
    getModelFilter: function (oCondition) {
      return EDITSTATE.getFilterForEditState(oCondition.values[0]);
    },
    parse: function (parm) {
      return parm;
    },
    validateInput: true,
    checkValidated: function (oCondition) {
      // This ensures that the listfieldhelp is also called for old variants saved with Validated parameter as undefined.
      oCondition.validated = ConditionValidated.Validated;
    }
  }));
  return EDITSTATE;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/DraftEditState", ["sap/ui/core/Core","sap/ui/mdc/condition/FilterOperatorUtil","sap/ui/mdc/condition/Operator","sap/ui/mdc/enum/ConditionValidated","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/json/JSONModel"],function(e,t,a,r,i,n,s){"use strict";const o=e.getLibraryResourceBundle("sap.fe.macros");const A={ALL:{id:"ALL",display:o.getText("C_DRAFT_EDIT_STATE_DRAFT_ALL_FILTER")},UNCHANGED:{id:"UNCHANGED",display:o.getText("C_DRAFT_EDIT_STATE_DRAFT_UNCHANGED_FILTER")},OWN_DRAFT:{id:"OWN_DRAFT",display:o.getText("C_DRAFT_EDIT_STATE_DRAFT_OWN_DRAFT_FILTER")},LOCKED:{id:"LOCKED",display:o.getText("C_DRAFT_EDIT_STATE_DRAFT_LOCKED_FILTER")},UNSAVED_CHANGES:{id:"UNSAVED_CHANGES",display:o.getText("C_DRAFT_EDIT_STATE_DRAFT_UNSAVED_CHANGES_FILTER")},ALL_HIDING_DRAFTS:{id:"ALL_HIDING_DRAFTS",display:o.getText("C_DRAFT_EDIT_STATE_DRAFT_ALL_HIDING_DRAFTS_FILTER")},SAVED_ONLY:{id:"SAVED_ONLY",display:o.getText("C_DRAFT_EDIT_STATE_DRAFT_SAVED_ONLY_FILTER")},MY_DRAFTS:{id:"MY_DRAFTS",display:o.getText("C_DRAFT_EDIT_STATE_DRAFT_MY_DRAFTS_FILTER")},getEditStatesContext:function(e){let t;if(e.getProperty("isDraftCollaborative")){t=[A.ALL,A.MY_DRAFTS,A.SAVED_ONLY]}else{t=[A.ALL,A.ALL_HIDING_DRAFTS,A.UNCHANGED,A.OWN_DRAFT,A.LOCKED,A.UNSAVED_CHANGES]}return new s(t).bindContext("/").getBoundContext()},getCurrentUserID:function(){var e,t,a;return(e=sap.ushell)===null||e===void 0?void 0:(t=e.Container)===null||t===void 0?void 0:(a=t.getUser())===null||a===void 0?void 0:a.getId()},getFilterForEditState:function(e){switch(e){case A.UNCHANGED.id:return new i({filters:[new i({path:"IsActiveEntity",operator:n.EQ,value1:true}),new i({path:"HasDraftEntity",operator:n.EQ,value1:false})],and:true});case A.OWN_DRAFT.id:return new i({path:"IsActiveEntity",operator:n.EQ,value1:false});case A.LOCKED.id:return new i({filters:[new i({path:"IsActiveEntity",operator:n.EQ,value1:true}),new i({path:"SiblingEntity/IsActiveEntity",operator:n.EQ,value1:null}),new i({path:"DraftAdministrativeData/InProcessByUser",operator:n.NE,value1:""}),new i({path:"DraftAdministrativeData/InProcessByUser",operator:n.NE,value1:null})],and:true});case A.UNSAVED_CHANGES.id:return new i({filters:[new i({path:"IsActiveEntity",operator:n.EQ,value1:true}),new i({path:"SiblingEntity/IsActiveEntity",operator:n.EQ,value1:null}),new i({path:"DraftAdministrativeData/InProcessByUser",operator:n.EQ,value1:""})],and:true});case A.ALL_HIDING_DRAFTS.id:case A.SAVED_ONLY.id:return new i({path:"IsActiveEntity",operator:n.EQ,value1:true});case A.MY_DRAFTS.id:const e=this.getCurrentUserID();return e?new i({filters:[new i({path:"IsActiveEntity",operator:n.EQ,value1:false}),new i({path:"DraftAdministrativeData/DraftAdministrativeUser",operator:n.Any,variable:"user",condition:new i({path:"user/UserID",operator:n.EQ,value1:this.getCurrentUserID()})})],and:true}):new i({path:"IsActiveEntity",operator:n.EQ,value1:false});default:return new i({filters:[new i({path:"IsActiveEntity",operator:n.EQ,value1:false}),new i({path:"SiblingEntity/IsActiveEntity",operator:n.EQ,value1:null})],and:false})}}};t.addOperator(new a({name:"DRAFT_EDIT_STATE",valueTypes:[a.ValueType.Self,a.ValueType.Self],tokenParse:"^(.*)$",format:function(e){return e&&e.values[1]},getModelFilter:function(e){return A.getFilterForEditState(e.values[0])},parse:function(e){return e},validateInput:true,checkValidated:function(e){e.validated=r.Validated}}));return A},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/FilterFieldHelper-dbg", ["sap/fe/core/CommonUtils", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/core/templating/PropertyFormatters", "sap/fe/core/type/FiscalDate", "sap/fe/macros/CommonHelper", "sap/ui/model/odata/v4/AnnotationHelper"], function (CommonUtils, BindingToolkit, DataModelPathHelper, PropertyFormatters, FiscalDate, CommonHelper, AnnotationHelper) {
  "use strict";

  var getProperty = PropertyFormatters.getProperty;
  var getContextRelativeTargetObjectPath = DataModelPathHelper.getContextRelativeTargetObjectPath;
  var pathInModel = BindingToolkit.pathInModel;
  var getFiscalType = BindingToolkit.getFiscalType;
  var EDM_TYPE_MAPPING = BindingToolkit.EDM_TYPE_MAPPING;
  var compileExpression = BindingToolkit.compileExpression;
  const FilterFieldHelper = {
    //FilterField
    isRequiredInFilter: function (path, oDetails) {
      const oModel = oDetails.context.getModel(),
        sPropertyPath = oDetails.context.getPath(),
        sPropertyLocationPath = CommonHelper.getLocationForPropertyPath(oModel, sPropertyPath);
      let sProperty,
        oFR,
        bIsRequired = oModel.getObject(sPropertyLocationPath + "/@com.sap.vocabularies.Common.v1.ResultContext");
      if (!bIsRequired) {
        if (typeof path === "string") {
          sProperty = path;
        } else {
          sProperty = oModel.getObject(`${sPropertyPath}@sapui.name`);
        }
        oFR = CommonUtils.getFilterRestrictionsByPath(sPropertyLocationPath, oModel);
        bIsRequired = oFR && oFR.RequiredProperties && oFR.RequiredProperties.indexOf(sProperty) > -1;
      }
      return bIsRequired;
    },
    maxConditions: function (path, oDetails) {
      let sProperty,
        maxConditions = -1;
      const oModel = oDetails.context.getModel(),
        sPropertyPath = oDetails.context.getPath();
      const sPropertyLocationPath = CommonHelper.getLocationForPropertyPath(oModel, sPropertyPath);
      if (oModel.getObject(`${sPropertyLocationPath}/@com.sap.vocabularies.Common.v1.ResultContext`) === true) {
        return 1;
      }
      if (typeof path === "string") {
        sProperty = path;
      } else {
        sProperty = oModel.getObject(`${sPropertyPath}@sapui.name`);
      }
      const oFilterRestrictions = CommonUtils.getFilterRestrictionsByPath(sPropertyLocationPath, oModel);
      let oProperty = oModel.getObject(`${sPropertyLocationPath}/${sProperty}`);
      if (!oProperty) {
        oProperty = oModel.getObject(sPropertyPath);
      }
      if (oProperty.$Type === "Edm.Boolean") {
        maxConditions = 1;
      } else if (oFilterRestrictions && oFilterRestrictions.FilterAllowedExpressions && oFilterRestrictions.FilterAllowedExpressions[sProperty]) {
        const sAllowedExpression = CommonUtils.getSpecificAllowedExpression(oFilterRestrictions.FilterAllowedExpressions[sProperty]);
        if (sAllowedExpression === "SingleValue" || sAllowedExpression === "SingleRange") {
          maxConditions = 1;
        }
      }
      return maxConditions;
    },
    /**
     * To Create binding for mdc:filterfield conditions.
     *
     * @param dataModelObjectPath Data Model Object path to filter field property
     * @returns Expression binding for conditions for the field
     */
    getConditionsBinding: function (dataModelObjectPath) {
      const relativePropertyPath = getContextRelativeTargetObjectPath(dataModelObjectPath, false, true);
      return compileExpression(pathInModel(`/conditions/${relativePropertyPath}`, "$filters"));
    },
    constraints: function (oProperty, oInterface) {
      const sValue = AnnotationHelper.format(oProperty, oInterface),
        aMatches = sValue && sValue.match(/constraints:.*?({.*?})/);
      let sConstraints = aMatches && aMatches[1];
      // Workaround. Add "V4: true" to DateTimeOffset constraints. AnnotationHelper is not aware of this flag.
      if (sValue.indexOf("sap.ui.model.odata.type.DateTimeOffset") > -1) {
        if (sConstraints) {
          sConstraints = `${sConstraints.substr(0, aMatches === null || aMatches === void 0 ? void 0 : aMatches[1].indexOf("}"))}, V4: true}`;
        } else {
          sConstraints = "{V4: true}";
        }
      }
      // Remove {nullable:false} from the constraints as it prevents from having an empty filter field
      // in the case of a single-value filter
      if (sConstraints && sConstraints.indexOf("'nullable':false") >= 0) {
        sConstraints = sConstraints.replace(/,[ ]*'nullable':false/, "").replace(/'nullable':false[, ]*/, "");
        if (sConstraints === "{}") {
          return undefined;
        }
      }
      return sConstraints || undefined;
    },
    formatOptions: function (context, annotationInterface) {
      // as the Annotation helper always returns "parseKeepsEmptyString: true" we need to prevent this in case a property (of type string) is nullable
      // Filling oInterface.arguments with an array where the first parameter is null, and the second contains the "expected"
      // parseKeepsEmptyString value follows a proposal from the model colleagues to "overrule" the behavior of the AnnotationHelper
      if (context.$Type === "Edm.String") {
        if (!context.hasOwnProperty("$Nullable") || context.$Nullable === true) {
          annotationInterface.arguments = [null, {
            parseKeepsEmptyString: false
          }];
        }
        const fiscalType = getFiscalType(getProperty(context, annotationInterface));
        if (fiscalType) {
          if (!annotationInterface.arguments) {
            annotationInterface.arguments = [null, {}];
          }
          annotationInterface.arguments[1].fiscalType = fiscalType;
        }
      }
      const sValue = AnnotationHelper.format(context, annotationInterface),
        aMatches = sValue && sValue.match(/formatOptions:.*?({.*?})/);
      return aMatches && aMatches[1] || undefined;
    },
    getDataType: function (property) {
      if (property.type === "Edm.String") {
        const fiscalType = getFiscalType(property);
        if (fiscalType) {
          return "sap.fe.core.type.FiscalDate";
        }
      }
      const typeMapping = EDM_TYPE_MAPPING[property.type];
      return typeMapping ? typeMapping.type : property.type;
    },
    getPlaceholder: function (property) {
      if (property.type === "Edm.String") {
        const fiscalType = getFiscalType(property);
        if (fiscalType) {
          return new FiscalDate({
            fiscalType
          }, {}).getPattern();
        }
      }
      return undefined;
    }
  };
  return FilterFieldHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/FilterFieldHelper", ["sap/fe/core/CommonUtils","sap/fe/core/helpers/BindingToolkit","sap/fe/core/templating/DataModelPathHelper","sap/fe/core/templating/PropertyFormatters","sap/fe/core/type/FiscalDate","sap/fe/macros/CommonHelper","sap/ui/model/odata/v4/AnnotationHelper"],function(e,t,n,i,r,o,s){"use strict";var a=i.getProperty;var l=n.getContextRelativeTargetObjectPath;var c=t.pathInModel;var f=t.getFiscalType;var p=t.EDM_TYPE_MAPPING;var u=t.compileExpression;const d={isRequiredInFilter:function(t,n){const i=n.context.getModel(),r=n.context.getPath(),s=o.getLocationForPropertyPath(i,r);let a,l,c=i.getObject(s+"/@com.sap.vocabularies.Common.v1.ResultContext");if(!c){if(typeof t==="string"){a=t}else{a=i.getObject(`${r}@sapui.name`)}l=e.getFilterRestrictionsByPath(s,i);c=l&&l.RequiredProperties&&l.RequiredProperties.indexOf(a)>-1}return c},maxConditions:function(t,n){let i,r=-1;const s=n.context.getModel(),a=n.context.getPath();const l=o.getLocationForPropertyPath(s,a);if(s.getObject(`${l}/@com.sap.vocabularies.Common.v1.ResultContext`)===true){return 1}if(typeof t==="string"){i=t}else{i=s.getObject(`${a}@sapui.name`)}const c=e.getFilterRestrictionsByPath(l,s);let f=s.getObject(`${l}/${i}`);if(!f){f=s.getObject(a)}if(f.$Type==="Edm.Boolean"){r=1}else if(c&&c.FilterAllowedExpressions&&c.FilterAllowedExpressions[i]){const t=e.getSpecificAllowedExpression(c.FilterAllowedExpressions[i]);if(t==="SingleValue"||t==="SingleRange"){r=1}}return r},getConditionsBinding:function(e){const t=l(e,false,true);return u(c(`/conditions/${t}`,"$filters"))},constraints:function(e,t){const n=s.format(e,t),i=n&&n.match(/constraints:.*?({.*?})/);let r=i&&i[1];if(n.indexOf("sap.ui.model.odata.type.DateTimeOffset")>-1){if(r){r=`${r.substr(0,i===null||i===void 0?void 0:i[1].indexOf("}"))}, V4: true}`}else{r="{V4: true}"}}if(r&&r.indexOf("'nullable':false")>=0){r=r.replace(/,[ ]*'nullable':false/,"").replace(/'nullable':false[, ]*/,"");if(r==="{}"){return undefined}}return r||undefined},formatOptions:function(e,t){if(e.$Type==="Edm.String"){if(!e.hasOwnProperty("$Nullable")||e.$Nullable===true){t.arguments=[null,{parseKeepsEmptyString:false}]}const n=f(a(e,t));if(n){if(!t.arguments){t.arguments=[null,{}]}t.arguments[1].fiscalType=n}}const n=s.format(e,t),i=n&&n.match(/formatOptions:.*?({.*?})/);return i&&i[1]||undefined},getDataType:function(e){if(e.type==="Edm.String"){const t=f(e);if(t){return"sap.fe.core.type.FiscalDate"}}const t=p[e.type];return t?t.type:e.type},getPlaceholder:function(e){if(e.type==="Edm.String"){const t=f(e);if(t){return new r({fiscalType:t},{}).getPattern()}}return undefined}};return d},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/FilterFieldTemplating-dbg", ["sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/UIFormatters"], function (PropertyHelper, UIFormatters) {
  "use strict";

  var _exports = {};
  var getDisplayMode = UIFormatters.getDisplayMode;
  var hasValueHelp = PropertyHelper.hasValueHelp;
  const getDisplayProperty = function (propertyObjectPath, propertyConverted) {
    return hasValueHelp(propertyConverted) ? getDisplayMode(propertyObjectPath) : "Value";
  };
  _exports.getDisplayProperty = getDisplayProperty;
  const getFilterFieldDisplayFormat = async function (propertyObjectPath, propertyConverted, propertyInterface) {
    var _propertyConverted$an, _propertyConverted$an2;
    const oTextAnnotation = propertyConverted === null || propertyConverted === void 0 ? void 0 : (_propertyConverted$an = propertyConverted.annotations) === null || _propertyConverted$an === void 0 ? void 0 : (_propertyConverted$an2 = _propertyConverted$an.Common) === null || _propertyConverted$an2 === void 0 ? void 0 : _propertyConverted$an2.Text;
    if (oTextAnnotation) {
      // The text annotation should be on the property defined
      return getDisplayProperty(propertyObjectPath, propertyConverted);
    }
    const bHasValueHelp = hasValueHelp(propertyConverted);
    if (bHasValueHelp) {
      var _propertyObjectPath$t, _propertyObjectPath$t2, _propertyObjectPath$t3;
      // Exceptional case for missing text annotation on the property (retrieve text from value list)
      // Consider TextArrangement at EntityType otherwise set default display format 'DescriptionValue'
      const entityTextArrangement = propertyObjectPath === null || propertyObjectPath === void 0 ? void 0 : (_propertyObjectPath$t = propertyObjectPath.targetEntityType) === null || _propertyObjectPath$t === void 0 ? void 0 : (_propertyObjectPath$t2 = _propertyObjectPath$t.annotations) === null || _propertyObjectPath$t2 === void 0 ? void 0 : (_propertyObjectPath$t3 = _propertyObjectPath$t2.UI) === null || _propertyObjectPath$t3 === void 0 ? void 0 : _propertyObjectPath$t3.TextArrangement;
      return !!entityTextArrangement ? getDisplayMode(propertyObjectPath) : _getDisplayModeFromValueHelp(propertyInterface, propertyObjectPath);
    }
    return "Value";
  };

  /**
   * Method to determine the display mode from the value help.
   *
   * @param Interface The current templating context
   * @param propertyObjectPath The global path to reach the entitySet
   * @returns A promise with the string 'DescriptionValue' or 'Value', depending on whether a text annotation exists for the property in the value help
   * Hint: A text arrangement is consciously ignored. If the text is retrieved from the value help, the text arrangement of the value help property isn´t considered. Instead, the default text arrangement #TextFirst
   * is used.
   */
  _exports.getFilterFieldDisplayFormat = getFilterFieldDisplayFormat;
  async function _getDisplayModeFromValueHelp(Interface, propertyObjectPath) {
    const context = Interface.context;
    const metaModel = Interface.context.getModel();
    return await metaModel.requestValueListInfo(context.getPath(), true, context).then(function (valueListInfo) {
      var _firstValueListInfo$P;
      const firstKey = Object.keys(valueListInfo)[0];
      const firstValueListInfo = valueListInfo[firstKey];
      const valueListParameter = (_firstValueListInfo$P = firstValueListInfo.Parameters) === null || _firstValueListInfo$P === void 0 ? void 0 : _firstValueListInfo$P.find(element => {
        var _element$LocalDataPro, _propertyObjectPath$t4;
        return ((_element$LocalDataPro = element.LocalDataProperty) === null || _element$LocalDataPro === void 0 ? void 0 : _element$LocalDataPro.$PropertyPath) === (propertyObjectPath === null || propertyObjectPath === void 0 ? void 0 : (_propertyObjectPath$t4 = propertyObjectPath.targetObject) === null || _propertyObjectPath$t4 === void 0 ? void 0 : _propertyObjectPath$t4.name);
      });
      const valueListProperty = valueListParameter === null || valueListParameter === void 0 ? void 0 : valueListParameter.ValueListProperty;
      const textAnnotation = metaModel.getObject("/" + firstValueListInfo.CollectionPath + "/" + valueListProperty + "@com.sap.vocabularies.Common.v1.Text");
      return textAnnotation ? "DescriptionValue" : "Value";
    });
  }
  _exports._getDisplayModeFromValueHelp = _getDisplayModeFromValueHelp;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/FilterFieldTemplating", ["sap/fe/core/templating/PropertyHelper","sap/fe/core/templating/UIFormatters"],function(t,e){"use strict";var o={};var n=e.getDisplayMode;var i=t.hasValueHelp;const r=function(t,e){return i(e)?n(t):"Value"};o.getDisplayProperty=r;const a=async function(t,e,o){var a,u;const s=e===null||e===void 0?void 0:(a=e.annotations)===null||a===void 0?void 0:(u=a.Common)===null||u===void 0?void 0:u.Text;if(s){return r(t,e)}const v=i(e);if(v){var c,d,p;const e=t===null||t===void 0?void 0:(c=t.targetEntityType)===null||c===void 0?void 0:(d=c.annotations)===null||d===void 0?void 0:(p=d.UI)===null||p===void 0?void 0:p.TextArrangement;return!!e?n(t):l(o,t)}return"Value"};o.getFilterFieldDisplayFormat=a;async function l(t,e){const o=t.context;const n=t.context.getModel();return await n.requestValueListInfo(o.getPath(),true,o).then(function(t){var o;const i=Object.keys(t)[0];const r=t[i];const a=(o=r.Parameters)===null||o===void 0?void 0:o.find(t=>{var o,n;return((o=t.LocalDataProperty)===null||o===void 0?void 0:o.$PropertyPath)===(e===null||e===void 0?void 0:(n=e.targetObject)===null||n===void 0?void 0:n.name)});const l=a===null||a===void 0?void 0:a.ValueListProperty;const u=n.getObject("/"+r.CollectionPath+"/"+l+"@com.sap.vocabularies.Common.v1.Text");return u?"DescriptionValue":"Value"})}o._getDisplayModeFromValueHelp=l;return o},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/FilterUtils-dbg", ["sap/base/Log", "sap/base/util/deepClone", "sap/base/util/merge", "sap/fe/core/CommonUtils", "sap/fe/core/converters/controls/ListReport/FilterBar", "sap/fe/core/converters/ConverterContext", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/ModelHelper", "sap/fe/core/helpers/SemanticDateOperators", "sap/fe/core/templating/DisplayModeFormatter", "sap/fe/macros/CommonHelper", "sap/fe/macros/DelegateUtil", "sap/fe/macros/filter/DraftEditState", "sap/fe/macros/ODataMetaModelUtil", "sap/ui/core/Core", "sap/ui/mdc/condition/Condition", "sap/ui/mdc/condition/ConditionConverter", "sap/ui/mdc/enum/ConditionValidated", "sap/ui/mdc/odata/v4/TypeUtil", "sap/ui/mdc/p13n/StateUtil", "sap/ui/mdc/util/FilterUtil", "sap/ui/model/Filter", "sap/ui/model/FilterOperator", "sap/ui/model/odata/v4/ODataUtils"], function (Log, deepClone, merge, CommonUtils, FilterBarConverter, ConverterContext, MetaModelConverter, ModelHelper, SemanticDateOperators, DisplayModeFormatter, CommonHelper, DelegateUtil, EDITSTATE, MetaModelUtil, Core, Condition, ConditionConverter, ConditionValidated, TypeUtil, StateUtil, FilterUtil, Filter, FilterOperator, ODataUtils) {
  "use strict";

  var ODATA_TYPE_MAPPING = DisplayModeFormatter.ODATA_TYPE_MAPPING;
  const oFilterUtils = {
    getFilter: function (vIFilter) {
      const aFilters = oFilterUtils.getFilterInfo(vIFilter).filters;
      return aFilters.length ? new Filter(oFilterUtils.getFilterInfo(vIFilter).filters, false) : undefined;
    },
    getFilterField: function (propertyPath, converterContext, entityType) {
      return FilterBarConverter.getFilterField(propertyPath, converterContext, entityType);
    },
    buildProperyInfo: function (propertyInfoField, converterContext) {
      let oPropertyInfo;
      const aTypeConfig = {};
      const propertyConvertyContext = converterContext.getConverterContextFor(propertyInfoField.annotationPath);
      const propertyTargetObject = propertyConvertyContext.getDataModelObjectPath().targetObject;
      const oTypeConfig = FilterBarConverter.fetchTypeConfig(propertyTargetObject);
      oPropertyInfo = FilterBarConverter.fetchPropertyInfo(converterContext, propertyInfoField, oTypeConfig);
      aTypeConfig[propertyInfoField.key] = oTypeConfig;
      oPropertyInfo = FilterBarConverter.assignDataTypeToPropertyInfo(oPropertyInfo, converterContext, [], aTypeConfig);
      return oPropertyInfo;
    },
    createConverterContext: function (oFilterControl, sEntityTypePath, metaModel, appComponent) {
      const sFilterEntityTypePath = DelegateUtil.getCustomData(oFilterControl, "entityType"),
        contextPath = sEntityTypePath || sFilterEntityTypePath;
      const oView = oFilterControl.isA ? CommonUtils.getTargetView(oFilterControl) : null;
      const oMetaModel = metaModel || oFilterControl.getModel().getMetaModel();
      const oAppComponent = appComponent || oView && CommonUtils.getAppComponent(oView);
      const oVisualizationObjectPath = MetaModelConverter.getInvolvedDataModelObjects(oMetaModel.createBindingContext(contextPath));
      let manifestSettings;
      if (oFilterControl.isA && !oFilterControl.isA("sap.ui.mdc.filterbar.vh.FilterBar")) {
        manifestSettings = oView && oView.getViewData() || {};
      }
      return ConverterContext.createConverterContextForMacro(oVisualizationObjectPath.startingEntitySet.name, oMetaModel, oAppComponent === null || oAppComponent === void 0 ? void 0 : oAppComponent.getDiagnostics(), merge, oVisualizationObjectPath.contextLocation, manifestSettings);
    },
    getConvertedFilterFields: function (oFilterControl, sEntityTypePath, includeHidden, metaModel, appComponent, oModifier, lineItemTerm) {
      const oMetaModel = this._getFilterMetaModel(oFilterControl, metaModel);
      const sFilterEntityTypePath = DelegateUtil.getCustomData(oFilterControl, "entityType"),
        contextPath = sEntityTypePath || sFilterEntityTypePath;
      const lrTables = this._getFieldsForTable(oFilterControl, sEntityTypePath);
      const oConverterContext = this.createConverterContext(oFilterControl, sEntityTypePath, metaModel, appComponent);

      //aSelectionFields = FilterBarConverter.getSelectionFields(oConverterContext);
      return this._getSelectionFields(oFilterControl, sEntityTypePath, sFilterEntityTypePath, contextPath, lrTables, oMetaModel, oConverterContext, includeHidden, oModifier, lineItemTerm);
    },
    getBindingPathForParameters: function (oIFilter, mConditions, aFilterPropertiesMetadata, aParameters) {
      const aParams = [];
      aFilterPropertiesMetadata = oFilterUtils.setTypeConfigToProperties(aFilterPropertiesMetadata);
      // Collecting all parameter values from conditions
      for (let i = 0; i < aParameters.length; i++) {
        const sFieldPath = aParameters[i];
        if (mConditions[sFieldPath] && mConditions[sFieldPath].length > 0) {
          // We would be using only the first condition for parameter value.
          const oConditionInternal = merge({}, mConditions[sFieldPath][0]);
          const oProperty = FilterUtil.getPropertyByKey(aFilterPropertiesMetadata, sFieldPath);
          const oTypeConfig = oProperty.typeConfig || TypeUtil.getTypeConfig(oProperty.dataType, oProperty.formatOptions, oProperty.constraints);
          const mInternalParameterCondition = ConditionConverter.toType(oConditionInternal, oTypeConfig, oIFilter.getTypeUtil());
          const sEdmType = ODATA_TYPE_MAPPING[oTypeConfig.className];
          aParams.push(`${sFieldPath}=${encodeURIComponent(ODataUtils.formatLiteral(mInternalParameterCondition.values[0], sEdmType))}`);
        }
      }

      // Binding path from EntityType
      const sEntityTypePath = oIFilter.data("entityType");
      const sEntitySetPath = sEntityTypePath.substring(0, sEntityTypePath.length - 1);
      const sParameterEntitySet = sEntitySetPath.slice(0, sEntitySetPath.lastIndexOf("/"));
      const sTargetNavigation = sEntitySetPath.substring(sEntitySetPath.lastIndexOf("/") + 1);
      // create parameter context
      return `${sParameterEntitySet}(${aParams.toString()})/${sTargetNavigation}`;
    },
    getEditStateIsHideDraft: function (mConditions) {
      let bIsHideDraft = false;
      if (mConditions && mConditions.$editState) {
        const oCondition = mConditions.$editState.find(function (condition) {
          return condition.operator === "DRAFT_EDIT_STATE";
        });
        if (oCondition && (oCondition.values.includes("ALL_HIDING_DRAFTS") || oCondition.values.includes("SAVED_ONLY"))) {
          bIsHideDraft = true;
        }
      }
      return bIsHideDraft;
    },
    /**
     * Gets all filters that originate from the MDC FilterBar.
     *
     * @param vIFilter String or object instance related to
     *  - MDC_FilterBar/Table/Chart
     * @param mProperties Properties on filters that are to be retrieved. Available parameters:
     * 	 - ignoredProperties: Array of property names which should be not considered for filtering
     *	 - propertiesMetadata: Array with all the property metadata. If not provided, properties will be retrieved from vIFilter.
     *	 - targetControl: MDC_table or chart. If provided, property names which are not relevant for the target control entitySet are not considered.
     * @param mFilterConditions Map with externalized filter conditions.
     * @returns FilterBar filters and basic search
     * @private
     * @ui5-restricted
     */
    getFilterInfo: function (vIFilter, mProperties, mFilterConditions) {
      let aIgnoreProperties = mProperties && mProperties.ignoredProperties || [];
      const oTargetControl = mProperties && mProperties.targetControl,
        sTargetEntityPath = oTargetControl ? oTargetControl.data("entityType") : undefined;
      let oIFilter = vIFilter,
        sSearch,
        aFilters = [],
        sBindingPath,
        aPropertiesMetadata = mProperties && mProperties.propertiesMetadata;
      if (typeof vIFilter === "string") {
        oIFilter = Core.byId(vIFilter);
      }
      if (oIFilter) {
        sSearch = this._getSearchField(oIFilter, aIgnoreProperties);
        const mConditions = this._getFilterConditions(mProperties, mFilterConditions, oIFilter);
        let aFilterPropertiesMetadata = oIFilter.getPropertyInfoSet ? oIFilter.getPropertyInfoSet() : null;
        aFilterPropertiesMetadata = this._getFilterPropertiesMetadata(aFilterPropertiesMetadata, oIFilter);
        if (mProperties && mProperties.targetControl && mProperties.targetControl.isA("sap.ui.mdc.Chart")) {
          Object.keys(mConditions).forEach(function (sKey) {
            if (sKey === "$editState") {
              delete mConditions["$editState"];
            }
          });
        }
        let aParameters = oIFilter.data("parameters") || [];
        aParameters = typeof aParameters === "string" ? JSON.parse(aParameters) : aParameters;
        if (aParameters && aParameters.length > 0) {
          // Binding path changes in case of parameters.
          sBindingPath = oFilterUtils.getBindingPathForParameters(oIFilter, mConditions, aFilterPropertiesMetadata, aParameters);
        }
        if (mConditions) {
          //Exclude Interface Filter properties that are not relevant for the Target control entitySet
          if (sTargetEntityPath && oIFilter.data("entityType") !== sTargetEntityPath) {
            const oMetaModel = oIFilter.getModel().getMetaModel();
            const aTargetPropertiesMetadata = oIFilter.getControlDelegate().fetchPropertiesForEntity(sTargetEntityPath, oMetaModel, oIFilter);
            aPropertiesMetadata = aTargetPropertiesMetadata;
            const mEntityProperties = {};
            for (const i in aTargetPropertiesMetadata) {
              const oEntityProperty = aTargetPropertiesMetadata[i];
              mEntityProperties[oEntityProperty.name] = {
                hasProperty: true,
                dataType: oEntityProperty.dataType
              };
            }
            const _aIgnoreProperties = this._getIgnoredProperties(aFilterPropertiesMetadata, mEntityProperties);
            if (_aIgnoreProperties.length > 0) {
              aIgnoreProperties = aIgnoreProperties.concat(_aIgnoreProperties);
            }
          } else if (!aPropertiesMetadata) {
            aPropertiesMetadata = aFilterPropertiesMetadata;
          }
          // var aParamKeys = [];
          // aParameters.forEach(function (oParam) {
          // 	aParamKeys.push(oParam.key);
          // });
          const oFilter = FilterUtil.getFilterInfo(oIFilter, mConditions, oFilterUtils.setTypeConfigToProperties(aPropertiesMetadata), aIgnoreProperties.concat(aParameters)).filters;
          aFilters = oFilter ? [oFilter] : [];
        }
      }
      return {
        filters: aFilters,
        search: sSearch || undefined,
        bindingPath: sBindingPath
      };
    },
    setTypeConfigToProperties: function (aProperties) {
      if (aProperties && aProperties.length) {
        aProperties.forEach(function (oIFilterProperty) {
          if (oIFilterProperty.typeConfig && oIFilterProperty.typeConfig.typeInstance && oIFilterProperty.typeConfig.typeInstance.getConstraints instanceof Function) {
            return;
          }
          if (oIFilterProperty.path === "$editState") {
            oIFilterProperty.typeConfig = TypeUtil.getTypeConfig("sap.ui.model.odata.type.String", {}, {});
          } else if (oIFilterProperty.path === "$search") {
            oIFilterProperty.typeConfig = TypeUtil.getTypeConfig("sap.ui.model.odata.type.String", {}, {});
          } else if (oIFilterProperty.dataType || oIFilterProperty.typeConfig && oIFilterProperty.typeConfig.className) {
            oIFilterProperty.typeConfig = TypeUtil.getTypeConfig(oIFilterProperty.dataType || oIFilterProperty.typeConfig.className, oIFilterProperty.formatOptions, oIFilterProperty.constraints);
          }
        });
      }
      return aProperties;
    },
    getNotApplicableFilters: function (oFilterBar, oControl) {
      const sTargetEntityTypePath = oControl.data("entityType"),
        oFilterBarEntityPath = oFilterBar.data("entityType"),
        oFilterBarEntitySetAnnotations = oFilterBar.getModel().getMetaModel().getObject(oFilterBarEntityPath),
        aNotApplicable = [],
        mConditions = oFilterBar.getConditions(),
        oMetaModel = oFilterBar.getModel().getMetaModel(),
        bIsFilterBarEntityType = sTargetEntityTypePath === oFilterBar.data("entityType"),
        bIsChart = oControl.isA("sap.ui.mdc.Chart"),
        bIsAnalyticalTable = !bIsChart && oControl.getParent().getTableDefinition().enableAnalytics,
        bEnableSearch = bIsChart ? CommonHelper.parseCustomData(DelegateUtil.getCustomData(oControl, "applySupported")).enableSearch : !bIsAnalyticalTable || oControl.getParent().getTableDefinition().enableAnalyticsSearch;
      if (mConditions && (!bIsFilterBarEntityType || bIsAnalyticalTable || bIsChart)) {
        // We don't need to calculate the difference on property Level if entity sets are identical
        const aTargetProperties = bIsFilterBarEntityType ? [] : oFilterBar.getControlDelegate().fetchPropertiesForEntity(sTargetEntityTypePath, oMetaModel, oFilterBar),
          mTargetProperties = aTargetProperties.reduce(function (mProp, oProp) {
            mProp[oProp.name] = oProp;
            return mProp;
          }, {}),
          mTableAggregates = !bIsChart && oControl.getParent().getTableDefinition().aggregates || {},
          mAggregatedProperties = {};
        Object.keys(mTableAggregates).forEach(function (sAggregateName) {
          const oAggregate = mTableAggregates[sAggregateName];
          mAggregatedProperties[oAggregate.relativePath] = oAggregate;
        });
        const chartEntityTypeAnnotations = oControl.getModel().getMetaModel().getObject(oControl.data("targetCollectionPath") + "/");
        if (oControl.isA("sap.ui.mdc.Chart")) {
          const oEntitySetAnnotations = oControl.getModel().getMetaModel().getObject(`${oControl.data("targetCollectionPath")}@`),
            mChartCustomAggregates = MetaModelUtil.getAllCustomAggregates(oEntitySetAnnotations);
          Object.keys(mChartCustomAggregates).forEach(function (sAggregateName) {
            if (!mAggregatedProperties[sAggregateName]) {
              const oAggregate = mChartCustomAggregates[sAggregateName];
              mAggregatedProperties[sAggregateName] = oAggregate;
            }
          });
        }
        for (const sProperty in mConditions) {
          // Need to check the length of mConditions[sProperty] since previous filtered properties are kept into mConditions with empty array as definition
          const aConditionProperty = mConditions[sProperty];
          let typeCheck = true;
          if (chartEntityTypeAnnotations[sProperty] && oFilterBarEntitySetAnnotations[sProperty]) {
            typeCheck = chartEntityTypeAnnotations[sProperty]["$Type"] === oFilterBarEntitySetAnnotations[sProperty]["$Type"];
          }
          if (Array.isArray(aConditionProperty) && aConditionProperty.length > 0 && ((!mTargetProperties[sProperty] || mTargetProperties[sProperty] && !typeCheck) && (!bIsFilterBarEntityType || sProperty === "$editState" && bIsChart) || mAggregatedProperties[sProperty])) {
            aNotApplicable.push(sProperty.replace(/\+|\*/g, ""));
          }
        }
      }
      if (!bEnableSearch && oFilterBar.getSearch()) {
        aNotApplicable.push("$search");
      }
      return aNotApplicable;
    },
    /**
     * Gets the value list information of a property as defined for a given filter bar.
     *
     * @param filterBar The filter bar to get the value list information for
     * @param propertyName The property to get the value list information for
     * @returns The value list information
     */
    async _getValueListInfo(filterBar, propertyName) {
      var _filterBar$getModel;
      const metaModel = (_filterBar$getModel = filterBar.getModel()) === null || _filterBar$getModel === void 0 ? void 0 : _filterBar$getModel.getMetaModel();
      if (!metaModel) {
        return undefined;
      }
      const entityType = filterBar.data("entityType") ?? "";
      const valueListInfos = await metaModel.requestValueListInfo(entityType + propertyName, true, undefined).catch(() => null);
      return valueListInfos === null || valueListInfos === void 0 ? void 0 : valueListInfos[""];
    },
    /**
     * Gets the {@link ConditionValidated} state for a single value. This decides whether the value is treated as a selected value
     * in a value help, meaning that its description is loaded and displayed if existing, or whether it is displayed as a
     * condition (e.g. "=1").
     *
     * Values for properties without value list info are always treated as {@link ConditionValidated.NotValidated}.
     *
     * @param valueListInfo The value list info from the {@link MetaModel}
     * @param conditionPath Path to the property to set the value as condition for
     * @param value The single value to get the state for
     */
    _getConditionValidated: async function (valueListInfo, conditionPath, value) {
      if (!valueListInfo) {
        return ConditionValidated.NotValidated;
      }
      const filter = new Filter({
        path: conditionPath,
        operator: FilterOperator.EQ,
        value1: value
      });
      const listBinding = valueListInfo.$model.bindList(`/${valueListInfo.CollectionPath}`, undefined, undefined, filter, {
        $select: conditionPath
      });
      const valueExists = (await listBinding.requestContexts()).length > 0;
      if (valueExists) {
        return ConditionValidated.Validated;
      } else {
        return ConditionValidated.NotValidated;
      }
    },
    /**
     * Clears all input values of visible filter fields in the filter bar.
     *
     * @param oFilterBar The filter bar that contains the filter field
     */
    clearFilterValues: async function (oFilterBar) {
      var _state$filter$editSta;
      // Do nothing when the filter bar is hidden
      if (!oFilterBar) {
        return;
      }
      const state = await StateUtil.retrieveExternalState(oFilterBar);
      const editStatePath = "$editState";
      const editStateDefaultValue = EDITSTATE.ALL.id;
      const currentEditStateCondition = deepClone((_state$filter$editSta = state.filter[editStatePath]) === null || _state$filter$editSta === void 0 ? void 0 : _state$filter$editSta[0]);
      const currentEditStateIsDefault = (currentEditStateCondition === null || currentEditStateCondition === void 0 ? void 0 : currentEditStateCondition.values[0]) === editStateDefaultValue;

      // Clear all conditions
      for (const conditionPath of Object.keys(state.filter)) {
        if (conditionPath === editStatePath && currentEditStateIsDefault) {
          // Do not clear edit state condition if it is already "ALL"
          continue;
        }
        for (const condition of state.filter[conditionPath]) {
          condition.filtered = false;
        }
      }
      await StateUtil.applyExternalState(oFilterBar, {
        filter: state.filter
      });

      // Set edit state to 'ALL' if it wasn't before
      if (currentEditStateCondition && !currentEditStateIsDefault) {
        currentEditStateCondition.values = [editStateDefaultValue];
        await StateUtil.applyExternalState(oFilterBar, {
          filter: {
            [editStatePath]: [currentEditStateCondition]
          }
        });
      }

      // Allow app developers to update filters after clearing
      oFilterBar.getParent().fireAfterClear();
    },
    /**
     * Clear the filter value for a specific property in the filter bar.
     * This is a prerequisite before new values can be set cleanly.
     *
     * @param filterBar The filter bar that contains the filter field
     * @param conditionPath The path to the property as a condition path
     */
    async _clearFilterValue(filterBar, conditionPath) {
      const oState = await StateUtil.retrieveExternalState(filterBar);
      if (oState.filter[conditionPath]) {
        oState.filter[conditionPath].forEach(oCondition => {
          oCondition.filtered = false;
        });
        await StateUtil.applyExternalState(filterBar, {
          filter: {
            [conditionPath]: oState.filter[conditionPath]
          }
        });
      }
    },
    /**
     * Set the filter values for the given property in the filter bar.
     * The filter values can be either a single value or an array of values.
     * Each filter value must be represented as a primitive value.
     *
     * @param oFilterBar The filter bar that contains the filter field
     * @param sConditionPath The path to the property as a condition path
     * @param args List of optional parameters
     *  [sOperator] The operator to be used - if not set, the default operator (EQ) will be used
     *  [vValues] The values to be applied - if sOperator is missing, vValues is used as 3rd parameter
     */
    setFilterValues: async function (oFilterBar, sConditionPath) {
      for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
        args[_key - 2] = arguments[_key];
      }
      let sOperator = args === null || args === void 0 ? void 0 : args[0];
      let vValues = args === null || args === void 0 ? void 0 : args[1];

      // Do nothing when the filter bar is hidden
      if (!oFilterBar) {
        return;
      }

      // common filter Operators need a value. Do nothing if this value is undefined
      // BCP: 2270135274
      if (args.length === 2 && (vValues === undefined || vValues === null || vValues === "") && sOperator && Object.keys(FilterOperator).indexOf(sOperator) !== -1) {
        Log.warning(`An empty filter value cannot be applied with the ${sOperator} operator`);
        return;
      }

      // The 4th parameter is optional; if sOperator is missing, vValues is used as 3rd parameter
      // This does not apply for semantic dates, as these do not require vValues (exception: "LASTDAYS", 3)
      if (vValues === undefined && !SemanticDateOperators.getSemanticDateOperations().includes(sOperator || "")) {
        vValues = sOperator ?? [];
        sOperator = undefined;
      }

      // If sOperator is not set, use EQ as default
      if (!sOperator) {
        sOperator = FilterOperator.EQ;
      }

      // Supported array types:
      //  - Single Values:	"2" | ["2"]
      //  - Multiple Values:	["2", "3"]
      //  - Ranges:			["2","3"]
      // Unsupported array types:
      //  - Multiple Ranges:	[["2","3"]] | [["2","3"],["4","5"]]
      const supportedValueTypes = ["string", "number", "boolean"];
      if (vValues !== undefined && (!Array.isArray(vValues) && !supportedValueTypes.includes(typeof vValues) || Array.isArray(vValues) && vValues.length > 0 && !supportedValueTypes.includes(typeof vValues[0]))) {
        throw new Error("FilterUtils.js#_setFilterValues: Filter value not supported; only primitive values or an array thereof can be used.");
      }
      let values;
      if (vValues !== undefined) {
        values = Array.isArray(vValues) ? vValues : [vValues];
      }

      // Get the value list info of the property to later check whether the values exist
      const valueListInfo = await this._getValueListInfo(oFilterBar, sConditionPath);
      const filter = {};
      if (sConditionPath) {
        if (values && values.length) {
          if (sOperator === FilterOperator.BT) {
            // The operator BT requires one condition with both thresholds
            filter[sConditionPath] = [Condition.createCondition(sOperator, values, null, null, ConditionValidated.NotValidated)];
          } else {
            // Regular single and multi value conditions, if there are no values, we do not want any conditions
            filter[sConditionPath] = await Promise.all(values.map(async value => {
              // For the EQ case, tell MDC to validate the value (e.g. display the description), if it exists in the associated entity, otherwise never validate
              const conditionValidatedStatus = sOperator === FilterOperator.EQ ? await this._getConditionValidated(valueListInfo, sConditionPath, value) : ConditionValidated.NotValidated;
              return Condition.createCondition(sOperator, [value], null, null, conditionValidatedStatus);
            }));
          }
        } else if (SemanticDateOperators.getSemanticDateOperations().includes(sOperator || "")) {
          // vValues is undefined, so the operator is a semantic date that does not need values (see above)
          filter[sConditionPath] = [Condition.createCondition(sOperator, [], null, null, ConditionValidated.NotValidated)];
        }
      }

      // Always clear the current value as we do not want to add filter values but replace them
      await this._clearFilterValue(oFilterBar, sConditionPath);
      if (filter[sConditionPath]) {
        // This is not called in the reset case, i.e. setFilterValue("Property")
        await StateUtil.applyExternalState(oFilterBar, {
          filter
        });
      }
    },
    conditionToModelPath: function (sConditionPath) {
      // make the path usable as model property, therefore slashes become backslashes
      return sConditionPath.replace(/\//g, "\\");
    },
    _getFilterMetaModel: function (oFilterControl, metaModel) {
      return metaModel || oFilterControl.getModel().getMetaModel();
    },
    _getEntitySetPath: function (sEntityTypePath) {
      return sEntityTypePath && ModelHelper.getEntitySetPath(sEntityTypePath);
    },
    _getFieldsForTable: function (oFilterControl, sEntityTypePath) {
      const lrTables = [];
      /**
       * Gets fields from
       * 	- direct entity properties,
       * 	- navigateProperties key in the manifest if these properties are known by the entity
       *  - annotation "SelectionFields"
       */
      if (sEntityTypePath) {
        const oView = CommonUtils.getTargetView(oFilterControl);
        const tableControls = oView && oView.getController() && oView.getController()._getControls && oView.getController()._getControls("table"); //[0].getParent().getTableDefinition();
        if (tableControls) {
          tableControls.forEach(function (oTable) {
            lrTables.push(oTable.getParent().getTableDefinition());
          });
        }
        return lrTables;
      }
      return [];
    },
    _getSelectionFields: function (oFilterControl, sEntityTypePath, sFilterEntityTypePath, contextPath, lrTables, oMetaModel, oConverterContext, includeHidden, oModifier, lineItemTerm) {
      let aSelectionFields = FilterBarConverter.getSelectionFields(oConverterContext, lrTables, undefined, includeHidden, lineItemTerm).selectionFields;
      if ((oModifier ? oModifier.getControlType(oFilterControl) === "sap.ui.mdc.FilterBar" : oFilterControl.isA("sap.ui.mdc.FilterBar")) && sEntityTypePath !== sFilterEntityTypePath) {
        /**
         * We are on multi entity sets scenario so we add annotation "SelectionFields"
         * from FilterBar entity if these properties are known by the entity
         */
        const oVisualizationObjectPath = MetaModelConverter.getInvolvedDataModelObjects(oMetaModel.createBindingContext(contextPath));
        const oPageContext = oConverterContext.getConverterContextFor(sFilterEntityTypePath);
        const aFilterBarSelectionFieldsAnnotation = oPageContext.getEntityTypeAnnotation("@com.sap.vocabularies.UI.v1.SelectionFields").annotation || [];
        const mapSelectionFields = {};
        aSelectionFields.forEach(function (oSelectionField) {
          mapSelectionFields[oSelectionField.conditionPath] = true;
        });
        aFilterBarSelectionFieldsAnnotation.forEach(function (oFilterBarSelectionFieldAnnotation) {
          const sPath = oFilterBarSelectionFieldAnnotation.value;
          if (!mapSelectionFields[sPath]) {
            const oFilterField = FilterBarConverter.getFilterField(sPath, oConverterContext, oVisualizationObjectPath.startingEntitySet.entityType);
            if (oFilterField) {
              aSelectionFields.push(oFilterField);
            }
          }
        });
      }
      if (aSelectionFields) {
        const fieldNames = [];
        aSelectionFields.forEach(function (oField) {
          fieldNames.push(oField.key);
        });
        aSelectionFields = this._getSelectionFieldsFromPropertyInfos(oFilterControl, fieldNames, aSelectionFields);
      }
      return aSelectionFields;
    },
    _getSelectionFieldsFromPropertyInfos: function (oFilterControl, fieldNames, aSelectionFields) {
      const propertyInfoFields = oFilterControl.getPropertyInfo && oFilterControl.getPropertyInfo() || [];
      propertyInfoFields.forEach(function (oProp) {
        if (oProp.name === "$search" || oProp.name === "$editState") {
          return;
        }
        const selField = aSelectionFields[fieldNames.indexOf(oProp.key)];
        if (fieldNames.indexOf(oProp.key) !== -1 && selField.annotationPath) {
          oProp.group = selField.group;
          oProp.groupLabel = selField.groupLabel;
          oProp.settings = selField.settings;
          oProp.visualFilter = selField.visualFilter;
          oProp.label = selField.label;
          aSelectionFields[fieldNames.indexOf(oProp.key)] = oProp;
        }
        if (fieldNames.indexOf(oProp.key) === -1 && !oProp.annotationPath) {
          aSelectionFields.push(oProp);
        }
      });
      return aSelectionFields;
    },
    _getSearchField: function (oIFilter, aIgnoreProperties) {
      return oIFilter.getSearch && aIgnoreProperties.indexOf("search") === -1 ? oIFilter.getSearch() : null;
    },
    _getFilterConditions: function (mProperties, mFilterConditions, oIFilter) {
      const mConditions = mFilterConditions || oIFilter.getConditions();
      if (mProperties && mProperties.targetControl && mProperties.targetControl.isA("sap.ui.mdc.Chart")) {
        Object.keys(mConditions).forEach(function (sKey) {
          if (sKey === "$editState") {
            delete mConditions["$editState"];
          }
        });
      }
      return mConditions;
    },
    _getFilterPropertiesMetadata: function (aFilterPropertiesMetadata, oIFilter) {
      if (!(aFilterPropertiesMetadata && aFilterPropertiesMetadata.length)) {
        if (oIFilter.getPropertyInfo) {
          aFilterPropertiesMetadata = oIFilter.getPropertyInfo();
        } else {
          aFilterPropertiesMetadata = null;
        }
      }
      return aFilterPropertiesMetadata;
    },
    _getIgnoredProperties: function (aFilterPropertiesMetadata, mEntityProperties) {
      const aIgnoreProperties = [];
      aFilterPropertiesMetadata.forEach(function (oIFilterProperty) {
        const sIFilterPropertyName = oIFilterProperty.name;
        const mEntityPropertiesCurrent = mEntityProperties[sIFilterPropertyName];
        if (mEntityPropertiesCurrent && (!mEntityPropertiesCurrent["hasProperty"] || mEntityPropertiesCurrent["hasProperty"] && oIFilterProperty.dataType !== mEntityPropertiesCurrent.dataType)) {
          aIgnoreProperties.push(sIFilterPropertyName);
        }
      });
      return aIgnoreProperties;
    },
    getFilters: function (filterBar) {
      const {
        filters,
        search
      } = this.getFilterInfo(filterBar);
      return {
        filters,
        search
      };
    }
  };
  return oFilterUtils;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/FilterUtils", ["sap/base/Log","sap/base/util/deepClone","sap/base/util/merge","sap/fe/core/CommonUtils","sap/fe/core/converters/controls/ListReport/FilterBar","sap/fe/core/converters/ConverterContext","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/ModelHelper","sap/fe/core/helpers/SemanticDateOperators","sap/fe/core/templating/DisplayModeFormatter","sap/fe/macros/CommonHelper","sap/fe/macros/DelegateUtil","sap/fe/macros/filter/DraftEditState","sap/fe/macros/ODataMetaModelUtil","sap/ui/core/Core","sap/ui/mdc/condition/Condition","sap/ui/mdc/condition/ConditionConverter","sap/ui/mdc/enum/ConditionValidated","sap/ui/mdc/odata/v4/TypeUtil","sap/ui/mdc/p13n/StateUtil","sap/ui/mdc/util/FilterUtil","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/odata/v4/ODataUtils"],function(t,e,n,i,o,a,r,s,l,c,f,d,g,u,p,y,h,C,m,F,v,T,P,S){"use strict";var b=c.ODATA_TYPE_MAPPING;const M={getFilter:function(t){const e=M.getFilterInfo(t).filters;return e.length?new T(M.getFilterInfo(t).filters,false):undefined},getFilterField:function(t,e,n){return o.getFilterField(t,e,n)},buildProperyInfo:function(t,e){let n;const i={};const a=e.getConverterContextFor(t.annotationPath);const r=a.getDataModelObjectPath().targetObject;const s=o.fetchTypeConfig(r);n=o.fetchPropertyInfo(e,t,s);i[t.key]=s;n=o.assignDataTypeToPropertyInfo(n,e,[],i);return n},createConverterContext:function(t,e,o,s){const l=d.getCustomData(t,"entityType"),c=e||l;const f=t.isA?i.getTargetView(t):null;const g=o||t.getModel().getMetaModel();const u=s||f&&i.getAppComponent(f);const p=r.getInvolvedDataModelObjects(g.createBindingContext(c));let y;if(t.isA&&!t.isA("sap.ui.mdc.filterbar.vh.FilterBar")){y=f&&f.getViewData()||{}}return a.createConverterContextForMacro(p.startingEntitySet.name,g,u===null||u===void 0?void 0:u.getDiagnostics(),n,p.contextLocation,y)},getConvertedFilterFields:function(t,e,n,i,o,a,r){const s=this._getFilterMetaModel(t,i);const l=d.getCustomData(t,"entityType"),c=e||l;const f=this._getFieldsForTable(t,e);const g=this.createConverterContext(t,e,i,o);return this._getSelectionFields(t,e,l,c,f,s,g,n,a,r)},getBindingPathForParameters:function(t,e,i,o){const a=[];i=M.setTypeConfigToProperties(i);for(let r=0;r<o.length;r++){const s=o[r];if(e[s]&&e[s].length>0){const o=n({},e[s][0]);const r=v.getPropertyByKey(i,s);const l=r.typeConfig||m.getTypeConfig(r.dataType,r.formatOptions,r.constraints);const c=h.toType(o,l,t.getTypeUtil());const f=b[l.className];a.push(`${s}=${encodeURIComponent(S.formatLiteral(c.values[0],f))}`)}}const r=t.data("entityType");const s=r.substring(0,r.length-1);const l=s.slice(0,s.lastIndexOf("/"));const c=s.substring(s.lastIndexOf("/")+1);return`${l}(${a.toString()})/${c}`},getEditStateIsHideDraft:function(t){let e=false;if(t&&t.$editState){const n=t.$editState.find(function(t){return t.operator==="DRAFT_EDIT_STATE"});if(n&&(n.values.includes("ALL_HIDING_DRAFTS")||n.values.includes("SAVED_ONLY"))){e=true}}return e},getFilterInfo:function(t,e,n){let i=e&&e.ignoredProperties||[];const o=e&&e.targetControl,a=o?o.data("entityType"):undefined;let r=t,s,l=[],c,f=e&&e.propertiesMetadata;if(typeof t==="string"){r=p.byId(t)}if(r){s=this._getSearchField(r,i);const t=this._getFilterConditions(e,n,r);let o=r.getPropertyInfoSet?r.getPropertyInfoSet():null;o=this._getFilterPropertiesMetadata(o,r);if(e&&e.targetControl&&e.targetControl.isA("sap.ui.mdc.Chart")){Object.keys(t).forEach(function(e){if(e==="$editState"){delete t["$editState"]}})}let d=r.data("parameters")||[];d=typeof d==="string"?JSON.parse(d):d;if(d&&d.length>0){c=M.getBindingPathForParameters(r,t,o,d)}if(t){if(a&&r.data("entityType")!==a){const t=r.getModel().getMetaModel();const e=r.getControlDelegate().fetchPropertiesForEntity(a,t,r);f=e;const n={};for(const t in e){const i=e[t];n[i.name]={hasProperty:true,dataType:i.dataType}}const s=this._getIgnoredProperties(o,n);if(s.length>0){i=i.concat(s)}}else if(!f){f=o}const e=v.getFilterInfo(r,t,M.setTypeConfigToProperties(f),i.concat(d)).filters;l=e?[e]:[]}}return{filters:l,search:s||undefined,bindingPath:c}},setTypeConfigToProperties:function(t){if(t&&t.length){t.forEach(function(t){if(t.typeConfig&&t.typeConfig.typeInstance&&t.typeConfig.typeInstance.getConstraints instanceof Function){return}if(t.path==="$editState"){t.typeConfig=m.getTypeConfig("sap.ui.model.odata.type.String",{},{})}else if(t.path==="$search"){t.typeConfig=m.getTypeConfig("sap.ui.model.odata.type.String",{},{})}else if(t.dataType||t.typeConfig&&t.typeConfig.className){t.typeConfig=m.getTypeConfig(t.dataType||t.typeConfig.className,t.formatOptions,t.constraints)}})}return t},getNotApplicableFilters:function(t,e){const n=e.data("entityType"),i=t.data("entityType"),o=t.getModel().getMetaModel().getObject(i),a=[],r=t.getConditions(),s=t.getModel().getMetaModel(),l=n===t.data("entityType"),c=e.isA("sap.ui.mdc.Chart"),g=!c&&e.getParent().getTableDefinition().enableAnalytics,p=c?f.parseCustomData(d.getCustomData(e,"applySupported")).enableSearch:!g||e.getParent().getTableDefinition().enableAnalyticsSearch;if(r&&(!l||g||c)){const i=l?[]:t.getControlDelegate().fetchPropertiesForEntity(n,s,t),f=i.reduce(function(t,e){t[e.name]=e;return t},{}),d=!c&&e.getParent().getTableDefinition().aggregates||{},g={};Object.keys(d).forEach(function(t){const e=d[t];g[e.relativePath]=e});const p=e.getModel().getMetaModel().getObject(e.data("targetCollectionPath")+"/");if(e.isA("sap.ui.mdc.Chart")){const t=e.getModel().getMetaModel().getObject(`${e.data("targetCollectionPath")}@`),n=u.getAllCustomAggregates(t);Object.keys(n).forEach(function(t){if(!g[t]){const e=n[t];g[t]=e}})}for(const t in r){const e=r[t];let n=true;if(p[t]&&o[t]){n=p[t]["$Type"]===o[t]["$Type"]}if(Array.isArray(e)&&e.length>0&&((!f[t]||f[t]&&!n)&&(!l||t==="$editState"&&c)||g[t])){a.push(t.replace(/\+|\*/g,""))}}}if(!p&&t.getSearch()){a.push("$search")}return a},async _getValueListInfo(t,e){var n;const i=(n=t.getModel())===null||n===void 0?void 0:n.getMetaModel();if(!i){return undefined}const o=t.data("entityType")??"";const a=await i.requestValueListInfo(o+e,true,undefined).catch(()=>null);return a===null||a===void 0?void 0:a[""]},_getConditionValidated:async function(t,e,n){if(!t){return C.NotValidated}const i=new T({path:e,operator:P.EQ,value1:n});const o=t.$model.bindList(`/${t.CollectionPath}`,undefined,undefined,i,{$select:e});const a=(await o.requestContexts()).length>0;if(a){return C.Validated}else{return C.NotValidated}},clearFilterValues:async function(t){var n;if(!t){return}const i=await F.retrieveExternalState(t);const o="$editState";const a=g.ALL.id;const r=e((n=i.filter[o])===null||n===void 0?void 0:n[0]);const s=(r===null||r===void 0?void 0:r.values[0])===a;for(const t of Object.keys(i.filter)){if(t===o&&s){continue}for(const e of i.filter[t]){e.filtered=false}}await F.applyExternalState(t,{filter:i.filter});if(r&&!s){r.values=[a];await F.applyExternalState(t,{filter:{[o]:[r]}})}t.getParent().fireAfterClear()},async _clearFilterValue(t,e){const n=await F.retrieveExternalState(t);if(n.filter[e]){n.filter[e].forEach(t=>{t.filtered=false});await F.applyExternalState(t,{filter:{[e]:n.filter[e]}})}},setFilterValues:async function(e,n){for(var i=arguments.length,o=new Array(i>2?i-2:0),a=2;a<i;a++){o[a-2]=arguments[a]}let r=o===null||o===void 0?void 0:o[0];let s=o===null||o===void 0?void 0:o[1];if(!e){return}if(o.length===2&&(s===undefined||s===null||s==="")&&r&&Object.keys(P).indexOf(r)!==-1){t.warning(`An empty filter value cannot be applied with the ${r} operator`);return}if(s===undefined&&!l.getSemanticDateOperations().includes(r||"")){s=r??[];r=undefined}if(!r){r=P.EQ}const c=["string","number","boolean"];if(s!==undefined&&(!Array.isArray(s)&&!c.includes(typeof s)||Array.isArray(s)&&s.length>0&&!c.includes(typeof s[0]))){throw new Error("FilterUtils.js#_setFilterValues: Filter value not supported; only primitive values or an array thereof can be used.")}let f;if(s!==undefined){f=Array.isArray(s)?s:[s]}const d=await this._getValueListInfo(e,n);const g={};if(n){if(f&&f.length){if(r===P.BT){g[n]=[y.createCondition(r,f,null,null,C.NotValidated)]}else{g[n]=await Promise.all(f.map(async t=>{const e=r===P.EQ?await this._getConditionValidated(d,n,t):C.NotValidated;return y.createCondition(r,[t],null,null,e)}))}}else if(l.getSemanticDateOperations().includes(r||"")){g[n]=[y.createCondition(r,[],null,null,C.NotValidated)]}}await this._clearFilterValue(e,n);if(g[n]){await F.applyExternalState(e,{filter:g})}},conditionToModelPath:function(t){return t.replace(/\//g,"\\")},_getFilterMetaModel:function(t,e){return e||t.getModel().getMetaModel()},_getEntitySetPath:function(t){return t&&s.getEntitySetPath(t)},_getFieldsForTable:function(t,e){const n=[];if(e){const e=i.getTargetView(t);const o=e&&e.getController()&&e.getController()._getControls&&e.getController()._getControls("table");if(o){o.forEach(function(t){n.push(t.getParent().getTableDefinition())})}return n}return[]},_getSelectionFields:function(t,e,n,i,a,s,l,c,f,d){let g=o.getSelectionFields(l,a,undefined,c,d).selectionFields;if((f?f.getControlType(t)==="sap.ui.mdc.FilterBar":t.isA("sap.ui.mdc.FilterBar"))&&e!==n){const t=r.getInvolvedDataModelObjects(s.createBindingContext(i));const e=l.getConverterContextFor(n);const a=e.getEntityTypeAnnotation("@com.sap.vocabularies.UI.v1.SelectionFields").annotation||[];const c={};g.forEach(function(t){c[t.conditionPath]=true});a.forEach(function(e){const n=e.value;if(!c[n]){const e=o.getFilterField(n,l,t.startingEntitySet.entityType);if(e){g.push(e)}}})}if(g){const e=[];g.forEach(function(t){e.push(t.key)});g=this._getSelectionFieldsFromPropertyInfos(t,e,g)}return g},_getSelectionFieldsFromPropertyInfos:function(t,e,n){const i=t.getPropertyInfo&&t.getPropertyInfo()||[];i.forEach(function(t){if(t.name==="$search"||t.name==="$editState"){return}const i=n[e.indexOf(t.key)];if(e.indexOf(t.key)!==-1&&i.annotationPath){t.group=i.group;t.groupLabel=i.groupLabel;t.settings=i.settings;t.visualFilter=i.visualFilter;t.label=i.label;n[e.indexOf(t.key)]=t}if(e.indexOf(t.key)===-1&&!t.annotationPath){n.push(t)}});return n},_getSearchField:function(t,e){return t.getSearch&&e.indexOf("search")===-1?t.getSearch():null},_getFilterConditions:function(t,e,n){const i=e||n.getConditions();if(t&&t.targetControl&&t.targetControl.isA("sap.ui.mdc.Chart")){Object.keys(i).forEach(function(t){if(t==="$editState"){delete i["$editState"]}})}return i},_getFilterPropertiesMetadata:function(t,e){if(!(t&&t.length)){if(e.getPropertyInfo){t=e.getPropertyInfo()}else{t=null}}return t},_getIgnoredProperties:function(t,e){const n=[];t.forEach(function(t){const i=t.name;const o=e[i];if(o&&(!o["hasProperty"]||o["hasProperty"]&&t.dataType!==o.dataType)){n.push(i)}});return n},getFilters:function(t){const{filters:e,search:n}=this.getFilterInfo(t);return{filters:e,search:n}}};return M},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/type/MultiValue-dbg", ["sap/fe/core/helpers/ClassSupport", "sap/fe/macros/filter/type/Value"], function (ClassSupport, Value) {
  "use strict";

  var _dec, _class;
  var _exports = {};
  var defineUI5Class = ClassSupport.defineUI5Class;
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  let MultiValue = (
  /**
   * Handle format/parse of multi value filters.
   */
  _dec = defineUI5Class("sap.fe.macros.filter.type.MultiValue"), _dec(_class = /*#__PURE__*/function (_Value) {
    _inheritsLoose(MultiValue, _Value);
    function MultiValue() {
      return _Value.apply(this, arguments) || this;
    }
    _exports = MultiValue;
    var _proto = MultiValue.prototype;
    /**
     * Returns the unchanged values.
     *
     * @param values Input condition value
     * @returns First value of array or input
     * @protected
     */
    _proto.formatConditionValues = function formatConditionValues(values) {
      return values;
    }

    /**
     * Returns the string value parsed to the external value type.
     *
     * @param internalValue The internal string value to be formatted
     * @param externalValueType The external value type, e.g. int, float[], string, etc.
     * @returns The formatted value
     * @protected
     */;
    _proto.formatValue = function formatValue(internalValue, externalValueType) {
      let result = internalValue;
      if (typeof result === "string") {
        result = result.split(",");
      }
      if (Array.isArray(result)) {
        result = result.map(value => _Value.prototype.formatValue.call(this, value, this.getElementTypeName(externalValueType))).filter(value => value !== undefined);
      }
      return result || [];
    }

    /**
     * Returns the value parsed to the internal string value.
     *
     * @param externalValue The value to be parsed
     * @param externalValueType The external value type, e.g. int, float[], string, etc.
     * @returns The parsed value
     * @protected
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ;
    _proto.parseValue = function parseValue(externalValue, externalValueType) {
      if (!externalValue) {
        externalValue = [];
      }
      return externalValue.map(value => {
        if (value === undefined) {
          value = [];
        } else if (!Array.isArray(value)) {
          value = [value];
        }
        return this.operator.format({
          values: value
        });
      });
    };
    return MultiValue;
  }(Value)) || _class);
  _exports = MultiValue;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/type/MultiValue", ["sap/fe/core/helpers/ClassSupport","sap/fe/macros/filter/type/Value"],function(t,e){"use strict";var r,o;var n={};var a=t.defineUI5Class;function i(t,e){t.prototype=Object.create(e.prototype);t.prototype.constructor=t;f(t,e)}function f(t,e){f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function t(e,r){e.__proto__=r;return e};return f(t,e)}let u=(r=a("sap.fe.macros.filter.type.MultiValue"),r(o=function(t){i(e,t);function e(){return t.apply(this,arguments)||this}n=e;var r=e.prototype;r.formatConditionValues=function t(e){return e};r.formatValue=function e(r,o){let n=r;if(typeof n==="string"){n=n.split(",")}if(Array.isArray(n)){n=n.map(e=>t.prototype.formatValue.call(this,e,this.getElementTypeName(o))).filter(t=>t!==undefined)}return n||[]};r.parseValue=function t(e,r){if(!e){e=[]}return e.map(t=>{if(t===undefined){t=[]}else if(!Array.isArray(t)){t=[t]}return this.operator.format({values:t})})};return e}(e))||o);n=u;return n},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/type/Range-dbg", ["sap/fe/core/helpers/ClassSupport", "sap/fe/macros/filter/type/Value"], function (ClassSupport, Value) {
  "use strict";

  var _dec, _class;
  var _exports = {};
  var defineUI5Class = ClassSupport.defineUI5Class;
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  let Range = (
  /**
   * Handle format/parse of range filter values.
   */
  // eslint-disable-next-line new-cap
  _dec = defineUI5Class("sap.fe.macros.filter.type.Range"), _dec(_class = /*#__PURE__*/function (_Value) {
    _inheritsLoose(Range, _Value);
    function Range() {
      return _Value.apply(this, arguments) || this;
    }
    _exports = Range;
    var _proto = Range.prototype;
    /**
     * Returns the default operator name for range filter values ("BT").
     *
     * @returns The default operator name
     * @protected
     */
    _proto.getDefaultOperatorName = function getDefaultOperatorName() {
      return "BT";
    }

    /**
     * Returns the unchanged values.
     *
     * @param values Input condition value
     * @returns Unchanged input condition value
     * @protected
     */;
    _proto.formatConditionValues = function formatConditionValues(values) {
      return values;
    }

    /**
     * Returns the string value parsed to the external value type.
     *
     * @param internalValue The internal string value to be formatted
     * @param externalValueType The external value type, e.g. int, float[], string, etc.
     * @returns The formatted value
     * @protected
     */;
    _proto.formatValue = function formatValue(internalValue, externalValueType) {
      let results = _Value.prototype.formatValue.call(this, internalValue, externalValueType);
      if (!results) {
        const minValue = this.oFormatOptions.min || Number.MIN_SAFE_INTEGER,
          maxValue = this.oFormatOptions.max || Number.MAX_SAFE_INTEGER;
        results = [minValue, maxValue];
      }
      return results;
    };
    return Range;
  }(Value)) || _class);
  _exports = Range;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/type/Range", ["sap/fe/core/helpers/ClassSupport","sap/fe/macros/filter/type/Value"],function(t,e){"use strict";var r,o;var n={};var a=t.defineUI5Class;function u(t,e){t.prototype=Object.create(e.prototype);t.prototype.constructor=t;i(t,e)}function i(t,e){i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function t(e,r){e.__proto__=r;return e};return i(t,e)}let p=(r=a("sap.fe.macros.filter.type.Range"),r(o=function(t){u(e,t);function e(){return t.apply(this,arguments)||this}n=e;var r=e.prototype;r.getDefaultOperatorName=function t(){return"BT"};r.formatConditionValues=function t(e){return e};r.formatValue=function e(r,o){let n=t.prototype.formatValue.call(this,r,o);if(!n){const t=this.oFormatOptions.min||Number.MIN_SAFE_INTEGER,e=this.oFormatOptions.max||Number.MAX_SAFE_INTEGER;n=[t,e]}return n};return e}(e))||o);n=p;return n},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/type/Value-dbg", ["sap/base/Log", "sap/fe/core/helpers/ClassSupport", "sap/ui/mdc/condition/FilterOperatorUtil", "sap/ui/mdc/condition/Operator", "sap/ui/mdc/enum/FieldDisplay", "sap/ui/model/SimpleType", "sap/ui/model/type/Boolean", "sap/ui/model/type/Date", "sap/ui/model/type/Float", "sap/ui/model/type/Integer", "sap/ui/model/type/String"], function (Log, ClassSupport, FilterOperatorUtil, Operator, FieldDisplay, SimpleType, BooleanType, DateType, FloatType, IntegerType, StringType) {
  "use strict";

  var _dec, _class, _class2;
  var _exports = {};
  var defineUI5Class = ClassSupport.defineUI5Class;
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  let Value = (
  /**
   * Handle format/parse single filter value.
   */
  _dec = defineUI5Class("sap.fe.macros.filter.type.Value"), _dec(_class = (_class2 = /*#__PURE__*/function (_SimpleType) {
    _inheritsLoose(Value, _SimpleType);
    /**
     * Creates a new value type instance with the given parameters.
     *
     * @param formatOptions Format options for this value type
     * @param formatOptions.operator The name of a (possibly custom) operator to use
     * @param constraints Constraints for this value type
     * @protected
     */
    function Value(formatOptions, constraints) {
      var _this;
      _this = _SimpleType.call(this, formatOptions, constraints) || this;
      const operatorName = (formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.operator) || _this.getDefaultOperatorName();
      _this.operator = FilterOperatorUtil.getOperator(operatorName);
      if (!_this.operator && operatorName.includes(".")) {
        _this._registerCustomOperator(operatorName);
      }
      return _this;
    }

    /**
     * Registers a custom binding operator.
     *
     * @param operatorName The binding operator name
     * @private
     */
    _exports = Value;
    var _proto = Value.prototype;
    _proto._registerCustomOperator = function _registerCustomOperator(operatorName) {
      const handlerFileName = operatorName.substring(0, operatorName.lastIndexOf(".")).replace(/\./g, "/"),
        methodName = operatorName.substring(operatorName.lastIndexOf(".") + 1);
      sap.ui.require([handlerFileName], customOperatorHandler => {
        if (!customOperatorHandler) {
          return;
        }
        this.operator = new Operator({
          filterOperator: "",
          tokenFormat: "",
          name: operatorName,
          valueTypes: ["self"],
          tokenParse: "^(.*)$",
          format: value => {
            return this.formatConditionValues(value.values);
          },
          parse: function (text, type, displayFormat, defaultOperator) {
            if (typeof text === "object") {
              if (text.operator !== operatorName) {
                throw Error("not matching operator");
              }
              return text.values;
            }
            return Operator.prototype.parse.apply(this, [text, type, displayFormat, defaultOperator]);
          },
          getModelFilter: condition => {
            return customOperatorHandler[methodName].call(customOperatorHandler, this.formatConditionValues(condition.values));
          }
        });
        FilterOperatorUtil.addOperator(this.operator);
      });
    }

    /**
     * Returns whether the specified operator is a multi-value operator.
     *
     * @param operator The binding operator
     * @returns `true`, if multi-value operator (`false` otherwise)
     * @private
     */;
    _proto._isMultiValueOperator = function _isMultiValueOperator(operator) {
      return operator.valueTypes.filter(function (valueType) {
        return !!valueType && valueType !== Value.OPERATOR_VALUE_TYPE_STATIC;
      }).length > 1;
    }

    /**
     * Returns whether the specified operator is a custom operator.
     *
     * @returns `true`, if custom operator (`false` otherwise)
     * @private
     */;
    _proto.hasCustomOperator = function hasCustomOperator() {
      return this.operator.name.includes(".");
    }

    /**
     * Parses the internal string value to the external value of type 'externalValueType'.
     *
     * @param value The internal string value to be parsed
     * @param externalValueType The external value type, e.g. int, float[], string, etc.
     * @returns The parsed value
     * @private
     */;
    _proto._stringToExternal = function _stringToExternal(value, externalValueType) {
      let externalValue;
      const externalType = this._getTypeInstance(externalValueType);
      if (externalValueType && Value._isArrayType(externalValueType)) {
        if (!Array.isArray(value)) {
          value = [value];
        }
        externalValue = value.map(valueElement => {
          return externalType ? externalType.parseValue(valueElement, Value.INTERNAL_VALUE_TYPE) : valueElement;
        });
      } else {
        externalValue = externalType ? externalType.parseValue(value, Value.INTERNAL_VALUE_TYPE) : value;
      }
      return externalValue;
    }

    /**
     * Returns whether target type is an array.
     *
     * @param targetType The target type name
     * @returns `true`, if array type (`false` otherwise)
     * @private
     */;
    Value._isArrayType = function _isArrayType(targetType) {
      if (!targetType) {
        return false;
      }
      return targetType === "array" || targetType.endsWith("[]");
    }

    /**
     * Returns the external value formatted as the internal string value.
     *
     * @param externalValue The value to be parsed
     * @param externalValueType The external value type, e.g. int, float[], string, etc.
     * @returns The formatted value
     * @private
     */;
    _proto._externalToString = function _externalToString(externalValue, externalValueType) {
      let value;
      const externalType = this._getTypeInstance(externalValueType);
      if (externalValueType && Value._isArrayType(externalValueType)) {
        if (!Array.isArray(externalValue)) {
          externalValue = [externalValue];
        }
        value = externalValue.map(valueElement => {
          return externalType ? externalType.formatValue(valueElement, Value.INTERNAL_VALUE_TYPE) : valueElement;
        });
      } else {
        value = externalType ? externalType.formatValue(externalValue, Value.INTERNAL_VALUE_TYPE) : externalValue;
      }
      return value;
    }

    /**
     * Retrieves the default type instance for given type name.
     *
     * @param typeName The name of the type
     * @returns The type instance
     * @private
     */;
    _proto._getTypeInstance = function _getTypeInstance(typeName) {
      typeName = this.getElementTypeName(typeName) || typeName;
      switch (typeName) {
        case "string":
          return new StringType();
        case "number":
        case "int":
          return new IntegerType();
        case "float":
          return new FloatType();
        case "date":
          return new DateType();
        case "boolean":
          return new BooleanType();
        default:
          Log.error("Unexpected filter type");
          throw new Error("Unexpected filter type");
      }
    }

    /**
     * Returns the default operator name ("EQ").
     * Should be overridden on demand.
     *
     * @returns The default operator name
     * @protected
     */;
    _proto.getDefaultOperatorName = function getDefaultOperatorName() {
      return FilterOperatorUtil.getEQOperator().name;
    }

    /**
     * Returns first value of array or input.
     *
     * @param values Input condition value
     * @returns Unchanged input condition value
     * @protected
     */;
    _proto.formatConditionValues = function formatConditionValues(values) {
      return Array.isArray(values) && values.length ? values[0] : values;
    }

    /**
     * Returns the element type name.
     *
     * @param typeName The actual type name
     * @returns The type of its elements
     * @protected
     */;
    _proto.getElementTypeName = function getElementTypeName(typeName) {
      if (typeName !== null && typeName !== void 0 && typeName.endsWith("[]")) {
        return typeName.substring(0, typeName.length - 2);
      }
      return undefined;
    }

    /**
     * Returns the string value parsed to the external value type 'this.operator'.
     *
     * @param internalValue The internal string value to be formatted
     * @param externalValueType The external value type, e.g. int, float[], string, etc.
     * @returns The formatted value
     * @protected
     */;
    _proto.formatValue = function formatValue(internalValue, externalValueType) {
      if (!internalValue) {
        return undefined;
      }
      const isMultiValueOperator = this._isMultiValueOperator(this.operator),
        internalType = this._getTypeInstance(Value.INTERNAL_VALUE_TYPE);

      //  from internal model string with operator
      const values = this.operator.parse(internalValue || "", internalType, FieldDisplay.Value, false);
      const value = !isMultiValueOperator && Array.isArray(values) ? values[0] : values;
      return this._stringToExternal(value, externalValueType); // The value bound to a custom filter
    }

    /**
     * Returns the value parsed to the internal string value.
     *
     * @param externalValue The value to be parsed
     * @param externalValueType The external value type, e.g. int, float[], string, etc.
     * @returns The parsed value
     * @protected
     */;
    _proto.parseValue = function parseValue(externalValue, externalValueType) {
      if (!externalValue) {
        return undefined;
      }
      const isMultiValueOperator = this._isMultiValueOperator(this.operator),
        externalType = this._getTypeInstance(externalValueType);
      const value = this._externalToString(externalValue, externalValueType);

      // Format to internal model string with operator
      const values = isMultiValueOperator ? value : [value];
      if (this.hasCustomOperator()) {
        // Return a complex object while parsing the bound value in sap.ui.model.PropertyBinding.js#_externalToRaw()
        return {
          operator: this.operator.name,
          values: [this.operator.format({
            values: values
          }, externalType)],
          validated: undefined
        };
      }
      // Return a simple string value to be stored in the internal 'filterValues' model
      return this.operator.format({
        values: values
      }, externalType);
    }

    /**
     * Validates whether the given value in model representation is valid.
     *
     * @param externalValue The value to be validated
     * @protected
     */
    // eslint-disable-next-line @typescript-eslint/no-unused-vars
    ;
    _proto.validateValue = function validateValue(externalValue) {
      /* Do Nothing */
    };
    return Value;
  }(SimpleType), _class2.INTERNAL_VALUE_TYPE = "string", _class2.OPERATOR_VALUE_TYPE_STATIC = "static", _class2)) || _class);
  _exports = Value;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filter/type/Value", ["sap/base/Log","sap/fe/core/helpers/ClassSupport","sap/ui/mdc/condition/FilterOperatorUtil","sap/ui/mdc/condition/Operator","sap/ui/mdc/enum/FieldDisplay","sap/ui/model/SimpleType","sap/ui/model/type/Boolean","sap/ui/model/type/Date","sap/ui/model/type/Float","sap/ui/model/type/Integer","sap/ui/model/type/String"],function(e,t,r,n,a,o,i,s,u,p,l){"use strict";var f,c,d;var y={};var m=t.defineUI5Class;function _(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;T(e,t)}function T(e,t){T=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,r){t.__proto__=r;return t};return T(e,t)}let h=(f=m("sap.fe.macros.filter.type.Value"),f(c=(d=function(t){_(o,t);function o(e,n){var a;a=t.call(this,e,n)||this;const o=(e===null||e===void 0?void 0:e.operator)||a.getDefaultOperatorName();a.operator=r.getOperator(o);if(!a.operator&&o.includes(".")){a._registerCustomOperator(o)}return a}y=o;var f=o.prototype;f._registerCustomOperator=function e(t){const a=t.substring(0,t.lastIndexOf(".")).replace(/\./g,"/"),o=t.substring(t.lastIndexOf(".")+1);sap.ui.require([a],e=>{if(!e){return}this.operator=new n({filterOperator:"",tokenFormat:"",name:t,valueTypes:["self"],tokenParse:"^(.*)$",format:e=>this.formatConditionValues(e.values),parse:function(e,r,a,o){if(typeof e==="object"){if(e.operator!==t){throw Error("not matching operator")}return e.values}return n.prototype.parse.apply(this,[e,r,a,o])},getModelFilter:t=>e[o].call(e,this.formatConditionValues(t.values))});r.addOperator(this.operator)})};f._isMultiValueOperator=function e(t){return t.valueTypes.filter(function(e){return!!e&&e!==o.OPERATOR_VALUE_TYPE_STATIC}).length>1};f.hasCustomOperator=function e(){return this.operator.name.includes(".")};f._stringToExternal=function e(t,r){let n;const a=this._getTypeInstance(r);if(r&&o._isArrayType(r)){if(!Array.isArray(t)){t=[t]}n=t.map(e=>a?a.parseValue(e,o.INTERNAL_VALUE_TYPE):e)}else{n=a?a.parseValue(t,o.INTERNAL_VALUE_TYPE):t}return n};o._isArrayType=function e(t){if(!t){return false}return t==="array"||t.endsWith("[]")};f._externalToString=function e(t,r){let n;const a=this._getTypeInstance(r);if(r&&o._isArrayType(r)){if(!Array.isArray(t)){t=[t]}n=t.map(e=>a?a.formatValue(e,o.INTERNAL_VALUE_TYPE):e)}else{n=a?a.formatValue(t,o.INTERNAL_VALUE_TYPE):t}return n};f._getTypeInstance=function t(r){r=this.getElementTypeName(r)||r;switch(r){case"string":return new l;case"number":case"int":return new p;case"float":return new u;case"date":return new s;case"boolean":return new i;default:e.error("Unexpected filter type");throw new Error("Unexpected filter type")}};f.getDefaultOperatorName=function e(){return r.getEQOperator().name};f.formatConditionValues=function e(t){return Array.isArray(t)&&t.length?t[0]:t};f.getElementTypeName=function e(t){if(t!==null&&t!==void 0&&t.endsWith("[]")){return t.substring(0,t.length-2)}return undefined};f.formatValue=function e(t,r){if(!t){return undefined}const n=this._isMultiValueOperator(this.operator),i=this._getTypeInstance(o.INTERNAL_VALUE_TYPE);const s=this.operator.parse(t||"",i,a.Value,false);const u=!n&&Array.isArray(s)?s[0]:s;return this._stringToExternal(u,r)};f.parseValue=function e(t,r){if(!t){return undefined}const n=this._isMultiValueOperator(this.operator),a=this._getTypeInstance(r);const o=this._externalToString(t,r);const i=n?o:[o];if(this.hasCustomOperator()){return{operator:this.operator.name,values:[this.operator.format({values:i},a)],validated:undefined}}return this.operator.format({values:i},a)};f.validateValue=function e(t){};return o}(o),d.INTERNAL_VALUE_TYPE="string",d.OPERATOR_VALUE_TYPE_STATIC="static",d))||c);y=h;return y},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filterBar/FilterBarAPI-dbg", ["sap/base/util/merge", "sap/fe/core/helpers/ClassSupport", "sap/fe/macros/filter/FilterUtils", "../MacroAPI"], function (merge, ClassSupport, FilterUtils, MacroAPI) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13;
  var xmlEventHandler = ClassSupport.xmlEventHandler;
  var property = ClassSupport.property;
  var event = ClassSupport.event;
  var defineUI5Class = ClassSupport.defineUI5Class;
  var aggregation = ClassSupport.aggregation;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  /**
   * Building block for creating a FilterBar based on the metadata provided by OData V4.
   * <br>
   * Usually, a SelectionFields annotation is expected.
   *
   *
   * Usage example:
   * <pre>
   * &lt;macro:FilterBar id="MyFilterBar" metaPath="@com.sap.vocabularies.UI.v1.SelectionFields" /&gt;
   * </pre>
   *
   * @alias sap.fe.macros.FilterBar
   * @public
   */
  let FilterBarAPI = (_dec = defineUI5Class("sap.fe.macros.filterBar.FilterBarAPI"), _dec2 = property({
    type: "string"
  }), _dec3 = property({
    type: "string",
    expectedAnnotations: ["com.sap.vocabularies.UI.v1.SelectionFields"],
    expectedTypes: ["EntitySet", "EntityType"]
  }), _dec4 = property({
    type: "boolean",
    defaultValue: false
  }), _dec5 = property({
    type: "boolean",
    defaultValue: true
  }), _dec6 = property({
    type: "boolean",
    defaultValue: true
  }), _dec7 = property({
    type: "boolean",
    defaultValue: false
  }), _dec8 = aggregation({
    type: "sap.fe.macros.FilterField",
    multiple: true
  }), _dec9 = event(), _dec10 = event(), _dec11 = event(), _dec12 = event(), _dec13 = event(), _dec14 = event(), _dec15 = xmlEventHandler(), _dec16 = xmlEventHandler(), _dec(_class = (_class2 = /*#__PURE__*/function (_MacroAPI) {
    _inheritsLoose(FilterBarAPI, _MacroAPI);
    function FilterBarAPI() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _MacroAPI.call(this, ...args) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "liveMode", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visible", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "showMessages", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "showClearButton", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "filterFields", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "search", _descriptor8, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "internalSearch", _descriptor9, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "filterChanged", _descriptor10, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "afterClear", _descriptor11, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "internalFilterChanged", _descriptor12, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "stateChange", _descriptor13, _assertThisInitialized(_this));
      return _this;
    }
    var _proto = FilterBarAPI.prototype;
    _proto.handleSearch = function handleSearch(oEvent) {
      const oFilterBar = oEvent.getSource();
      const oEventParameters = oEvent.getParameters();
      if (oFilterBar) {
        const oConditions = oFilterBar.getFilterConditions();
        const eventParameters = this._prepareEventParameters(oFilterBar);
        this.fireInternalSearch(merge({
          conditions: oConditions
        }, oEventParameters));
        this.fireSearch(eventParameters);
      }
    };
    _proto.handleFilterChanged = function handleFilterChanged(oEvent) {
      const oFilterBar = oEvent.getSource();
      const oEventParameters = oEvent.getParameters();
      if (oFilterBar) {
        const oConditions = oFilterBar.getFilterConditions();
        const eventParameters = this._prepareEventParameters(oFilterBar);
        this.fireInternalFilterChanged(merge({
          conditions: oConditions
        }, oEventParameters));
        this.fireFilterChanged(eventParameters);
      }
    };
    _proto._prepareEventParameters = function _prepareEventParameters(oFilterBar) {
      const {
        filters,
        search
      } = FilterUtils.getFilters(oFilterBar);
      return {
        filters,
        search
      };
    }

    /**
     * Set the filter values for the given property in the filter bar.
     * The filter values can be either a single value or an array of values.
     * Each filter value must be represented as a primitive value.
     *
     * @param sConditionPath The path to the property as a condition path
     * @param [sOperator] The operator to be used (optional) - if not set, the default operator (EQ) will be used
     * @param vValues The values to be applied
     * @returns A promise for asynchronous handling
     * @public
     */;
    _proto.setFilterValues = function setFilterValues(sConditionPath, sOperator, vValues) {
      if (arguments.length === 2) {
        vValues = sOperator;
        return FilterUtils.setFilterValues(this.content, sConditionPath, vValues);
      }
      return FilterUtils.setFilterValues(this.content, sConditionPath, sOperator, vValues);
    }

    /**
     * Get the Active Filters Text Summary for the filter bar.
     *
     * @returns Active filters summary as text
     * @public
     */;
    _proto.getActiveFiltersText = function getActiveFiltersText() {
      var _oFilterBar$getAssign;
      const oFilterBar = this.content;
      return (oFilterBar === null || oFilterBar === void 0 ? void 0 : (_oFilterBar$getAssign = oFilterBar.getAssignedFiltersText()) === null || _oFilterBar$getAssign === void 0 ? void 0 : _oFilterBar$getAssign.filtersText) || "";
    }

    /**
     * Provides all the filters that are currently active
     * along with the search expression.
     *
     * @returns {{filters: sap.ui.model.Filter[]|undefined, search: string|undefined}} An array of active filters and the search expression.
     * @public
     */;
    _proto.getFilters = function getFilters() {
      return FilterUtils.getFilters(this.content);
    };
    return FilterBarAPI;
  }(MacroAPI), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "liveMode", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "showMessages", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "showClearButton", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "filterFields", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "search", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "internalSearch", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "filterChanged", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "afterClear", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "internalFilterChanged", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "stateChange", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class2.prototype, "handleSearch", [_dec15], Object.getOwnPropertyDescriptor(_class2.prototype, "handleSearch"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "handleFilterChanged", [_dec16], Object.getOwnPropertyDescriptor(_class2.prototype, "handleFilterChanged"), _class2.prototype)), _class2)) || _class);
  return FilterBarAPI;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filterBar/FilterBarAPI", ["sap/base/util/merge","sap/fe/core/helpers/ClassSupport","sap/fe/macros/filter/FilterUtils","../MacroAPI"],function(e,t,r,i){"use strict";var n,a,l,o,u,s,c,p,f,b,d,h,g,y,v,m,w,F,z,C,P,O,S,E,j,V,_,x,A,I,M;var T=t.xmlEventHandler;var B=t.property;var D=t.event;var U=t.defineUI5Class;var k=t.aggregation;function H(e,t,r,i){if(!r)return;Object.defineProperty(e,t,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(i):void 0})}function R(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function q(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;G(e,t)}function G(e,t){G=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,r){t.__proto__=r;return t};return G(e,t)}function J(e,t,r,i,n){var a={};Object.keys(i).forEach(function(e){a[e]=i[e]});a.enumerable=!!a.enumerable;a.configurable=!!a.configurable;if("value"in a||a.initializer){a.writable=true}a=r.slice().reverse().reduce(function(r,i){return i(e,t,r)||r},a);if(n&&a.initializer!==void 0){a.value=a.initializer?a.initializer.call(n):void 0;a.initializer=undefined}if(a.initializer===void 0){Object.defineProperty(e,t,a);a=null}return a}function K(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let L=(n=U("sap.fe.macros.filterBar.FilterBarAPI"),a=B({type:"string"}),l=B({type:"string",expectedAnnotations:["com.sap.vocabularies.UI.v1.SelectionFields"],expectedTypes:["EntitySet","EntityType"]}),o=B({type:"boolean",defaultValue:false}),u=B({type:"boolean",defaultValue:true}),s=B({type:"boolean",defaultValue:true}),c=B({type:"boolean",defaultValue:false}),p=k({type:"sap.fe.macros.FilterField",multiple:true}),f=D(),b=D(),d=D(),h=D(),g=D(),y=D(),v=T(),m=T(),n(w=(F=function(t){q(i,t);function i(){var e;for(var r=arguments.length,i=new Array(r),n=0;n<r;n++){i[n]=arguments[n]}e=t.call(this,...i)||this;H(e,"id",z,R(e));H(e,"metaPath",C,R(e));H(e,"liveMode",P,R(e));H(e,"visible",O,R(e));H(e,"showMessages",S,R(e));H(e,"showClearButton",E,R(e));H(e,"filterFields",j,R(e));H(e,"search",V,R(e));H(e,"internalSearch",_,R(e));H(e,"filterChanged",x,R(e));H(e,"afterClear",A,R(e));H(e,"internalFilterChanged",I,R(e));H(e,"stateChange",M,R(e));return e}var n=i.prototype;n.handleSearch=function t(r){const i=r.getSource();const n=r.getParameters();if(i){const t=i.getFilterConditions();const r=this._prepareEventParameters(i);this.fireInternalSearch(e({conditions:t},n));this.fireSearch(r)}};n.handleFilterChanged=function t(r){const i=r.getSource();const n=r.getParameters();if(i){const t=i.getFilterConditions();const r=this._prepareEventParameters(i);this.fireInternalFilterChanged(e({conditions:t},n));this.fireFilterChanged(r)}};n._prepareEventParameters=function e(t){const{filters:i,search:n}=r.getFilters(t);return{filters:i,search:n}};n.setFilterValues=function e(t,i,n){if(arguments.length===2){n=i;return r.setFilterValues(this.content,t,n)}return r.setFilterValues(this.content,t,i,n)};n.getActiveFiltersText=function e(){var t;const r=this.content;return(r===null||r===void 0?void 0:(t=r.getAssignedFiltersText())===null||t===void 0?void 0:t.filtersText)||""};n.getFilters=function e(){return r.getFilters(this.content)};return i}(i),z=J(F.prototype,"id",[a],{configurable:true,enumerable:true,writable:true,initializer:null}),C=J(F.prototype,"metaPath",[l],{configurable:true,enumerable:true,writable:true,initializer:null}),P=J(F.prototype,"liveMode",[o],{configurable:true,enumerable:true,writable:true,initializer:null}),O=J(F.prototype,"visible",[u],{configurable:true,enumerable:true,writable:true,initializer:null}),S=J(F.prototype,"showMessages",[s],{configurable:true,enumerable:true,writable:true,initializer:null}),E=J(F.prototype,"showClearButton",[c],{configurable:true,enumerable:true,writable:true,initializer:null}),j=J(F.prototype,"filterFields",[p],{configurable:true,enumerable:true,writable:true,initializer:null}),V=J(F.prototype,"search",[f],{configurable:true,enumerable:true,writable:true,initializer:null}),_=J(F.prototype,"internalSearch",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),x=J(F.prototype,"filterChanged",[d],{configurable:true,enumerable:true,writable:true,initializer:null}),A=J(F.prototype,"afterClear",[h],{configurable:true,enumerable:true,writable:true,initializer:null}),I=J(F.prototype,"internalFilterChanged",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),M=J(F.prototype,"stateChange",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),J(F.prototype,"handleSearch",[v],Object.getOwnPropertyDescriptor(F.prototype,"handleSearch"),F.prototype),J(F.prototype,"handleFilterChanged",[m],Object.getOwnPropertyDescriptor(F.prototype,"handleFilterChanged"),F.prototype),F))||w);return L},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filterBar/FilterBarBuildingBlock-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/base/Log", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/CommonUtils", "sap/fe/core/converters/controls/Common/DataVisualization", "sap/fe/core/converters/controls/ListReport/FilterBar", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/ModelHelper", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/TemplateModel", "sap/fe/core/templating/FilterHelper", "sap/fe/macros/CommonHelper", "../ResourceModel"], function (BuildingBlock, Log, BuildingBlockRuntime, CommonUtils, DataVisualization, FilterBar, MetaModelConverter, ModelHelper, StableIdHelper, TemplateModel, FilterHelper, CommonHelper, ResourceModel) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30;
  var _exports = {};
  var getFilterConditions = FilterHelper.getFilterConditions;
  var generate = StableIdHelper.generate;
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  var getSelectionFields = FilterBar.getSelectionFields;
  var getSelectionVariant = DataVisualization.getSelectionVariant;
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockEvent = BuildingBlock.blockEvent;
  var blockAttribute = BuildingBlock.blockAttribute;
  var blockAggregation = BuildingBlock.blockAggregation;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  const setCustomFilterFieldProperties = function (childFilterField, aggregationObject) {
    aggregationObject.slotName = aggregationObject.key;
    aggregationObject.key = aggregationObject.key.replace("InlineXML_", "");
    aggregationObject.label = childFilterField.getAttribute("label");
    aggregationObject.required = childFilterField.getAttribute("required") === "true";
    return aggregationObject;
  };
  let FilterBarBuildingBlock = (_dec = defineBuildingBlock({
    name: "FilterBar",
    namespace: "sap.fe.macros.internal",
    publicNamespace: "sap.fe.macros"
  }), _dec2 = blockAttribute({
    type: "string",
    isPublic: true
  }), _dec3 = blockAttribute({
    type: "boolean",
    isPublic: true
  }), _dec4 = blockAttribute({
    type: "sap.ui.model.Context"
  }), _dec5 = blockAttribute({
    type: "string"
  }), _dec6 = blockAttribute({
    type: "sap.ui.model.Context",
    isPublic: true
  }), _dec7 = blockAttribute({
    type: "sap.ui.model.Context",
    isPublic: true
  }), _dec8 = blockAttribute({
    type: "boolean",
    defaultValue: false,
    isPublic: true
  }), _dec9 = blockAttribute({
    type: "string"
  }), _dec10 = blockAttribute({
    type: "boolean"
  }), _dec11 = blockAttribute({
    type: "boolean",
    defaultValue: false
  }), _dec12 = blockAttribute({
    type: "boolean",
    defaultValue: true
  }), _dec13 = blockAttribute({
    type: "sap.ui.mdc.FilterBarP13nMode[]",
    defaultValue: "Item,Value"
  }), _dec14 = blockAttribute({
    type: "string"
  }), _dec15 = blockAttribute({
    type: "boolean",
    defaultValue: true
  }), _dec16 = blockAttribute({
    type: "boolean",
    defaultValue: false,
    isPublic: true
  }), _dec17 = blockAttribute({
    type: "string",
    required: false
  }), _dec18 = blockAttribute({
    type: "boolean",
    defaultValue: false
  }), _dec19 = blockAttribute({
    type: "boolean",
    defaultValue: false
  }), _dec20 = blockAttribute({
    type: "boolean",
    defaultValue: false
  }), _dec21 = blockAttribute({
    type: "string"
  }), _dec22 = blockAttribute({
    type: "string",
    defaultValue: "compact"
  }), _dec23 = blockAttribute({
    type: "boolean",
    defaultValue: false,
    isPublic: true
  }), _dec24 = blockAttribute({
    type: "boolean",
    defaultValue: false
  }), _dec25 = blockEvent(), _dec26 = blockEvent(), _dec27 = blockEvent(), _dec28 = blockEvent(), _dec29 = blockEvent(), _dec30 = blockEvent(), _dec31 = blockAggregation({
    type: "sap.fe.macros.FilterField",
    isPublic: true,
    hasVirtualNode: true,
    processAggregations: setCustomFilterFieldProperties
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(FilterBarBuildingBlock, _BuildingBlockBase);
    /**
     * ID of the FilterBar
     */

    /**
     * selectionFields to be displayed
     */

    /**
     * Displays possible errors during the search in a message box
     */

    /**
     * ID of the assigned variant management
     */

    /**
     * Don't show the basic search field
     */

    /**
     * Enables the fallback to show all fields of the EntityType as filter fields if com.sap.vocabularies.UI.v1.SelectionFields are not present
     */

    /**
     * Handles visibility of the 'Adapt Filters' button on the FilterBar
     */

    /**
     * Specifies the personalization options for the filter bar.
     */

    /**
     * Specifies the Sematic Date Range option for the filter bar.
     */

    /**
     * If set the search will be automatically triggered, when a filter value was changed.
     */

    /**
     * Filter conditions to be applied to the filter bar
     */

    /**
     * If set to <code>true</code>, all search requests are ignored. Once it has been set to <code>false</code>,
     * a search is triggered immediately if one or more search requests have been triggered in the meantime
     * but were ignored based on the setting.
     */

    /**
     * Id of control that will allow for switching between normal and visual filter
     */

    /**
     * Handles the visibility of the 'Clear' button on the FilterBar.
     */

    /**
     * Event handler to react to the search event of the FilterBar
     */

    /**
     * Event handler to react to the filterChange event of the FilterBar
     */

    /**
     * Event handler to react to the stateChange event of the FilterBar.
     */

    /**
     * Event handler to react to the filterChanged event of the FilterBar. Exposes parameters from the MDC filter bar
     */

    /**
     * Event handler to react to the search event of the FilterBar. Exposes parameteres from the MDC filter bar
     */

    /**
     * Event handler to react to the afterClear event of the FilterBar
     */

    function FilterBarBuildingBlock(oProps, configuration, mSettings) {
      var _targetDataModelObjec, _targetDataModelObjec2, _targetDataModelObjec3, _targetDataModelObjec4;
      var _this;
      _this = _BuildingBlockBase.call(this, oProps, configuration, mSettings) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visible", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "selectionFields", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "filterBarDelegate", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "showMessages", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "variantBackreference", _descriptor8, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "hideBasicSearch", _descriptor9, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "enableFallback", _descriptor10, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "showAdaptFiltersButton", _descriptor11, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "p13nMode", _descriptor12, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "propertyInfo", _descriptor13, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "useSemanticDateRange", _descriptor14, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "liveMode", _descriptor15, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "filterConditions", _descriptor16, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "suspendSelection", _descriptor17, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "showDraftEditState", _descriptor18, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "isDraftCollaborative", _descriptor19, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "toggleControlId", _descriptor20, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "initialLayout", _descriptor21, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "showClearButton", _descriptor22, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "_applyIdToContent", _descriptor23, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "search", _descriptor24, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "filterChanged", _descriptor25, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "stateChange", _descriptor26, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "internalFilterChanged", _descriptor27, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "internalSearch", _descriptor28, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "afterClear", _descriptor29, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "filterFields", _descriptor30, _assertThisInitialized(_this));
      _this.checkIfCollaborationDraftSupported = oMetaModel => {
        if (ModelHelper.isCollaborationDraftSupported(oMetaModel)) {
          _this.isDraftCollaborative = true;
        }
      };
      _this.getEntityTypePath = metaPathParts => {
        return metaPathParts[0].endsWith("/") ? metaPathParts[0] : metaPathParts[0] + "/";
      };
      _this.getSearch = () => {
        if (!_this.hideBasicSearch) {
          return xml`<control:basicSearchField>
			<mdc:FilterField
				id="${generate([_this.id, "BasicSearchField"])}"
				placeholder="{sap.fe.i18n>M_FILTERBAR_SEARCH}"
				conditions="{$filters>/conditions/$search}"
				dataType="sap.ui.model.odata.type.String"
				maxConditions="1"
			/>
		</control:basicSearchField>`;
        }
        return xml``;
      };
      _this.processSelectionFields = () => {
        var _this$_filterFields, _this$selectionFields, _this$_filterFields2, _this$_valueHelps;
        let draftEditState = xml``;
        if (_this.showDraftEditState) {
          draftEditState = `<core:Fragment fragmentName="sap.fe.macros.filter.DraftEditState" type="XML" />`;
        }
        _this._valueHelps = [];
        _this._filterFields = [];
        (_this$_filterFields = _this._filterFields) === null || _this$_filterFields === void 0 ? void 0 : _this$_filterFields.push(draftEditState);
        if (!Array.isArray(_this.selectionFields)) {
          _this.selectionFields = _this.selectionFields.getObject();
        }
        (_this$selectionFields = _this.selectionFields) === null || _this$selectionFields === void 0 ? void 0 : _this$selectionFields.forEach((selectionField, selectionFieldIdx) => {
          if (selectionField.availability === "Default") {
            _this.setFilterFieldsAndValueHelps(selectionField, selectionFieldIdx);
          }
        });
        _this._filterFields = ((_this$_filterFields2 = _this._filterFields) === null || _this$_filterFields2 === void 0 ? void 0 : _this$_filterFields2.length) > 0 ? _this._filterFields : "";
        _this._valueHelps = ((_this$_valueHelps = _this._valueHelps) === null || _this$_valueHelps === void 0 ? void 0 : _this$_valueHelps.length) > 0 ? _this._valueHelps : "";
      };
      _this.setFilterFieldsAndValueHelps = (selectionField, selectionFieldIdx) => {
        if (selectionField.template === undefined && selectionField.type !== "Slot") {
          _this.pushFilterFieldsAndValueHelps(selectionField);
        } else if (Array.isArray(_this._filterFields)) {
          var _this$_filterFields3;
          (_this$_filterFields3 = _this._filterFields) === null || _this$_filterFields3 === void 0 ? void 0 : _this$_filterFields3.push(xml`<template:with path="selectionFields>${selectionFieldIdx}" var="item">
					<core:Fragment fragmentName="sap.fe.macros.filter.CustomFilter" type="XML" />
				</template:with>`);
        }
      };
      _this.pushFilterFieldsAndValueHelps = selectionField => {
        if (Array.isArray(_this._filterFields)) {
          var _this$_filterFields4;
          (_this$_filterFields4 = _this._filterFields) === null || _this$_filterFields4 === void 0 ? void 0 : _this$_filterFields4.push(xml`<internalMacro:FilterField
			idPrefix="${generate([_this.id, "FilterField", CommonHelper.getNavigationPath(selectionField.annotationPath)])}"
			vhIdPrefix="${generate([_this.id, "FilterFieldValueHelp"])}"
			property="${selectionField.annotationPath}"
			contextPath="${_this._getContextPathForFilterField(selectionField, _this._internalContextPath)}"
			useSemanticDateRange="${_this.useSemanticDateRange}"
			settings="${CommonHelper.stringifyCustomData(selectionField.settings)}"
			visualFilter="${selectionField.visualFilter}"
			/>`);
        }
        if (Array.isArray(_this._valueHelps)) {
          var _this$_valueHelps2;
          (_this$_valueHelps2 = _this._valueHelps) === null || _this$_valueHelps2 === void 0 ? void 0 : _this$_valueHelps2.push(xml`<macro:ValueHelp
			idPrefix="${generate([_this.id, "FilterFieldValueHelp"])}"
			conditionModel="$filters"
			property="${selectionField.annotationPath}"
			contextPath="${_this._getContextPathForFilterField(selectionField, _this._internalContextPath)}"
			filterFieldValueHelp="true"
			useSemanticDateRange="${_this.useSemanticDateRange}"
		/>`);
        }
      };
      const oContext = oProps.contextPath;
      const oMetaPathContext = oProps.metaPath;
      if (!oMetaPathContext) {
        Log.error("Context Path not available for FilterBar Macro.");
        return _assertThisInitialized(_this);
      }
      const sMetaPath = oMetaPathContext === null || oMetaPathContext === void 0 ? void 0 : oMetaPathContext.getPath();
      let entityTypePath = "";
      const _metaPathParts = (sMetaPath === null || sMetaPath === void 0 ? void 0 : sMetaPath.split("/@com.sap.vocabularies.UI.v1.SelectionFields")) || []; // [0]: entityTypePath, [1]: SF Qualifier.
      if (_metaPathParts.length > 0) {
        entityTypePath = _this.getEntityTypePath(_metaPathParts);
      }
      const sEntitySetPath = ModelHelper.getEntitySetPath(entityTypePath);
      const _oMetaModel = oContext === null || oContext === void 0 ? void 0 : oContext.getModel();
      _this._internalContextPath = _oMetaModel === null || _oMetaModel === void 0 ? void 0 : _oMetaModel.createBindingContext(entityTypePath);
      const sObjectPath = "@com.sap.vocabularies.UI.v1.SelectionFields";
      const annotationPath = "@com.sap.vocabularies.UI.v1.SelectionFields" + (_metaPathParts.length && _metaPathParts[1] || "");
      const oExtraParams = {};
      oExtraParams[sObjectPath] = {
        filterFields: oProps.filterFields
      };
      const oVisualizationObjectPath = getInvolvedDataModelObjects(_this._internalContextPath);
      const oConverterContext = _this.getConverterContext(oVisualizationObjectPath, undefined, mSettings, oExtraParams);
      if (!oProps.propertyInfo) {
        _this.propertyInfo = getSelectionFields(oConverterContext, [], annotationPath).sPropertyInfo;
      }

      //Filter Fields and values to the field are filled based on the selectionFields and this would be empty in case of macro outside the FE template
      if (!oProps.selectionFields) {
        const oSelectionFields = getSelectionFields(oConverterContext, [], annotationPath).selectionFields;
        _this.selectionFields = new TemplateModel(oSelectionFields, _oMetaModel).createBindingContext("/");
        const oEntityType = oConverterContext.getEntityType(),
          oSelectionVariant = getSelectionVariant(oEntityType, oConverterContext),
          oEntitySetContext = _oMetaModel.getContext(sEntitySetPath),
          oFilterConditions = getFilterConditions(oEntitySetContext, {
            selectionVariant: oSelectionVariant
          });
        _this.filterConditions = oFilterConditions;
      }
      _this._processPropertyInfos(_this.propertyInfo);
      const targetDataModelObject = getInvolvedDataModelObjects(oContext).targetObject;
      if ((_targetDataModelObjec = targetDataModelObject.annotations) !== null && _targetDataModelObjec !== void 0 && (_targetDataModelObjec2 = _targetDataModelObjec.Common) !== null && _targetDataModelObjec2 !== void 0 && _targetDataModelObjec2.DraftRoot || (_targetDataModelObjec3 = targetDataModelObject.annotations) !== null && _targetDataModelObjec3 !== void 0 && (_targetDataModelObjec4 = _targetDataModelObjec3.Common) !== null && _targetDataModelObjec4 !== void 0 && _targetDataModelObjec4.DraftNode) {
        _this.showDraftEditState = true;
        _this.checkIfCollaborationDraftSupported(_oMetaModel);
      }
      if (oProps._applyIdToContent) {
        _this._apiId = oProps.id + "::FilterBar";
        _this._contentId = oProps.id;
      } else {
        _this._apiId = oProps.id;
        _this._contentId = _this.getContentId(oProps.id + "");
      }
      if (oProps.hideBasicSearch !== true) {
        const oSearchRestrictionAnnotation = CommonUtils.getSearchRestrictions(sEntitySetPath, _oMetaModel);
        _this.hideBasicSearch = Boolean(oSearchRestrictionAnnotation && !oSearchRestrictionAnnotation.Searchable);
      }
      _this.processSelectionFields();
      return _this;
    }
    _exports = FilterBarBuildingBlock;
    var _proto = FilterBarBuildingBlock.prototype;
    _proto.getContentId = function getContentId(sMacroId) {
      return `${sMacroId}-content`;
    };
    _proto._processPropertyInfos = function _processPropertyInfos(propertyInfo) {
      const aParameterFields = [];
      if (propertyInfo) {
        const sFetchedProperties = propertyInfo.replace(/\\{/g, "{").replace(/\\}/g, "}");
        const aFetchedProperties = JSON.parse(sFetchedProperties);
        aFetchedProperties.forEach(function (propInfo) {
          if (propInfo.isParameter) {
            aParameterFields.push(propInfo.name);
          }
          if (propInfo.path === "$editState") {
            propInfo.label = ResourceModel.getText("FILTERBAR_EDITING_STATUS");
          }
        });
        this.propertyInfo = JSON.stringify(aFetchedProperties).replace(/\{/g, "\\{").replace(/\}/g, "\\}");
      }
      this._parameters = JSON.stringify(aParameterFields);
    };
    _proto._getContextPathForFilterField = function _getContextPathForFilterField(selectionField, filterBarContextPath) {
      let contextPath = filterBarContextPath;
      if (selectionField.isParameter) {
        // Example:
        // FilterBarContextPath: /Customer/Set
        // ParameterPropertyPath: /Customer/P_CC
        // ContextPathForFilterField: /Customer
        const annoPath = selectionField.annotationPath;
        contextPath = annoPath.substring(0, annoPath.lastIndexOf("/") + 1);
      }
      return contextPath;
    };
    _proto.getTemplate = function getTemplate() {
      var _this$_internalContex;
      const internalContextPath = (_this$_internalContex = this._internalContextPath) === null || _this$_internalContex === void 0 ? void 0 : _this$_internalContex.getPath();
      let filterDelegate = "";
      if (this.filterBarDelegate) {
        filterDelegate = this.filterBarDelegate;
      } else {
        filterDelegate = "{name:'sap/fe/macros/filterBar/FilterBarDelegate', payload: {entityTypePath: '" + internalContextPath + "'}}";
      }
      return xml`<macroFilterBar:FilterBarAPI
        xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
        xmlns:core="sap.ui.core"
        xmlns:mdc="sap.ui.mdc"
        xmlns:control="sap.fe.core.controls"
        xmlns:macroFilterBar="sap.fe.macros.filterBar"
        xmlns:macro="sap.fe.macros"
        xmlns:internalMacro="sap.fe.macros.internal"
        xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
		id="${this._apiId}"
		search="${this.search}"
		filterChanged="${this.filterChanged}"
		afterClear="${this.afterClear}"
		internalSearch="${this.internalSearch}"
		internalFilterChanged="${this.internalFilterChanged}"
		stateChange="${this.stateChange}"
	>
		<control:FilterBar
			core:require="{API: 'sap/fe/macros/filterBar/FilterBarAPI'}"
			id="${this._contentId}"
			liveMode="${this.liveMode}"
			delegate="${filterDelegate}"
			variantBackreference="${this.variantBackreference}"
			showAdaptFiltersButton="${this.showAdaptFiltersButton}"
			showClearButton="${this.showClearButton}"
			p13nMode="${this.p13nMode}"
			search="API.handleSearch($event)"
			filtersChanged="API.handleFilterChanged($event)"
			filterConditions="${this.filterConditions}"
			suspendSelection="${this.suspendSelection}"
			showMessages="${this.showMessages}"
			toggleControl="${this.toggleControlId}"
			initialLayout="${this.initialLayout}"
			propertyInfo="${this.propertyInfo}"
			customData:localId="${this.id}"
			visible="${this.visible}"
			customData:hideBasicSearch="${this.hideBasicSearch}"
			customData:showDraftEditState="${this.showDraftEditState}"
			customData:useSemanticDateRange="${this.useSemanticDateRange}"
			customData:entityType="${internalContextPath}"
			customData:parameters="${this._parameters}"
		>
			<control:dependents>
				${this._valueHelps}
			</control:dependents>
			${this.getSearch()}
			<control:filterItems>
				${this._filterFields}
			</control:filterItems>
		</control:FilterBar>
	</macroFilterBar:FilterBarAPI>`;
    };
    return FilterBarBuildingBlock;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "selectionFields", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "filterBarDelegate", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "showMessages", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "variantBackreference", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "hideBasicSearch", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "enableFallback", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "showAdaptFiltersButton", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "p13nMode", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "propertyInfo", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "useSemanticDateRange", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "liveMode", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "filterConditions", [_dec17], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "suspendSelection", [_dec18], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "showDraftEditState", [_dec19], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "isDraftCollaborative", [_dec20], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "toggleControlId", [_dec21], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "initialLayout", [_dec22], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "showClearButton", [_dec23], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "_applyIdToContent", [_dec24], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "search", [_dec25], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "filterChanged", [_dec26], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "stateChange", [_dec27], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "internalFilterChanged", [_dec28], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "internalSearch", [_dec29], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "afterClear", [_dec30], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "filterFields", [_dec31], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = FilterBarBuildingBlock;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filterBar/FilterBarBuildingBlock", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/base/Log","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/CommonUtils","sap/fe/core/converters/controls/Common/DataVisualization","sap/fe/core/converters/controls/ListReport/FilterBar","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/ModelHelper","sap/fe/core/helpers/StableIdHelper","sap/fe/core/TemplateModel","sap/fe/core/templating/FilterHelper","sap/fe/macros/CommonHelper","../ResourceModel"],function(e,t,i,r,a,l,n,o,s,u,c,p,d){"use strict";var f,b,h,g,m,y,v,F,C,S,w,B,P,$,I,_,D,z,x,A,M,V,k,E,H,R,T,O,L,N,j,U,q,J,X,G,W,K,Q,Y,Z,ee,te,ie,re,ae,le,ne,oe,se,ue,ce,pe,de,fe,be,he,ge,me,ye,ve,Fe,Ce;var Se={};var we=c.getFilterConditions;var Be=s.generate;var Pe=n.getInvolvedDataModelObjects;var $e=l.getSelectionFields;var Ie=a.getSelectionVariant;var _e=i.xml;var De=e.defineBuildingBlock;var ze=e.BuildingBlockBase;var xe=e.blockEvent;var Ae=e.blockAttribute;var Me=e.blockAggregation;function Ve(e,t,i,r){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(r):void 0})}function ke(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function Ee(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;He(e,t)}function He(e,t){He=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return He(e,t)}function Re(e,t,i,r,a){var l={};Object.keys(r).forEach(function(e){l[e]=r[e]});l.enumerable=!!l.enumerable;l.configurable=!!l.configurable;if("value"in l||l.initializer){l.writable=true}l=i.slice().reverse().reduce(function(i,r){return r(e,t,i)||i},l);if(a&&l.initializer!==void 0){l.value=l.initializer?l.initializer.call(a):void 0;l.initializer=undefined}if(l.initializer===void 0){Object.defineProperty(e,t,l);l=null}return l}function Te(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}const Oe=function(e,t){t.slotName=t.key;t.key=t.key.replace("InlineXML_","");t.label=e.getAttribute("label");t.required=e.getAttribute("required")==="true";return t};let Le=(f=De({name:"FilterBar",namespace:"sap.fe.macros.internal",publicNamespace:"sap.fe.macros"}),b=Ae({type:"string",isPublic:true}),h=Ae({type:"boolean",isPublic:true}),g=Ae({type:"sap.ui.model.Context"}),m=Ae({type:"string"}),y=Ae({type:"sap.ui.model.Context",isPublic:true}),v=Ae({type:"sap.ui.model.Context",isPublic:true}),F=Ae({type:"boolean",defaultValue:false,isPublic:true}),C=Ae({type:"string"}),S=Ae({type:"boolean"}),w=Ae({type:"boolean",defaultValue:false}),B=Ae({type:"boolean",defaultValue:true}),P=Ae({type:"sap.ui.mdc.FilterBarP13nMode[]",defaultValue:"Item,Value"}),$=Ae({type:"string"}),I=Ae({type:"boolean",defaultValue:true}),_=Ae({type:"boolean",defaultValue:false,isPublic:true}),D=Ae({type:"string",required:false}),z=Ae({type:"boolean",defaultValue:false}),x=Ae({type:"boolean",defaultValue:false}),A=Ae({type:"boolean",defaultValue:false}),M=Ae({type:"string"}),V=Ae({type:"string",defaultValue:"compact"}),k=Ae({type:"boolean",defaultValue:false,isPublic:true}),E=Ae({type:"boolean",defaultValue:false}),H=xe(),R=xe(),T=xe(),O=xe(),L=xe(),N=xe(),j=Me({type:"sap.fe.macros.FilterField",isPublic:true,hasVirtualNode:true,processAggregations:Oe}),f(U=(q=function(e){Ee(i,e);function i(i,a,l){var n,s,c,d;var f;f=e.call(this,i,a,l)||this;Ve(f,"id",J,ke(f));Ve(f,"visible",X,ke(f));Ve(f,"selectionFields",G,ke(f));Ve(f,"filterBarDelegate",W,ke(f));Ve(f,"metaPath",K,ke(f));Ve(f,"contextPath",Q,ke(f));Ve(f,"showMessages",Y,ke(f));Ve(f,"variantBackreference",Z,ke(f));Ve(f,"hideBasicSearch",ee,ke(f));Ve(f,"enableFallback",te,ke(f));Ve(f,"showAdaptFiltersButton",ie,ke(f));Ve(f,"p13nMode",re,ke(f));Ve(f,"propertyInfo",ae,ke(f));Ve(f,"useSemanticDateRange",le,ke(f));Ve(f,"liveMode",ne,ke(f));Ve(f,"filterConditions",oe,ke(f));Ve(f,"suspendSelection",se,ke(f));Ve(f,"showDraftEditState",ue,ke(f));Ve(f,"isDraftCollaborative",ce,ke(f));Ve(f,"toggleControlId",pe,ke(f));Ve(f,"initialLayout",de,ke(f));Ve(f,"showClearButton",fe,ke(f));Ve(f,"_applyIdToContent",be,ke(f));Ve(f,"search",he,ke(f));Ve(f,"filterChanged",ge,ke(f));Ve(f,"stateChange",me,ke(f));Ve(f,"internalFilterChanged",ye,ke(f));Ve(f,"internalSearch",ve,ke(f));Ve(f,"afterClear",Fe,ke(f));Ve(f,"filterFields",Ce,ke(f));f.checkIfCollaborationDraftSupported=e=>{if(o.isCollaborationDraftSupported(e)){f.isDraftCollaborative=true}};f.getEntityTypePath=e=>e[0].endsWith("/")?e[0]:e[0]+"/";f.getSearch=()=>{if(!f.hideBasicSearch){return _e`<control:basicSearchField>
			<mdc:FilterField
				id="${Be([f.id,"BasicSearchField"])}"
				placeholder="{sap.fe.i18n>M_FILTERBAR_SEARCH}"
				conditions="{$filters>/conditions/$search}"
				dataType="sap.ui.model.odata.type.String"
				maxConditions="1"
			/>
		</control:basicSearchField>`}return _e``};f.processSelectionFields=()=>{var e,t,i,r;let a=_e``;if(f.showDraftEditState){a=`<core:Fragment fragmentName="sap.fe.macros.filter.DraftEditState" type="XML" />`}f._valueHelps=[];f._filterFields=[];(e=f._filterFields)===null||e===void 0?void 0:e.push(a);if(!Array.isArray(f.selectionFields)){f.selectionFields=f.selectionFields.getObject()}(t=f.selectionFields)===null||t===void 0?void 0:t.forEach((e,t)=>{if(e.availability==="Default"){f.setFilterFieldsAndValueHelps(e,t)}});f._filterFields=((i=f._filterFields)===null||i===void 0?void 0:i.length)>0?f._filterFields:"";f._valueHelps=((r=f._valueHelps)===null||r===void 0?void 0:r.length)>0?f._valueHelps:""};f.setFilterFieldsAndValueHelps=(e,t)=>{if(e.template===undefined&&e.type!=="Slot"){f.pushFilterFieldsAndValueHelps(e)}else if(Array.isArray(f._filterFields)){var i;(i=f._filterFields)===null||i===void 0?void 0:i.push(_e`<template:with path="selectionFields>${t}" var="item">
					<core:Fragment fragmentName="sap.fe.macros.filter.CustomFilter" type="XML" />
				</template:with>`)}};f.pushFilterFieldsAndValueHelps=e=>{if(Array.isArray(f._filterFields)){var t;(t=f._filterFields)===null||t===void 0?void 0:t.push(_e`<internalMacro:FilterField
			idPrefix="${Be([f.id,"FilterField",p.getNavigationPath(e.annotationPath)])}"
			vhIdPrefix="${Be([f.id,"FilterFieldValueHelp"])}"
			property="${e.annotationPath}"
			contextPath="${f._getContextPathForFilterField(e,f._internalContextPath)}"
			useSemanticDateRange="${f.useSemanticDateRange}"
			settings="${p.stringifyCustomData(e.settings)}"
			visualFilter="${e.visualFilter}"
			/>`)}if(Array.isArray(f._valueHelps)){var i;(i=f._valueHelps)===null||i===void 0?void 0:i.push(_e`<macro:ValueHelp
			idPrefix="${Be([f.id,"FilterFieldValueHelp"])}"
			conditionModel="$filters"
			property="${e.annotationPath}"
			contextPath="${f._getContextPathForFilterField(e,f._internalContextPath)}"
			filterFieldValueHelp="true"
			useSemanticDateRange="${f.useSemanticDateRange}"
		/>`)}};const b=i.contextPath;const h=i.metaPath;if(!h){t.error("Context Path not available for FilterBar Macro.");return ke(f)}const g=h===null||h===void 0?void 0:h.getPath();let m="";const y=(g===null||g===void 0?void 0:g.split("/@com.sap.vocabularies.UI.v1.SelectionFields"))||[];if(y.length>0){m=f.getEntityTypePath(y)}const v=o.getEntitySetPath(m);const F=b===null||b===void 0?void 0:b.getModel();f._internalContextPath=F===null||F===void 0?void 0:F.createBindingContext(m);const C="@com.sap.vocabularies.UI.v1.SelectionFields";const S="@com.sap.vocabularies.UI.v1.SelectionFields"+(y.length&&y[1]||"");const w={};w[C]={filterFields:i.filterFields};const B=Pe(f._internalContextPath);const P=f.getConverterContext(B,undefined,l,w);if(!i.propertyInfo){f.propertyInfo=$e(P,[],S).sPropertyInfo}if(!i.selectionFields){const e=$e(P,[],S).selectionFields;f.selectionFields=new u(e,F).createBindingContext("/");const t=P.getEntityType(),i=Ie(t,P),r=F.getContext(v),a=we(r,{selectionVariant:i});f.filterConditions=a}f._processPropertyInfos(f.propertyInfo);const $=Pe(b).targetObject;if((n=$.annotations)!==null&&n!==void 0&&(s=n.Common)!==null&&s!==void 0&&s.DraftRoot||(c=$.annotations)!==null&&c!==void 0&&(d=c.Common)!==null&&d!==void 0&&d.DraftNode){f.showDraftEditState=true;f.checkIfCollaborationDraftSupported(F)}if(i._applyIdToContent){f._apiId=i.id+"::FilterBar";f._contentId=i.id}else{f._apiId=i.id;f._contentId=f.getContentId(i.id+"")}if(i.hideBasicSearch!==true){const e=r.getSearchRestrictions(v,F);f.hideBasicSearch=Boolean(e&&!e.Searchable)}f.processSelectionFields();return f}Se=i;var a=i.prototype;a.getContentId=function e(t){return`${t}-content`};a._processPropertyInfos=function e(t){const i=[];if(t){const e=t.replace(/\\{/g,"{").replace(/\\}/g,"}");const r=JSON.parse(e);r.forEach(function(e){if(e.isParameter){i.push(e.name)}if(e.path==="$editState"){e.label=d.getText("FILTERBAR_EDITING_STATUS")}});this.propertyInfo=JSON.stringify(r).replace(/\{/g,"\\{").replace(/\}/g,"\\}")}this._parameters=JSON.stringify(i)};a._getContextPathForFilterField=function e(t,i){let r=i;if(t.isParameter){const e=t.annotationPath;r=e.substring(0,e.lastIndexOf("/")+1)}return r};a.getTemplate=function e(){var t;const i=(t=this._internalContextPath)===null||t===void 0?void 0:t.getPath();let r="";if(this.filterBarDelegate){r=this.filterBarDelegate}else{r="{name:'sap/fe/macros/filterBar/FilterBarDelegate', payload: {entityTypePath: '"+i+"'}}"}return _e`<macroFilterBar:FilterBarAPI
        xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
        xmlns:core="sap.ui.core"
        xmlns:mdc="sap.ui.mdc"
        xmlns:control="sap.fe.core.controls"
        xmlns:macroFilterBar="sap.fe.macros.filterBar"
        xmlns:macro="sap.fe.macros"
        xmlns:internalMacro="sap.fe.macros.internal"
        xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
		id="${this._apiId}"
		search="${this.search}"
		filterChanged="${this.filterChanged}"
		afterClear="${this.afterClear}"
		internalSearch="${this.internalSearch}"
		internalFilterChanged="${this.internalFilterChanged}"
		stateChange="${this.stateChange}"
	>
		<control:FilterBar
			core:require="{API: 'sap/fe/macros/filterBar/FilterBarAPI'}"
			id="${this._contentId}"
			liveMode="${this.liveMode}"
			delegate="${r}"
			variantBackreference="${this.variantBackreference}"
			showAdaptFiltersButton="${this.showAdaptFiltersButton}"
			showClearButton="${this.showClearButton}"
			p13nMode="${this.p13nMode}"
			search="API.handleSearch($event)"
			filtersChanged="API.handleFilterChanged($event)"
			filterConditions="${this.filterConditions}"
			suspendSelection="${this.suspendSelection}"
			showMessages="${this.showMessages}"
			toggleControl="${this.toggleControlId}"
			initialLayout="${this.initialLayout}"
			propertyInfo="${this.propertyInfo}"
			customData:localId="${this.id}"
			visible="${this.visible}"
			customData:hideBasicSearch="${this.hideBasicSearch}"
			customData:showDraftEditState="${this.showDraftEditState}"
			customData:useSemanticDateRange="${this.useSemanticDateRange}"
			customData:entityType="${i}"
			customData:parameters="${this._parameters}"
		>
			<control:dependents>
				${this._valueHelps}
			</control:dependents>
			${this.getSearch()}
			<control:filterItems>
				${this._filterFields}
			</control:filterItems>
		</control:FilterBar>
	</macroFilterBar:FilterBarAPI>`};return i}(ze),J=Re(q.prototype,"id",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),X=Re(q.prototype,"visible",[h],{configurable:true,enumerable:true,writable:true,initializer:null}),G=Re(q.prototype,"selectionFields",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),W=Re(q.prototype,"filterBarDelegate",[m],{configurable:true,enumerable:true,writable:true,initializer:null}),K=Re(q.prototype,"metaPath",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),Q=Re(q.prototype,"contextPath",[v],{configurable:true,enumerable:true,writable:true,initializer:null}),Y=Re(q.prototype,"showMessages",[F],{configurable:true,enumerable:true,writable:true,initializer:null}),Z=Re(q.prototype,"variantBackreference",[C],{configurable:true,enumerable:true,writable:true,initializer:null}),ee=Re(q.prototype,"hideBasicSearch",[S],{configurable:true,enumerable:true,writable:true,initializer:null}),te=Re(q.prototype,"enableFallback",[w],{configurable:true,enumerable:true,writable:true,initializer:null}),ie=Re(q.prototype,"showAdaptFiltersButton",[B],{configurable:true,enumerable:true,writable:true,initializer:null}),re=Re(q.prototype,"p13nMode",[P],{configurable:true,enumerable:true,writable:true,initializer:null}),ae=Re(q.prototype,"propertyInfo",[$],{configurable:true,enumerable:true,writable:true,initializer:null}),le=Re(q.prototype,"useSemanticDateRange",[I],{configurable:true,enumerable:true,writable:true,initializer:null}),ne=Re(q.prototype,"liveMode",[_],{configurable:true,enumerable:true,writable:true,initializer:null}),oe=Re(q.prototype,"filterConditions",[D],{configurable:true,enumerable:true,writable:true,initializer:null}),se=Re(q.prototype,"suspendSelection",[z],{configurable:true,enumerable:true,writable:true,initializer:null}),ue=Re(q.prototype,"showDraftEditState",[x],{configurable:true,enumerable:true,writable:true,initializer:null}),ce=Re(q.prototype,"isDraftCollaborative",[A],{configurable:true,enumerable:true,writable:true,initializer:null}),pe=Re(q.prototype,"toggleControlId",[M],{configurable:true,enumerable:true,writable:true,initializer:null}),de=Re(q.prototype,"initialLayout",[V],{configurable:true,enumerable:true,writable:true,initializer:null}),fe=Re(q.prototype,"showClearButton",[k],{configurable:true,enumerable:true,writable:true,initializer:null}),be=Re(q.prototype,"_applyIdToContent",[E],{configurable:true,enumerable:true,writable:true,initializer:null}),he=Re(q.prototype,"search",[H],{configurable:true,enumerable:true,writable:true,initializer:null}),ge=Re(q.prototype,"filterChanged",[R],{configurable:true,enumerable:true,writable:true,initializer:null}),me=Re(q.prototype,"stateChange",[T],{configurable:true,enumerable:true,writable:true,initializer:null}),ye=Re(q.prototype,"internalFilterChanged",[O],{configurable:true,enumerable:true,writable:true,initializer:null}),ve=Re(q.prototype,"internalSearch",[L],{configurable:true,enumerable:true,writable:true,initializer:null}),Fe=Re(q.prototype,"afterClear",[N],{configurable:true,enumerable:true,writable:true,initializer:null}),Ce=Re(q.prototype,"filterFields",[j],{configurable:true,enumerable:true,writable:true,initializer:null}),q))||U);Se=Le;return Se},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filterBar/FilterBarDelegate-dbg", ["sap/base/Log", "sap/base/util/merge", "sap/fe/core/CommonUtils", "sap/fe/core/converters/controls/ListReport/FilterBar", "sap/fe/core/helpers/ModelHelper", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/TemplateModel", "sap/fe/core/templating/PropertyFormatters", "sap/fe/core/type/EDM", "sap/fe/core/type/TypeUtil", "sap/fe/macros/CommonHelper", "sap/fe/macros/DelegateUtil", "sap/fe/macros/filter/FilterUtils", "sap/fe/macros/ResourceModel", "sap/ui/mdc/FilterBarDelegate", "sap/ui/model/json/JSONModel"], function (Log, mergeObjects, CommonUtils, FilterBar, ModelHelper, StableIdHelper, TemplateModel, PropertyFormatters, EDM, TypeUtil, CommonHelper, DelegateUtil, FilterUtils, ResourceModel, FilterBarDelegate, JSONModel) {
  "use strict";

  var getModelType = EDM.getModelType;
  var hasValueHelp = PropertyFormatters.hasValueHelp;
  var generate = StableIdHelper.generate;
  var processSelectionFields = FilterBar.processSelectionFields;
  const ODataFilterBarDelegate = Object.assign({}, FilterBarDelegate);
  const EDIT_STATE_PROPERTY_NAME = "$editState",
    SEARCH_PROPERTY_NAME = "$search",
    VALUE_HELP_TYPE = "FilterFieldValueHelp",
    FETCHED_PROPERTIES_DATA_KEY = "sap_fe_FilterBarDelegate_propertyInfoMap",
    CONDITION_PATH_TO_PROPERTY_PATH_REGEX = /[+*]/g;
  function _templateEditState(sIdPrefix, metaModel, oModifier) {
    const oThis = new JSONModel({
        id: sIdPrefix,
        isDraftCollaborative: ModelHelper.isCollaborationDraftSupported(metaModel)
      }),
      oPreprocessorSettings = {
        bindingContexts: {
          this: oThis.createBindingContext("/")
        },
        models: {
          "this.i18n": ResourceModel.getModel(),
          this: oThis
        }
      };
    return DelegateUtil.templateControlFragment("sap.fe.macros.filter.DraftEditState", oPreprocessorSettings, undefined, oModifier).finally(function () {
      oThis.destroy();
    });
  }
  ODataFilterBarDelegate._templateCustomFilter = async function (oFilterBar, sIdPrefix, oSelectionFieldInfo, oMetaModel, oModifier) {
    const sEntityTypePath = await DelegateUtil.getCustomData(oFilterBar, "entityType", oModifier);
    const oThis = new JSONModel({
        id: sIdPrefix
      }),
      oItemModel = new TemplateModel(oSelectionFieldInfo, oMetaModel),
      oPreprocessorSettings = {
        bindingContexts: {
          contextPath: oMetaModel.createBindingContext(sEntityTypePath),
          this: oThis.createBindingContext("/"),
          item: oItemModel.createBindingContext("/")
        },
        models: {
          contextPath: oMetaModel,
          this: oThis,
          item: oItemModel
        }
      },
      oView = CommonUtils.getTargetView(oFilterBar),
      oController = oView ? oView.getController() : undefined,
      oOptions = {
        controller: oController ? oController : undefined,
        view: oView
      };
    return DelegateUtil.templateControlFragment("sap.fe.macros.filter.CustomFilter", oPreprocessorSettings, oOptions, oModifier).finally(function () {
      oThis.destroy();
      oItemModel.destroy();
    });
  };
  function _getPropertyPath(sConditionPath) {
    return sConditionPath.replace(CONDITION_PATH_TO_PROPERTY_PATH_REGEX, "");
  }
  ODataFilterBarDelegate._findSelectionField = function (aSelectionFields, sFlexName) {
    return aSelectionFields.find(function (oSelectionField) {
      return (oSelectionField.conditionPath === sFlexName || oSelectionField.conditionPath.replaceAll(/\*/g, "") === sFlexName) && oSelectionField.availability !== "Hidden";
    });
  };
  function _generateIdPrefix(sFilterBarId, sControlType, sNavigationPrefix) {
    return sNavigationPrefix ? generate([sFilterBarId, sControlType, sNavigationPrefix]) : generate([sFilterBarId, sControlType]);
  }
  function _templateValueHelp(oSettings, oParameters) {
    const oThis = new JSONModel({
      idPrefix: oParameters.sVhIdPrefix,
      conditionModel: "$filters",
      navigationPrefix: oParameters.sNavigationPrefix ? `/${oParameters.sNavigationPrefix}` : "",
      filterFieldValueHelp: true,
      useSemanticDateRange: oParameters.bUseSemanticDateRange
    });
    const oPreprocessorSettings = mergeObjects({}, oSettings, {
      bindingContexts: {
        this: oThis.createBindingContext("/")
      },
      models: {
        this: oThis
      }
    });
    return Promise.resolve(DelegateUtil.templateControlFragment("sap.fe.macros.internal.valuehelp.ValueHelp", oPreprocessorSettings, {
      isXML: oSettings.isXML
    })).then(function (aVHElements) {
      if (aVHElements) {
        const sAggregationName = "dependents";
        //Some filter fields have the PersistenceProvider aggregation besides the FVH :
        if (aVHElements.length) {
          aVHElements.forEach(function (elt) {
            if (oParameters.oModifier) {
              oParameters.oModifier.insertAggregation(oParameters.oControl, sAggregationName, elt, 0);
            } else {
              oParameters.oControl.insertAggregation(sAggregationName, elt, 0, false);
            }
          });
        } else if (oParameters.oModifier) {
          oParameters.oModifier.insertAggregation(oParameters.oControl, sAggregationName, aVHElements, 0);
        } else {
          oParameters.oControl.insertAggregation(sAggregationName, aVHElements, 0, false);
        }
      }
    }).catch(function (oError) {
      Log.error("Error while evaluating DelegateUtil.isValueHelpRequired", oError);
    }).finally(function () {
      oThis.destroy();
    });
  }
  async function _addXMLCustomFilterField(oFilterBar, oModifier, sPropertyPath) {
    try {
      const aDependents = await Promise.resolve(oModifier.getAggregation(oFilterBar, "dependents"));
      let i;
      if (aDependents && aDependents.length > 1) {
        for (i = 0; i <= aDependents.length; i++) {
          const oFilterField = aDependents[i];
          if (oFilterField && oFilterField.isA("sap.ui.mdc.FilterField")) {
            const sDataProperty = oFilterField.getFieldPath(),
              sFilterFieldId = oFilterField.getId();
            if (sPropertyPath === sDataProperty && sFilterFieldId.indexOf("CustomFilterField")) {
              return Promise.resolve(oFilterField);
            }
          }
        }
      }
    } catch (oError) {
      Log.error("Filter Cannot be added", oError);
    }
  }
  function _templateFilterField(oSettings, oParameters, pageModel) {
    const oThis = new JSONModel({
      idPrefix: oParameters.sIdPrefix,
      vhIdPrefix: oParameters.sVhIdPrefix,
      propertyPath: oParameters.sPropertyName,
      navigationPrefix: oParameters.sNavigationPrefix ? `/${oParameters.sNavigationPrefix}` : "",
      useSemanticDateRange: oParameters.bUseSemanticDateRange,
      settings: oParameters.oSettings,
      visualFilter: oParameters.visualFilter
    });
    const oMetaModel = oParameters.oMetaModel;
    const oVisualFilter = new TemplateModel(oParameters.visualFilter, oMetaModel);
    const oPreprocessorSettings = mergeObjects({}, oSettings, {
      bindingContexts: {
        this: oThis.createBindingContext("/"),
        visualFilter: oVisualFilter.createBindingContext("/")
      },
      models: {
        this: oThis,
        visualFilter: oVisualFilter,
        metaModel: oMetaModel,
        converterContext: pageModel
      }
    });
    return DelegateUtil.templateControlFragment("sap.fe.macros.internal.filterField.FilterFieldTemplate", oPreprocessorSettings, {
      isXML: oSettings.isXML
    }).finally(function () {
      oThis.destroy();
    });
  }
  async function _addPropertyInfo(oParentControl, mPropertyBag, oMetaModel, sPropertyInfoName) {
    try {
      sPropertyInfoName = sPropertyInfoName.replace("*", "");
      const sPropertyInfoKey = generate([sPropertyInfoName]); //Making sure that navigation property names are generated properly e.g. _Item::Material
      if (mPropertyBag && !mPropertyBag.modifier) {
        throw "FilterBar Delegate method called without modifier.";
      }
      const delegate = await mPropertyBag.modifier.getProperty(oParentControl, "delegate");
      const aPropertyInfo = await mPropertyBag.modifier.getProperty(oParentControl, "propertyInfo");
      //We do not get propertyInfo in case of table filters
      if (aPropertyInfo) {
        const hasPropertyInfo = aPropertyInfo.some(function (prop) {
          return prop.key === sPropertyInfoKey || prop.name === sPropertyInfoKey;
        });
        if (!hasPropertyInfo) {
          const entityTypePath = delegate.payload.entityTypePath;
          const converterContext = FilterUtils.createConverterContext(oParentControl, entityTypePath, oMetaModel, mPropertyBag.appComponent);
          const entityType = converterContext.getEntityType();
          let filterField = FilterUtils.getFilterField(sPropertyInfoName, converterContext, entityType);
          filterField = FilterUtils.buildProperyInfo(filterField, converterContext);
          aPropertyInfo.push(filterField);
          mPropertyBag.modifier.setProperty(oParentControl, "propertyInfo", aPropertyInfo);
        }
      }
    } catch (errorMsg) {
      Log.warning(`${oParentControl.getId()} : ${errorMsg}`);
    }
  }

  /**
   * Method responsible for creating filter field in standalone mode / in the personalization settings of the filter bar.
   *
   * @param sPropertyInfoName Name of the property being added as the filter field
   * @param oParentControl Parent control instance to which the filter field is added
   * @param mPropertyBag Instance of the property bag from Flex API
   * @returns Once resolved, a filter field definition is returned
   */
  ODataFilterBarDelegate.addItem = async function (sPropertyInfoName, oParentControl, mPropertyBag) {
    if (!mPropertyBag) {
      // Invoked during runtime.
      return ODataFilterBarDelegate._addP13nItem(sPropertyInfoName, oParentControl);
    }
    const modifier = mPropertyBag.modifier;
    const model = mPropertyBag && mPropertyBag.appComponent && mPropertyBag.appComponent.getModel();
    const oMetaModel = model && model.getMetaModel();
    if (!oMetaModel) {
      return Promise.resolve(null);
    }
    const isXML = modifier && modifier.targets === "xmlTree";
    if (isXML) {
      await _addPropertyInfo(oParentControl, mPropertyBag, oMetaModel, sPropertyInfoName);
    }
    return ODataFilterBarDelegate._addFlexItem(sPropertyInfoName, oParentControl, oMetaModel, modifier, mPropertyBag.appComponent);
  };

  /**
   * Method responsible for removing filter field in standalone / personalization filter bar.
   *
   * @param oFilterFieldProperty Object of the filter field property being removed as filter field
   * @param oParentControl Parent control instance from which the filter field is removed
   * @param mPropertyBag Instance of property bag from Flex API
   * @returns The resolved promise
   */
  ODataFilterBarDelegate.removeItem = async function (oFilterFieldProperty, oParentControl, mPropertyBag) {
    let doRemoveItem = true;
    const modifier = mPropertyBag.modifier;
    const isXML = modifier && modifier.targets === "xmlTree";
    if (isXML && !oParentControl.data("sap_fe_FilterBarDelegate_propertyInfoMap")) {
      const model = mPropertyBag && mPropertyBag.appComponent && mPropertyBag.appComponent.getModel();
      const oMetaModel = model && model.getMetaModel();
      if (!oMetaModel) {
        return Promise.resolve(null);
      }
      if (typeof oFilterFieldProperty !== "string" && oFilterFieldProperty.getFieldPath()) {
        await _addPropertyInfo(oParentControl, mPropertyBag, oMetaModel, oFilterFieldProperty.getFieldPath());
      } else {
        await _addPropertyInfo(oParentControl, mPropertyBag, oMetaModel, oFilterFieldProperty);
      }
    }
    if (typeof oFilterFieldProperty !== "string" && oFilterFieldProperty.isA && oFilterFieldProperty.isA("sap.ui.mdc.FilterField")) {
      if (oFilterFieldProperty.data("isSlot") === "true" && mPropertyBag) {
        // Inserting into the modifier creates a change from flex also filter is been removed hence promise is resolved to false
        modifier.insertAggregation(oParentControl, "dependents", oFilterFieldProperty);
        doRemoveItem = false;
      }
    }
    return Promise.resolve(doRemoveItem);
  };

  /**
   * Method responsible for creating filter field condition in standalone / personalization filter bar.
   *
   * @param sPropertyInfoName Name of the property being added as filter field
   * @param oParentControl Parent control instance to which the filter field is added
   * @param mPropertyBag Instance of property bag from Flex API
   * @returns The resolved promise
   */
  ODataFilterBarDelegate.addCondition = async function (sPropertyInfoName, oParentControl, mPropertyBag) {
    const modifier = mPropertyBag.modifier;
    const isXML = modifier && modifier.targets === "xmlTree";
    if (isXML) {
      const model = mPropertyBag && mPropertyBag.appComponent && mPropertyBag.appComponent.getModel();
      const oMetaModel = model && model.getMetaModel();
      if (!oMetaModel) {
        return Promise.resolve(null);
      }
      await _addPropertyInfo(oParentControl, mPropertyBag, oMetaModel, sPropertyInfoName);
    }
    return Promise.resolve();
  };

  /**
   * Method responsible for removing filter field in standalone / personalization filter bar.
   *
   * @param sPropertyInfoName Name of the property being removed as filter field
   * @param oParentControl Parent control instance from which the filter field is removed
   * @param mPropertyBag Instance of property bag from Flex API
   * @returns The resolved promise
   */
  ODataFilterBarDelegate.removeCondition = async function (sPropertyInfoName, oParentControl, mPropertyBag) {
    if (!oParentControl.data("sap_fe_FilterBarDelegate_propertyInfoMap")) {
      const modifier = mPropertyBag.modifier;
      const isXML = modifier && modifier.targets === "xmlTree";
      if (isXML) {
        const model = mPropertyBag && mPropertyBag.appComponent && mPropertyBag.appComponent.getModel();
        const oMetaModel = model && model.getMetaModel();
        if (!oMetaModel) {
          return Promise.resolve(null);
        }
        await _addPropertyInfo(oParentControl, mPropertyBag, oMetaModel, sPropertyInfoName);
      }
    }
    return Promise.resolve();
  };
  /**
   * Clears all input values of visible filter fields in the filter bar.
   *
   * @param oFilterControl Instance of the FilterBar control
   * @returns The resolved promise
   */
  ODataFilterBarDelegate.clearFilters = async function (oFilterControl) {
    return FilterUtils.clearFilterValues(oFilterControl);
  };
  /**
   * Creates the filter field in the table adaptation of the FilterBar.
   *
   * @param sPropertyInfoName The property name of the entity type for which the filter field needs to be created
   * @param oParentControl Instance of the parent control
   * @returns Once resolved, a filter field definition is returned
   */
  ODataFilterBarDelegate._addP13nItem = function (sPropertyInfoName, oParentControl) {
    return DelegateUtil.fetchModel(oParentControl).then(function (oModel) {
      return ODataFilterBarDelegate._addFlexItem(sPropertyInfoName, oParentControl, oModel.getMetaModel(), undefined);
    }).catch(function (oError) {
      Log.error("Model could not be resolved", oError);
      return null;
    });
  };
  ODataFilterBarDelegate.fetchPropertiesForEntity = function (sEntityTypePath, oMetaModel, oFilterControl) {
    const oEntityType = oMetaModel.getObject(sEntityTypePath);
    const includeHidden = oFilterControl.isA("sap.ui.mdc.filterbar.vh.FilterBar") ? true : undefined;
    if (!oFilterControl || !oEntityType) {
      return [];
    }
    const oConverterContext = FilterUtils.createConverterContext(oFilterControl, sEntityTypePath);
    const sEntitySetPath = ModelHelper.getEntitySetPath(sEntityTypePath);
    const mFilterFields = FilterUtils.getConvertedFilterFields(oFilterControl, sEntityTypePath, includeHidden);
    let aFetchedProperties = [];
    mFilterFields.forEach(function (oFilterFieldInfo) {
      if (oFilterFieldInfo.annotationPath) {
        const sTargetPropertyPrefix = CommonHelper.getLocationForPropertyPath(oMetaModel, oFilterFieldInfo.annotationPath);
        const sProperty = oFilterFieldInfo.annotationPath.replace(`${sTargetPropertyPrefix}/`, "");
        if (CommonUtils.isPropertyFilterable(oMetaModel, sTargetPropertyPrefix, _getPropertyPath(sProperty), true)) {
          aFetchedProperties.push(oFilterFieldInfo);
        }
      } else {
        //Custom Filters
        aFetchedProperties.push(oFilterFieldInfo);
      }
    });
    const aParameterFields = [];
    const processedFields = processSelectionFields(aFetchedProperties, oConverterContext);
    const processedFieldsKeys = [];
    processedFields.forEach(function (oProps) {
      if (oProps.key) {
        processedFieldsKeys.push(oProps.key);
      }
    });
    aFetchedProperties = aFetchedProperties.filter(function (oProp) {
      return processedFieldsKeys.includes(oProp.key);
    });
    const oFR = CommonUtils.getFilterRestrictionsByPath(sEntitySetPath, oMetaModel),
      mAllowedExpressions = oFR.FilterAllowedExpressions;
    Object.keys(processedFields).forEach(function (sFilterFieldKey) {
      let oProp = processedFields[sFilterFieldKey];
      const oSelField = aFetchedProperties[sFilterFieldKey];
      if (!oSelField || !oSelField.conditionPath) {
        return;
      }
      const sPropertyPath = _getPropertyPath(oSelField.conditionPath);
      //fetchBasic
      oProp = Object.assign(oProp, {
        group: oSelField.group,
        groupLabel: oSelField.groupLabel,
        path: oSelField.conditionPath,
        tooltip: null,
        removeFromAppState: false,
        hasValueHelp: false
      });

      //fetchPropInfo
      if (oSelField.annotationPath) {
        const sAnnotationPath = oSelField.annotationPath;
        const oProperty = oMetaModel.getObject(sAnnotationPath),
          oPropertyAnnotations = oMetaModel.getObject(`${sAnnotationPath}@`),
          oPropertyContext = oMetaModel.createBindingContext(sAnnotationPath);
        const bRemoveFromAppState = oPropertyAnnotations["@com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive"] || oPropertyAnnotations["@com.sap.vocabularies.UI.v1.ExcludeFromNavigationContext"] || oPropertyAnnotations["@com.sap.vocabularies.Analytics.v1.Measure"];
        const sTargetPropertyPrefix = CommonHelper.getLocationForPropertyPath(oMetaModel, oSelField.annotationPath);
        const sProperty = sAnnotationPath.replace(`${sTargetPropertyPrefix}/`, "");
        let oFilterDefaultValueAnnotation;
        let oFilterDefaultValue;
        if (CommonUtils.isPropertyFilterable(oMetaModel, sTargetPropertyPrefix, _getPropertyPath(sProperty), true)) {
          oFilterDefaultValueAnnotation = oPropertyAnnotations["@com.sap.vocabularies.Common.v1.FilterDefaultValue"];
          if (oFilterDefaultValueAnnotation) {
            oFilterDefaultValue = oFilterDefaultValueAnnotation[`$${getModelType(oProperty.$Type)}`];
          }
          oProp = Object.assign(oProp, {
            tooltip: oPropertyAnnotations["@com.sap.vocabularies.Common.v1.QuickInfo"] || undefined,
            removeFromAppState: bRemoveFromAppState,
            hasValueHelp: hasValueHelp(oPropertyContext.getObject(), {
              context: oPropertyContext
            }),
            defaultFilterConditions: oFilterDefaultValue ? [{
              fieldPath: oSelField.conditionPath,
              operator: "EQ",
              values: [oFilterDefaultValue]
            }] : undefined
          });
        }
      }

      //base

      if (oProp) {
        if (mAllowedExpressions[sPropertyPath] && mAllowedExpressions[sPropertyPath].length > 0) {
          oProp.filterExpression = CommonUtils.getSpecificAllowedExpression(mAllowedExpressions[sPropertyPath]);
        } else {
          oProp.filterExpression = "auto";
        }
        oProp = Object.assign(oProp, {
          visible: oSelField.availability === "Default"
        });
      }
      processedFields[sFilterFieldKey] = oProp;
    });
    processedFields.forEach(function (propInfo) {
      if (propInfo.path === "$editState") {
        propInfo.label = ResourceModel.getText("FILTERBAR_EDITING_STATUS");
      }
      propInfo.typeConfig = TypeUtil.getTypeConfig(propInfo.dataType, propInfo.formatOptions, propInfo.constraints);
      propInfo.label = DelegateUtil.getLocalizedText(propInfo.label, oFilterControl) || "";
      if (propInfo.isParameter) {
        aParameterFields.push(propInfo.name);
      }
    });
    aFetchedProperties = processedFields;
    DelegateUtil.setCustomData(oFilterControl, "parameters", aParameterFields);
    return aFetchedProperties;
  };
  function getLineItemQualifierFromTable(oControl, oMetaModel) {
    var _oMetaModel$getObject;
    if (oControl.isA("sap.fe.macros.table.TableAPI")) {
      const annotationPaths = oControl.getMetaPath().split("#")[0].split("/");
      switch (annotationPaths[annotationPaths.length - 1]) {
        case `@${"com.sap.vocabularies.UI.v1.SelectionPresentationVariant"}`:
        case `@${"com.sap.vocabularies.UI.v1.PresentationVariant"}`:
          return (_oMetaModel$getObject = oMetaModel.getObject(oControl.getMetaPath()).Visualizations) === null || _oMetaModel$getObject === void 0 ? void 0 : _oMetaModel$getObject.find(visualization => visualization.$AnnotationPath.includes(`@${"com.sap.vocabularies.UI.v1.LineItem"}`)).$AnnotationPath;
        case `@${"com.sap.vocabularies.UI.v1.LineItem"}`:
          const metaPaths = oControl.getMetaPath().split("/");
          return metaPaths[metaPaths.length - 1];
      }
    }
    return undefined;
  }
  ODataFilterBarDelegate._addFlexItem = function (sFlexPropertyName, oParentControl, oMetaModel, oModifier, oAppComponent) {
    const sFilterBarId = oModifier ? oModifier.getId(oParentControl) : oParentControl.getId(),
      sIdPrefix = oModifier ? "" : "Adaptation",
      aSelectionFields = FilterUtils.getConvertedFilterFields(oParentControl, null, undefined, oMetaModel, oAppComponent, oModifier, oModifier ? undefined : getLineItemQualifierFromTable(oParentControl.getParent(), oMetaModel)),
      oSelectionField = ODataFilterBarDelegate._findSelectionField(aSelectionFields, sFlexPropertyName),
      sPropertyPath = _getPropertyPath(sFlexPropertyName),
      bIsXML = !!oModifier && oModifier.targets === "xmlTree";
    if (sFlexPropertyName === EDIT_STATE_PROPERTY_NAME) {
      return _templateEditState(sFilterBarId, oMetaModel, oModifier);
    } else if (sFlexPropertyName === SEARCH_PROPERTY_NAME) {
      return Promise.resolve(null);
    } else if (oSelectionField && oSelectionField.template) {
      return ODataFilterBarDelegate._templateCustomFilter(oParentControl, _generateIdPrefix(sFilterBarId, `${sIdPrefix}FilterField`), oSelectionField, oMetaModel, oModifier);
    }
    if (oSelectionField.type === "Slot" && oModifier) {
      return _addXMLCustomFilterField(oParentControl, oModifier, sPropertyPath);
    }
    const sNavigationPath = CommonHelper.getNavigationPath(sPropertyPath);
    const sAnnotationPath = oSelectionField.annotationPath;
    let sEntityTypePath;
    let sUseSemanticDateRange;
    let oSettings;
    let sBindingPath;
    let oParameters;
    return Promise.resolve().then(function () {
      if (oSelectionField.isParameter) {
        return sAnnotationPath.substr(0, sAnnotationPath.lastIndexOf("/") + 1);
      }
      return DelegateUtil.getCustomData(oParentControl, "entityType", oModifier);
    }).then(function (sRetrievedEntityTypePath) {
      sEntityTypePath = sRetrievedEntityTypePath;
      return DelegateUtil.getCustomData(oParentControl, "useSemanticDateRange", oModifier);
    }).then(function (sRetrievedUseSemanticDateRange) {
      sUseSemanticDateRange = sRetrievedUseSemanticDateRange;
      const oPropertyContext = oMetaModel.createBindingContext(sEntityTypePath + sPropertyPath);
      const sInFilterBarId = oModifier ? oModifier.getId(oParentControl) : oParentControl.getId();
      oSettings = {
        bindingContexts: {
          contextPath: oMetaModel.createBindingContext(sEntityTypePath),
          property: oPropertyContext
        },
        models: {
          contextPath: oMetaModel,
          property: oMetaModel
        },
        isXML: bIsXML
      };
      sBindingPath = `/${ModelHelper.getEntitySetPath(sEntityTypePath).split("/").filter(ModelHelper.filterOutNavPropBinding).join("/")}`;
      oParameters = {
        sPropertyName: sPropertyPath,
        sBindingPath: sBindingPath,
        sValueHelpType: sIdPrefix + VALUE_HELP_TYPE,
        oControl: oParentControl,
        oMetaModel: oMetaModel,
        oModifier: oModifier,
        sIdPrefix: _generateIdPrefix(sInFilterBarId, `${sIdPrefix}FilterField`, sNavigationPath),
        sVhIdPrefix: _generateIdPrefix(sInFilterBarId, sIdPrefix + VALUE_HELP_TYPE),
        sNavigationPrefix: sNavigationPath,
        bUseSemanticDateRange: sUseSemanticDateRange,
        oSettings: oSelectionField ? oSelectionField.settings : {},
        visualFilter: oSelectionField ? oSelectionField.visualFilter : undefined
      };
      return DelegateUtil.doesValueHelpExist(oParameters);
    }).then(function (bValueHelpExists) {
      if (!bValueHelpExists) {
        return _templateValueHelp(oSettings, oParameters);
      }
      return Promise.resolve();
    }).then(function () {
      let pageModel;
      if (oParameters.visualFilter) {
        //Need to set the convertercontext as pageModel in settings for BuildingBlock 2.0
        pageModel = CommonUtils.getTargetView(oParentControl).getController()._getPageModel();
      }
      return _templateFilterField(oSettings, oParameters, pageModel);
    });
  };
  function _getCachedProperties(oFilterBar) {
    // properties are not cached during templating
    if (oFilterBar instanceof window.Element) {
      return null;
    }
    return DelegateUtil.getCustomData(oFilterBar, FETCHED_PROPERTIES_DATA_KEY);
  }
  function _setCachedProperties(oFilterBar, aFetchedProperties) {
    // do not cache during templating, else it becomes part of the cached view
    if (oFilterBar instanceof window.Element) {
      return;
    }
    DelegateUtil.setCustomData(oFilterBar, FETCHED_PROPERTIES_DATA_KEY, aFetchedProperties);
  }
  function _getCachedOrFetchPropertiesForEntity(sEntityTypePath, oMetaModel, oFilterBar) {
    let aFetchedProperties = _getCachedProperties(oFilterBar);
    let localGroupLabel;
    if (!aFetchedProperties) {
      aFetchedProperties = ODataFilterBarDelegate.fetchPropertiesForEntity(sEntityTypePath, oMetaModel, oFilterBar);
      aFetchedProperties.forEach(function (oGroup) {
        localGroupLabel = null;
        if (oGroup.groupLabel) {
          localGroupLabel = DelegateUtil.getLocalizedText(oGroup.groupLabel, oFilterBar);
          oGroup.groupLabel = localGroupLabel === null ? oGroup.groupLabel : localGroupLabel;
        }
      });
      aFetchedProperties.sort(function (a, b) {
        if (a.groupLabel === undefined || a.groupLabel === null) {
          return -1;
        }
        if (b.groupLabel === undefined || b.groupLabel === null) {
          return 1;
        }
        return a.groupLabel.localeCompare(b.groupLabel);
      });
      _setCachedProperties(oFilterBar, aFetchedProperties);
    }
    return aFetchedProperties;
  }
  ODataFilterBarDelegate.fetchProperties = function (oFilterBar) {
    const sEntityTypePath = DelegateUtil.getCustomData(oFilterBar, "entityType");
    return DelegateUtil.fetchModel(oFilterBar).then(function (oModel) {
      if (!oModel) {
        return [];
      }
      return _getCachedOrFetchPropertiesForEntity(sEntityTypePath, oModel.getMetaModel(), oFilterBar);
      // var aCleanedProperties = aProperties.concat();
      // var aAllowedAttributes = ["name", "label", "visible", "path", "typeConfig", "maxConditions", "group", "groupLabel"];
      // aCleanedProperties.forEach(function(oProperty) {
      // 	Object.keys(oProperty).forEach(function(sPropName) {
      // 		if (aAllowedAttributes.indexOf(sPropName) === -1) {
      // 			delete oProperty[sPropName];
      // 		}
      // 	});
      // });
      // return aCleanedProperties;
    });
  };

  ODataFilterBarDelegate.getTypeUtil = function () {
    return TypeUtil;
  };
  return ODataFilterBarDelegate;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/filterBar/FilterBarDelegate", ["sap/base/Log","sap/base/util/merge","sap/fe/core/CommonUtils","sap/fe/core/converters/controls/ListReport/FilterBar","sap/fe/core/helpers/ModelHelper","sap/fe/core/helpers/StableIdHelper","sap/fe/core/TemplateModel","sap/fe/core/templating/PropertyFormatters","sap/fe/core/type/EDM","sap/fe/core/type/TypeUtil","sap/fe/macros/CommonHelper","sap/fe/macros/DelegateUtil","sap/fe/macros/filter/FilterUtils","sap/fe/macros/ResourceModel","sap/ui/mdc/FilterBarDelegate","sap/ui/model/json/JSONModel"],function(e,t,n,o,i,r,a,l,s,c,u,f,d,p,g,m){"use strict";var h=s.getModelType;var P=l.hasValueHelp;var v=r.generate;var y=o.processSelectionFields;const F=Object.assign({},g);const C="$editState",b="$search",x="FilterFieldValueHelp",M="sap_fe_FilterBarDelegate_propertyInfoMap",I=/[+*]/g;function w(e,t,n){const o=new m({id:e,isDraftCollaborative:i.isCollaborationDraftSupported(t)}),r={bindingContexts:{this:o.createBindingContext("/")},models:{"this.i18n":p.getModel(),this:o}};return f.templateControlFragment("sap.fe.macros.filter.DraftEditState",r,undefined,n).finally(function(){o.destroy()})}F._templateCustomFilter=async function(e,t,o,i,r){const l=await f.getCustomData(e,"entityType",r);const s=new m({id:t}),c=new a(o,i),u={bindingContexts:{contextPath:i.createBindingContext(l),this:s.createBindingContext("/"),item:c.createBindingContext("/")},models:{contextPath:i,this:s,item:c}},d=n.getTargetView(e),p=d?d.getController():undefined,g={controller:p?p:undefined,view:d};return f.templateControlFragment("sap.fe.macros.filter.CustomFilter",u,g,r).finally(function(){s.destroy();c.destroy()})};function T(e){return e.replace(I,"")}F._findSelectionField=function(e,t){return e.find(function(e){return(e.conditionPath===t||e.conditionPath.replaceAll(/\*/g,"")===t)&&e.availability!=="Hidden"})};function D(e,t,n){return n?v([e,t,n]):v([e,t])}function S(n,o){const i=new m({idPrefix:o.sVhIdPrefix,conditionModel:"$filters",navigationPrefix:o.sNavigationPrefix?`/${o.sNavigationPrefix}`:"",filterFieldValueHelp:true,useSemanticDateRange:o.bUseSemanticDateRange});const r=t({},n,{bindingContexts:{this:i.createBindingContext("/")},models:{this:i}});return Promise.resolve(f.templateControlFragment("sap.fe.macros.internal.valuehelp.ValueHelp",r,{isXML:n.isXML})).then(function(e){if(e){const t="dependents";if(e.length){e.forEach(function(e){if(o.oModifier){o.oModifier.insertAggregation(o.oControl,t,e,0)}else{o.oControl.insertAggregation(t,e,0,false)}})}else if(o.oModifier){o.oModifier.insertAggregation(o.oControl,t,e,0)}else{o.oControl.insertAggregation(t,e,0,false)}}}).catch(function(t){e.error("Error while evaluating DelegateUtil.isValueHelpRequired",t)}).finally(function(){i.destroy()})}async function L(t,n,o){try{const e=await Promise.resolve(n.getAggregation(t,"dependents"));let i;if(e&&e.length>1){for(i=0;i<=e.length;i++){const t=e[i];if(t&&t.isA("sap.ui.mdc.FilterField")){const e=t.getFieldPath(),n=t.getId();if(o===e&&n.indexOf("CustomFilterField")){return Promise.resolve(t)}}}}}catch(t){e.error("Filter Cannot be added",t)}}function E(e,n,o){const i=new m({idPrefix:n.sIdPrefix,vhIdPrefix:n.sVhIdPrefix,propertyPath:n.sPropertyName,navigationPrefix:n.sNavigationPrefix?`/${n.sNavigationPrefix}`:"",useSemanticDateRange:n.bUseSemanticDateRange,settings:n.oSettings,visualFilter:n.visualFilter});const r=n.oMetaModel;const l=new a(n.visualFilter,r);const s=t({},e,{bindingContexts:{this:i.createBindingContext("/"),visualFilter:l.createBindingContext("/")},models:{this:i,visualFilter:l,metaModel:r,converterContext:o}});return f.templateControlFragment("sap.fe.macros.internal.filterField.FilterFieldTemplate",s,{isXML:e.isXML}).finally(function(){i.destroy()})}async function A(t,n,o,i){try{i=i.replace("*","");const e=v([i]);if(n&&!n.modifier){throw"FilterBar Delegate method called without modifier."}const r=await n.modifier.getProperty(t,"delegate");const a=await n.modifier.getProperty(t,"propertyInfo");if(a){const l=a.some(function(t){return t.key===e||t.name===e});if(!l){const e=r.payload.entityTypePath;const l=d.createConverterContext(t,e,o,n.appComponent);const s=l.getEntityType();let c=d.getFilterField(i,l,s);c=d.buildProperyInfo(c,l);a.push(c);n.modifier.setProperty(t,"propertyInfo",a)}}}catch(n){e.warning(`${t.getId()} : ${n}`)}}F.addItem=async function(e,t,n){if(!n){return F._addP13nItem(e,t)}const o=n.modifier;const i=n&&n.appComponent&&n.appComponent.getModel();const r=i&&i.getMetaModel();if(!r){return Promise.resolve(null)}const a=o&&o.targets==="xmlTree";if(a){await A(t,n,r,e)}return F._addFlexItem(e,t,r,o,n.appComponent)};F.removeItem=async function(e,t,n){let o=true;const i=n.modifier;const r=i&&i.targets==="xmlTree";if(r&&!t.data("sap_fe_FilterBarDelegate_propertyInfoMap")){const o=n&&n.appComponent&&n.appComponent.getModel();const i=o&&o.getMetaModel();if(!i){return Promise.resolve(null)}if(typeof e!=="string"&&e.getFieldPath()){await A(t,n,i,e.getFieldPath())}else{await A(t,n,i,e)}}if(typeof e!=="string"&&e.isA&&e.isA("sap.ui.mdc.FilterField")){if(e.data("isSlot")==="true"&&n){i.insertAggregation(t,"dependents",e);o=false}}return Promise.resolve(o)};F.addCondition=async function(e,t,n){const o=n.modifier;const i=o&&o.targets==="xmlTree";if(i){const o=n&&n.appComponent&&n.appComponent.getModel();const i=o&&o.getMetaModel();if(!i){return Promise.resolve(null)}await A(t,n,i,e)}return Promise.resolve()};F.removeCondition=async function(e,t,n){if(!t.data("sap_fe_FilterBarDelegate_propertyInfoMap")){const o=n.modifier;const i=o&&o.targets==="xmlTree";if(i){const o=n&&n.appComponent&&n.appComponent.getModel();const i=o&&o.getMetaModel();if(!i){return Promise.resolve(null)}await A(t,n,i,e)}}return Promise.resolve()};F.clearFilters=async function(e){return d.clearFilterValues(e)};F._addP13nItem=function(t,n){return f.fetchModel(n).then(function(e){return F._addFlexItem(t,n,e.getMetaModel(),undefined)}).catch(function(t){e.error("Model could not be resolved",t);return null})};F.fetchPropertiesForEntity=function(e,t,o){const r=t.getObject(e);const a=o.isA("sap.ui.mdc.filterbar.vh.FilterBar")?true:undefined;if(!o||!r){return[]}const l=d.createConverterContext(o,e);const s=i.getEntitySetPath(e);const g=d.getConvertedFilterFields(o,e,a);let m=[];g.forEach(function(e){if(e.annotationPath){const o=u.getLocationForPropertyPath(t,e.annotationPath);const i=e.annotationPath.replace(`${o}/`,"");if(n.isPropertyFilterable(t,o,T(i),true)){m.push(e)}}else{m.push(e)}});const v=[];const F=y(m,l);const C=[];F.forEach(function(e){if(e.key){C.push(e.key)}});m=m.filter(function(e){return C.includes(e.key)});const b=n.getFilterRestrictionsByPath(s,t),x=b.FilterAllowedExpressions;Object.keys(F).forEach(function(e){let o=F[e];const i=m[e];if(!i||!i.conditionPath){return}const r=T(i.conditionPath);o=Object.assign(o,{group:i.group,groupLabel:i.groupLabel,path:i.conditionPath,tooltip:null,removeFromAppState:false,hasValueHelp:false});if(i.annotationPath){const e=i.annotationPath;const r=t.getObject(e),a=t.getObject(`${e}@`),l=t.createBindingContext(e);const s=a["@com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive"]||a["@com.sap.vocabularies.UI.v1.ExcludeFromNavigationContext"]||a["@com.sap.vocabularies.Analytics.v1.Measure"];const c=u.getLocationForPropertyPath(t,i.annotationPath);const f=e.replace(`${c}/`,"");let d;let p;if(n.isPropertyFilterable(t,c,T(f),true)){d=a["@com.sap.vocabularies.Common.v1.FilterDefaultValue"];if(d){p=d[`$${h(r.$Type)}`]}o=Object.assign(o,{tooltip:a["@com.sap.vocabularies.Common.v1.QuickInfo"]||undefined,removeFromAppState:s,hasValueHelp:P(l.getObject(),{context:l}),defaultFilterConditions:p?[{fieldPath:i.conditionPath,operator:"EQ",values:[p]}]:undefined})}}if(o){if(x[r]&&x[r].length>0){o.filterExpression=n.getSpecificAllowedExpression(x[r])}else{o.filterExpression="auto"}o=Object.assign(o,{visible:i.availability==="Default"})}F[e]=o});F.forEach(function(e){if(e.path==="$editState"){e.label=p.getText("FILTERBAR_EDITING_STATUS")}e.typeConfig=c.getTypeConfig(e.dataType,e.formatOptions,e.constraints);e.label=f.getLocalizedText(e.label,o)||"";if(e.isParameter){v.push(e.name)}});m=F;f.setCustomData(o,"parameters",v);return m};function $(e,t){var n;if(e.isA("sap.fe.macros.table.TableAPI")){const o=e.getMetaPath().split("#")[0].split("/");switch(o[o.length-1]){case`@${"com.sap.vocabularies.UI.v1.SelectionPresentationVariant"}`:case`@${"com.sap.vocabularies.UI.v1.PresentationVariant"}`:return(n=t.getObject(e.getMetaPath()).Visualizations)===null||n===void 0?void 0:n.find(e=>e.$AnnotationPath.includes(`@${"com.sap.vocabularies.UI.v1.LineItem"}`)).$AnnotationPath;case`@${"com.sap.vocabularies.UI.v1.LineItem"}`:const o=e.getMetaPath().split("/");return o[o.length-1]}}return undefined}F._addFlexItem=function(e,t,o,r,a){const l=r?r.getId(t):t.getId(),s=r?"":"Adaptation",c=d.getConvertedFilterFields(t,null,undefined,o,a,r,r?undefined:$(t.getParent(),o)),p=F._findSelectionField(c,e),g=T(e),m=!!r&&r.targets==="xmlTree";if(e===C){return w(l,o,r)}else if(e===b){return Promise.resolve(null)}else if(p&&p.template){return F._templateCustomFilter(t,D(l,`${s}FilterField`),p,o,r)}if(p.type==="Slot"&&r){return L(t,r,g)}const h=u.getNavigationPath(g);const P=p.annotationPath;let v;let y;let M;let I;let A;return Promise.resolve().then(function(){if(p.isParameter){return P.substr(0,P.lastIndexOf("/")+1)}return f.getCustomData(t,"entityType",r)}).then(function(e){v=e;return f.getCustomData(t,"useSemanticDateRange",r)}).then(function(e){y=e;const n=o.createBindingContext(v+g);const a=r?r.getId(t):t.getId();M={bindingContexts:{contextPath:o.createBindingContext(v),property:n},models:{contextPath:o,property:o},isXML:m};I=`/${i.getEntitySetPath(v).split("/").filter(i.filterOutNavPropBinding).join("/")}`;A={sPropertyName:g,sBindingPath:I,sValueHelpType:s+x,oControl:t,oMetaModel:o,oModifier:r,sIdPrefix:D(a,`${s}FilterField`,h),sVhIdPrefix:D(a,s+x),sNavigationPrefix:h,bUseSemanticDateRange:y,oSettings:p?p.settings:{},visualFilter:p?p.visualFilter:undefined};return f.doesValueHelpExist(A)}).then(function(e){if(!e){return S(M,A)}return Promise.resolve()}).then(function(){let e;if(A.visualFilter){e=n.getTargetView(t).getController()._getPageModel()}return E(M,A,e)})};function B(e){if(e instanceof window.Element){return null}return f.getCustomData(e,M)}function _(e,t){if(e instanceof window.Element){return}f.setCustomData(e,M,t)}function V(e,t,n){let o=B(n);let i;if(!o){o=F.fetchPropertiesForEntity(e,t,n);o.forEach(function(e){i=null;if(e.groupLabel){i=f.getLocalizedText(e.groupLabel,n);e.groupLabel=i===null?e.groupLabel:i}});o.sort(function(e,t){if(e.groupLabel===undefined||e.groupLabel===null){return-1}if(t.groupLabel===undefined||t.groupLabel===null){return 1}return e.groupLabel.localeCompare(t.groupLabel)});_(n,o)}return o}F.fetchProperties=function(e){const t=f.getCustomData(e,"entityType");return f.fetchModel(e).then(function(n){if(!n){return[]}return V(t,n.getMetaModel(),e)})};F.getTypeUtil=function(){return c};return F},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormAPI-dbg", ["sap/fe/core/helpers/ClassSupport", "../MacroAPI"], function (ClassSupport, MacroAPI) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;
  var property = ClassSupport.property;
  var defineUI5Class = ClassSupport.defineUI5Class;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  /**
   * Building block for creating a Form based on the metadata provided by OData V4.
   * <br>
   * It is designed to work based on a FieldGroup annotation but can also work if you provide a ReferenceFacet or a CollectionFacet
   *
   *
   * Usage example:
   * <pre>
   * &lt;macro:Form id="MyForm" metaPath="@com.sap.vocabularies.UI.v1.FieldGroup#GeneralInformation" /&gt;
   * </pre>
   *
   * @alias sap.fe.macros.Form
   * @public
   */
  let FormAPI = (_dec = defineUI5Class("sap.fe.macros.form.FormAPI"), _dec2 = property({
    type: "string"
  }), _dec3 = property({
    type: "string",
    expectedAnnotations: ["@com.sap.vocabularies.UI.v1.FieldGroup", "@com.sap.vocabularies.UI.v1.CollectionFacet", "@com.sap.vocabularies.UI.v1.ReferenceFacet"],
    expectedTypes: ["EntitySet", "EntityType", "Singleton", "NavigationProperty"]
  }), _dec4 = property({
    type: "string"
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_MacroAPI) {
    _inheritsLoose(FormAPI, _MacroAPI);
    function FormAPI() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _MacroAPI.call(this, ...args) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "title", _descriptor3, _assertThisInitialized(_this));
      return _this;
    }
    return FormAPI;
  }(MacroAPI), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "title", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  return FormAPI;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormAPI", ["sap/fe/core/helpers/ClassSupport","../MacroAPI"],function(e,r){"use strict";var t,i,n,a,o,l,u,c,s;var p=e.property;var f=e.defineUI5Class;function b(e,r,t,i){if(!t)return;Object.defineProperty(e,r,{enumerable:t.enumerable,configurable:t.configurable,writable:t.writable,value:t.initializer?t.initializer.call(i):void 0})}function d(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function v(e,r){e.prototype=Object.create(r.prototype);e.prototype.constructor=e;y(e,r)}function y(e,r){y=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(r,t){r.__proto__=t;return r};return y(e,r)}function m(e,r,t,i,n){var a={};Object.keys(i).forEach(function(e){a[e]=i[e]});a.enumerable=!!a.enumerable;a.configurable=!!a.configurable;if("value"in a||a.initializer){a.writable=true}a=t.slice().reverse().reduce(function(t,i){return i(e,r,t)||t},a);if(n&&a.initializer!==void 0){a.value=a.initializer?a.initializer.call(n):void 0;a.initializer=undefined}if(a.initializer===void 0){Object.defineProperty(e,r,a);a=null}return a}function g(e,r){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let h=(t=f("sap.fe.macros.form.FormAPI"),i=p({type:"string"}),n=p({type:"string",expectedAnnotations:["@com.sap.vocabularies.UI.v1.FieldGroup","@com.sap.vocabularies.UI.v1.CollectionFacet","@com.sap.vocabularies.UI.v1.ReferenceFacet"],expectedTypes:["EntitySet","EntityType","Singleton","NavigationProperty"]}),a=p({type:"string"}),t(o=(l=function(e){v(r,e);function r(){var r;for(var t=arguments.length,i=new Array(t),n=0;n<t;n++){i[n]=arguments[n]}r=e.call(this,...i)||this;b(r,"id",u,d(r));b(r,"metaPath",c,d(r));b(r,"title",s,d(r));return r}return r}(r),u=m(l.prototype,"id",[i],{configurable:true,enumerable:true,writable:true,initializer:null}),c=m(l.prototype,"metaPath",[n],{configurable:true,enumerable:true,writable:true,initializer:null}),s=m(l.prototype,"title",[a],{configurable:true,enumerable:true,writable:true,initializer:null}),l))||o);return h},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormBuildingBlock-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/converters/controls/Common/Form", "sap/fe/core/converters/helpers/BindingHelper", "sap/fe/core/converters/helpers/ID", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/macros/form/FormHelper", "sap/ui/model/odata/v4/AnnotationHelper"], function (BuildingBlock, BuildingBlockRuntime, Form, BindingHelper, ID, MetaModelConverter, BindingToolkit, DataModelPathHelper, FormHelper, AnnotationHelper) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13;
  var _exports = {};
  var getContextRelativeTargetObjectPath = DataModelPathHelper.getContextRelativeTargetObjectPath;
  var resolveBindingString = BindingToolkit.resolveBindingString;
  var ifElse = BindingToolkit.ifElse;
  var equal = BindingToolkit.equal;
  var compileExpression = BindingToolkit.compileExpression;
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  var getFormContainerID = ID.getFormContainerID;
  var UI = BindingHelper.UI;
  var createFormDefinition = Form.createFormDefinition;
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockEvent = BuildingBlock.blockEvent;
  var blockAttribute = BuildingBlock.blockAttribute;
  var blockAggregation = BuildingBlock.blockAggregation;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let FormBuildingBlock = (
  /**
   * Building block for creating a Form based on the metadata provided by OData V4.
   * <br>
   * It is designed to work based on a FieldGroup annotation but can also work if you provide a ReferenceFacet or a CollectionFacet
   *
   *
   * Usage example:
   * <pre>
   * &lt;macro:Form id="MyForm" metaPath="@com.sap.vocabularies.UI.v1.FieldGroup#GeneralInformation" /&gt;
   * </pre>
   *
   * @alias sap.fe.macros.Form
   */
  _dec = defineBuildingBlock({
    name: "Form",
    namespace: "sap.fe.macros.internal",
    publicNamespace: "sap.fe.macros"
  }), _dec2 = blockAttribute({
    type: "string",
    isPublic: true,
    required: true
  }), _dec3 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true,
    isPublic: true,
    $kind: ["EntitySet", "NavigationProperty", "EntityType"]
  }), _dec4 = blockAttribute({
    type: "sap.ui.model.Context",
    isPublic: true,
    required: true
  }), _dec5 = blockAttribute({
    type: "sap.ui.model.Context"
  }), _dec6 = blockAttribute({
    type: "boolean"
  }), _dec7 = blockAttribute({
    type: "boolean",
    defaultValue: true
  }), _dec8 = blockAttribute({
    type: "string",
    isPublic: true
  }), _dec9 = blockAttribute({
    type: "sap.ui.core.TitleLevel",
    isPublic: true,
    defaultValue: "Auto"
  }), _dec10 = blockAttribute({
    type: "string"
  }), _dec11 = blockAttribute({
    type: "string",
    defaultValue: "true"
  }), _dec12 = blockEvent(), _dec13 = blockAggregation({
    type: "sap.fe.macros.form.FormElement",
    isPublic: true,
    slot: "formElements",
    isDefault: true
  }), _dec14 = blockAttribute({
    type: "object",
    isPublic: true
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(FormBuildingBlock, _BuildingBlockBase);
    /**
     * The manifest defined form containers to be shown in the action area of the table
     */

    /**
     * Control the rendering of the form container labels
     */

    /**
     * Toggle Preview: Part of Preview / Preview via 'Show More' Button
     */

    // Other public properties or overrides

    /**
     * Defines the "aria-level" of the form title, titles of internally used form containers are nested subsequently
     */

    /**
     * 	If set to false, the Form is not rendered.
     */

    // Independent from the form title, can be a bit confusing in standalone usage at is not showing anything by default

    // Just proxied down to the Field may need to see if needed or not

    /**
     * Defines the layout to be used within the form.
     * It defaults to the ColumnLayout, but you can also use a ResponsiveGridLayout.
     * All the properties of the ResponsiveGridLayout can be added to the configuration.
     */

    function FormBuildingBlock(oProps, configuration, mSettings) {
      var _this;
      _this = _BuildingBlockBase.call(this, oProps, configuration, mSettings) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "formContainers", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "useFormContainerLabels", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "partOfPreview", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "title", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "titleLevel", _descriptor8, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "displayMode", _descriptor9, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "isVisible", _descriptor10, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "onChange", _descriptor11, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "formElements", _descriptor12, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "layout", _descriptor13, _assertThisInitialized(_this));
      if (_this.metaPath && _this.contextPath && (_this.formContainers === undefined || _this.formContainers === null)) {
        const oContextObjectPath = getInvolvedDataModelObjects(_this.metaPath, _this.contextPath);
        const mExtraSettings = {};
        let oFacetDefinition = oContextObjectPath.targetObject;
        let hasFieldGroup = false;
        if (oFacetDefinition && oFacetDefinition.$Type === "com.sap.vocabularies.UI.v1.FieldGroupType") {
          // Wrap the facet in a fake Facet annotation
          hasFieldGroup = true;
          oFacetDefinition = {
            $Type: "com.sap.vocabularies.UI.v1.ReferenceFacet",
            Label: oFacetDefinition.Label,
            Target: {
              $target: oFacetDefinition,
              fullyQualifiedName: oFacetDefinition.fullyQualifiedName,
              path: "",
              term: "",
              type: "AnnotationPath",
              value: getContextRelativeTargetObjectPath(oContextObjectPath)
            },
            annotations: {},
            fullyQualifiedName: oFacetDefinition.fullyQualifiedName
          };
          mExtraSettings[oFacetDefinition.Target.value] = {
            fields: _this.formElements
          };
        }
        const oConverterContext = _this.getConverterContext(oContextObjectPath, /*this.contextPath*/undefined, mSettings, mExtraSettings);
        const oFormDefinition = createFormDefinition(oFacetDefinition, _this.isVisible, oConverterContext);
        if (hasFieldGroup) {
          oFormDefinition.formContainers[0].annotationPath = _this.metaPath.getPath();
        }
        _this.formContainers = oFormDefinition.formContainers;
        _this.useFormContainerLabels = oFormDefinition.useFormContainerLabels;
        _this.facetType = oFacetDefinition && oFacetDefinition.$Type;
      } else {
        var _this$metaPath$getObj;
        _this.facetType = (_this$metaPath$getObj = _this.metaPath.getObject()) === null || _this$metaPath$getObj === void 0 ? void 0 : _this$metaPath$getObj.$Type;
      }
      if (!_this.isPublic) {
        _this._apiId = _this.createId("Form");
        _this._contentId = _this.id;
      } else {
        _this._apiId = _this.id;
        _this._contentId = `${_this.id}-content`;
      }
      // if displayMode === true -> _editable = false
      // if displayMode === false -> _editable = true
      //  => if displayMode === {myBindingValue} -> _editable = {myBindingValue} === true ? true : false
      // if DisplayMode === undefined -> _editable = {ui>/isEditable}
      if (_this.displayMode !== undefined) {
        _this._editable = compileExpression(ifElse(equal(resolveBindingString(_this.displayMode, "boolean"), false), true, false));
      } else {
        _this._editable = compileExpression(UI.IsEditable);
      }
      return _this;
    }
    _exports = FormBuildingBlock;
    var _proto = FormBuildingBlock.prototype;
    _proto.getDataFieldCollection = function getDataFieldCollection(formContainer, facetContext) {
      const facet = getInvolvedDataModelObjects(facetContext).targetObject;
      let navigationPath;
      let idPart;
      if (facet.$Type === "com.sap.vocabularies.UI.v1.ReferenceFacet") {
        navigationPath = AnnotationHelper.getNavigationPath(facet.Target.value);
        idPart = facet;
      } else {
        const contextPathPath = this.contextPath.getPath();
        let facetPath = facetContext.getPath();
        if (facetPath.startsWith(contextPathPath)) {
          facetPath = facetPath.substring(contextPathPath.length);
        }
        navigationPath = AnnotationHelper.getNavigationPath(facetPath);
        idPart = facetPath;
      }
      const titleLevel = FormHelper.getFormContainerTitleLevel(this.title, this.titleLevel);
      const title = this.useFormContainerLabels && facet ? AnnotationHelper.label(facet, {
        context: facetContext
      }) : "";
      const id = this.id ? getFormContainerID(idPart) : undefined;
      return xml`
					<macro:FormContainer
					xmlns:macro="sap.fe.macros"
					${this.attr("id", id)}
					title="${title}"
					titleLevel="${titleLevel}"
					contextPath="${navigationPath ? formContainer.entitySet : this.contextPath}"
					metaPath="${facetContext}"
					dataFieldCollection="${formContainer.formElements}"
					navigationPath="${navigationPath}"
					visible="${formContainer.isVisible}"
					displayMode="${this.displayMode}"
					onChange="${this.onChange}"
					actions="${formContainer.actions}"
				>
				<macro:formElements>
					<slot name="formElements" />
				</macro:formElements>
			</macro:FormContainer>`;
    };
    _proto.getFormContainers = function getFormContainers() {
      if (this.formContainers.length === 0) {
        return "";
      }
      if (this.facetType.indexOf("com.sap.vocabularies.UI.v1.CollectionFacet") >= 0) {
        return this.formContainers.map((formContainer, formContainerIdx) => {
          if (formContainer.isVisible) {
            const facetContext = this.contextPath.getModel().createBindingContext(formContainer.annotationPath, this.contextPath);
            const facet = facetContext.getObject();
            if (facet.$Type === "com.sap.vocabularies.UI.v1.ReferenceFacet" && FormHelper.isReferenceFacetPartOfPreview(facet, this.partOfPreview)) {
              if (facet.Target.$AnnotationPath.$Type === "com.sap.vocabularies.Communication.v1.AddressType") {
                return xml`<template:with path="formContainers>${formContainerIdx}" var="formContainer">
											<template:with path="formContainers>${formContainerIdx}/annotationPath" var="facet">
												<core:Fragment fragmentName="sap.fe.macros.form.AddressSection" type="XML" />
											</template:with>
										</template:with>`;
              }
              return this.getDataFieldCollection(formContainer, facetContext);
            }
          }
          return "";
        });
      } else if (this.facetType === "com.sap.vocabularies.UI.v1.ReferenceFacet") {
        return this.formContainers.map(formContainer => {
          if (formContainer.isVisible) {
            const facetContext = this.contextPath.getModel().createBindingContext(formContainer.annotationPath, this.contextPath);
            return this.getDataFieldCollection(formContainer, facetContext);
          } else {
            return "";
          }
        });
      }
      return xml``;
    }

    /**
     * Create the proper layout information based on the `layout` property defined externally.
     *
     * @returns The layout information for the xml.
     */;
    _proto.getLayoutInformation = function getLayoutInformation() {
      switch (this.layout.type) {
        case "ResponsiveGridLayout":
          return xml`<f:ResponsiveGridLayout adjustLabelSpan="${this.layout.adjustLabelSpan}"
													breakpointL="${this.layout.breakpointL}"
													breakpointM="${this.layout.breakpointM}"
													breakpointXL="${this.layout.breakpointXL}"
													columnsL="${this.layout.columnsL}"
													columnsM="${this.layout.columnsM}"
													columnsXL="${this.layout.columnsXL}"
													emptySpanL="${this.layout.emptySpanL}"
													emptySpanM="${this.layout.emptySpanM}"
													emptySpanS="${this.layout.emptySpanS}"
													emptySpanXL="${this.layout.emptySpanXL}"
													labelSpanL="${this.layout.labelSpanL}"
													labelSpanM="${this.layout.labelSpanM}"
													labelSpanS="${this.layout.labelSpanS}"
													labelSpanXL="${this.layout.labelSpanXL}"
													singleContainerFullSize="${this.layout.singleContainerFullSize}" />`;
        case "ColumnLayout":
        default:
          return xml`<f:ColumnLayout
								columnsM="${this.layout.columnsM}"
								columnsL="${this.layout.columnsL}"
								columnsXL="${this.layout.columnsXL}"
								labelCellsLarge="${this.layout.labelCellsLarge}"
								emptyCellsLarge="${this.layout.emptyCellsLarge}" />`;
      }
    };
    _proto.getTemplate = function getTemplate() {
      const onChangeStr = this.onChange && this.onChange.replace("{", "\\{").replace("}", "\\}") || "";
      const metaPathPath = this.metaPath.getPath();
      const contextPathPath = this.contextPath.getPath();
      if (!this.isVisible) {
        return xml``;
      } else {
        return xml`<macro:FormAPI xmlns:macro="sap.fe.macros.form"
					xmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
					xmlns:f="sap.ui.layout.form"
					xmlns:fl="sap.ui.fl"
					id="${this._apiId}"
					metaPath="${metaPathPath}"
					contextPath="${contextPathPath}">
				<f:Form
					fl:delegate='{
						"name": "sap/fe/macros/form/FormDelegate",
						"delegateType": "complete"
					}'
					id="${this._contentId}"
					editable="${this._editable}"
					macrodata:entitySet="{contextPath>@sapui.name}"
					visible="${this.isVisible}"
					class="sapUxAPObjectPageSubSectionAlignContent"
					macrodata:navigationPath="${contextPathPath}"
					macrodata:onChange="${onChangeStr}"
				>
					${this.addConditionally(this.title !== undefined, xml`<f:title>
							<core:Title level="${this.titleLevel}" text="${this.title}" />
						</f:title>`)}
					<f:layout>
					${this.getLayoutInformation()}

					</f:layout>
					<f:formContainers>
						${this.getFormContainers()}
					</f:formContainers>
				</f:Form>
			</macro:FormAPI>`;
      }
    };
    return FormBuildingBlock;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "formContainers", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "useFormContainerLabels", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "partOfPreview", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "title", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "titleLevel", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "displayMode", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "isVisible", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "onChange", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return "";
    }
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "formElements", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "layout", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return {
        type: "ColumnLayout",
        columnsM: 2,
        columnsXL: 6,
        columnsL: 3,
        labelCellsLarge: 12
      };
    }
  })), _class2)) || _class);
  _exports = FormBuildingBlock;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormBuildingBlock", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/converters/controls/Common/Form","sap/fe/core/converters/helpers/BindingHelper","sap/fe/core/converters/helpers/ID","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/BindingToolkit","sap/fe/core/templating/DataModelPathHelper","sap/fe/macros/form/FormHelper","sap/ui/model/odata/v4/AnnotationHelper"],function(e,t,a,i,r,n,o,l,s,u){"use strict";var c,p,m,f,b,h,d,y,g,v,P,C,$,L,F,x,S,w,T,M,z,I,O,k,E,j,B,_,A;var D={};var X=l.getContextRelativeTargetObjectPath;var V=o.resolveBindingString;var R=o.ifElse;var N=o.equal;var U=o.compileExpression;var q=n.getInvolvedDataModelObjects;var H=r.getFormContainerID;var Q=i.UI;var G=a.createFormDefinition;var W=t.xml;var J=e.defineBuildingBlock;var K=e.BuildingBlockBase;var Y=e.blockEvent;var Z=e.blockAttribute;var ee=e.blockAggregation;function te(e,t,a,i){if(!a)return;Object.defineProperty(e,t,{enumerable:a.enumerable,configurable:a.configurable,writable:a.writable,value:a.initializer?a.initializer.call(i):void 0})}function ae(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function ie(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;re(e,t)}function re(e,t){re=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,a){t.__proto__=a;return t};return re(e,t)}function ne(e,t,a,i,r){var n={};Object.keys(i).forEach(function(e){n[e]=i[e]});n.enumerable=!!n.enumerable;n.configurable=!!n.configurable;if("value"in n||n.initializer){n.writable=true}n=a.slice().reverse().reduce(function(a,i){return i(e,t,a)||a},n);if(r&&n.initializer!==void 0){n.value=n.initializer?n.initializer.call(r):void 0;n.initializer=undefined}if(n.initializer===void 0){Object.defineProperty(e,t,n);n=null}return n}function oe(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let le=(c=J({name:"Form",namespace:"sap.fe.macros.internal",publicNamespace:"sap.fe.macros"}),p=Z({type:"string",isPublic:true,required:true}),m=Z({type:"sap.ui.model.Context",required:true,isPublic:true,$kind:["EntitySet","NavigationProperty","EntityType"]}),f=Z({type:"sap.ui.model.Context",isPublic:true,required:true}),b=Z({type:"sap.ui.model.Context"}),h=Z({type:"boolean"}),d=Z({type:"boolean",defaultValue:true}),y=Z({type:"string",isPublic:true}),g=Z({type:"sap.ui.core.TitleLevel",isPublic:true,defaultValue:"Auto"}),v=Z({type:"string"}),P=Z({type:"string",defaultValue:"true"}),C=Y(),$=ee({type:"sap.fe.macros.form.FormElement",isPublic:true,slot:"formElements",isDefault:true}),L=Z({type:"object",isPublic:true}),c(F=(x=function(e){ie(t,e);function t(t,a,i){var r;r=e.call(this,t,a,i)||this;te(r,"id",S,ae(r));te(r,"contextPath",w,ae(r));te(r,"metaPath",T,ae(r));te(r,"formContainers",M,ae(r));te(r,"useFormContainerLabels",z,ae(r));te(r,"partOfPreview",I,ae(r));te(r,"title",O,ae(r));te(r,"titleLevel",k,ae(r));te(r,"displayMode",E,ae(r));te(r,"isVisible",j,ae(r));te(r,"onChange",B,ae(r));te(r,"formElements",_,ae(r));te(r,"layout",A,ae(r));if(r.metaPath&&r.contextPath&&(r.formContainers===undefined||r.formContainers===null)){const e=q(r.metaPath,r.contextPath);const t={};let a=e.targetObject;let n=false;if(a&&a.$Type==="com.sap.vocabularies.UI.v1.FieldGroupType"){n=true;a={$Type:"com.sap.vocabularies.UI.v1.ReferenceFacet",Label:a.Label,Target:{$target:a,fullyQualifiedName:a.fullyQualifiedName,path:"",term:"",type:"AnnotationPath",value:X(e)},annotations:{},fullyQualifiedName:a.fullyQualifiedName};t[a.Target.value]={fields:r.formElements}}const o=r.getConverterContext(e,undefined,i,t);const l=G(a,r.isVisible,o);if(n){l.formContainers[0].annotationPath=r.metaPath.getPath()}r.formContainers=l.formContainers;r.useFormContainerLabels=l.useFormContainerLabels;r.facetType=a&&a.$Type}else{var n;r.facetType=(n=r.metaPath.getObject())===null||n===void 0?void 0:n.$Type}if(!r.isPublic){r._apiId=r.createId("Form");r._contentId=r.id}else{r._apiId=r.id;r._contentId=`${r.id}-content`}if(r.displayMode!==undefined){r._editable=U(R(N(V(r.displayMode,"boolean"),false),true,false))}else{r._editable=U(Q.IsEditable)}return r}D=t;var a=t.prototype;a.getDataFieldCollection=function e(t,a){const i=q(a).targetObject;let r;let n;if(i.$Type==="com.sap.vocabularies.UI.v1.ReferenceFacet"){r=u.getNavigationPath(i.Target.value);n=i}else{const e=this.contextPath.getPath();let t=a.getPath();if(t.startsWith(e)){t=t.substring(e.length)}r=u.getNavigationPath(t);n=t}const o=s.getFormContainerTitleLevel(this.title,this.titleLevel);const l=this.useFormContainerLabels&&i?u.label(i,{context:a}):"";const c=this.id?H(n):undefined;return W`
					<macro:FormContainer
					xmlns:macro="sap.fe.macros"
					${this.attr("id",c)}
					title="${l}"
					titleLevel="${o}"
					contextPath="${r?t.entitySet:this.contextPath}"
					metaPath="${a}"
					dataFieldCollection="${t.formElements}"
					navigationPath="${r}"
					visible="${t.isVisible}"
					displayMode="${this.displayMode}"
					onChange="${this.onChange}"
					actions="${t.actions}"
				>
				<macro:formElements>
					<slot name="formElements" />
				</macro:formElements>
			</macro:FormContainer>`};a.getFormContainers=function e(){if(this.formContainers.length===0){return""}if(this.facetType.indexOf("com.sap.vocabularies.UI.v1.CollectionFacet")>=0){return this.formContainers.map((e,t)=>{if(e.isVisible){const a=this.contextPath.getModel().createBindingContext(e.annotationPath,this.contextPath);const i=a.getObject();if(i.$Type==="com.sap.vocabularies.UI.v1.ReferenceFacet"&&s.isReferenceFacetPartOfPreview(i,this.partOfPreview)){if(i.Target.$AnnotationPath.$Type==="com.sap.vocabularies.Communication.v1.AddressType"){return W`<template:with path="formContainers>${t}" var="formContainer">
											<template:with path="formContainers>${t}/annotationPath" var="facet">
												<core:Fragment fragmentName="sap.fe.macros.form.AddressSection" type="XML" />
											</template:with>
										</template:with>`}return this.getDataFieldCollection(e,a)}}return""})}else if(this.facetType==="com.sap.vocabularies.UI.v1.ReferenceFacet"){return this.formContainers.map(e=>{if(e.isVisible){const t=this.contextPath.getModel().createBindingContext(e.annotationPath,this.contextPath);return this.getDataFieldCollection(e,t)}else{return""}})}return W``};a.getLayoutInformation=function e(){switch(this.layout.type){case"ResponsiveGridLayout":return W`<f:ResponsiveGridLayout adjustLabelSpan="${this.layout.adjustLabelSpan}"
													breakpointL="${this.layout.breakpointL}"
													breakpointM="${this.layout.breakpointM}"
													breakpointXL="${this.layout.breakpointXL}"
													columnsL="${this.layout.columnsL}"
													columnsM="${this.layout.columnsM}"
													columnsXL="${this.layout.columnsXL}"
													emptySpanL="${this.layout.emptySpanL}"
													emptySpanM="${this.layout.emptySpanM}"
													emptySpanS="${this.layout.emptySpanS}"
													emptySpanXL="${this.layout.emptySpanXL}"
													labelSpanL="${this.layout.labelSpanL}"
													labelSpanM="${this.layout.labelSpanM}"
													labelSpanS="${this.layout.labelSpanS}"
													labelSpanXL="${this.layout.labelSpanXL}"
													singleContainerFullSize="${this.layout.singleContainerFullSize}" />`;case"ColumnLayout":default:return W`<f:ColumnLayout
								columnsM="${this.layout.columnsM}"
								columnsL="${this.layout.columnsL}"
								columnsXL="${this.layout.columnsXL}"
								labelCellsLarge="${this.layout.labelCellsLarge}"
								emptyCellsLarge="${this.layout.emptyCellsLarge}" />`}};a.getTemplate=function e(){const t=this.onChange&&this.onChange.replace("{","\\{").replace("}","\\}")||"";const a=this.metaPath.getPath();const i=this.contextPath.getPath();if(!this.isVisible){return W``}else{return W`<macro:FormAPI xmlns:macro="sap.fe.macros.form"
					xmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
					xmlns:f="sap.ui.layout.form"
					xmlns:fl="sap.ui.fl"
					id="${this._apiId}"
					metaPath="${a}"
					contextPath="${i}">
				<f:Form
					fl:delegate='{
						"name": "sap/fe/macros/form/FormDelegate",
						"delegateType": "complete"
					}'
					id="${this._contentId}"
					editable="${this._editable}"
					macrodata:entitySet="{contextPath>@sapui.name}"
					visible="${this.isVisible}"
					class="sapUxAPObjectPageSubSectionAlignContent"
					macrodata:navigationPath="${i}"
					macrodata:onChange="${t}"
				>
					${this.addConditionally(this.title!==undefined,W`<f:title>
							<core:Title level="${this.titleLevel}" text="${this.title}" />
						</f:title>`)}
					<f:layout>
					${this.getLayoutInformation()}

					</f:layout>
					<f:formContainers>
						${this.getFormContainers()}
					</f:formContainers>
				</f:Form>
			</macro:FormAPI>`}};return t}(K),S=ne(x.prototype,"id",[p],{configurable:true,enumerable:true,writable:true,initializer:null}),w=ne(x.prototype,"contextPath",[m],{configurable:true,enumerable:true,writable:true,initializer:null}),T=ne(x.prototype,"metaPath",[f],{configurable:true,enumerable:true,writable:true,initializer:null}),M=ne(x.prototype,"formContainers",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),z=ne(x.prototype,"useFormContainerLabels",[h],{configurable:true,enumerable:true,writable:true,initializer:null}),I=ne(x.prototype,"partOfPreview",[d],{configurable:true,enumerable:true,writable:true,initializer:null}),O=ne(x.prototype,"title",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),k=ne(x.prototype,"titleLevel",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),E=ne(x.prototype,"displayMode",[v],{configurable:true,enumerable:true,writable:true,initializer:null}),j=ne(x.prototype,"isVisible",[P],{configurable:true,enumerable:true,writable:true,initializer:null}),B=ne(x.prototype,"onChange",[C],{configurable:true,enumerable:true,writable:true,initializer:function(){return""}}),_=ne(x.prototype,"formElements",[$],{configurable:true,enumerable:true,writable:true,initializer:null}),A=ne(x.prototype,"layout",[L],{configurable:true,enumerable:true,writable:true,initializer:function(){return{type:"ColumnLayout",columnsM:2,columnsXL:6,columnsL:3,labelCellsLarge:12}}}),x))||F);D=le;return D},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormContainerAPI-dbg", ["sap/fe/core/helpers/ClassSupport", "../MacroAPI"], function (ClassSupport, MacroAPI) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _class3;
  var xmlEventHandler = ClassSupport.xmlEventHandler;
  var property = ClassSupport.property;
  var defineUI5Class = ClassSupport.defineUI5Class;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  /**
   * @alias sap.fe.macros.form.FormContainerAPI
   * @private
   */
  let FormContainerAPI = (_dec = defineUI5Class("sap.fe.macros.form.FormContainerAPI"), _dec2 = property({
    type: "string"
  }), _dec3 = property({
    type: "boolean"
  }), _dec4 = xmlEventHandler(), _dec(_class = (_class2 = (_class3 = /*#__PURE__*/function (_MacroAPI) {
    _inheritsLoose(FormContainerAPI, _MacroAPI);
    /**
     * The identifier of the form container control.
     *
     * @public
     */

    function FormContainerAPI(props) {
      var _this;
      _this = _MacroAPI.call(this, props, true) || this;
      _initializerDefineProperty(_this, "formContainerId", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "showDetails", _descriptor2, _assertThisInitialized(_this));
      _this.setParentBindingContext("internal", `controls/${_this.formContainerId}`);
      return _this;
    }
    var _proto = FormContainerAPI.prototype;
    _proto.toggleDetails = function toggleDetails() {
      this.showDetails = !this.showDetails;
    };
    return FormContainerAPI;
  }(MacroAPI), _class3.isDependentBound = true, _class3), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "formContainerId", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "showDetails", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _applyDecoratedDescriptor(_class2.prototype, "toggleDetails", [_dec4], Object.getOwnPropertyDescriptor(_class2.prototype, "toggleDetails"), _class2.prototype)), _class2)) || _class);
  return FormContainerAPI;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormContainerAPI", ["sap/fe/core/helpers/ClassSupport","../MacroAPI"],function(e,t){"use strict";var r,i,n,o,a,l,u,s,c;var f=e.xmlEventHandler;var p=e.property;var b=e.defineUI5Class;function d(e,t,r,i){if(!r)return;Object.defineProperty(e,t,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(i):void 0})}function y(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function h(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;v(e,t)}function v(e,t){v=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,r){t.__proto__=r;return t};return v(e,t)}function g(e,t,r,i,n){var o={};Object.keys(i).forEach(function(e){o[e]=i[e]});o.enumerable=!!o.enumerable;o.configurable=!!o.configurable;if("value"in o||o.initializer){o.writable=true}o=r.slice().reverse().reduce(function(r,i){return i(e,t,r)||r},o);if(n&&o.initializer!==void 0){o.value=o.initializer?o.initializer.call(n):void 0;o.initializer=undefined}if(o.initializer===void 0){Object.defineProperty(e,t,o);o=null}return o}function m(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let w=(r=b("sap.fe.macros.form.FormContainerAPI"),i=p({type:"string"}),n=p({type:"boolean"}),o=f(),r(a=(l=(c=function(e){h(t,e);function t(t){var r;r=e.call(this,t,true)||this;d(r,"formContainerId",u,y(r));d(r,"showDetails",s,y(r));r.setParentBindingContext("internal",`controls/${r.formContainerId}`);return r}var r=t.prototype;r.toggleDetails=function e(){this.showDetails=!this.showDetails};return t}(t),c.isDependentBound=true,c),u=g(l.prototype,"formContainerId",[i],{configurable:true,enumerable:true,writable:true,initializer:null}),s=g(l.prototype,"showDetails",[n],{configurable:true,enumerable:true,writable:true,initializer:function(){return false}}),g(l.prototype,"toggleDetails",[o],Object.getOwnPropertyDescriptor(l.prototype,"toggleDetails"),l.prototype),l))||a);return w},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormContainerBuildingBlock-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/converters/controls/Common/Form", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/templating/DataModelPathHelper"], function (BuildingBlock, Form, MetaModelConverter, DataModelPathHelper) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14;
  var _exports = {};
  var getContextRelativeTargetObjectPath = DataModelPathHelper.getContextRelativeTargetObjectPath;
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  var createFormDefinition = Form.createFormDefinition;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockEvent = BuildingBlock.blockEvent;
  var blockAttribute = BuildingBlock.blockAttribute;
  var blockAggregation = BuildingBlock.blockAggregation;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let FormContainerBuildingBlock = (
  /**
   * @classdesc
   * Building block for creating a FormContainer based on the provided OData V4 metadata.
   *
   *
   * Usage example:
   * <pre>
   * &lt;macro:FormContainer
   *   id="SomeId"
   *   entitySet="{entitySet>}"
   *   dataFieldCollection ="{dataFieldCollection>}"
   *   title="someTitle"
   *   navigationPath="{ToSupplier}"
   *   visible=true
   *   onChange=".handlers.onFieldValueChange"
   * /&gt;
   * </pre>
   * @class sap.fe.macros.FormContainer
   * @hideconstructor
   * @private
   * @experimental
   */
  _dec = defineBuildingBlock({
    name: "FormContainer",
    namespace: "sap.fe.macros",
    fragment: "sap.fe.macros.form.FormContainer"
  }), _dec2 = blockAttribute({
    type: "string"
  }), _dec3 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true,
    isPublic: true,
    $kind: ["EntitySet", "NavigationProperty", "EntityType", "Singleton"]
  }), _dec4 = blockAttribute({
    type: "sap.ui.model.Context"
  }), _dec5 = blockAttribute({
    type: "sap.ui.model.Context",
    isPublic: true,
    required: true
  }), _dec6 = blockAttribute({
    type: "sap.ui.model.Context"
  }), _dec7 = blockAttribute({
    type: "boolean"
  }), _dec8 = blockAttribute({
    type: "string"
  }), _dec9 = blockAttribute({
    type: "sap.ui.core.TitleLevel",
    isPublic: true,
    defaultValue: "Auto"
  }), _dec10 = blockAttribute({
    type: "string"
  }), _dec11 = blockAttribute({
    type: "string"
  }), _dec12 = blockAttribute({
    type: "string",
    defaultValue: "sap/fe/macros/form/FormContainer.designtime"
  }), _dec13 = blockAttribute({
    type: "sap.ui.model.Context"
  }), _dec14 = blockAggregation({
    type: "sap.fe.macros.form.FormElement"
  }), _dec15 = blockEvent(), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(FormContainerBuildingBlock, _BuildingBlockBase);
    /**
     * Metadata path to the dataFieldCollection
     */

    /**
     * Control whether the form is in displayMode or not
     */

    /**
     * Title of the form container
     */

    /**
     * Defines the "aria-level" of the form title, titles of internally used form containers are nested subsequently
     */

    /**
     * Binding the form container using a navigation path
     */

    /**
     * Binding the visibility of the form container using an expression binding or Boolean
     */

    /**
     * Flex designtime settings to be applied
     */

    // Just proxied down to the Field may need to see if needed or not

    function FormContainerBuildingBlock(oProps, externalConfiguration, mSettings) {
      var _this;
      _this = _BuildingBlockBase.call(this, oProps) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "entitySet", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "dataFieldCollection", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "displayMode", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "title", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "titleLevel", _descriptor8, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "navigationPath", _descriptor9, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visible", _descriptor10, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "designtimeSettings", _descriptor11, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "actions", _descriptor12, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "formElements", _descriptor13, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "onChange", _descriptor14, _assertThisInitialized(_this));
      _this.entitySet = oProps.contextPath;
      if (_this.formElements && Object.keys(_this.formElements).length > 0) {
        const oContextObjectPath = getInvolvedDataModelObjects(_this.metaPath, _this.contextPath);
        const mExtraSettings = {};
        let oFacetDefinition = oContextObjectPath.targetObject;
        // Wrap the facet in a fake Facet annotation
        oFacetDefinition = {
          $Type: "com.sap.vocabularies.UI.v1.ReferenceFacet",
          Label: oFacetDefinition.Label,
          Target: {
            $target: oFacetDefinition,
            fullyQualifiedName: oFacetDefinition.fullyQualifiedName,
            path: "",
            term: "",
            type: "AnnotationPath",
            value: getContextRelativeTargetObjectPath(oContextObjectPath)
          },
          annotations: {},
          fullyQualifiedName: oFacetDefinition.fullyQualifiedName
        };
        mExtraSettings[oFacetDefinition.Target.value] = {
          fields: _this.formElements
        };
        const oConverterContext = _this.getConverterContext(oContextObjectPath, /*this.contextPath*/undefined, mSettings, mExtraSettings);
        const oFormDefinition = createFormDefinition(oFacetDefinition, "true", oConverterContext);
        _this.dataFieldCollection = oFormDefinition.formContainers[0].formElements;
      }
      return _this;
    }
    _exports = FormContainerBuildingBlock;
    return FormContainerBuildingBlock;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "entitySet", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "dataFieldCollection", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "displayMode", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return false;
    }
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "title", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "titleLevel", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "navigationPath", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "designtimeSettings", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "actions", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "formElements", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return {};
    }
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "onChange", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = FormContainerBuildingBlock;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormContainerBuildingBlock", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/converters/controls/Common/Form","sap/fe/core/converters/MetaModelConverter","sap/fe/core/templating/DataModelPathHelper"],function(e,t,r,i){"use strict";var n,a,l,o,u,c,s,f,p,b,m,d,g,y,v,h,z,w,P,C,E,O,x,j,k,F,B,S,M,T,L;var N={};var A=i.getContextRelativeTargetObjectPath;var D=r.getInvolvedDataModelObjects;var Q=t.createFormDefinition;var _=e.defineBuildingBlock;var R=e.BuildingBlockBase;var $=e.blockEvent;var q=e.blockAttribute;var I=e.blockAggregation;function V(e,t,r,i){if(!r)return;Object.defineProperty(e,t,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(i):void 0})}function H(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function U(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;G(e,t)}function G(e,t){G=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,r){t.__proto__=r;return t};return G(e,t)}function J(e,t,r,i,n){var a={};Object.keys(i).forEach(function(e){a[e]=i[e]});a.enumerable=!!a.enumerable;a.configurable=!!a.configurable;if("value"in a||a.initializer){a.writable=true}a=r.slice().reverse().reduce(function(r,i){return i(e,t,r)||r},a);if(n&&a.initializer!==void 0){a.value=a.initializer?a.initializer.call(n):void 0;a.initializer=undefined}if(a.initializer===void 0){Object.defineProperty(e,t,a);a=null}return a}function K(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let W=(n=_({name:"FormContainer",namespace:"sap.fe.macros",fragment:"sap.fe.macros.form.FormContainer"}),a=q({type:"string"}),l=q({type:"sap.ui.model.Context",required:true,isPublic:true,$kind:["EntitySet","NavigationProperty","EntityType","Singleton"]}),o=q({type:"sap.ui.model.Context"}),u=q({type:"sap.ui.model.Context",isPublic:true,required:true}),c=q({type:"sap.ui.model.Context"}),s=q({type:"boolean"}),f=q({type:"string"}),p=q({type:"sap.ui.core.TitleLevel",isPublic:true,defaultValue:"Auto"}),b=q({type:"string"}),m=q({type:"string"}),d=q({type:"string",defaultValue:"sap/fe/macros/form/FormContainer.designtime"}),g=q({type:"sap.ui.model.Context"}),y=I({type:"sap.fe.macros.form.FormElement"}),v=$(),n(h=(z=function(e){U(t,e);function t(t,r,i){var n;n=e.call(this,t)||this;V(n,"id",w,H(n));V(n,"contextPath",P,H(n));V(n,"entitySet",C,H(n));V(n,"metaPath",E,H(n));V(n,"dataFieldCollection",O,H(n));V(n,"displayMode",x,H(n));V(n,"title",j,H(n));V(n,"titleLevel",k,H(n));V(n,"navigationPath",F,H(n));V(n,"visible",B,H(n));V(n,"designtimeSettings",S,H(n));V(n,"actions",M,H(n));V(n,"formElements",T,H(n));V(n,"onChange",L,H(n));n.entitySet=t.contextPath;if(n.formElements&&Object.keys(n.formElements).length>0){const e=D(n.metaPath,n.contextPath);const t={};let r=e.targetObject;r={$Type:"com.sap.vocabularies.UI.v1.ReferenceFacet",Label:r.Label,Target:{$target:r,fullyQualifiedName:r.fullyQualifiedName,path:"",term:"",type:"AnnotationPath",value:A(e)},annotations:{},fullyQualifiedName:r.fullyQualifiedName};t[r.Target.value]={fields:n.formElements};const a=n.getConverterContext(e,undefined,i,t);const l=Q(r,"true",a);n.dataFieldCollection=l.formContainers[0].formElements}return n}N=t;return t}(R),w=J(z.prototype,"id",[a],{configurable:true,enumerable:true,writable:true,initializer:null}),P=J(z.prototype,"contextPath",[l],{configurable:true,enumerable:true,writable:true,initializer:null}),C=J(z.prototype,"entitySet",[o],{configurable:true,enumerable:true,writable:true,initializer:null}),E=J(z.prototype,"metaPath",[u],{configurable:true,enumerable:true,writable:true,initializer:null}),O=J(z.prototype,"dataFieldCollection",[c],{configurable:true,enumerable:true,writable:true,initializer:null}),x=J(z.prototype,"displayMode",[s],{configurable:true,enumerable:true,writable:true,initializer:function(){return false}}),j=J(z.prototype,"title",[f],{configurable:true,enumerable:true,writable:true,initializer:null}),k=J(z.prototype,"titleLevel",[p],{configurable:true,enumerable:true,writable:true,initializer:null}),F=J(z.prototype,"navigationPath",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),B=J(z.prototype,"visible",[m],{configurable:true,enumerable:true,writable:true,initializer:null}),S=J(z.prototype,"designtimeSettings",[d],{configurable:true,enumerable:true,writable:true,initializer:null}),M=J(z.prototype,"actions",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),T=J(z.prototype,"formElements",[y],{configurable:true,enumerable:true,writable:true,initializer:function(){return{}}}),L=J(z.prototype,"onChange",[v],{configurable:true,enumerable:true,writable:true,initializer:null}),z))||h);N=W;return N},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormDelegate-dbg", ["sap/fe/macros/CommonHelper", "sap/fe/macros/DelegateUtil", "sap/ui/model/json/JSONModel", "sap/ui/model/ListBinding"], function (Common, DelegateUtil, JSONModel, ListBinding) {
  "use strict";

  const Delegate = {
    /**
     * @param mPropertyBag Object with parameters as properties
     * @param mPropertyBag.modifier Modifier to harmonize access, creation and manipulation to controls in XML Views and JS Controls
     * @param [mPropertyBag.appComponent] Needed to calculate the correct ID in case you provide a selector
     * @param [mPropertyBag.view] XML node of the view, required for XML case to create nodes and to find elements
     * @param [mPropertyBag.fieldSelector] Selector to calculate the ID for the control that is created
     * @param mPropertyBag.bindingPath Runtime binding path the control should be bound to
     * @param mPropertyBag.payload Payload parameter attached to the delegate, undefined if no payload was assigned
     * @param mPropertyBag.controlType Control type of the element the delegate is attached to
     * @param mPropertyBag.aggregationName Name of the aggregation the delegate should provide additional elements
     * @param mPropertyBag.element
     * @param mPropertyBag.parentSelector
     * @returns Map containing the controls to add
     */
    createLayout: async function (mPropertyBag) {
      var _mPropertyBag$appComp;
      const oModifier = mPropertyBag.modifier,
        oMetaModel = (_mPropertyBag$appComp = mPropertyBag.appComponent) === null || _mPropertyBag$appComp === void 0 ? void 0 : _mPropertyBag$appComp.getMetaModel(),
        oForm = mPropertyBag.element;
      let sEntitySet = await DelegateUtil.getCustomData(oForm, "entitySet", oModifier);
      if (!sEntitySet) {
        sEntitySet = await DelegateUtil.getCustomData(oForm, "navigationPath", oModifier);
      }
      const sPath = sEntitySet.startsWith("/") ? `${sEntitySet}` : `/${sEntitySet}`;
      const oFormContainer = mPropertyBag.parentSelector ? mPropertyBag.modifier.bySelector(mPropertyBag.parentSelector, mPropertyBag.appComponent, mPropertyBag.view) : undefined;
      const sNavigationPath = await DelegateUtil.getCustomData(oFormContainer, "navigationPath", oModifier);
      const sBindingPath = sNavigationPath ? `${sPath}/${sNavigationPath}` : sPath;
      const oMetaModelContext = oMetaModel === null || oMetaModel === void 0 ? void 0 : oMetaModel.getMetaContext(sBindingPath);
      const oPropertyContext = oMetaModel === null || oMetaModel === void 0 ? void 0 : oMetaModel.createBindingContext(`${sBindingPath}/${mPropertyBag.bindingPath}`);
      const sFormId = mPropertyBag.element.sId || mPropertyBag.element.id;
      const oParameters = {
        sPropertyName: mPropertyBag.bindingPath,
        sBindingPath: sBindingPath,
        sValueHelpType: "FormVH",
        oControl: oForm,
        oMetaModel: oMetaModel,
        oModifier: oModifier
      };
      function fnTemplateValueHelp(sFragmentName) {
        var _mPropertyBag$fieldSe;
        const oThis = new JSONModel({
            id: sFormId,
            idPrefix: (_mPropertyBag$fieldSe = mPropertyBag.fieldSelector) === null || _mPropertyBag$fieldSe === void 0 ? void 0 : _mPropertyBag$fieldSe.id
          }),
          oPreprocessorSettings = {
            bindingContexts: {
              entitySet: oMetaModelContext,
              contextPath: oMetaModelContext,
              property: oPropertyContext,
              this: oThis.createBindingContext("/")
            },
            models: {
              this: oThis,
              entitySet: oMetaModel,
              contextPath: oMetaModel,
              metaModel: oMetaModel,
              property: oMetaModel
            }
          };
        return DelegateUtil.templateControlFragment(sFragmentName, oPreprocessorSettings, {}, oModifier);
      }
      async function fnTemplateFormElement(sFragmentName, oView, navigationPath) {
        var _mPropertyBag$fieldSe2;
        const sOnChangeCustomData = await DelegateUtil.getCustomData(oForm, "onChange", oModifier);
        const sDisplayModeCustomData = await DelegateUtil.getCustomData(oForm, "displayMode", oModifier);
        const oThis = new JSONModel({
          // properties and events of Field macro
          _flexId: (_mPropertyBag$fieldSe2 = mPropertyBag.fieldSelector) === null || _mPropertyBag$fieldSe2 === void 0 ? void 0 : _mPropertyBag$fieldSe2.id,
          onChange: Common.removeEscapeCharacters(sOnChangeCustomData),
          displayMode: Common.removeEscapeCharacters(sDisplayModeCustomData),
          navigationPath: navigationPath
        });
        const oPreprocessorSettings = {
          bindingContexts: {
            entitySet: oMetaModelContext,
            dataField: oPropertyContext,
            this: oThis.createBindingContext("/")
          },
          models: {
            this: oThis,
            entitySet: oMetaModel,
            metaModel: oMetaModel,
            dataField: oMetaModel
          }
        };
        return DelegateUtil.templateControlFragment(sFragmentName, oPreprocessorSettings, {
          view: oView
        }, oModifier);
      }
      const bValueHelpRequired = await DelegateUtil.isValueHelpRequired(oParameters);
      const bValueHelpExists = await DelegateUtil.doesValueHelpExist(oParameters);
      let oValueHelp;
      if (bValueHelpRequired && !bValueHelpExists) {
        oValueHelp = await fnTemplateValueHelp("sap.fe.macros.form.ValueHelpWrapper");
      }
      const oField = await fnTemplateFormElement("sap.fe.macros.form.FormElementFlexibility", mPropertyBag.view, sNavigationPath);
      return {
        control: oField,
        valueHelp: oValueHelp
      };
    },
    // getPropertyInfo is a patched version of ODataV4ReadDelegates to dela with navigationPath
    getPropertyInfo: function (mPropertyBag) {
      function _isComplexType(mProperty) {
        if (mProperty && mProperty.$Type) {
          if (mProperty.$Type.toLowerCase().indexOf("edm") !== 0) {
            return true;
          }
        }
        return false;
      }

      //Check if a given property path starts with a navigation property.
      function _startsWithNavigationProperty(sPropertyPath, aNavigationProperties) {
        return aNavigationProperties.some(function (sNavProp) {
          return sPropertyPath.startsWith(sNavProp);
        });
      }
      function _enrichProperty(sPropertyPath, mElement, mPropertyAnnotations, sEntityType, oElement, sAggregationName, aNavigationProperties) {
        const mProp = {
          name: sPropertyPath,
          bindingPath: sPropertyPath,
          entityType: sEntityType
        };
        // get label information, either via DataFieldDefault annotation (if exists) or Label annotation
        const mDataFieldDefaultAnnotation = mPropertyAnnotations["@com.sap.vocabularies.UI.v1.DataFieldDefault"];
        const sLabel = mDataFieldDefaultAnnotation && mDataFieldDefaultAnnotation.Label || mPropertyAnnotations["@com.sap.vocabularies.Common.v1.Label"];
        mProp.label = sLabel || "[LABEL_MISSING: " + sPropertyPath + "]";
        // evaluate Hidden annotation
        const mHiddenAnnotation = mPropertyAnnotations["@com.sap.vocabularies.UI.v1.Hidden"];
        mProp.hideFromReveal = mHiddenAnnotation;
        if (mHiddenAnnotation && mHiddenAnnotation.$Path) {
          var _oElement$getBindingC;
          mProp.hideFromReveal = (_oElement$getBindingC = oElement.getBindingContext()) === null || _oElement$getBindingC === void 0 ? void 0 : _oElement$getBindingC.getProperty(mHiddenAnnotation.$Path);
        }
        // evaluate FieldControl annotation
        let mFieldControlAnnotation;
        if (!mProp.hideFromReveal) {
          mFieldControlAnnotation = mPropertyAnnotations["@com.sap.vocabularies.Common.v1.FieldControl"];
          if (mFieldControlAnnotation) {
            mProp.hideFromReveal = mFieldControlAnnotation.$EnumMember === "com.sap.vocabularies.Common.v1.FieldControlType/Hidden";
          }
        }
        // @runtime hidden by field control value = 0
        mFieldControlAnnotation = mPropertyAnnotations["@com.sap.vocabularies.Common.v1.FieldControl"];
        const sFieldControlPath = mFieldControlAnnotation && mFieldControlAnnotation.Path;
        if (sFieldControlPath && !mProp.hideFromReveal) {
          // if the binding is a list binding, skip the check for field control
          const bListBinding = oElement.getBinding(sAggregationName) instanceof ListBinding;
          if (!bListBinding) {
            var _oElement$getBindingC2;
            const iFieldControlValue = (_oElement$getBindingC2 = oElement.getBindingContext()) === null || _oElement$getBindingC2 === void 0 ? void 0 : _oElement$getBindingC2.getProperty(sFieldControlPath);
            mProp.hideFromReveal = iFieldControlValue === 0;
          }
        }
        // no support for DataFieldFor/WithAction and DataFieldFor/WithIntentBasedNavigation within DataFieldDefault annotation
        if (mDataFieldDefaultAnnotation && (mDataFieldDefaultAnnotation.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAction" || mDataFieldDefaultAnnotation.$Type === "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation" || mDataFieldDefaultAnnotation.$Type === "com.sap.vocabularies.UI.v1.DataFieldWithAction" || mDataFieldDefaultAnnotation.$Type === "com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation")) {
          mProp.unsupported = true;
        }
        // no support for navigation properties and complex properties
        if (_startsWithNavigationProperty(sPropertyPath, aNavigationProperties) || _isComplexType(mElement)) {
          mProp.unsupported = true;
        }
        return mProp;
      }

      // Convert metadata format to delegate format.
      function _convertMetadataToDelegateFormat(mODataEntityType, sEntityType, oMetaModel, oElement, sAggregationName) {
        const aProperties = [];
        let sElementName = "";
        const aNavigationProperties = [];
        let mElement;
        for (sElementName in mODataEntityType) {
          mElement = mODataEntityType[sElementName];
          if (mElement.$kind === "NavigationProperty") {
            aNavigationProperties.push(sElementName);
          }
        }
        for (sElementName in mODataEntityType) {
          mElement = mODataEntityType[sElementName];
          if (mElement.$kind === "Property") {
            const mPropAnnotations = oMetaModel.getObject("/" + sEntityType + "/" + sElementName + "@");
            const mProp = _enrichProperty(sElementName, mElement, mPropAnnotations, sEntityType, oElement, sAggregationName, aNavigationProperties);
            aProperties.push(mProp);
          }
        }
        return aProperties;
      }

      //Get binding path either from payload (if available) or the element's binding context.
      function _getBindingPath(oElement, mPayload) {
        if (mPayload.path) {
          return mPayload.path;
        }
        const vBinding = oElement.getBindingContext();
        if (vBinding) {
          if (oElement.data("navigationPath")) {
            return vBinding.getPath() + "/" + oElement.data("navigationPath");
          }
          return vBinding.getPath();
        }
      }

      //Get all properties of the element's model.
      function _getODataPropertiesOfModel(oElement, sAggregationName, mPayload) {
        const oModel = oElement.getModel(mPayload.modelName);
        if (oModel) {
          if (oModel.isA("sap.ui.model.odata.v4.ODataModel")) {
            const oMetaModel = oModel.getMetaModel();
            const sBindingContextPath = _getBindingPath(oElement, mPayload);
            if (sBindingContextPath) {
              const oMetaModelContext = oMetaModel.getMetaContext(sBindingContextPath);
              const oMetaModelContextObject = oMetaModelContext.getObject();
              const mODataEntityType = oMetaModelContext.getObject(oMetaModelContextObject.$Type);
              return _convertMetadataToDelegateFormat(mODataEntityType, oMetaModelContextObject.$Type, oMetaModel, oElement, sAggregationName);
            }
          }
        }
        return Promise.resolve([]);
      }
      return Promise.resolve().then(function () {
        return _getODataPropertiesOfModel(mPropertyBag.element, mPropertyBag.aggregationName, mPropertyBag.payload);
      });
    }
  };
  return Delegate;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormDelegate", ["sap/fe/macros/CommonHelper","sap/fe/macros/DelegateUtil","sap/ui/model/json/JSONModel","sap/ui/model/ListBinding"],function(e,t,o,n){"use strict";const a={createLayout:async function(n){var a;const i=n.modifier,r=(a=n.appComponent)===null||a===void 0?void 0:a.getMetaModel(),s=n.element;let l=await t.getCustomData(s,"entitySet",i);if(!l){l=await t.getCustomData(s,"navigationPath",i)}const c=l.startsWith("/")?`${l}`:`/${l}`;const d=n.parentSelector?n.modifier.bySelector(n.parentSelector,n.appComponent,n.view):undefined;const u=await t.getCustomData(d,"navigationPath",i);const m=u?`${c}/${u}`:c;const p=r===null||r===void 0?void 0:r.getMetaContext(m);const v=r===null||r===void 0?void 0:r.createBindingContext(`${m}/${n.bindingPath}`);const f=n.element.sId||n.element.id;const g={sPropertyName:n.bindingPath,sBindingPath:m,sValueHelpType:"FormVH",oControl:s,oMetaModel:r,oModifier:i};function h(e){var a;const s=new o({id:f,idPrefix:(a=n.fieldSelector)===null||a===void 0?void 0:a.id}),l={bindingContexts:{entitySet:p,contextPath:p,property:v,this:s.createBindingContext("/")},models:{this:s,entitySet:r,contextPath:r,metaModel:r,property:r}};return t.templateControlFragment(e,l,{},i)}async function y(a,l,c){var d;const u=await t.getCustomData(s,"onChange",i);const m=await t.getCustomData(s,"displayMode",i);const f=new o({_flexId:(d=n.fieldSelector)===null||d===void 0?void 0:d.id,onChange:e.removeEscapeCharacters(u),displayMode:e.removeEscapeCharacters(m),navigationPath:c});const g={bindingContexts:{entitySet:p,dataField:v,this:f.createBindingContext("/")},models:{this:f,entitySet:r,metaModel:r,dataField:r}};return t.templateControlFragment(a,g,{view:l},i)}const C=await t.isValueHelpRequired(g);const P=await t.doesValueHelpExist(g);let b;if(C&&!P){b=await h("sap.fe.macros.form.ValueHelpWrapper")}const F=await y("sap.fe.macros.form.FormElementFlexibility",n.view,u);return{control:F,valueHelp:b}},getPropertyInfo:function(e){function t(e){if(e&&e.$Type){if(e.$Type.toLowerCase().indexOf("edm")!==0){return true}}return false}function o(e,t){return t.some(function(t){return e.startsWith(t)})}function a(e,a,i,r,s,l,c){const d={name:e,bindingPath:e,entityType:r};const u=i["@com.sap.vocabularies.UI.v1.DataFieldDefault"];const m=u&&u.Label||i["@com.sap.vocabularies.Common.v1.Label"];d.label=m||"[LABEL_MISSING: "+e+"]";const p=i["@com.sap.vocabularies.UI.v1.Hidden"];d.hideFromReveal=p;if(p&&p.$Path){var v;d.hideFromReveal=(v=s.getBindingContext())===null||v===void 0?void 0:v.getProperty(p.$Path)}let f;if(!d.hideFromReveal){f=i["@com.sap.vocabularies.Common.v1.FieldControl"];if(f){d.hideFromReveal=f.$EnumMember==="com.sap.vocabularies.Common.v1.FieldControlType/Hidden"}}f=i["@com.sap.vocabularies.Common.v1.FieldControl"];const g=f&&f.Path;if(g&&!d.hideFromReveal){const e=s.getBinding(l)instanceof n;if(!e){var h;const e=(h=s.getBindingContext())===null||h===void 0?void 0:h.getProperty(g);d.hideFromReveal=e===0}}if(u&&(u.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAction"||u.$Type==="com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation"||u.$Type==="com.sap.vocabularies.UI.v1.DataFieldWithAction"||u.$Type==="com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation")){d.unsupported=true}if(o(e,c)||t(a)){d.unsupported=true}return d}function i(e,t,o,n,i){const r=[];let s="";const l=[];let c;for(s in e){c=e[s];if(c.$kind==="NavigationProperty"){l.push(s)}}for(s in e){c=e[s];if(c.$kind==="Property"){const e=o.getObject("/"+t+"/"+s+"@");const d=a(s,c,e,t,n,i,l);r.push(d)}}return r}function r(e,t){if(t.path){return t.path}const o=e.getBindingContext();if(o){if(e.data("navigationPath")){return o.getPath()+"/"+e.data("navigationPath")}return o.getPath()}}function s(e,t,o){const n=e.getModel(o.modelName);if(n){if(n.isA("sap.ui.model.odata.v4.ODataModel")){const a=n.getMetaModel();const s=r(e,o);if(s){const o=a.getMetaContext(s);const n=o.getObject();const r=o.getObject(n.$Type);return i(r,n.$Type,a,e,t)}}}return Promise.resolve([])}return Promise.resolve().then(function(){return s(e.element,e.aggregationName,e.payload)})}};return a},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormElementBlock-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/converters/MetaModelConverter"], function (BuildingBlock, BuildingBlockRuntime, MetaModelConverter) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;
  var _exports = {};
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockAttribute = BuildingBlock.blockAttribute;
  var blockAggregation = BuildingBlock.blockAggregation;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let FormElementBlock = (
  /**
   * Building block used to create a form element based on the metadata provided by OData V4.
   *
   * @public
   * @since 1.90.0
   */
  _dec = defineBuildingBlock({
    name: "FormElement",
    namespace: "sap.fe.macros"
  }), _dec2 = blockAttribute({
    type: "string",
    required: true
  }), _dec3 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true
  }), _dec4 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true
  }), _dec5 = blockAttribute({
    type: "string"
  }), _dec6 = blockAttribute({
    type: "boolean"
  }), _dec7 = blockAttribute({
    type: "string"
  }), _dec8 = blockAggregation({
    type: "sap.ui.core.Control",
    slot: "fields",
    isDefault: true
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(FormElementBlock, _BuildingBlockBase);
    /**
     * The identifier of the FormElement building block.
     *
     * @public
     */

    /**
     * Defines the path of the context used in the current page or block.
     * This setting is defined by the framework.
     *
     * @public
     */

    /**
     * Defines the relative path of the property in the metamodel, based on the current contextPath.
     *
     * @public
     */

    /**
     * Label shown for the field. If not set, the label from the annotations will be shown.
     *
     * @public
     */

    /**
     * If set to false, the FormElement is not rendered.
     *
     * @public
     */

    /**
     * Optional aggregation of controls that should be displayed inside the FormElement.
     * If not set, a default Field building block will be rendered
     *
     * @public
     */

    function FormElementBlock(oProps, configuration, mSettings) {
      var _this;
      _this = _BuildingBlockBase.call(this, oProps, configuration, mSettings) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "label", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visible", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "key", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "fields", _descriptor7, _assertThisInitialized(_this));
      const oContextObjectPath = getInvolvedDataModelObjects(_this.metaPath, _this.contextPath);
      if (_this.label === undefined) {
        var _annotations$Common, _annotations$Common$L;
        _this.label = ((_annotations$Common = oContextObjectPath.targetObject.annotations.Common) === null || _annotations$Common === void 0 ? void 0 : (_annotations$Common$L = _annotations$Common.Label) === null || _annotations$Common$L === void 0 ? void 0 : _annotations$Common$L.toString()) ?? "";
      }
      return _this;
    }
    _exports = FormElementBlock;
    var _proto = FormElementBlock.prototype;
    _proto.getFields = function getFields() {
      if (this.fields) {
        return xml`<slot name="fields" />`;
      } else {
        return xml`<macros:Field
						metaPath="${this.metaPath}"
						contextPath="${this.contextPath}"
						id="${this.createId("FormElementField")}" />`;
      }
    };
    _proto.getTemplate = function getTemplate() {
      return xml`<f:FormElement xmlns:f="sap.ui.layout.form" id="${this.id}"
			key="${this.key}"
			label="${this.label}"
			visible="${this.visible}">
			<f:fields>
				${this.getFields()}
			</f:fields>
		</f:FormElement>`;
    };
    return FormElementBlock;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "label", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "key", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "fields", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = FormElementBlock;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormElementBlock", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/converters/MetaModelConverter"],function(e,t,i){"use strict";var r,l,n,a,o,u,s,c,f,b,d,p,m,v,g,h,y;var z={};var P=i.getInvolvedDataModelObjects;var w=t.xml;var k=e.defineBuildingBlock;var B=e.BuildingBlockBase;var O=e.blockAttribute;var x=e.blockAggregation;function j(e,t,i,r){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(r):void 0})}function F(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function $(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;E(e,t)}function E(e,t){E=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return E(e,t)}function C(e,t,i,r,l){var n={};Object.keys(r).forEach(function(e){n[e]=r[e]});n.enumerable=!!n.enumerable;n.configurable=!!n.configurable;if("value"in n||n.initializer){n.writable=true}n=i.slice().reverse().reduce(function(i,r){return r(e,t,i)||i},n);if(l&&n.initializer!==void 0){n.value=n.initializer?n.initializer.call(l):void 0;n.initializer=undefined}if(n.initializer===void 0){Object.defineProperty(e,t,n);n=null}return n}function _(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let q=(r=k({name:"FormElement",namespace:"sap.fe.macros"}),l=O({type:"string",required:true}),n=O({type:"sap.ui.model.Context",required:true}),a=O({type:"sap.ui.model.Context",required:true}),o=O({type:"string"}),u=O({type:"boolean"}),s=O({type:"string"}),c=x({type:"sap.ui.core.Control",slot:"fields",isDefault:true}),r(f=(b=function(e){$(t,e);function t(t,i,r){var l;l=e.call(this,t,i,r)||this;j(l,"id",d,F(l));j(l,"contextPath",p,F(l));j(l,"metaPath",m,F(l));j(l,"label",v,F(l));j(l,"visible",g,F(l));j(l,"key",h,F(l));j(l,"fields",y,F(l));const n=P(l.metaPath,l.contextPath);if(l.label===undefined){var a,o;l.label=((a=n.targetObject.annotations.Common)===null||a===void 0?void 0:(o=a.Label)===null||o===void 0?void 0:o.toString())??""}return l}z=t;var i=t.prototype;i.getFields=function e(){if(this.fields){return w`<slot name="fields" />`}else{return w`<macros:Field
						metaPath="${this.metaPath}"
						contextPath="${this.contextPath}"
						id="${this.createId("FormElementField")}" />`}};i.getTemplate=function e(){return w`<f:FormElement xmlns:f="sap.ui.layout.form" id="${this.id}"
			key="${this.key}"
			label="${this.label}"
			visible="${this.visible}">
			<f:fields>
				${this.getFields()}
			</f:fields>
		</f:FormElement>`};return t}(B),d=C(b.prototype,"id",[l],{configurable:true,enumerable:true,writable:true,initializer:null}),p=C(b.prototype,"contextPath",[n],{configurable:true,enumerable:true,writable:true,initializer:null}),m=C(b.prototype,"metaPath",[a],{configurable:true,enumerable:true,writable:true,initializer:null}),v=C(b.prototype,"label",[o],{configurable:true,enumerable:true,writable:true,initializer:null}),g=C(b.prototype,"visible",[u],{configurable:true,enumerable:true,writable:true,initializer:null}),h=C(b.prototype,"key",[s],{configurable:true,enumerable:true,writable:true,initializer:null}),y=C(b.prototype,"fields",[c],{configurable:true,enumerable:true,writable:true,initializer:null}),b))||f);z=q;return z},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormHelper-dbg", ["sap/ui/core/library"], function (library) {
  "use strict";

  var TitleLevel = library.TitleLevel;
  /**
   * Helper class used by MDC controls for OData(V4) specific handling
   *
   * @private
   * @experimental This module is only for internal/experimental use!
   */
  const FormHelper = {
    /*
     * Method that checks, if a reference facet needs to be assigned to either "blocks" or "moreBlocks" (tagged by subsection property "partOfPreview!)
     * @function isReferenceFacetPartOfPreview
     * @memberof sap.fe.macros.form.FormHelper.js
     * @param {Object} - oReferenceFacet : Reference facet that needs to be assigned
     * @param {String} - sPartOfPreview : Subsection property "partOfPreview" that needs to aligned with the reference facet's annotation "PartOfPreview!
     * @return : {boolean} True, if the ReferenceFacet has the same annotation as the subsection's property "partOfPreview"
     */
    isReferenceFacetPartOfPreview: function (oReferenceFacet, sPartOfPreview) {
      sPartOfPreview = sPartOfPreview.toString();
      if (oReferenceFacet.$Type === "com.sap.vocabularies.UI.v1.ReferenceFacet") {
        const annotatedTerm = oReferenceFacet["@com.sap.vocabularies.UI.v1.PartOfPreview"];
        return sPartOfPreview === "true" && annotatedTerm !== false || sPartOfPreview === "false" && annotatedTerm === false;
      }
      return false;
    },
    /**
     * Creates and returns a select query with the selected fields from the parameters passed.
     *
     * @param aSemanticKeys SemanticKeys included in the entity set
     * @returns The fields to be included in the select query
     */
    create$Select: function (aSemanticKeys) {
      let sSelectedFields = "";
      aSemanticKeys.forEach(function (oSemanticKey) {
        sSelectedFields += sSelectedFields ? `,${oSemanticKey.$PropertyPath}` : oSemanticKey.$PropertyPath;
      });
      return sSelectedFields;
    },
    /**
     * Generates the binding expression for the form.
     *
     * @param sNavigationPath The navigation path defined for the entity
     * @param aSemanticKeys SemanticKeys included in the entity set
     * @returns The Binding expression including path and $select query as parameter depending on the function parameters
     */
    generateBindingExpression: function (sNavigationPath, aSemanticKeys) {
      if (!sNavigationPath && !aSemanticKeys) {
        return "";
      }
      const oBinding = {
        path: sNavigationPath || ""
      };
      if (aSemanticKeys) {
        oBinding.parameters = {
          $select: FormHelper.create$Select(aSemanticKeys)
        };
      }
      return JSON.stringify(oBinding);
    },
    /**
     * Calculates the title level for the containers in this form.
     *
     * If there is no form title, the form containers get the same header level as the form, otherwise the levels are incremented to reflect the deeper nesting.
     *
     * @param [title] The title of the form
     * @param [titleLevel] The title level of the form
     * @returns The title level of the form containers
     */
    getFormContainerTitleLevel: function (title, titleLevel) {
      if (!title) {
        return titleLevel;
      }
      switch (titleLevel) {
        case TitleLevel.H1:
          return TitleLevel.H2;
        case TitleLevel.H2:
          return TitleLevel.H3;
        case TitleLevel.H3:
          return TitleLevel.H4;
        case TitleLevel.H4:
          return TitleLevel.H5;
        case TitleLevel.H5:
        case TitleLevel.H6:
          return TitleLevel.H6;
        default:
          return TitleLevel.Auto;
      }
    }
  };
  return FormHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/form/FormHelper", ["sap/ui/core/library"],function(e){"use strict";var r=e.TitleLevel;const t={isReferenceFacetPartOfPreview:function(e,r){r=r.toString();if(e.$Type==="com.sap.vocabularies.UI.v1.ReferenceFacet"){const t=e["@com.sap.vocabularies.UI.v1.PartOfPreview"];return r==="true"&&t!==false||r==="false"&&t===false}return false},create$Select:function(e){let r="";e.forEach(function(e){r+=r?`,${e.$PropertyPath}`:e.$PropertyPath});return r},generateBindingExpression:function(e,r){if(!e&&!r){return""}const n={path:e||""};if(r){n.parameters={$select:t.create$Select(r)}}return JSON.stringify(n)},getFormContainerTitleLevel:function(e,t){if(!e){return t}switch(t){case r.H1:return r.H2;case r.H2:return r.H3;case r.H3:return r.H4;case r.H4:return r.H5;case r.H5:case r.H6:return r.H6;default:return r.Auto}}};return t},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/fpm/CustomFragment.block-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime"], function (BuildingBlock, BuildingBlockRuntime) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _class, _class2, _descriptor, _descriptor2, _descriptor3;
  var _exports = {};
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let CustomFragment = (
  /**
   * Content of a custom fragment
   *
   * @private
   * @experimental
   */
  _dec = defineBuildingBlock({
    name: "CustomFragment",
    namespace: "sap.fe.macros.fpm"
  }), _dec2 = blockAttribute({
    type: "string",
    required: true
  }), _dec3 = blockAttribute({
    type: "sap.ui.model.Context",
    required: false
  }), _dec4 = blockAttribute({
    type: "string",
    required: true
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(CustomFragment, _BuildingBlockBase);
    function CustomFragment() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _BuildingBlockBase.call(this, ...args) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "fragmentName", _descriptor3, _assertThisInitialized(_this));
      return _this;
    }
    _exports = CustomFragment;
    var _proto = CustomFragment.prototype;
    /**
     * The building block template function.
     *
     * @returns An XML-based string
     */
    _proto.getTemplate = function getTemplate() {
      const fragmentInstanceName = this.fragmentName + "-JS".replace(/\//g, ".");
      return xml`<core:Fragment
			xmlns:compo="http://schemas.sap.com/sapui5/extension/sap.ui.core.xmlcomposite/1"
			fragmentName="${fragmentInstanceName}"
			id="${this.id}"
			type="CUSTOM"
		>
			<compo:fragmentContent>
				<core:FragmentDefinition>
					<core:Fragment fragmentName="${this.fragmentName}" type="XML" />
				</core:FragmentDefinition>
			</compo:fragmentContent>
		</core:Fragment>`;
    };
    return CustomFragment;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "fragmentName", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = CustomFragment;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/fpm/CustomFragment.block", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime"],function(e,t){"use strict";var r,i,n,a,o,l,u,c,f;var s={};var p=t.xml;var m=e.defineBuildingBlock;var b=e.BuildingBlockBase;var d=e.blockAttribute;function g(e,t,r,i){if(!r)return;Object.defineProperty(e,t,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(i):void 0})}function v(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function y(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;h(e,t)}function h(e,t){h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,r){t.__proto__=r;return t};return h(e,t)}function w(e,t,r,i,n){var a={};Object.keys(i).forEach(function(e){a[e]=i[e]});a.enumerable=!!a.enumerable;a.configurable=!!a.configurable;if("value"in a||a.initializer){a.writable=true}a=r.slice().reverse().reduce(function(r,i){return i(e,t,r)||r},a);if(n&&a.initializer!==void 0){a.value=a.initializer?a.initializer.call(n):void 0;a.initializer=undefined}if(a.initializer===void 0){Object.defineProperty(e,t,a);a=null}return a}function z(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let B=(r=m({name:"CustomFragment",namespace:"sap.fe.macros.fpm"}),i=d({type:"string",required:true}),n=d({type:"sap.ui.model.Context",required:false}),a=d({type:"string",required:true}),r(o=(l=function(e){y(t,e);function t(){var t;for(var r=arguments.length,i=new Array(r),n=0;n<r;n++){i[n]=arguments[n]}t=e.call(this,...i)||this;g(t,"id",u,v(t));g(t,"contextPath",c,v(t));g(t,"fragmentName",f,v(t));return t}s=t;var r=t.prototype;r.getTemplate=function e(){const t=this.fragmentName+"-JS".replace(/\//g,".");return p`<core:Fragment
			xmlns:compo="http://schemas.sap.com/sapui5/extension/sap.ui.core.xmlcomposite/1"
			fragmentName="${t}"
			id="${this.id}"
			type="CUSTOM"
		>
			<compo:fragmentContent>
				<core:FragmentDefinition>
					<core:Fragment fragmentName="${this.fragmentName}" type="XML" />
				</core:FragmentDefinition>
			</compo:fragmentContent>
		</core:Fragment>`};return t}(b),u=w(l.prototype,"id",[i],{configurable:true,enumerable:true,writable:true,initializer:null}),c=w(l.prototype,"contextPath",[n],{configurable:true,enumerable:true,writable:true,initializer:null}),f=w(l.prototype,"fragmentName",[a],{configurable:true,enumerable:true,writable:true,initializer:null}),l))||o);s=B;return s},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/ActionCommand.block-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime"], function (BuildingBlock, BuildingBlockRuntime) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8;
  var _exports = {};
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockEvent = BuildingBlock.blockEvent;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let ActionCommand = (
  /**
   * Content of an action command
   *
   * @private
   * @experimental
   */
  _dec = defineBuildingBlock({
    name: "ActionCommand",
    namespace: "sap.fe.macros.internal"
  }), _dec2 = blockAttribute({
    type: "string",
    required: true
  }), _dec3 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true
  }), _dec4 = blockAttribute({
    type: "boolean"
  }), _dec5 = blockAttribute({
    type: "boolean"
  }), _dec6 = blockAttribute({
    type: "boolean"
  }), _dec7 = blockEvent(), _dec8 = blockEvent(), _dec9 = blockEvent(), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(ActionCommand, _BuildingBlockBase);
    function ActionCommand() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _BuildingBlockBase.call(this, ...args) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "action", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "isActionEnabled", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "isIBNEnabled", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visible", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "onExecuteAction", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "onExecuteIBN", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "onExecuteManifest", _descriptor8, _assertThisInitialized(_this));
      return _this;
    }
    _exports = ActionCommand;
    var _proto = ActionCommand.prototype;
    /**
     * The building block template function.
     *
     * @returns An XML-based string
     */
    _proto.getTemplate = function getTemplate() {
      let execute;
      let enabled;
      switch (this.action.type) {
        case "ForAction":
          execute = this.onExecuteAction;
          enabled = this.isActionEnabled !== undefined ? this.isActionEnabled : this.action.enabled;
          break;
        case "ForNavigation":
          execute = this.onExecuteIBN;
          enabled = this.isIBNEnabled !== undefined ? this.isIBNEnabled : this.action.enabled;
          break;
        default:
          execute = this.onExecuteManifest;
          enabled = this.action.enabled;
          break;
      }
      return xml`
		<control:CommandExecution
			xmlns:control="sap.fe.core.controls"
			core:require="{FPM: 'sap/fe/core/helpers/FPMHelper'}"
			execute="${execute}"
			enabled="${enabled}"
			visible="${this.visible !== undefined ? this.visible : this.action.visible}"
			command="${this.action.command}"
		/>`;
    };
    return ActionCommand;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "action", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "isActionEnabled", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "isIBNEnabled", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "onExecuteAction", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return "";
    }
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "onExecuteIBN", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return "";
    }
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "onExecuteManifest", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return "";
    }
  })), _class2)) || _class);
  _exports = ActionCommand;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/ActionCommand.block", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime"],function(e,i){"use strict";var t,r,n,o,a,l,u,c,s,b,f,d,p,m,h,v,y,g,E;var B={};var w=i.xml;var z=e.defineBuildingBlock;var x=e.BuildingBlockBase;var k=e.blockEvent;var A=e.blockAttribute;function N(e,i,t,r){if(!t)return;Object.defineProperty(e,i,{enumerable:t.enumerable,configurable:t.configurable,writable:t.writable,value:t.initializer?t.initializer.call(r):void 0})}function O(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function I(e,i){e.prototype=Object.create(i.prototype);e.prototype.constructor=e;P(e,i)}function P(e,i){P=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(i,t){i.__proto__=t;return i};return P(e,i)}function j(e,i,t,r,n){var o={};Object.keys(r).forEach(function(e){o[e]=r[e]});o.enumerable=!!o.enumerable;o.configurable=!!o.configurable;if("value"in o||o.initializer){o.writable=true}o=t.slice().reverse().reduce(function(t,r){return r(e,i,t)||t},o);if(n&&o.initializer!==void 0){o.value=o.initializer?o.initializer.call(n):void 0;o.initializer=undefined}if(o.initializer===void 0){Object.defineProperty(e,i,o);o=null}return o}function M(e,i){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let F=(t=z({name:"ActionCommand",namespace:"sap.fe.macros.internal"}),r=A({type:"string",required:true}),n=A({type:"sap.ui.model.Context",required:true}),o=A({type:"boolean"}),a=A({type:"boolean"}),l=A({type:"boolean"}),u=k(),c=k(),s=k(),t(b=(f=function(e){I(i,e);function i(){var i;for(var t=arguments.length,r=new Array(t),n=0;n<t;n++){r[n]=arguments[n]}i=e.call(this,...r)||this;N(i,"id",d,O(i));N(i,"action",p,O(i));N(i,"isActionEnabled",m,O(i));N(i,"isIBNEnabled",h,O(i));N(i,"visible",v,O(i));N(i,"onExecuteAction",y,O(i));N(i,"onExecuteIBN",g,O(i));N(i,"onExecuteManifest",E,O(i));return i}B=i;var t=i.prototype;t.getTemplate=function e(){let i;let t;switch(this.action.type){case"ForAction":i=this.onExecuteAction;t=this.isActionEnabled!==undefined?this.isActionEnabled:this.action.enabled;break;case"ForNavigation":i=this.onExecuteIBN;t=this.isIBNEnabled!==undefined?this.isIBNEnabled:this.action.enabled;break;default:i=this.onExecuteManifest;t=this.action.enabled;break}return w`
		<control:CommandExecution
			xmlns:control="sap.fe.core.controls"
			core:require="{FPM: 'sap/fe/core/helpers/FPMHelper'}"
			execute="${i}"
			enabled="${t}"
			visible="${this.visible!==undefined?this.visible:this.action.visible}"
			command="${this.action.command}"
		/>`};return i}(x),d=j(f.prototype,"id",[r],{configurable:true,enumerable:true,writable:true,initializer:null}),p=j(f.prototype,"action",[n],{configurable:true,enumerable:true,writable:true,initializer:null}),m=j(f.prototype,"isActionEnabled",[o],{configurable:true,enumerable:true,writable:true,initializer:null}),h=j(f.prototype,"isIBNEnabled",[a],{configurable:true,enumerable:true,writable:true,initializer:null}),v=j(f.prototype,"visible",[l],{configurable:true,enumerable:true,writable:true,initializer:null}),y=j(f.prototype,"onExecuteAction",[u],{configurable:true,enumerable:true,writable:true,initializer:function(){return""}}),g=j(f.prototype,"onExecuteIBN",[c],{configurable:true,enumerable:true,writable:true,initializer:function(){return""}}),E=j(f.prototype,"onExecuteManifest",[s],{configurable:true,enumerable:true,writable:true,initializer:function(){return""}}),f))||b);B=F;return B},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/DataPoint-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/templating/CriticalityFormatters", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/UIFormatters", "sap/fe/macros/field/FieldHelper", "sap/fe/macros/field/FieldTemplating", "sap/fe/macros/internal/helpers/DataPointTemplating"], function (BuildingBlock, BuildingBlockRuntime, MetaModelConverter, BindingToolkit, StableIdHelper, CriticalityFormatters, DataModelPathHelper, PropertyHelper, UIFormatters, FieldHelper, FieldTemplating, DataPointTemplating) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9;
  var _exports = {};
  var getValueFormatted = DataPointTemplating.getValueFormatted;
  var getHeaderRatingIndicatorText = DataPointTemplating.getHeaderRatingIndicatorText;
  var buildFieldBindingExpression = DataPointTemplating.buildFieldBindingExpression;
  var buildExpressionForProgressIndicatorPercentValue = DataPointTemplating.buildExpressionForProgressIndicatorPercentValue;
  var buildExpressionForProgressIndicatorDisplayValue = DataPointTemplating.buildExpressionForProgressIndicatorDisplayValue;
  var isUsedInNavigationWithQuickViewFacets = FieldTemplating.isUsedInNavigationWithQuickViewFacets;
  var getVisibleExpression = FieldTemplating.getVisibleExpression;
  var getSemanticObjects = FieldTemplating.getSemanticObjects;
  var getSemanticObjectExpressionToResolve = FieldTemplating.getSemanticObjectExpressionToResolve;
  var isProperty = PropertyHelper.isProperty;
  var hasUnit = PropertyHelper.hasUnit;
  var hasCurrency = PropertyHelper.hasCurrency;
  var getRelativePaths = DataModelPathHelper.getRelativePaths;
  var enhanceDataModelPath = DataModelPathHelper.enhanceDataModelPath;
  var buildExpressionForCriticalityIcon = CriticalityFormatters.buildExpressionForCriticalityIcon;
  var buildExpressionForCriticalityColor = CriticalityFormatters.buildExpressionForCriticalityColor;
  var generate = StableIdHelper.generate;
  var pathInModel = BindingToolkit.pathInModel;
  var notEqual = BindingToolkit.notEqual;
  var getExpressionFromAnnotation = BindingToolkit.getExpressionFromAnnotation;
  var formatResult = BindingToolkit.formatResult;
  var compileExpression = BindingToolkit.compileExpression;
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  var convertMetaModelContext = MetaModelConverter.convertMetaModelContext;
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let DataPoint = (_dec = defineBuildingBlock({
    name: "DataPoint",
    namespace: "sap.fe.macros.internal"
  }), _dec2 = blockAttribute({
    type: "string"
  }), _dec3 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true
  }), _dec4 = blockAttribute({
    type: "string"
  }), _dec5 = blockAttribute({
    type: "string"
  }), _dec6 = blockAttribute({
    type: "string"
  }), _dec7 = blockAttribute({
    type: "boolean"
  }), _dec8 = blockAttribute({
    type: "sap.ui.model.Context",
    required: false,
    computed: true
  }), _dec9 = blockAttribute({
    type: "object",
    validate: function (formatOptionsInput) {
      if (formatOptionsInput !== null && formatOptionsInput !== void 0 && formatOptionsInput.dataPointStyle && !["", "large"].includes(formatOptionsInput === null || formatOptionsInput === void 0 ? void 0 : formatOptionsInput.dataPointStyle)) {
        throw new Error(`Allowed value ${formatOptionsInput.dataPointStyle} for dataPointStyle does not match`);
      }
      if (formatOptionsInput !== null && formatOptionsInput !== void 0 && formatOptionsInput.displayMode && !["Value", "Description", "ValueDescription", "DescriptionValue"].includes(formatOptionsInput === null || formatOptionsInput === void 0 ? void 0 : formatOptionsInput.displayMode)) {
        throw new Error(`Allowed value ${formatOptionsInput.displayMode} for displayMode does not match`);
      }
      if (formatOptionsInput !== null && formatOptionsInput !== void 0 && formatOptionsInput.iconSize && !["1rem", "1.375rem", "2rem"].includes(formatOptionsInput === null || formatOptionsInput === void 0 ? void 0 : formatOptionsInput.iconSize)) {
        throw new Error(`Allowed value ${formatOptionsInput.iconSize} for iconSize does not match`);
      }
      if (formatOptionsInput !== null && formatOptionsInput !== void 0 && formatOptionsInput.measureDisplayMode && !["Hidden", "ReadOnly"].includes(formatOptionsInput === null || formatOptionsInput === void 0 ? void 0 : formatOptionsInput.measureDisplayMode)) {
        throw new Error(`Allowed value ${formatOptionsInput.measureDisplayMode} for measureDisplayMode does not match`);
      }
      return formatOptionsInput;
    }
  }), _dec10 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true,
    $kind: ["EntitySet", "NavigationProperty", "EntityType", "Singleton"]
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(DataPoint, _BuildingBlockBase);
    /**
     * Prefix added to the generated ID of the field
     */
    /**
     * Metadata path to the dataPoint.
     * This property is usually a metadataContext pointing to a DataPoint having
     * $Type = "com.sap.vocabularies.UI.v1.DataPointType"
     */
    /**
     * Property added to associate the label with the DataPoint
     */
    /**
     * Property to set the visualization type
     */
    /**
     * Property to set the visibility
     */
    /**
     * Property to set property for the quick view facets
     */
    /**
     * Context pointing to an array of the property's semantic objects
     */
    /**
     * Retrieves the templating objects to further process the DataPoint.
     *
     * @param context DataPointProperties or a DataPoint
     * @returns The models containing infos like the DataModelPath, ValueDataModelPath and DataPointConverted
     */
    DataPoint.getTemplatingObjects = function getTemplatingObjects(context) {
      var _internalDataModelPat, _internalDataModelPat2;
      const internalDataModelPath = getInvolvedDataModelObjects(context.metaPath, context.contextPath);
      let internalValueDataModelPath;
      context.visible = getVisibleExpression(internalDataModelPath);
      if (internalDataModelPath !== null && internalDataModelPath !== void 0 && (_internalDataModelPat = internalDataModelPath.targetObject) !== null && _internalDataModelPat !== void 0 && (_internalDataModelPat2 = _internalDataModelPat.Value) !== null && _internalDataModelPat2 !== void 0 && _internalDataModelPat2.path) {
        internalValueDataModelPath = enhanceDataModelPath(internalDataModelPath, internalDataModelPath.targetObject.Value.path);
      }
      const internalDataPointConverted = convertMetaModelContext(context.metaPath);
      return {
        dataModelPath: internalDataModelPath,
        valueDataModelPath: internalValueDataModelPath,
        dataPointConverted: internalDataPointConverted
      };
    }

    /**
     * Function that calculates the visualization type for this DataPoint.
     *
     * @param properties The datapoint properties
     * @returns The DataPointProperties with the optimized coding for the visualization type
     */;
    DataPoint.getDataPointVisualization = function getDataPointVisualization(properties) {
      var _valueProperty$annota, _valueProperty$annota2;
      const {
        dataModelPath,
        valueDataModelPath,
        dataPointConverted
      } = DataPoint.getTemplatingObjects(properties);
      if ((dataPointConverted === null || dataPointConverted === void 0 ? void 0 : dataPointConverted.Visualization) === "UI.VisualizationType/Rating") {
        properties.visualization = "Rating";
        return properties;
      }
      if ((dataPointConverted === null || dataPointConverted === void 0 ? void 0 : dataPointConverted.Visualization) === "UI.VisualizationType/Progress") {
        properties.visualization = "Progress";
        return properties;
      }
      const valueProperty = valueDataModelPath && valueDataModelPath.targetObject;
      //check whether the visualization type should be an object number in case one of the if conditions met
      if (!(isUsedInNavigationWithQuickViewFacets(dataModelPath, valueProperty) || valueProperty !== null && valueProperty !== void 0 && (_valueProperty$annota = valueProperty.annotations) !== null && _valueProperty$annota !== void 0 && (_valueProperty$annota2 = _valueProperty$annota.Common) !== null && _valueProperty$annota2 !== void 0 && _valueProperty$annota2.SemanticObject)) {
        if (isProperty(valueProperty) && (hasUnit(valueProperty) || hasCurrency(valueProperty))) {
          // we only show an objectNumber if there is no quickview and a unit or a currency
          properties.visualization = "ObjectNumber";
          return properties;
        }
      }

      //default case to handle this as objectStatus type
      properties.visualization = "ObjectStatus";
      return properties;
    }

    /**
     * Constructor method of the building block.
     *
     * @param properties The datapoint properties
     */;
    function DataPoint(properties) {
      var _this;
      //setup initial default property settings
      properties.semanticObjects = getSemanticObjects([]);
      properties.hasQuickViewFacets = false;
      properties.hasSemanticObjectOnNavigation = false;
      _this = _BuildingBlockBase.call(this, DataPoint.getDataPointVisualization(properties)) || this;
      _initializerDefineProperty(_this, "idPrefix", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "ariaLabelledBy", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visualization", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visible", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "hasQuickViewFacets", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "semanticObjects", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "formatOptions", _descriptor8, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor9, _assertThisInitialized(_this));
      return _this;
    }

    /**
     * The building block template for the rating indicator part.
     *
     * @returns An XML-based string with the definition of the rating indicator template
     */
    _exports = DataPoint;
    var _proto = DataPoint.prototype;
    _proto.getRatingIndicatorTemplate = function getRatingIndicatorTemplate() {
      var _dataPointValue$$targ;
      const {
        dataModelPath,
        valueDataModelPath,
        dataPointConverted
      } = DataPoint.getTemplatingObjects(this);
      const dataPointTarget = dataModelPath.targetObject;
      const targetValue = this.getTargetValueBinding();
      const dataPointValue = (dataPointTarget === null || dataPointTarget === void 0 ? void 0 : dataPointTarget.Value) || "";
      const propertyType = dataPointValue === null || dataPointValue === void 0 ? void 0 : (_dataPointValue$$targ = dataPointValue.$target) === null || _dataPointValue$$targ === void 0 ? void 0 : _dataPointValue$$targ.type;
      let numberOfFractionalDigits;
      if (propertyType === "Edm.Decimal" && dataPointTarget.ValueFormat) {
        if (dataPointTarget.ValueFormat.NumberOfFractionalDigits) {
          numberOfFractionalDigits = dataPointTarget.ValueFormat.NumberOfFractionalDigits;
        }
      }
      const value = getValueFormatted(valueDataModelPath, dataPointValue, propertyType, numberOfFractionalDigits);
      const text = getHeaderRatingIndicatorText(this.metaPath, dataPointTarget);
      let headerLabel = "";
      let targetLabel = "";
      const targetLabelExpression = compileExpression(formatResult([pathInModel("T_HEADER_RATING_INDICATOR_FOOTER", "sap.fe.i18n"), getExpressionFromAnnotation(dataPointConverted.Value, getRelativePaths(dataModelPath)), dataPointConverted.TargetValue ? getExpressionFromAnnotation(dataPointConverted.TargetValue, getRelativePaths(dataModelPath)) : "5"], "MESSAGE"));
      if (this.formatOptions.showLabels ?? false) {
        headerLabel = xml`<Label xmlns="sap.m"
					${this.attr("text", text)}
					${this.attr("visible", dataPointTarget.SampleSize || dataPointTarget.Description ? true : false)}
				/>`;
        targetLabel = xml`<Label
			xmlns="sap.m"
			core:require="{MESSAGE: 'sap/base/strings/formatMessage' }"
			${this.attr("text", targetLabelExpression)}
			visible="true" />`;
      }
      return xml`
		${headerLabel}
		<RatingIndicator
		xmlns="sap.m"

		${this.attr("id", this.idPrefix ? generate([this.idPrefix, "RatingIndicator-Field-display"]) : undefined)}
		${this.attr("maxValue", targetValue)}
		${this.attr("value", value)}
		${this.attr("tooltip", this.getTooltipValue())}
		${this.attr("iconSize", this.formatOptions.iconSize)}
		${this.attr("class", this.formatOptions.showLabels ?? false ? "sapUiTinyMarginTopBottom" : undefined)}
		editable="false"
	/>
	${targetLabel}`;
    }

    /**
     * The building block template for the progress indicator part.
     *
     * @returns An XML-based string with the definition of the progress indicator template
     */;
    _proto.getProgressIndicatorTemplate = function getProgressIndicatorTemplate() {
      var _this$formatOptions;
      const {
        dataModelPath,
        valueDataModelPath,
        dataPointConverted
      } = DataPoint.getTemplatingObjects(this);
      const criticalityColorExpression = buildExpressionForCriticalityColor(dataPointConverted, dataModelPath);
      const displayValue = buildExpressionForProgressIndicatorDisplayValue(dataModelPath);
      const percentValue = buildExpressionForProgressIndicatorPercentValue(dataModelPath);
      const dataPointTarget = dataModelPath.targetObject;
      let firstLabel = "";
      let secondLabel = "";
      if ((this === null || this === void 0 ? void 0 : (_this$formatOptions = this.formatOptions) === null || _this$formatOptions === void 0 ? void 0 : _this$formatOptions.showLabels) ?? false) {
        var _valueDataModelPath$t, _valueDataModelPath$t2, _valueDataModelPath$t3;
        firstLabel = xml`<Label
				xmlns="sap.m"
				${this.attr("text", dataPointTarget === null || dataPointTarget === void 0 ? void 0 : dataPointTarget.Description)}
				${this.attr("visible", !!(dataPointTarget !== null && dataPointTarget !== void 0 && dataPointTarget.Description))}
			/>`;

        // const secondLabelText = (valueDataModelPath?.targetObject as Property)?.annotations?.Common?.Label;
        const secondLabelExpression = getExpressionFromAnnotation(valueDataModelPath === null || valueDataModelPath === void 0 ? void 0 : (_valueDataModelPath$t = valueDataModelPath.targetObject) === null || _valueDataModelPath$t === void 0 ? void 0 : (_valueDataModelPath$t2 = _valueDataModelPath$t.annotations) === null || _valueDataModelPath$t2 === void 0 ? void 0 : (_valueDataModelPath$t3 = _valueDataModelPath$t2.Common) === null || _valueDataModelPath$t3 === void 0 ? void 0 : _valueDataModelPath$t3.Label);
        secondLabel = xml`<Label
				xmlns="sap.m"
				${this.attr("text", compileExpression(secondLabelExpression))}
				${this.attr("visible", !!compileExpression(notEqual(undefined, secondLabelExpression)))}
			/>`;
      }
      return xml`
		${firstLabel}
			<ProgressIndicator
				xmlns="sap.m"
				${this.attr("id", this.idPrefix ? generate([this.idPrefix, "ProgressIndicator-Field-display"]) : undefined)}
				${this.attr("displayValue", displayValue)}
				${this.attr("percentValue", percentValue)}
				${this.attr("state", criticalityColorExpression)}
				${this.attr("tooltip", this.getTooltipValue())}
			/>
			${secondLabel}`;
    }

    /**
     * The building block template for the object number common part.
     *
     * @returns An XML-based string with the definition of the object number common template
     */;
    _proto.getObjectNumberCommonTemplate = function getObjectNumberCommonTemplate() {
      const {
        dataModelPath,
        valueDataModelPath,
        dataPointConverted
      } = DataPoint.getTemplatingObjects(this);
      const criticalityColorExpression = buildExpressionForCriticalityColor(dataPointConverted, dataModelPath);
      const emptyIndicatorMode = this.formatOptions.showEmptyIndicator ?? false ? "On" : undefined;
      const objectStatusNumber = buildFieldBindingExpression(dataModelPath, this.formatOptions, true);
      const unit = this.formatOptions.measureDisplayMode === "Hidden" ? undefined : compileExpression(UIFormatters.getBindingForUnitOrCurrency(valueDataModelPath));
      return xml`<ObjectNumber
			xmlns="sap.m"
			${this.attr("id", this.idPrefix ? generate([this.idPrefix, "ObjectNumber-Field-display"]) : undefined)}
			core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}"
			${this.attr("state", criticalityColorExpression)}
			${this.attr("number", objectStatusNumber)}
			${this.attr("unit", unit)}
			${this.attr("visible", this.visible)}
			emphasized="false"
			${this.attr("class", this.formatOptions.dataPointStyle === "large" ? "sapMObjectNumberLarge" : undefined)}
			${this.attr("tooltip", this.getTooltipValue())}
			${this.attr("emptyIndicatorMode", emptyIndicatorMode)}
		/>`;
    }

    /**
     * The building block template for the object number.
     *
     * @returns An XML-based string with the definition of the object number template
     */;
    _proto.getObjectNumberTemplate = function getObjectNumberTemplate() {
      var _this$formatOptions2;
      const {
        valueDataModelPath
      } = DataPoint.getTemplatingObjects(this);
      if ((this === null || this === void 0 ? void 0 : (_this$formatOptions2 = this.formatOptions) === null || _this$formatOptions2 === void 0 ? void 0 : _this$formatOptions2.isAnalytics) ?? false) {
        return xml`
				<control:ConditionalWrapper
					xmlns:control="sap.fe.core.controls"
					${this.attr("condition", UIFormatters.hasValidAnalyticalCurrencyOrUnit(valueDataModelPath))}
				>
					<control:contentTrue>
						${this.getObjectNumberCommonTemplate()}
					</control:contentTrue>
					<control:contentFalse>
						<ObjectNumber
							xmlns="sap.m"
							${this.attr("id", this.idPrefix ? generate([this.idPrefix, "ObjectNumber-Field-display-differentUnit"]) : undefined)}
							number="*"
							unit=""
							${this.attr("visible", this.visible)}
							emphasized="false"
							${this.attr("class", this.formatOptions.dataPointStyle === "large" ? "sapMObjectNumberLarge" : undefined)}
						/>
					</control:contentFalse>
				</control:ConditionalWrapper>`;
      } else {
        return xml`${this.getObjectNumberCommonTemplate()}`;
      }
    }

    /**
     * Returns the dependent or an empty string.
     *
     * @returns Dependent either with the QuickView or an empty string.
     */;
    _proto.getObjectStatusDependentsTemplate = function getObjectStatusDependentsTemplate() {
      var _valueDataModelPath$t4, _valueDataModelPath$t5, _valueDataModelPath$t6;
      const {
        valueDataModelPath
      } = DataPoint.getTemplatingObjects(this);
      const hasSemanticObject = valueDataModelPath === null || valueDataModelPath === void 0 ? void 0 : (_valueDataModelPath$t4 = valueDataModelPath.targetObject) === null || _valueDataModelPath$t4 === void 0 ? void 0 : (_valueDataModelPath$t5 = _valueDataModelPath$t4.annotations) === null || _valueDataModelPath$t5 === void 0 ? void 0 : (_valueDataModelPath$t6 = _valueDataModelPath$t5.Common) === null || _valueDataModelPath$t6 === void 0 ? void 0 : _valueDataModelPath$t6.SemanticObject;
      if (this.hasQuickViewFacets || hasSemanticObject) {
        return `<dependents><macro:QuickView
						xmlns:macro="sap.fe.macros"
						dataField="{metaPath>}"
						semanticObject="${this.semanticObject}"
						contextPath="{contextPath>}"
					/></dependents>`;
      }
      return "";
    }

    /**
     * The building block template for the object status.
     *
     * @returns An XML-based string with the definition of the object status template
     */;
    _proto.getObjectStatusTemplate = function getObjectStatusTemplate() {
      var _navigationProperties;
      const {
        dataModelPath,
        valueDataModelPath,
        dataPointConverted
      } = DataPoint.getTemplatingObjects(this);
      const valueProperty = valueDataModelPath && valueDataModelPath.targetObject;
      this.hasQuickViewFacets = valueProperty ? isUsedInNavigationWithQuickViewFacets(dataModelPath, valueProperty) : false;
      this.semanticObject = "";
      let annotations,
        semanticObjectExpressionToResolve = [];
      if (typeof dataPointConverted.Value === "object") {
        var _dataPointConverted$V, _dataPointConverted$V2;
        annotations = (_dataPointConverted$V = dataPointConverted.Value.$target) === null || _dataPointConverted$V === void 0 ? void 0 : (_dataPointConverted$V2 = _dataPointConverted$V.annotations) === null || _dataPointConverted$V2 === void 0 ? void 0 : _dataPointConverted$V2.Common;
        semanticObjectExpressionToResolve = getSemanticObjectExpressionToResolve(annotations);
      }
      if (!!this.semanticObject && this.semanticObject[0] === "{") {
        semanticObjectExpressionToResolve.push({
          key: this.semanticObject.substring(1, this.semanticObject.length - 2),
          value: this.semanticObject
        });
      }
      this.semanticObjects = getSemanticObjects(semanticObjectExpressionToResolve); // this is used via semanticObjects>
      // This sets up the semantic links found in the navigation property, if there is no semantic links define before.
      if (!this.semanticObject && (valueDataModelPath === null || valueDataModelPath === void 0 ? void 0 : (_navigationProperties = valueDataModelPath.navigationProperties) === null || _navigationProperties === void 0 ? void 0 : _navigationProperties.length) > 0) {
        valueDataModelPath.navigationProperties.forEach(navProperty => {
          var _navProperty$annotati, _navProperty$annotati2;
          if (navProperty !== null && navProperty !== void 0 && (_navProperty$annotati = navProperty.annotations) !== null && _navProperty$annotati !== void 0 && (_navProperty$annotati2 = _navProperty$annotati.Common) !== null && _navProperty$annotati2 !== void 0 && _navProperty$annotati2.SemanticObject) {
            this.semanticObject = navProperty.annotations.Common.SemanticObject;
            this.hasSemanticObjectOnNavigation = true;
          }
        });
      }
      let criticalityColorExpression = buildExpressionForCriticalityColor(dataPointConverted, dataModelPath);
      if (criticalityColorExpression === "None" && valueDataModelPath) {
        criticalityColorExpression = this.hasQuickViewFacets ? "Information" : FieldHelper.getStateDependingOnSemanticObjectTargets(valueDataModelPath);
      }
      const semanticObjectTargets = FieldHelper.hasSemanticObjectTargets(valueDataModelPath);
      const active = this.hasQuickViewFacets || semanticObjectTargets;

      // if the semanticObjects already calculated the criticality we don't calculate it again
      criticalityColorExpression = criticalityColorExpression ? criticalityColorExpression : buildExpressionForCriticalityColor(dataPointConverted, dataModelPath);
      const emptyIndicatorMode = this.formatOptions.showEmptyIndicator ?? false ? "On" : undefined;
      const objectStatusText = buildFieldBindingExpression(dataModelPath, this.formatOptions, false);
      const iconExpression = buildExpressionForCriticalityIcon(dataPointConverted, dataModelPath);
      return xml`<ObjectStatus
						xmlns="sap.m"
						${this.attr("id", this.idPrefix ? generate([this.idPrefix, "ObjectStatus-Field-display"]) : undefined)}
						core:require="{ FieldRuntime: 'sap/fe/macros/field/FieldRuntime' }"
						${this.attr("class", this.formatOptions.dataPointStyle === "large" ? "sapMObjectStatusLarge" : undefined)}
						${this.attr("icon", iconExpression)}
						${this.attr("tooltip", this.getTooltipValue())}
						${this.attr("state", criticalityColorExpression)}
						${this.attr("text", objectStatusText)}
						${this.attr("emptyIndicatorMode", emptyIndicatorMode)}
						${this.attr("active", active)}
						press="FieldRuntime.pressLink"
						${this.attr("ariaLabelledBy", this.ariaLabelledBy !== null ? this.ariaLabelledBy : undefined)}
						${this.attr("modelContextChange", FieldHelper.hasSemanticObjectsWithPath(this.semanticObjects.getObject()) ? FieldHelper.computeSemanticLinkModelContextChange(this.semanticObjects.getObject(), valueDataModelPath) : undefined)}
				>${this.getObjectStatusDependentsTemplate()}
				</ObjectStatus>`;
    }

    /**
     * The helper method to get a possible tooltip text.
     *
     * @returns BindingToolkitExpression
     */;
    _proto.getTooltipValue = function getTooltipValue() {
      var _dataPointConverted$a, _dataPointConverted$a2, _dataPointConverted$a3;
      const {
        dataModelPath,
        dataPointConverted
      } = DataPoint.getTemplatingObjects(this);
      return getExpressionFromAnnotation(dataPointConverted === null || dataPointConverted === void 0 ? void 0 : (_dataPointConverted$a = dataPointConverted.annotations) === null || _dataPointConverted$a === void 0 ? void 0 : (_dataPointConverted$a2 = _dataPointConverted$a.Common) === null || _dataPointConverted$a2 === void 0 ? void 0 : (_dataPointConverted$a3 = _dataPointConverted$a2.QuickInfo) === null || _dataPointConverted$a3 === void 0 ? void 0 : _dataPointConverted$a3.valueOf(), getRelativePaths(dataModelPath));
    }

    /**
     * The helper method to get a possible target value binding.
     *
     * @returns BindingToolkitExpression
     */;
    _proto.getTargetValueBinding = function getTargetValueBinding() {
      const {
        dataModelPath,
        dataPointConverted
      } = DataPoint.getTemplatingObjects(this);
      return getExpressionFromAnnotation(dataPointConverted.TargetValue, getRelativePaths(dataModelPath));
    }

    /**
     * The building block template function.
     *
     * @returns An XML-based string with the definition of the field control
     */;
    _proto.getTemplate = function getTemplate() {
      switch (this.visualization) {
        case "Rating":
          {
            return this.getRatingIndicatorTemplate();
          }
        case "Progress":
          {
            return this.getProgressIndicatorTemplate();
          }
        case "ObjectNumber":
          {
            return this.getObjectNumberTemplate();
          }
        default:
          {
            return this.getObjectStatusTemplate();
          }
      }
    };
    return DataPoint;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "idPrefix", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "ariaLabelledBy", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "visualization", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "hasQuickViewFacets", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "semanticObjects", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "formatOptions", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = DataPoint;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/DataPoint", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/BindingToolkit","sap/fe/core/helpers/StableIdHelper","sap/fe/core/templating/CriticalityFormatters","sap/fe/core/templating/DataModelPathHelper","sap/fe/core/templating/PropertyHelper","sap/fe/core/templating/UIFormatters","sap/fe/macros/field/FieldHelper","sap/fe/macros/field/FieldTemplating","sap/fe/macros/internal/helpers/DataPointTemplating"],function(t,e,i,a,n,o,r,l,s,u,c,d){"use strict";var p,m,h,v,b,f,g,O,P,y,j,$,T,x,V,S,w,M,z,F,C;var D={};var E=d.getValueFormatted;var I=d.getHeaderRatingIndicatorText;var k=d.buildFieldBindingExpression;var R=d.buildExpressionForProgressIndicatorPercentValue;var B=d.buildExpressionForProgressIndicatorDisplayValue;var N=c.isUsedInNavigationWithQuickViewFacets;var L=c.getVisibleExpression;var A=c.getSemanticObjects;var Q=c.getSemanticObjectExpressionToResolve;var U=l.isProperty;var H=l.hasUnit;var _=l.hasCurrency;var q=r.getRelativePaths;var W=r.enhanceDataModelPath;var G=o.buildExpressionForCriticalityIcon;var J=o.buildExpressionForCriticalityColor;var K=n.generate;var X=a.pathInModel;var Y=a.notEqual;var Z=a.getExpressionFromAnnotation;var tt=a.formatResult;var et=a.compileExpression;var it=i.getInvolvedDataModelObjects;var at=i.convertMetaModelContext;var nt=e.xml;var ot=t.defineBuildingBlock;var rt=t.BuildingBlockBase;var lt=t.blockAttribute;function st(t,e,i,a){if(!i)return;Object.defineProperty(t,e,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(a):void 0})}function ut(t){if(t===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return t}function ct(t,e){t.prototype=Object.create(e.prototype);t.prototype.constructor=t;dt(t,e)}function dt(t,e){dt=Object.setPrototypeOf?Object.setPrototypeOf.bind():function t(e,i){e.__proto__=i;return e};return dt(t,e)}function pt(t,e,i,a,n){var o={};Object.keys(a).forEach(function(t){o[t]=a[t]});o.enumerable=!!o.enumerable;o.configurable=!!o.configurable;if("value"in o||o.initializer){o.writable=true}o=i.slice().reverse().reduce(function(i,a){return a(t,e,i)||i},o);if(n&&o.initializer!==void 0){o.value=o.initializer?o.initializer.call(n):void 0;o.initializer=undefined}if(o.initializer===void 0){Object.defineProperty(t,e,o);o=null}return o}function mt(t,e){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let ht=(p=ot({name:"DataPoint",namespace:"sap.fe.macros.internal"}),m=lt({type:"string"}),h=lt({type:"sap.ui.model.Context",required:true}),v=lt({type:"string"}),b=lt({type:"string"}),f=lt({type:"string"}),g=lt({type:"boolean"}),O=lt({type:"sap.ui.model.Context",required:false,computed:true}),P=lt({type:"object",validate:function(t){if(t!==null&&t!==void 0&&t.dataPointStyle&&!["","large"].includes(t===null||t===void 0?void 0:t.dataPointStyle)){throw new Error(`Allowed value ${t.dataPointStyle} for dataPointStyle does not match`)}if(t!==null&&t!==void 0&&t.displayMode&&!["Value","Description","ValueDescription","DescriptionValue"].includes(t===null||t===void 0?void 0:t.displayMode)){throw new Error(`Allowed value ${t.displayMode} for displayMode does not match`)}if(t!==null&&t!==void 0&&t.iconSize&&!["1rem","1.375rem","2rem"].includes(t===null||t===void 0?void 0:t.iconSize)){throw new Error(`Allowed value ${t.iconSize} for iconSize does not match`)}if(t!==null&&t!==void 0&&t.measureDisplayMode&&!["Hidden","ReadOnly"].includes(t===null||t===void 0?void 0:t.measureDisplayMode)){throw new Error(`Allowed value ${t.measureDisplayMode} for measureDisplayMode does not match`)}return t}}),y=lt({type:"sap.ui.model.Context",required:true,$kind:["EntitySet","NavigationProperty","EntityType","Singleton"]}),p(j=($=function(t){ct(e,t);e.getTemplatingObjects=function t(e){var i,a;const n=it(e.metaPath,e.contextPath);let o;e.visible=L(n);if(n!==null&&n!==void 0&&(i=n.targetObject)!==null&&i!==void 0&&(a=i.Value)!==null&&a!==void 0&&a.path){o=W(n,n.targetObject.Value.path)}const r=at(e.metaPath);return{dataModelPath:n,valueDataModelPath:o,dataPointConverted:r}};e.getDataPointVisualization=function t(i){var a,n;const{dataModelPath:o,valueDataModelPath:r,dataPointConverted:l}=e.getTemplatingObjects(i);if((l===null||l===void 0?void 0:l.Visualization)==="UI.VisualizationType/Rating"){i.visualization="Rating";return i}if((l===null||l===void 0?void 0:l.Visualization)==="UI.VisualizationType/Progress"){i.visualization="Progress";return i}const s=r&&r.targetObject;if(!(N(o,s)||s!==null&&s!==void 0&&(a=s.annotations)!==null&&a!==void 0&&(n=a.Common)!==null&&n!==void 0&&n.SemanticObject)){if(U(s)&&(H(s)||_(s))){i.visualization="ObjectNumber";return i}}i.visualization="ObjectStatus";return i};function e(i){var a;i.semanticObjects=A([]);i.hasQuickViewFacets=false;i.hasSemanticObjectOnNavigation=false;a=t.call(this,e.getDataPointVisualization(i))||this;st(a,"idPrefix",T,ut(a));st(a,"metaPath",x,ut(a));st(a,"ariaLabelledBy",V,ut(a));st(a,"visualization",S,ut(a));st(a,"visible",w,ut(a));st(a,"hasQuickViewFacets",M,ut(a));st(a,"semanticObjects",z,ut(a));st(a,"formatOptions",F,ut(a));st(a,"contextPath",C,ut(a));return a}D=e;var i=e.prototype;i.getRatingIndicatorTemplate=function t(){var i;const{dataModelPath:a,valueDataModelPath:n,dataPointConverted:o}=e.getTemplatingObjects(this);const r=a.targetObject;const l=this.getTargetValueBinding();const s=(r===null||r===void 0?void 0:r.Value)||"";const u=s===null||s===void 0?void 0:(i=s.$target)===null||i===void 0?void 0:i.type;let c;if(u==="Edm.Decimal"&&r.ValueFormat){if(r.ValueFormat.NumberOfFractionalDigits){c=r.ValueFormat.NumberOfFractionalDigits}}const d=E(n,s,u,c);const p=I(this.metaPath,r);let m="";let h="";const v=et(tt([X("T_HEADER_RATING_INDICATOR_FOOTER","sap.fe.i18n"),Z(o.Value,q(a)),o.TargetValue?Z(o.TargetValue,q(a)):"5"],"MESSAGE"));if(this.formatOptions.showLabels??false){m=nt`<Label xmlns="sap.m"
					${this.attr("text",p)}
					${this.attr("visible",r.SampleSize||r.Description?true:false)}
				/>`;h=nt`<Label
			xmlns="sap.m"
			core:require="{MESSAGE: 'sap/base/strings/formatMessage' }"
			${this.attr("text",v)}
			visible="true" />`}return nt`
		${m}
		<RatingIndicator
		xmlns="sap.m"

		${this.attr("id",this.idPrefix?K([this.idPrefix,"RatingIndicator-Field-display"]):undefined)}
		${this.attr("maxValue",l)}
		${this.attr("value",d)}
		${this.attr("tooltip",this.getTooltipValue())}
		${this.attr("iconSize",this.formatOptions.iconSize)}
		${this.attr("class",this.formatOptions.showLabels??false?"sapUiTinyMarginTopBottom":undefined)}
		editable="false"
	/>
	${h}`};i.getProgressIndicatorTemplate=function t(){var i;const{dataModelPath:a,valueDataModelPath:n,dataPointConverted:o}=e.getTemplatingObjects(this);const r=J(o,a);const l=B(a);const s=R(a);const u=a.targetObject;let c="";let d="";if((this===null||this===void 0?void 0:(i=this.formatOptions)===null||i===void 0?void 0:i.showLabels)??false){var p,m,h;c=nt`<Label
				xmlns="sap.m"
				${this.attr("text",u===null||u===void 0?void 0:u.Description)}
				${this.attr("visible",!!(u!==null&&u!==void 0&&u.Description))}
			/>`;const t=Z(n===null||n===void 0?void 0:(p=n.targetObject)===null||p===void 0?void 0:(m=p.annotations)===null||m===void 0?void 0:(h=m.Common)===null||h===void 0?void 0:h.Label);d=nt`<Label
				xmlns="sap.m"
				${this.attr("text",et(t))}
				${this.attr("visible",!!et(Y(undefined,t)))}
			/>`}return nt`
		${c}
			<ProgressIndicator
				xmlns="sap.m"
				${this.attr("id",this.idPrefix?K([this.idPrefix,"ProgressIndicator-Field-display"]):undefined)}
				${this.attr("displayValue",l)}
				${this.attr("percentValue",s)}
				${this.attr("state",r)}
				${this.attr("tooltip",this.getTooltipValue())}
			/>
			${d}`};i.getObjectNumberCommonTemplate=function t(){const{dataModelPath:i,valueDataModelPath:a,dataPointConverted:n}=e.getTemplatingObjects(this);const o=J(n,i);const r=this.formatOptions.showEmptyIndicator??false?"On":undefined;const l=k(i,this.formatOptions,true);const u=this.formatOptions.measureDisplayMode==="Hidden"?undefined:et(s.getBindingForUnitOrCurrency(a));return nt`<ObjectNumber
			xmlns="sap.m"
			${this.attr("id",this.idPrefix?K([this.idPrefix,"ObjectNumber-Field-display"]):undefined)}
			core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}"
			${this.attr("state",o)}
			${this.attr("number",l)}
			${this.attr("unit",u)}
			${this.attr("visible",this.visible)}
			emphasized="false"
			${this.attr("class",this.formatOptions.dataPointStyle==="large"?"sapMObjectNumberLarge":undefined)}
			${this.attr("tooltip",this.getTooltipValue())}
			${this.attr("emptyIndicatorMode",r)}
		/>`};i.getObjectNumberTemplate=function t(){var i;const{valueDataModelPath:a}=e.getTemplatingObjects(this);if((this===null||this===void 0?void 0:(i=this.formatOptions)===null||i===void 0?void 0:i.isAnalytics)??false){return nt`
				<control:ConditionalWrapper
					xmlns:control="sap.fe.core.controls"
					${this.attr("condition",s.hasValidAnalyticalCurrencyOrUnit(a))}
				>
					<control:contentTrue>
						${this.getObjectNumberCommonTemplate()}
					</control:contentTrue>
					<control:contentFalse>
						<ObjectNumber
							xmlns="sap.m"
							${this.attr("id",this.idPrefix?K([this.idPrefix,"ObjectNumber-Field-display-differentUnit"]):undefined)}
							number="*"
							unit=""
							${this.attr("visible",this.visible)}
							emphasized="false"
							${this.attr("class",this.formatOptions.dataPointStyle==="large"?"sapMObjectNumberLarge":undefined)}
						/>
					</control:contentFalse>
				</control:ConditionalWrapper>`}else{return nt`${this.getObjectNumberCommonTemplate()}`}};i.getObjectStatusDependentsTemplate=function t(){var i,a,n;const{valueDataModelPath:o}=e.getTemplatingObjects(this);const r=o===null||o===void 0?void 0:(i=o.targetObject)===null||i===void 0?void 0:(a=i.annotations)===null||a===void 0?void 0:(n=a.Common)===null||n===void 0?void 0:n.SemanticObject;if(this.hasQuickViewFacets||r){return`<dependents><macro:QuickView\n\t\t\t\t\t\txmlns:macro="sap.fe.macros"\n\t\t\t\t\t\tdataField="{metaPath>}"\n\t\t\t\t\t\tsemanticObject="${this.semanticObject}"\n\t\t\t\t\t\tcontextPath="{contextPath>}"\n\t\t\t\t\t/></dependents>`}return""};i.getObjectStatusTemplate=function t(){var i;const{dataModelPath:a,valueDataModelPath:n,dataPointConverted:o}=e.getTemplatingObjects(this);const r=n&&n.targetObject;this.hasQuickViewFacets=r?N(a,r):false;this.semanticObject="";let l,s=[];if(typeof o.Value==="object"){var c,d;l=(c=o.Value.$target)===null||c===void 0?void 0:(d=c.annotations)===null||d===void 0?void 0:d.Common;s=Q(l)}if(!!this.semanticObject&&this.semanticObject[0]==="{"){s.push({key:this.semanticObject.substring(1,this.semanticObject.length-2),value:this.semanticObject})}this.semanticObjects=A(s);if(!this.semanticObject&&(n===null||n===void 0?void 0:(i=n.navigationProperties)===null||i===void 0?void 0:i.length)>0){n.navigationProperties.forEach(t=>{var e,i;if(t!==null&&t!==void 0&&(e=t.annotations)!==null&&e!==void 0&&(i=e.Common)!==null&&i!==void 0&&i.SemanticObject){this.semanticObject=t.annotations.Common.SemanticObject;this.hasSemanticObjectOnNavigation=true}})}let p=J(o,a);if(p==="None"&&n){p=this.hasQuickViewFacets?"Information":u.getStateDependingOnSemanticObjectTargets(n)}const m=u.hasSemanticObjectTargets(n);const h=this.hasQuickViewFacets||m;p=p?p:J(o,a);const v=this.formatOptions.showEmptyIndicator??false?"On":undefined;const b=k(a,this.formatOptions,false);const f=G(o,a);return nt`<ObjectStatus
						xmlns="sap.m"
						${this.attr("id",this.idPrefix?K([this.idPrefix,"ObjectStatus-Field-display"]):undefined)}
						core:require="{ FieldRuntime: 'sap/fe/macros/field/FieldRuntime' }"
						${this.attr("class",this.formatOptions.dataPointStyle==="large"?"sapMObjectStatusLarge":undefined)}
						${this.attr("icon",f)}
						${this.attr("tooltip",this.getTooltipValue())}
						${this.attr("state",p)}
						${this.attr("text",b)}
						${this.attr("emptyIndicatorMode",v)}
						${this.attr("active",h)}
						press="FieldRuntime.pressLink"
						${this.attr("ariaLabelledBy",this.ariaLabelledBy!==null?this.ariaLabelledBy:undefined)}
						${this.attr("modelContextChange",u.hasSemanticObjectsWithPath(this.semanticObjects.getObject())?u.computeSemanticLinkModelContextChange(this.semanticObjects.getObject(),n):undefined)}
				>${this.getObjectStatusDependentsTemplate()}
				</ObjectStatus>`};i.getTooltipValue=function t(){var i,a,n;const{dataModelPath:o,dataPointConverted:r}=e.getTemplatingObjects(this);return Z(r===null||r===void 0?void 0:(i=r.annotations)===null||i===void 0?void 0:(a=i.Common)===null||a===void 0?void 0:(n=a.QuickInfo)===null||n===void 0?void 0:n.valueOf(),q(o))};i.getTargetValueBinding=function t(){const{dataModelPath:i,dataPointConverted:a}=e.getTemplatingObjects(this);return Z(a.TargetValue,q(i))};i.getTemplate=function t(){switch(this.visualization){case"Rating":{return this.getRatingIndicatorTemplate()}case"Progress":{return this.getProgressIndicatorTemplate()}case"ObjectNumber":{return this.getObjectNumberTemplate()}default:{return this.getObjectStatusTemplate()}}};return e}(rt),T=pt($.prototype,"idPrefix",[m],{configurable:true,enumerable:true,writable:true,initializer:null}),x=pt($.prototype,"metaPath",[h],{configurable:true,enumerable:true,writable:true,initializer:null}),V=pt($.prototype,"ariaLabelledBy",[v],{configurable:true,enumerable:true,writable:true,initializer:null}),S=pt($.prototype,"visualization",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),w=pt($.prototype,"visible",[f],{configurable:true,enumerable:true,writable:true,initializer:null}),M=pt($.prototype,"hasQuickViewFacets",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),z=pt($.prototype,"semanticObjects",[O],{configurable:true,enumerable:true,writable:true,initializer:null}),F=pt($.prototype,"formatOptions",[P],{configurable:true,enumerable:true,writable:true,initializer:null}),C=pt($.prototype,"contextPath",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),$))||j);D=ht;return D},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/FilterField-dbg", ["sap/base/Log", "sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/templating/PropertyFormatters", "sap/fe/macros/CommonHelper", "sap/fe/macros/field/FieldHelper", "sap/fe/macros/filter/FilterFieldHelper", "sap/fe/macros/filter/FilterFieldTemplating", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/templating/DataModelPathHelper"], function (Log, BuildingBlock, BuildingBlockRuntime, MetaModelConverter, StableIdHelper, PropertyFormatters, CommonHelper, FieldHelper, FilterFieldHelper, FilterFieldTemplating, BindingToolkit, DataModelPathHelper) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;
  var _exports = {};
  var getTargetObjectPath = DataModelPathHelper.getTargetObjectPath;
  var getExpressionFromAnnotation = BindingToolkit.getExpressionFromAnnotation;
  var compileExpression = BindingToolkit.compileExpression;
  var getFilterFieldDisplayFormat = FilterFieldTemplating.getFilterFieldDisplayFormat;
  var getRelativePropertyPath = PropertyFormatters.getRelativePropertyPath;
  var generate = StableIdHelper.generate;
  var xml = BuildingBlockRuntime.xml;
  var SAP_UI_MODEL_CONTEXT = BuildingBlockRuntime.SAP_UI_MODEL_CONTEXT;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let FilterField = (
  /**
   * Building block for creating a Filter Field based on the metadata provided by OData V4.
   * <br>
   * It is designed to work based on a property context(property) pointing to an entity type property
   * needed to be used as filterfield and entityType context(contextPath) to consider the relativity of
   * the propertyPath of the property wrt entityType.
   *
   * Usage example:
   * <pre>
   * &lt;macro:FilterField id="MyFilterField" property="CompanyName" /&gt;
   * </pre>
   *
   * @private
   */
  _dec = defineBuildingBlock({
    name: "FilterField",
    namespace: "sap.fe.macros.internal"
  }), _dec2 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true,
    isPublic: true
  }), _dec3 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true,
    isPublic: true
  }), _dec4 = blockAttribute({
    type: "sap.ui.model.Context",
    isPublic: true
  }), _dec5 = blockAttribute({
    type: "string",
    defaultValue: "FilterField",
    isPublic: true
  }), _dec6 = blockAttribute({
    type: "string",
    defaultValue: "FilterFieldValueHelp",
    isPublic: true
  }), _dec7 = blockAttribute({
    type: "boolean",
    defaultValue: true,
    isPublic: true
  }), _dec8 = blockAttribute({
    type: "string",
    defaultValue: "",
    isPublic: true
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(FilterField, _BuildingBlockBase);
    /**
     * Defines the metadata path to the property.
     */

    /**
     * Metadata path to the entitySet or navigationProperty
     */

    /**
     * Visual filter settings for filter field.
     */

    /**
     * A prefix that is added to the generated ID of the filter field.
     */

    /**
     * A prefix that is added to the generated ID of the value help used for the filter field.
     */

    /**
     * Specifies the Sematic Date Range option for the filter field.
     */

    /**
     * Settings from the manifest settings.
     */

    function FilterField(oProps, configuration, mSettings) {
      var _propertyConverted$an, _propertyConverted$an2, _propertyConverted$an3, _propertyConverted$an4;
      var _this;
      _this = _BuildingBlockBase.call(this, oProps, configuration, mSettings) || this;
      _initializerDefineProperty(_this, "property", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visualFilter", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "idPrefix", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "vhIdPrefix", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "useSemanticDateRange", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "settings", _descriptor7, _assertThisInitialized(_this));
      const propertyConverted = MetaModelConverter.convertMetaModelContext(_this.property);
      const dataModelPath = MetaModelConverter.getInvolvedDataModelObjects(_this.property, _this.contextPath);

      // Property settings
      const propertyName = propertyConverted.name,
        fixedValues = !!((_propertyConverted$an = propertyConverted.annotations) !== null && _propertyConverted$an !== void 0 && (_propertyConverted$an2 = _propertyConverted$an.Common) !== null && _propertyConverted$an2 !== void 0 && _propertyConverted$an2.ValueListWithFixedValues);
      _this.controlId = _this.idPrefix && generate([_this.idPrefix, propertyName]);
      _this.sourcePath = getTargetObjectPath(dataModelPath);
      _this.dataType = FilterFieldHelper.getDataType(propertyConverted);
      const labelTerm = (propertyConverted === null || propertyConverted === void 0 ? void 0 : (_propertyConverted$an3 = propertyConverted.annotations) === null || _propertyConverted$an3 === void 0 ? void 0 : (_propertyConverted$an4 = _propertyConverted$an3.Common) === null || _propertyConverted$an4 === void 0 ? void 0 : _propertyConverted$an4.Label) || propertyName;
      const labelExpression = getExpressionFromAnnotation(labelTerm);
      _this.label = compileExpression(labelExpression) || propertyName;
      _this.conditionsBinding = FilterFieldHelper.getConditionsBinding(dataModelPath) || "";
      _this.placeholder = FilterFieldHelper.getPlaceholder(propertyConverted);
      // Visual Filter settings
      _this.vfEnabled = !!_this.visualFilter && !(_this.idPrefix && _this.idPrefix.indexOf("Adaptation") > -1);
      _this.vfId = _this.vfEnabled ? generate([_this.idPrefix, propertyName, "VisualFilter"]) : undefined;

      //-----------------------------------------------------------------------------------------------------//
      // TODO: need to change operations from MetaModel to Converters.
      // This mainly included changing changing getFilterRestrictions operations from metaModel to converters
      const propertyContext = _this.property,
        model = propertyContext.getModel(),
        vhPropertyPath = FieldHelper.valueHelpPropertyForFilterField(propertyContext),
        filterable = CommonHelper.isPropertyFilterable(propertyContext),
        propertyObject = propertyContext.getObject(),
        propertyInterface = {
          context: propertyContext
        };
      _this.display = getFilterFieldDisplayFormat(dataModelPath, propertyConverted, propertyInterface);
      _this.isFilterable = !(filterable === false || filterable === "false");
      _this.maxConditions = FilterFieldHelper.maxConditions(propertyObject, propertyInterface);
      _this.dataTypeConstraints = FilterFieldHelper.constraints(propertyObject, propertyInterface);
      _this.dataTypeFormatOptions = FilterFieldHelper.formatOptions(propertyObject, propertyInterface);
      _this.required = FilterFieldHelper.isRequiredInFilter(propertyObject, propertyInterface);
      _this.operators = FieldHelper.operators(propertyContext, propertyObject, _this.useSemanticDateRange, _this.settings || "", _this.contextPath.getPath());

      // Value Help settings
      // TODO: This needs to be updated when VH macro is converted to 2.0
      const vhProperty = model.createBindingContext(vhPropertyPath);
      const vhPropertyObject = vhProperty.getObject(),
        vhPropertyInterface = {
          context: vhProperty
        },
        relativeVhPropertyPath = getRelativePropertyPath(vhPropertyObject, vhPropertyInterface),
        relativePropertyPath = getRelativePropertyPath(propertyObject, propertyInterface);
      _this.fieldHelpProperty = FieldHelper.getFieldHelpPropertyForFilterField(propertyContext, propertyObject, propertyObject.$Type, _this.vhIdPrefix, relativePropertyPath, relativeVhPropertyPath, fixedValues, _this.useSemanticDateRange);

      //-----------------------------------------------------------------------------------------------------//
      return _this;
    }
    _exports = FilterField;
    var _proto = FilterField.prototype;
    _proto.getVisualFilterContent = function getVisualFilterContent() {
      var _visualFilterObject, _visualFilterObject$i;
      let visualFilterObject = this.visualFilter,
        vfXML = xml``;
      if (!this.vfEnabled || !visualFilterObject) {
        return vfXML;
      }
      if ((_visualFilterObject = visualFilterObject) !== null && _visualFilterObject !== void 0 && (_visualFilterObject$i = _visualFilterObject.isA) !== null && _visualFilterObject$i !== void 0 && _visualFilterObject$i.call(_visualFilterObject, SAP_UI_MODEL_CONTEXT)) {
        visualFilterObject = visualFilterObject.getObject();
      }
      const {
        contextPath,
        presentationAnnotation,
        outParameter,
        inParameters,
        valuelistProperty,
        selectionVariantAnnotation,
        multipleSelectionAllowed,
        required,
        requiredProperties = [],
        showOverlayInitially,
        renderLineChart
      } = visualFilterObject;
      vfXML = xml`
				<macro:VisualFilter
					id="${this.vfId}"
					contextPath="${contextPath}"
					metaPath="${presentationAnnotation}"
					outParameter="${outParameter}"
					inParameters="${inParameters}"
					valuelistProperty="${valuelistProperty}"
					selectionVariantAnnotation="${selectionVariantAnnotation}"
					multipleSelectionAllowed="${multipleSelectionAllowed}"
					required="${required}"
					requiredProperties="${CommonHelper.stringifyCustomData(requiredProperties)}"
					showOverlayInitially="${showOverlayInitially}"
					renderLineChart="${renderLineChart}"
					filterBarEntityType="${contextPath}"
				/>
			`;
      return vfXML;
    };
    _proto.getTemplate = async function getTemplate() {
      let xmlRet = ``;
      if (this.isFilterable) {
        let display;
        try {
          display = await this.display;
        } catch (err) {
          Log.error(`FE : FilterField BuildingBlock : Error fetching display property for ${this.sourcePath} : ${err}`);
        }
        xmlRet = xml`
				<mdc:FilterField
					xmlns:mdc="sap.ui.mdc"
					xmlns:macro="sap.fe.macros"
					xmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"
					xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
					unittest:id="UnitTest::FilterField"
					customData:sourcePath="${this.sourcePath}"
					id="${this.controlId}"
					delegate="{name: 'sap/fe/macros/field/FieldBaseDelegate', payload:{isFilterField:true}}"
					label="${this.label}"
					dataType="${this.dataType}"
					display="${display}"
					maxConditions="${this.maxConditions}"
					fieldHelp="${this.fieldHelpProperty}"
					conditions="${this.conditionsBinding}"
					dataTypeConstraints="${this.dataTypeConstraints}"
					dataTypeFormatOptions="${this.dataTypeFormatOptions}"
					required="${this.required}"
					operators="${this.operators}"
					placeholder="${this.placeholder}"

				>
					${this.vfEnabled ? this.getVisualFilterContent() : xml``}
				</mdc:FilterField>
			`;
      }
      return xmlRet;
    };
    return FilterField;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "property", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "visualFilter", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "idPrefix", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "vhIdPrefix", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "useSemanticDateRange", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "settings", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = FilterField;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/FilterField", ["sap/base/Log","sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/StableIdHelper","sap/fe/core/templating/PropertyFormatters","sap/fe/macros/CommonHelper","sap/fe/macros/field/FieldHelper","sap/fe/macros/filter/FilterFieldHelper","sap/fe/macros/filter/FilterFieldTemplating","sap/fe/core/helpers/BindingToolkit","sap/fe/core/templating/DataModelPathHelper"],function(e,t,i,r,a,l,n,o,s,u,p,d){"use strict";var c,f,m,b,h,y,g,v,P,F,x,$,C,O,B,w,T;var z={};var D=d.getTargetObjectPath;var E=p.getExpressionFromAnnotation;var I=p.compileExpression;var V=u.getFilterFieldDisplayFormat;var j=l.getRelativePropertyPath;var H=a.generate;var k=i.xml;var q=i.SAP_UI_MODEL_CONTEXT;var A=t.defineBuildingBlock;var M=t.BuildingBlockBase;var R=t.blockAttribute;function S(e,t,i,r){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(r):void 0})}function _(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function L(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;U(e,t)}function U(e,t){U=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return U(e,t)}function N(e,t,i,r,a){var l={};Object.keys(r).forEach(function(e){l[e]=r[e]});l.enumerable=!!l.enumerable;l.configurable=!!l.configurable;if("value"in l||l.initializer){l.writable=true}l=i.slice().reverse().reduce(function(i,r){return r(e,t,i)||i},l);if(a&&l.initializer!==void 0){l.value=l.initializer?l.initializer.call(a):void 0;l.initializer=undefined}if(l.initializer===void 0){Object.defineProperty(e,t,l);l=null}return l}function W(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let X=(c=A({name:"FilterField",namespace:"sap.fe.macros.internal"}),f=R({type:"sap.ui.model.Context",required:true,isPublic:true}),m=R({type:"sap.ui.model.Context",required:true,isPublic:true}),b=R({type:"sap.ui.model.Context",isPublic:true}),h=R({type:"string",defaultValue:"FilterField",isPublic:true}),y=R({type:"string",defaultValue:"FilterFieldValueHelp",isPublic:true}),g=R({type:"boolean",defaultValue:true,isPublic:true}),v=R({type:"string",defaultValue:"",isPublic:true}),c(P=(F=function(t){L(i,t);function i(e,i,a){var l,u,p,d;var c;c=t.call(this,e,i,a)||this;S(c,"property",x,_(c));S(c,"contextPath",$,_(c));S(c,"visualFilter",C,_(c));S(c,"idPrefix",O,_(c));S(c,"vhIdPrefix",B,_(c));S(c,"useSemanticDateRange",w,_(c));S(c,"settings",T,_(c));const f=r.convertMetaModelContext(c.property);const m=r.getInvolvedDataModelObjects(c.property,c.contextPath);const b=f.name,h=!!((l=f.annotations)!==null&&l!==void 0&&(u=l.Common)!==null&&u!==void 0&&u.ValueListWithFixedValues);c.controlId=c.idPrefix&&H([c.idPrefix,b]);c.sourcePath=D(m);c.dataType=s.getDataType(f);const y=(f===null||f===void 0?void 0:(p=f.annotations)===null||p===void 0?void 0:(d=p.Common)===null||d===void 0?void 0:d.Label)||b;const g=E(y);c.label=I(g)||b;c.conditionsBinding=s.getConditionsBinding(m)||"";c.placeholder=s.getPlaceholder(f);c.vfEnabled=!!c.visualFilter&&!(c.idPrefix&&c.idPrefix.indexOf("Adaptation")>-1);c.vfId=c.vfEnabled?H([c.idPrefix,b,"VisualFilter"]):undefined;const v=c.property,P=v.getModel(),F=o.valueHelpPropertyForFilterField(v),z=n.isPropertyFilterable(v),k=v.getObject(),q={context:v};c.display=V(m,f,q);c.isFilterable=!(z===false||z==="false");c.maxConditions=s.maxConditions(k,q);c.dataTypeConstraints=s.constraints(k,q);c.dataTypeFormatOptions=s.formatOptions(k,q);c.required=s.isRequiredInFilter(k,q);c.operators=o.operators(v,k,c.useSemanticDateRange,c.settings||"",c.contextPath.getPath());const A=P.createBindingContext(F);const M=A.getObject(),R={context:A},L=j(M,R),U=j(k,q);c.fieldHelpProperty=o.getFieldHelpPropertyForFilterField(v,k,k.$Type,c.vhIdPrefix,U,L,h,c.useSemanticDateRange);return c}z=i;var a=i.prototype;a.getVisualFilterContent=function e(){var t,i;let r=this.visualFilter,a=k``;if(!this.vfEnabled||!r){return a}if((t=r)!==null&&t!==void 0&&(i=t.isA)!==null&&i!==void 0&&i.call(t,q)){r=r.getObject()}const{contextPath:l,presentationAnnotation:o,outParameter:s,inParameters:u,valuelistProperty:p,selectionVariantAnnotation:d,multipleSelectionAllowed:c,required:f,requiredProperties:m=[],showOverlayInitially:b,renderLineChart:h}=r;a=k`
				<macro:VisualFilter
					id="${this.vfId}"
					contextPath="${l}"
					metaPath="${o}"
					outParameter="${s}"
					inParameters="${u}"
					valuelistProperty="${p}"
					selectionVariantAnnotation="${d}"
					multipleSelectionAllowed="${c}"
					required="${f}"
					requiredProperties="${n.stringifyCustomData(m)}"
					showOverlayInitially="${b}"
					renderLineChart="${h}"
					filterBarEntityType="${l}"
				/>
			`;return a};a.getTemplate=async function t(){let i=``;if(this.isFilterable){let t;try{t=await this.display}catch(t){e.error(`FE : FilterField BuildingBlock : Error fetching display property for ${this.sourcePath} : ${t}`)}i=k`
				<mdc:FilterField
					xmlns:mdc="sap.ui.mdc"
					xmlns:macro="sap.fe.macros"
					xmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"
					xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
					unittest:id="UnitTest::FilterField"
					customData:sourcePath="${this.sourcePath}"
					id="${this.controlId}"
					delegate="{name: 'sap/fe/macros/field/FieldBaseDelegate', payload:{isFilterField:true}}"
					label="${this.label}"
					dataType="${this.dataType}"
					display="${t}"
					maxConditions="${this.maxConditions}"
					fieldHelp="${this.fieldHelpProperty}"
					conditions="${this.conditionsBinding}"
					dataTypeConstraints="${this.dataTypeConstraints}"
					dataTypeFormatOptions="${this.dataTypeFormatOptions}"
					required="${this.required}"
					operators="${this.operators}"
					placeholder="${this.placeholder}"

				>
					${this.vfEnabled?this.getVisualFilterContent():k``}
				</mdc:FilterField>
			`}return i};return i}(M),x=N(F.prototype,"property",[f],{configurable:true,enumerable:true,writable:true,initializer:null}),$=N(F.prototype,"contextPath",[m],{configurable:true,enumerable:true,writable:true,initializer:null}),C=N(F.prototype,"visualFilter",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),O=N(F.prototype,"idPrefix",[h],{configurable:true,enumerable:true,writable:true,initializer:null}),B=N(F.prototype,"vhIdPrefix",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),w=N(F.prototype,"useSemanticDateRange",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),T=N(F.prototype,"settings",[v],{configurable:true,enumerable:true,writable:true,initializer:null}),F))||P);z=X;return z},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/InternalField-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/CommonUtils", "sap/fe/core/converters/helpers/BindingHelper", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/formatters/CollaborationFormatter", "sap/fe/core/formatters/ValueFormatter", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/helpers/ModelHelper", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/TemplateModel", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/UIFormatters", "sap/fe/macros/field/FieldTemplating", "sap/fe/macros/situations/SituationsIndicator.fragment", "sap/ui/mdc/enum/EditMode"], function (BuildingBlock, BuildingBlockRuntime, CommonUtils, BindingHelper, MetaModelConverter, CollaborationFormatters, valueFormatters, BindingToolkit, ModelHelper, StableIdHelper, TemplateModel, DataModelPathHelper, PropertyHelper, UIFormatters, FieldTemplating, SituationsIndicator, EditMode) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29, _descriptor30;
  var _exports = {};
  var isSemanticKey = PropertyHelper.isSemanticKey;
  var getTargetObjectPath = DataModelPathHelper.getTargetObjectPath;
  var getRelativePaths = DataModelPathHelper.getRelativePaths;
  var getContextRelativeTargetObjectPath = DataModelPathHelper.getContextRelativeTargetObjectPath;
  var generate = StableIdHelper.generate;
  var pathInModel = BindingToolkit.pathInModel;
  var not = BindingToolkit.not;
  var ifElse = BindingToolkit.ifElse;
  var getExpressionFromAnnotation = BindingToolkit.getExpressionFromAnnotation;
  var formatWithTypeInformation = BindingToolkit.formatWithTypeInformation;
  var formatResult = BindingToolkit.formatResult;
  var constant = BindingToolkit.constant;
  var compileExpression = BindingToolkit.compileExpression;
  var and = BindingToolkit.and;
  var Entity = BindingHelper.Entity;
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockEvent = BuildingBlock.blockEvent;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let Field = (
  /**
   * Building block for creating a Field based on the metadata provided by OData V4.
   * <br>
   * Usually, a DataField annotation is expected
   *
   * Usage example:
   * <pre>
   * <internalMacro:Field
   *   idPrefix="SomePrefix"
   *   contextPath="{entitySet>}"
   *   metaPath="{dataField>}"
   * />
   * </pre>
   *
   * @hideconstructor
   * @private
   * @experimental
   * @since 1.94.0
   */
  _dec = defineBuildingBlock({
    name: "Field",
    namespace: "sap.fe.macros.internal",
    designtime: "sap/fe/macros/internal/Field.designtime"
  }), _dec2 = blockAttribute({
    type: "string"
  }), _dec3 = blockAttribute({
    type: "string"
  }), _dec4 = blockAttribute({
    type: "string"
  }), _dec5 = blockAttribute({
    type: "string"
  }), _dec6 = blockAttribute({
    type: "string"
  }), _dec7 = blockAttribute({
    type: "string"
  }), _dec8 = blockAttribute({
    type: "string",
    defaultValue: "FieldValueHelp"
  }), _dec9 = blockAttribute({
    type: "string",
    computed: true
  }), _dec10 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true,
    $kind: ["EntitySet", "NavigationProperty", "EntityType", "Singleton"]
  }), _dec11 = blockAttribute({
    type: "sap.ui.model.Context",
    required: false,
    computed: true,
    $kind: ["EntityType"]
  }), _dec12 = blockAttribute({
    type: "boolean",
    defaultValue: true
  }), _dec13 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true,
    $kind: ["Property"],
    $Type: ["com.sap.vocabularies.UI.v1.DataField", "com.sap.vocabularies.UI.v1.DataFieldWithUrl", "com.sap.vocabularies.UI.v1.DataFieldForAnnotation", "com.sap.vocabularies.UI.v1.DataFieldForAction", "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation", "com.sap.vocabularies.UI.v1.DataFieldWithAction", "com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation", "com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath", "com.sap.vocabularies.UI.v1.DataPointType"]
  }), _dec14 = blockAttribute({
    type: "sap.ui.model.Context",
    required: false,
    computed: true
  }), _dec15 = blockAttribute({
    type: "sap.ui.mdc.enum.EditMode"
  }), _dec16 = blockAttribute({
    type: "boolean"
  }), _dec17 = blockAttribute({
    type: "string"
  }), _dec18 = blockAttribute({
    type: "string"
  }), _dec19 = blockAttribute({
    type: "sap.ui.core.TextAlign"
  }), _dec20 = blockAttribute({
    type: "string",
    computed: true
  }), _dec21 = blockAttribute({
    type: "string",
    computed: true
  }), _dec22 = blockAttribute({
    type: "boolean",
    computed: true
  }), _dec23 = blockAttribute({
    type: "string",
    computed: true
  }), _dec24 = blockAttribute({
    type: "string",
    computed: true
  }), _dec25 = blockAttribute({
    type: "string",
    computed: true
  }), _dec26 = blockAttribute({
    type: "string",
    required: false
  }), _dec27 = blockAttribute({
    type: "boolean",
    required: false
  }), _dec28 = blockAttribute({
    type: "string"
  }), _dec29 = blockAttribute({
    type: "boolean"
  }), _dec30 = blockAttribute({
    type: "object",
    validate: function (formatOptionsInput) {
      if (formatOptionsInput.textAlignMode && !["Table", "Form"].includes(formatOptionsInput.textAlignMode)) {
        throw new Error(`Allowed value ${formatOptionsInput.textAlignMode} for textAlignMode does not match`);
      }
      if (formatOptionsInput.displayMode && !["Value", "Description", "ValueDescription", "DescriptionValue"].includes(formatOptionsInput.displayMode)) {
        throw new Error(`Allowed value ${formatOptionsInput.displayMode} for displayMode does not match`);
      }
      if (formatOptionsInput.fieldMode && !["nowrapper", ""].includes(formatOptionsInput.fieldMode)) {
        throw new Error(`Allowed value ${formatOptionsInput.fieldMode} for fieldMode does not match`);
      }
      if (formatOptionsInput.measureDisplayMode && !["Hidden", "ReadOnly"].includes(formatOptionsInput.measureDisplayMode)) {
        throw new Error(`Allowed value ${formatOptionsInput.measureDisplayMode} for measureDisplayMode does not match`);
      }
      if (formatOptionsInput.textExpandBehaviorDisplay && !["InPlace", "Popover"].includes(formatOptionsInput.textExpandBehaviorDisplay)) {
        throw new Error(`Allowed value ${formatOptionsInput.textExpandBehaviorDisplay} for textExpandBehaviorDisplay does not match`);
      }
      if (formatOptionsInput.semanticKeyStyle && !["ObjectIdentifier", "Label", ""].includes(formatOptionsInput.semanticKeyStyle)) {
        throw new Error(`Allowed value ${formatOptionsInput.semanticKeyStyle} for semanticKeyStyle does not match`);
      }

      /*
      Historical default values are currently disabled
      if (!formatOptionsInput.semanticKeyStyle) {
      	formatOptionsInput.semanticKeyStyle = "";
      }
      */

      return formatOptionsInput;
    }
  }), _dec31 = blockEvent(), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(Field, _BuildingBlockBase);
    /**
     * Metadata path to the entity set
     */
    /**
     * Metadata path to the entity set
     */
    /**
     * Flag indicating whether action will navigate after execution
     */
    /**
     * Metadata path to the dataField.
     * This property is usually a metadataContext pointing to a DataField having
     * $Type of DataField, DataFieldWithUrl, DataFieldForAnnotation, DataFieldForAction, DataFieldForIntentBasedNavigation, DataFieldWithNavigationPath, or DataPointType.
     * But it can also be a Property with $kind="Property"
     */
    /**
     * Context pointing to an array of the property's semantic objects
     */
    /**
     * Edit Mode of the field.
     *
     * If the editMode is undefined then we compute it based on the metadata
     * Otherwise we use the value provided here.
     */
    /**
     * Wrap field
     */
    /**
     * CSS class for margin
     */
    /**
     * Property added to associate the label with the Field
     */
    /**
     * Option to add a semantic object to a field
     */
    /**
     * Event handler for change event
     */
    Field.getOverrides = function getOverrides(mControlConfiguration, sID) {
      const oProps = {};
      if (mControlConfiguration) {
        const oControlConfig = mControlConfiguration[sID];
        if (oControlConfig) {
          Object.keys(oControlConfig).forEach(function (sConfigKey) {
            oProps[sConfigKey] = oControlConfig[sConfigKey];
          });
        }
      }
      return oProps;
    };
    Field.getObjectIdentifierTitle = function getObjectIdentifierTitle(fieldFormatOptions, oPropertyDataModelObjectPath) {
      var _oPropertyDefinition$, _oPropertyDefinition$2, _oPropertyDataModelOb, _oPropertyDataModelOb2, _oPropertyDataModelOb3, _oPropertyDataModelOb4, _oPropertyDataModelOb5, _oPropertyDataModelOb6, _commonText$annotatio, _commonText$annotatio2;
      let propertyBindingExpression = pathInModel(getContextRelativeTargetObjectPath(oPropertyDataModelObjectPath));
      let targetDisplayMode = fieldFormatOptions === null || fieldFormatOptions === void 0 ? void 0 : fieldFormatOptions.displayMode;
      const oPropertyDefinition = oPropertyDataModelObjectPath.targetObject.type === "PropertyPath" ? oPropertyDataModelObjectPath.targetObject.$target : oPropertyDataModelObjectPath.targetObject;
      propertyBindingExpression = formatWithTypeInformation(oPropertyDefinition, propertyBindingExpression);
      const commonText = (_oPropertyDefinition$ = oPropertyDefinition.annotations) === null || _oPropertyDefinition$ === void 0 ? void 0 : (_oPropertyDefinition$2 = _oPropertyDefinition$.Common) === null || _oPropertyDefinition$2 === void 0 ? void 0 : _oPropertyDefinition$2.Text;
      if (commonText === undefined) {
        // there is no property for description
        targetDisplayMode = "Value";
      }
      const relativeLocation = getRelativePaths(oPropertyDataModelObjectPath);
      const parametersForFormatter = [];
      parametersForFormatter.push(pathInModel("T_NEW_OBJECT", "sap.fe.i18n"));
      parametersForFormatter.push(pathInModel("T_ANNOTATION_HELPER_DEFAULT_OBJECT_PAGE_HEADER_TITLE_NO_HEADER_INFO", "sap.fe.i18n"));
      if (!!((_oPropertyDataModelOb = oPropertyDataModelObjectPath.targetEntitySet) !== null && _oPropertyDataModelOb !== void 0 && (_oPropertyDataModelOb2 = _oPropertyDataModelOb.annotations) !== null && _oPropertyDataModelOb2 !== void 0 && (_oPropertyDataModelOb3 = _oPropertyDataModelOb2.Common) !== null && _oPropertyDataModelOb3 !== void 0 && _oPropertyDataModelOb3.DraftRoot) || !!((_oPropertyDataModelOb4 = oPropertyDataModelObjectPath.targetEntitySet) !== null && _oPropertyDataModelOb4 !== void 0 && (_oPropertyDataModelOb5 = _oPropertyDataModelOb4.annotations) !== null && _oPropertyDataModelOb5 !== void 0 && (_oPropertyDataModelOb6 = _oPropertyDataModelOb5.Common) !== null && _oPropertyDataModelOb6 !== void 0 && _oPropertyDataModelOb6.DraftNode)) {
        parametersForFormatter.push(Entity.HasDraft);
        parametersForFormatter.push(Entity.IsActive);
      } else {
        parametersForFormatter.push(constant(null));
        parametersForFormatter.push(constant(null));
      }
      switch (targetDisplayMode) {
        case "Value":
          parametersForFormatter.push(propertyBindingExpression);
          parametersForFormatter.push(constant(null));
          break;
        case "Description":
          parametersForFormatter.push(getExpressionFromAnnotation(commonText, relativeLocation));
          parametersForFormatter.push(constant(null));
          break;
        case "ValueDescription":
          parametersForFormatter.push(propertyBindingExpression);
          parametersForFormatter.push(getExpressionFromAnnotation(commonText, relativeLocation));
          break;
        default:
          if (commonText !== null && commonText !== void 0 && (_commonText$annotatio = commonText.annotations) !== null && _commonText$annotatio !== void 0 && (_commonText$annotatio2 = _commonText$annotatio.UI) !== null && _commonText$annotatio2 !== void 0 && _commonText$annotatio2.TextArrangement) {
            parametersForFormatter.push(getExpressionFromAnnotation(commonText, relativeLocation));
            parametersForFormatter.push(propertyBindingExpression);
          } else {
            var _oPropertyDataModelOb7, _oPropertyDataModelOb8, _oPropertyDataModelOb9;
            // if DescriptionValue is set by default and not by TextArrangement
            // we show description in ObjectIdentifier Title and value in ObjectIdentifier Text
            parametersForFormatter.push(getExpressionFromAnnotation(commonText, relativeLocation));
            // if DescriptionValue is set by default and property has a semantic object
            // we show description and value in ObjectIdentifier Title
            if ((_oPropertyDataModelOb7 = oPropertyDataModelObjectPath.targetObject) !== null && _oPropertyDataModelOb7 !== void 0 && (_oPropertyDataModelOb8 = _oPropertyDataModelOb7.annotations) !== null && _oPropertyDataModelOb8 !== void 0 && (_oPropertyDataModelOb9 = _oPropertyDataModelOb8.Common) !== null && _oPropertyDataModelOb9 !== void 0 && _oPropertyDataModelOb9.SemanticObject) {
              parametersForFormatter.push(propertyBindingExpression);
            } else {
              parametersForFormatter.push(constant(null));
            }
          }
          break;
      }
      return compileExpression(formatResult(parametersForFormatter, valueFormatters.formatOPTitle));
    };
    Field.getObjectIdentifierText = function getObjectIdentifierText(fieldFormatOptions, oPropertyDataModelObjectPath) {
      var _oPropertyDefinition$3, _oPropertyDefinition$4, _commonText$annotatio3, _commonText$annotatio4;
      let propertyBindingExpression = pathInModel(getContextRelativeTargetObjectPath(oPropertyDataModelObjectPath));
      const targetDisplayMode = fieldFormatOptions === null || fieldFormatOptions === void 0 ? void 0 : fieldFormatOptions.displayMode;
      const oPropertyDefinition = oPropertyDataModelObjectPath.targetObject.type === "PropertyPath" ? oPropertyDataModelObjectPath.targetObject.$target : oPropertyDataModelObjectPath.targetObject;
      const commonText = (_oPropertyDefinition$3 = oPropertyDefinition.annotations) === null || _oPropertyDefinition$3 === void 0 ? void 0 : (_oPropertyDefinition$4 = _oPropertyDefinition$3.Common) === null || _oPropertyDefinition$4 === void 0 ? void 0 : _oPropertyDefinition$4.Text;
      if (commonText === undefined || commonText !== null && commonText !== void 0 && (_commonText$annotatio3 = commonText.annotations) !== null && _commonText$annotatio3 !== void 0 && (_commonText$annotatio4 = _commonText$annotatio3.UI) !== null && _commonText$annotatio4 !== void 0 && _commonText$annotatio4.TextArrangement) {
        return undefined;
      }
      propertyBindingExpression = formatWithTypeInformation(oPropertyDefinition, propertyBindingExpression);
      switch (targetDisplayMode) {
        case "ValueDescription":
          const relativeLocation = getRelativePaths(oPropertyDataModelObjectPath);
          return compileExpression(getExpressionFromAnnotation(commonText, relativeLocation));
        case "DescriptionValue":
          return compileExpression(formatResult([propertyBindingExpression], valueFormatters.formatToKeepWhitespace));
        default:
          return undefined;
      }
    };
    Field.setUpDataPointType = function setUpDataPointType(oDataField) {
      // data point annotations need not have $Type defined, so add it if missing
      if ((oDataField === null || oDataField === void 0 ? void 0 : oDataField.term) === "com.sap.vocabularies.UI.v1.DataPoint") {
        oDataField.$Type = oDataField.$Type || "com.sap.vocabularies.UI.v1.DataPointType";
      }
    };
    Field.setUpVisibleProperties = function setUpVisibleProperties(oFieldProps, oPropertyDataModelObjectPath) {
      // we do this before enhancing the dataModelPath so that it still points at the DataField
      oFieldProps.visible = FieldTemplating.getVisibleExpression(oPropertyDataModelObjectPath, oFieldProps.formatOptions);
      oFieldProps.displayVisible = oFieldProps.formatOptions.fieldMode === "nowrapper" ? oFieldProps.visible : undefined;
    };
    Field.getContentId = function getContentId(sMacroId) {
      return `${sMacroId}-content`;
    };
    Field.setUpSemanticObjects = function setUpSemanticObjects(oProps, oDataModelPath) {
      var _oDataModelPath$targe, _oDataModelPath$targe2;
      let aSemObjExprToResolve = [];
      aSemObjExprToResolve = FieldTemplating.getSemanticObjectExpressionToResolve(oDataModelPath === null || oDataModelPath === void 0 ? void 0 : (_oDataModelPath$targe = oDataModelPath.targetObject) === null || _oDataModelPath$targe === void 0 ? void 0 : (_oDataModelPath$targe2 = _oDataModelPath$targe.annotations) === null || _oDataModelPath$targe2 === void 0 ? void 0 : _oDataModelPath$targe2.Common);

      /**
       * If the field building block has a binding expression in the custom semantic objects,
       * it is then used by the QuickView Form BB.
       * This is needed to resolve the link at runtime. The QuickViewDelegate.js then gets the resolved
       * binding expression from the custom data.
       * All other semanticObjects are processed in the QuickView building block.
       */
      if (!!oProps.semanticObject && typeof oProps.semanticObject === "string" && oProps.semanticObject[0] === "{") {
        aSemObjExprToResolve.push({
          key: oProps.semanticObject.substr(1, oProps.semanticObject.length - 2),
          value: oProps.semanticObject
        });
      }
      oProps.semanticObjects = FieldTemplating.getSemanticObjects(aSemObjExprToResolve);
      // This sets up the semantic links found in the navigation property, if there is no semantic links define before.
      if (!oProps.semanticObject && oDataModelPath.navigationProperties.length > 0) {
        oDataModelPath.navigationProperties.forEach(function (navProperty) {
          var _navProperty$annotati, _navProperty$annotati2;
          if (navProperty !== null && navProperty !== void 0 && (_navProperty$annotati = navProperty.annotations) !== null && _navProperty$annotati !== void 0 && (_navProperty$annotati2 = _navProperty$annotati.Common) !== null && _navProperty$annotati2 !== void 0 && _navProperty$annotati2.SemanticObject) {
            oProps.semanticObject = navProperty.annotations.Common.SemanticObject;
            oProps.hasSemanticObjectOnNavigation = true;
          }
        });
      }
    };
    Field.setUpEditableProperties = function setUpEditableProperties(oProps, oDataField, oDataModelPath, oMetaModel) {
      var _oDataModelPath$targe3, _oProps$entitySet, _oProps$entitySet2;
      const oPropertyForFieldControl = oDataModelPath !== null && oDataModelPath !== void 0 && (_oDataModelPath$targe3 = oDataModelPath.targetObject) !== null && _oDataModelPath$targe3 !== void 0 && _oDataModelPath$targe3.Value ? oDataModelPath.targetObject.Value : oDataModelPath === null || oDataModelPath === void 0 ? void 0 : oDataModelPath.targetObject;
      if (oProps.editMode !== undefined && oProps.editMode !== null) {
        // Even if it provided as a string it's a valid part of a binding expression that can be later combined into something else.
        oProps.editModeAsObject = oProps.editMode;
      } else {
        const bMeasureReadOnly = oProps.formatOptions.measureDisplayMode ? oProps.formatOptions.measureDisplayMode === "ReadOnly" : false;
        oProps.editModeAsObject = UIFormatters.getEditMode(oPropertyForFieldControl, oDataModelPath, bMeasureReadOnly, true, oDataField);
        oProps.editMode = compileExpression(oProps.editModeAsObject);
      }
      const editableExpression = UIFormatters.getEditableExpressionAsObject(oPropertyForFieldControl, oDataField, oDataModelPath);
      const aRequiredPropertiesFromInsertRestrictions = CommonUtils.getRequiredPropertiesFromInsertRestrictions((_oProps$entitySet = oProps.entitySet) === null || _oProps$entitySet === void 0 ? void 0 : _oProps$entitySet.getPath().replaceAll("/$NavigationPropertyBinding/", "/"), oMetaModel);
      const aRequiredPropertiesFromUpdateRestrictions = CommonUtils.getRequiredPropertiesFromUpdateRestrictions((_oProps$entitySet2 = oProps.entitySet) === null || _oProps$entitySet2 === void 0 ? void 0 : _oProps$entitySet2.getPath().replaceAll("/$NavigationPropertyBinding/", "/"), oMetaModel);
      const oRequiredProperties = {
        requiredPropertiesFromInsertRestrictions: aRequiredPropertiesFromInsertRestrictions,
        requiredPropertiesFromUpdateRestrictions: aRequiredPropertiesFromUpdateRestrictions
      };
      if (ModelHelper.isCollaborationDraftSupported(oMetaModel)) {
        oProps.collaborationEnabled = true;
        // Expressions needed for Collaboration Visualization
        const collaborationExpression = UIFormatters.getCollaborationExpression(oDataModelPath, CollaborationFormatters.hasCollaborationActivity);
        oProps.collaborationHasActivityExpression = compileExpression(collaborationExpression);
        oProps.collaborationInitialsExpression = compileExpression(UIFormatters.getCollaborationExpression(oDataModelPath, CollaborationFormatters.getCollaborationActivityInitials));
        oProps.collaborationColorExpression = compileExpression(UIFormatters.getCollaborationExpression(oDataModelPath, CollaborationFormatters.getCollaborationActivityColor));
        oProps.editableExpression = compileExpression(and(editableExpression, not(collaborationExpression)));
        oProps.editMode = compileExpression(ifElse(collaborationExpression, constant("ReadOnly"), oProps.editModeAsObject));
      } else {
        oProps.editableExpression = compileExpression(editableExpression);
      }
      oProps.enabledExpression = UIFormatters.getEnabledExpression(oPropertyForFieldControl, oDataField, false, oDataModelPath);
      oProps.requiredExpression = UIFormatters.getRequiredExpression(oPropertyForFieldControl, oDataField, false, false, oRequiredProperties, oDataModelPath);
    };
    Field.setUpFormatOptions = function setUpFormatOptions(oProps, oDataModelPath, oControlConfiguration, mSettings) {
      var _mSettings$models$vie;
      const oOverrideProps = Field.getOverrides(oControlConfiguration, oProps.dataField.getPath());
      if (!oProps.formatOptions.displayMode) {
        oProps.formatOptions.displayMode = UIFormatters.getDisplayMode(oDataModelPath);
      }
      oProps.formatOptions.textLinesEdit = oOverrideProps.textLinesEdit || oOverrideProps.formatOptions && oOverrideProps.formatOptions.textLinesEdit || oProps.formatOptions.textLinesEdit || 4;
      oProps.formatOptions.textMaxLines = oOverrideProps.textMaxLines || oOverrideProps.formatOptions && oOverrideProps.formatOptions.textMaxLines || oProps.formatOptions.textMaxLines;

      // Retrieve text from value list as fallback feature for missing text annotation on the property
      if ((_mSettings$models$vie = mSettings.models.viewData) !== null && _mSettings$models$vie !== void 0 && _mSettings$models$vie.getProperty("/retrieveTextFromValueList")) {
        oProps.formatOptions.retrieveTextFromValueList = FieldTemplating.isRetrieveTextFromValueListEnabled(oDataModelPath.targetObject, oProps.formatOptions);
        if (oProps.formatOptions.retrieveTextFromValueList) {
          var _oDataModelPath$targe4, _oDataModelPath$targe5, _oDataModelPath$targe6;
          // Consider TextArrangement at EntityType otherwise set default display format 'DescriptionValue'
          const hasEntityTextArrangement = !!(oDataModelPath !== null && oDataModelPath !== void 0 && (_oDataModelPath$targe4 = oDataModelPath.targetEntityType) !== null && _oDataModelPath$targe4 !== void 0 && (_oDataModelPath$targe5 = _oDataModelPath$targe4.annotations) !== null && _oDataModelPath$targe5 !== void 0 && (_oDataModelPath$targe6 = _oDataModelPath$targe5.UI) !== null && _oDataModelPath$targe6 !== void 0 && _oDataModelPath$targe6.TextArrangement);
          oProps.formatOptions.displayMode = hasEntityTextArrangement ? oProps.formatOptions.displayMode : "DescriptionValue";
        }
      }
      if (oProps.formatOptions.fieldMode === "nowrapper" && oProps.editMode === "Display") {
        if (oProps._flexId) {
          oProps.noWrapperId = oProps._flexId;
        } else {
          oProps.noWrapperId = oProps.idPrefix ? generate([oProps.idPrefix, "Field-content"]) : undefined;
        }
      }
    };
    Field.setUpDisplayStyle = function setUpDisplayStyle(oProps, oDataField, oDataModelPath) {
      var _oProperty$annotation, _oProperty$annotation2, _oDataField$Target, _oDataField$Target$$t, _oDataField$Target2, _oDataField$Target2$$, _oProperty$annotation3, _oProperty$annotation4, _oProperty$annotation5, _oProperty$annotation6, _oProperty$annotation7, _oProperty$annotation8, _oProperty$annotation9, _oProperty$annotation10, _oProperty$annotation11, _oProperty$annotation12, _oProperty$annotation13, _oProperty$annotation14, _oProperty$annotation15, _oDataModelPath$navig, _oDataModelPath$navig2;
      const oProperty = oDataModelPath.targetObject;
      if (!oDataModelPath.targetObject) {
        oProps.displayStyle = "Text";
        return;
      }
      if (oProperty.type === "Edm.Stream") {
        oProps.fileSrc = compileExpression(getExpressionFromAnnotation(oDataField.Value));
        oProps.displayStyle = "File";
        return;
      }
      if ((_oProperty$annotation = oProperty.annotations) !== null && _oProperty$annotation !== void 0 && (_oProperty$annotation2 = _oProperty$annotation.UI) !== null && _oProperty$annotation2 !== void 0 && _oProperty$annotation2.IsImageURL) {
        oProps.avatarVisible = FieldTemplating.getVisibleExpression(oDataModelPath);
        oProps.avatarSrc = compileExpression(getExpressionFromAnnotation(oDataField.Value));
        oProps.displayStyle = "Avatar";
        return;
      }
      const hasQuickViewFacets = oProperty ? FieldTemplating.isUsedInNavigationWithQuickViewFacets(oDataModelPath, oProperty) : false;
      switch (oDataField.$Type) {
        case "com.sap.vocabularies.UI.v1.DataPointType":
          oProps.displayStyle = "DataPoint";
          return;
        case "com.sap.vocabularies.UI.v1.DataFieldForAnnotation":
          if (((_oDataField$Target = oDataField.Target) === null || _oDataField$Target === void 0 ? void 0 : (_oDataField$Target$$t = _oDataField$Target.$target) === null || _oDataField$Target$$t === void 0 ? void 0 : _oDataField$Target$$t.$Type) === "com.sap.vocabularies.UI.v1.DataPointType") {
            oProps.displayStyle = "DataPoint";
            return;
          } else if (((_oDataField$Target2 = oDataField.Target) === null || _oDataField$Target2 === void 0 ? void 0 : (_oDataField$Target2$$ = _oDataField$Target2.$target) === null || _oDataField$Target2$$ === void 0 ? void 0 : _oDataField$Target2$$.$Type) === "com.sap.vocabularies.Communication.v1.ContactType") {
            oProps.displayStyle = "Contact";
            return;
          }
          break;
        case "com.sap.vocabularies.UI.v1.DataFieldForAction":
          oProps.displayStyle = "Button";
          return;
        case "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation":
          Field.setUpNavigationAvailable(oProps, oDataField);
          oProps.displayStyle = "Button";
          return;
        case "com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation":
          oProps.text = Field.getTextWithWhiteSpace(oProps.formatOptions, oDataModelPath);
        // falls through
        case "com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath":
        case "com.sap.vocabularies.UI.v1.DataFieldWithAction":
          oProps.displayStyle = "Link";
          return;
      }
      if (isSemanticKey(oProperty, oDataModelPath) && oProps.formatOptions.semanticKeyStyle) {
        var _oDataModelPath$targe7, _oDataModelPath$targe8, _oDataModelPath$targe9;
        oProps.hasQuickViewFacets = hasQuickViewFacets;
        oProps.hasSituationsIndicator = SituationsIndicator.getSituationsNavigationProperty(oDataModelPath.targetEntityType) !== undefined;
        Field.setUpObjectIdentifierTitleAndText(oProps, oDataModelPath);
        if ((_oDataModelPath$targe7 = oDataModelPath.targetEntitySet) !== null && _oDataModelPath$targe7 !== void 0 && (_oDataModelPath$targe8 = _oDataModelPath$targe7.annotations) !== null && _oDataModelPath$targe8 !== void 0 && (_oDataModelPath$targe9 = _oDataModelPath$targe8.Common) !== null && _oDataModelPath$targe9 !== void 0 && _oDataModelPath$targe9.DraftRoot) {
          oProps.displayStyle = "SemanticKeyWithDraftIndicator";
          return;
        }
        oProps.displayStyle = oProps.formatOptions.semanticKeyStyle === "ObjectIdentifier" ? "ObjectIdentifier" : "LabelSemanticKey";
        return;
      }
      if (oDataField.Criticality) {
        oProps.hasQuickViewFacets = hasQuickViewFacets;
        oProps.displayStyle = "ObjectStatus";
        return;
      }
      if ((_oProperty$annotation3 = oProperty.annotations) !== null && _oProperty$annotation3 !== void 0 && (_oProperty$annotation4 = _oProperty$annotation3.Measures) !== null && _oProperty$annotation4 !== void 0 && _oProperty$annotation4.ISOCurrency && String(oProps.formatOptions.isCurrencyAligned) === "true") {
        if (oProps.formatOptions.measureDisplayMode === "Hidden") {
          oProps.displayStyle = "Text";
          return;
        }
        oProps.valueAsStringBindingExpression = FieldTemplating.getValueBinding(oDataModelPath, oProps.formatOptions, true, true, undefined, true);
        oProps.unitBindingExpression = compileExpression(UIFormatters.getBindingForUnitOrCurrency(oDataModelPath));
        oProps.displayStyle = "AmountWithCurrency";
        return;
      }
      if ((_oProperty$annotation5 = oProperty.annotations) !== null && _oProperty$annotation5 !== void 0 && (_oProperty$annotation6 = _oProperty$annotation5.Communication) !== null && _oProperty$annotation6 !== void 0 && _oProperty$annotation6.IsEmailAddress || (_oProperty$annotation7 = oProperty.annotations) !== null && _oProperty$annotation7 !== void 0 && (_oProperty$annotation8 = _oProperty$annotation7.Communication) !== null && _oProperty$annotation8 !== void 0 && _oProperty$annotation8.IsPhoneNumber) {
        oProps.text = Field.getTextWithWhiteSpace(oProps.formatOptions, oDataModelPath);
        oProps.displayStyle = "Link";
        return;
      }
      if ((_oProperty$annotation9 = oProperty.annotations) !== null && _oProperty$annotation9 !== void 0 && (_oProperty$annotation10 = _oProperty$annotation9.UI) !== null && _oProperty$annotation10 !== void 0 && _oProperty$annotation10.MultiLineText) {
        oProps.displayStyle = "ExpandableText";
        return;
      }
      if (hasQuickViewFacets) {
        oProps.text = Field.getTextWithWhiteSpace(oProps.formatOptions, oDataModelPath);
        oProps.hasQuickViewFacets = true;
        oProps.displayStyle = "LinkWithQuickView";
        return;
      }
      if (oProps.semanticObject && !(oProperty !== null && oProperty !== void 0 && (_oProperty$annotation11 = oProperty.annotations) !== null && _oProperty$annotation11 !== void 0 && (_oProperty$annotation12 = _oProperty$annotation11.Communication) !== null && _oProperty$annotation12 !== void 0 && _oProperty$annotation12.IsEmailAddress || oProperty !== null && oProperty !== void 0 && (_oProperty$annotation13 = oProperty.annotations) !== null && _oProperty$annotation13 !== void 0 && (_oProperty$annotation14 = _oProperty$annotation13.Communication) !== null && _oProperty$annotation14 !== void 0 && _oProperty$annotation14.IsPhoneNumber)) {
        oProps.hasQuickViewFacets = hasQuickViewFacets;
        oProps.text = Field.getTextWithWhiteSpace(oProps.formatOptions, oDataModelPath);
        oProps.displayStyle = "LinkWithQuickView";
        return;
      }
      if (FieldTemplating.hasSemanticObjectInNavigationOrProperty(oDataModelPath)) {
        oProps.hasQuickViewFacets = hasQuickViewFacets;
        oProps.displayStyle = "LinkWrapper";
        return;
      }
      const _oPropertyCommonAnnotations = (_oProperty$annotation15 = oProperty.annotations) === null || _oProperty$annotation15 === void 0 ? void 0 : _oProperty$annotation15.Common;
      const _oPropertyNavigationPropertyAnnotations = oDataModelPath === null || oDataModelPath === void 0 ? void 0 : (_oDataModelPath$navig = oDataModelPath.navigationProperties[0]) === null || _oDataModelPath$navig === void 0 ? void 0 : (_oDataModelPath$navig2 = _oDataModelPath$navig.annotations) === null || _oDataModelPath$navig2 === void 0 ? void 0 : _oDataModelPath$navig2.Common;
      for (const key in _oPropertyCommonAnnotations) {
        if (key.indexOf("SemanticObject") === 0) {
          oProps.hasQuickViewFacets = hasQuickViewFacets;
          oProps.displayStyle = "LinkWrapper";
          return;
        }
      }
      for (const key in _oPropertyNavigationPropertyAnnotations) {
        if (key.indexOf("SemanticObject") === 0) {
          oProps.hasQuickViewFacets = hasQuickViewFacets;
          oProps.displayStyle = "LinkWrapper";
          return;
        }
      }
      if (oDataField.$Type === "com.sap.vocabularies.UI.v1.DataFieldWithUrl") {
        oProps.text = Field.getTextWithWhiteSpace(oProps.formatOptions, oDataModelPath);
        oProps.displayStyle = "Link";
        oProps.iconUrl = oDataField.IconUrl ? compileExpression(getExpressionFromAnnotation(oDataField.IconUrl)) : undefined;
        oProps.linkUrl = compileExpression(getExpressionFromAnnotation(oDataField.Url));
        return;
      }
      oProps.displayStyle = "Text";
    };
    Field.setUpEditStyle = function setUpEditStyle(oProps, oDataField, oDataModelPath) {
      FieldTemplating.setEditStyleProperties(oProps, oDataField, oDataModelPath);
    };
    Field.setUpObjectIdentifierTitleAndText = function setUpObjectIdentifierTitleAndText(_oProps, oPropertyDataModelObjectPath) {
      var _oProps$formatOptions;
      if (((_oProps$formatOptions = _oProps.formatOptions) === null || _oProps$formatOptions === void 0 ? void 0 : _oProps$formatOptions.semanticKeyStyle) === "ObjectIdentifier") {
        var _oPropertyDataModelOb10, _oPropertyDataModelOb11, _oPropertyDataModelOb12;
        _oProps.identifierTitle = Field.getObjectIdentifierTitle(_oProps.formatOptions, oPropertyDataModelObjectPath);
        if (!((_oPropertyDataModelOb10 = oPropertyDataModelObjectPath.targetObject) !== null && _oPropertyDataModelOb10 !== void 0 && (_oPropertyDataModelOb11 = _oPropertyDataModelOb10.annotations) !== null && _oPropertyDataModelOb11 !== void 0 && (_oPropertyDataModelOb12 = _oPropertyDataModelOb11.Common) !== null && _oPropertyDataModelOb12 !== void 0 && _oPropertyDataModelOb12.SemanticObject)) {
          _oProps.identifierText = Field.getObjectIdentifierText(_oProps.formatOptions, oPropertyDataModelObjectPath);
        } else {
          _oProps.identifierText = undefined;
        }
      } else {
        _oProps.identifierTitle = undefined;
        _oProps.identifierText = undefined;
      }
    };
    Field.getTextWithWhiteSpace = function getTextWithWhiteSpace(formatOptions, oDataModelPath) {
      const text = FieldTemplating.getTextBinding(oDataModelPath, formatOptions, true);
      return text._type === "PathInModel" || typeof text === "string" ? compileExpression(formatResult([text], "WSR")) : compileExpression(text);
    };
    Field.setUpNavigationAvailable = function setUpNavigationAvailable(oProps, oDataField) {
      oProps.navigationAvailable = true;
      if ((oDataField === null || oDataField === void 0 ? void 0 : oDataField.$Type) === "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation" && oDataField.NavigationAvailable !== undefined && String(oProps.formatOptions.ignoreNavigationAvailable) !== "true") {
        oProps.navigationAvailable = compileExpression(getExpressionFromAnnotation(oDataField.NavigationAvailable));
      }
    };
    function Field(props, controlConfiguration, settings) {
      var _this$dataField$getOb;
      var _this;
      _this = _BuildingBlockBase.call(this, props) || this;
      _initializerDefineProperty(_this, "dataSourcePath", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "emptyIndicatorMode", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "_flexId", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "idPrefix", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "_apiId", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "noWrapperId", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "vhIdPrefix", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "_vhFlexId", _descriptor8, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "entitySet", _descriptor9, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "entityType", _descriptor10, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "navigateAfterAction", _descriptor11, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "dataField", _descriptor12, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "semanticObjects", _descriptor13, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "editMode", _descriptor14, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "wrap", _descriptor15, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "class", _descriptor16, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "ariaLabelledBy", _descriptor17, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "textAlign", _descriptor18, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "editableExpression", _descriptor19, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "enabledExpression", _descriptor20, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "collaborationEnabled", _descriptor21, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "collaborationHasActivityExpression", _descriptor22, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "collaborationInitialsExpression", _descriptor23, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "collaborationColorExpression", _descriptor24, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "semanticObject", _descriptor25, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "hasSemanticObjectOnNavigation", _descriptor26, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "requiredExpression", _descriptor27, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visible", _descriptor28, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "formatOptions", _descriptor29, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "onChange", _descriptor30, _assertThisInitialized(_this));
      const oDataFieldConverted = MetaModelConverter.convertMetaModelContext(_this.dataField);
      let oDataModelPath = MetaModelConverter.getInvolvedDataModelObjects(_this.dataField, _this.entitySet);
      Field.setUpDataPointType(oDataFieldConverted);
      Field.setUpVisibleProperties(_assertThisInitialized(_this), oDataModelPath);
      if (_this._flexId) {
        _this._apiId = _this._flexId;
        _this._flexId = Field.getContentId(_this._flexId);
        _this._vhFlexId = `${_this._flexId}_${_this.vhIdPrefix}`;
      }
      const valueDataModelPath = FieldTemplating.getDataModelObjectPathForValue(oDataModelPath);
      oDataModelPath = valueDataModelPath || oDataModelPath;
      Field.setUpSemanticObjects(_assertThisInitialized(_this), oDataModelPath);
      _this.dataSourcePath = getTargetObjectPath(oDataModelPath);
      const oMetaModel = settings.models.metaModel || settings.models.entitySet;
      _this.entityType = oMetaModel.createBindingContext(`/${oDataModelPath.targetEntityType.fullyQualifiedName}`);
      Field.setUpEditableProperties(_assertThisInitialized(_this), oDataFieldConverted, oDataModelPath, oMetaModel);
      Field.setUpFormatOptions(_assertThisInitialized(_this), oDataModelPath, controlConfiguration, settings);
      Field.setUpDisplayStyle(_assertThisInitialized(_this), oDataFieldConverted, oDataModelPath);
      Field.setUpEditStyle(_assertThisInitialized(_this), oDataFieldConverted, oDataModelPath);

      // ---------------------------------------- compute bindings----------------------------------------------------
      const aDisplayStylesWithoutPropText = ["Avatar", "AmountWithCurrency"];
      if (_this.displayStyle && aDisplayStylesWithoutPropText.indexOf(_this.displayStyle) === -1 && oDataModelPath.targetObject) {
        _this.text = _this.text ?? FieldTemplating.getTextBinding(oDataModelPath, _this.formatOptions);
        Field.setUpObjectIdentifierTitleAndText(_assertThisInitialized(_this), oDataModelPath);
      } else {
        _this.text = "";
      }

      //TODO this is fixed twice
      // data point annotations need not have $Type defined, so add it if missing
      if (((_this$dataField$getOb = _this.dataField.getObject("@sapui.name")) === null || _this$dataField$getOb === void 0 ? void 0 : _this$dataField$getOb.indexOf("com.sap.vocabularies.UI.v1.DataPoint")) > -1) {
        const oDataPoint = _this.dataField.getObject();
        oDataPoint.$Type = oDataPoint.$Type || "com.sap.vocabularies.UI.v1.DataPointType";
        _this.dataField = new TemplateModel(oDataPoint, _this.dataField.getModel()).createBindingContext("/");
      }
      _this.emptyIndicatorMode = _this.formatOptions.showEmptyIndicator ? "On" : undefined;
      return _this;
    }

    /**
     * The building block template function.
     *
     * @returns An XML-based string with the definition of the field control
     */
    _exports = Field;
    var _proto = Field.prototype;
    _proto.getTemplate = function getTemplate() {
      if (this.formatOptions.fieldMode === "nowrapper" && this.editMode === EditMode.Display) {
        return xml`<core:Fragment fragmentName="sap.fe.macros.internal.field.FieldContent" type="XML" />`;
      } else {
        let id;
        if (this._apiId) {
          id = this._apiId;
        } else if (this.idPrefix) {
          id = generate([this.idPrefix, "Field"]);
        } else {
          id = undefined;
        }
        if (this.onChange !== null && this.onChange !== "null") {
          return xml`
					<macroField:FieldAPI
						xmlns:macroField="sap.fe.macros.field"
						change="${this.onChange}"
						id="${id}"
						required="${this.requiredExpression}"
						editable="${this.editableExpression}"
						collaborationEnabled="${this.collaborationEnabled}"
						visible="${this.visible}"
					>
						<core:Fragment fragmentName="sap.fe.macros.internal.field.FieldContent" type="XML" />
					</macroField:FieldAPI>
				`;
        } else {
          return xml`<macroField:FieldAPI
						xmlns:macroField="sap.fe.macros.field"
						id="${id}"
						required="${this.requiredExpression}"
						editable="${this.editableExpression}"
						collaborationEnabled="${this.collaborationEnabled}"
						visible="${this.visible}"
					>
						<core:Fragment fragmentName="sap.fe.macros.internal.field.FieldContent" type="XML" />
					</macroField:FieldAPI>
					`;
        }
      }
    };
    return Field;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "dataSourcePath", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "emptyIndicatorMode", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "_flexId", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "idPrefix", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "_apiId", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "noWrapperId", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "vhIdPrefix", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "_vhFlexId", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "entitySet", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "entityType", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "navigateAfterAction", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "dataField", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "semanticObjects", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "editMode", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "wrap", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "class", [_dec17], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "ariaLabelledBy", [_dec18], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "textAlign", [_dec19], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "editableExpression", [_dec20], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "enabledExpression", [_dec21], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "collaborationEnabled", [_dec22], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "collaborationHasActivityExpression", [_dec23], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "collaborationInitialsExpression", [_dec24], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "collaborationColorExpression", [_dec25], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "semanticObject", [_dec26], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "hasSemanticObjectOnNavigation", [_dec27], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "requiredExpression", [_dec28], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec29], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "formatOptions", [_dec30], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return {};
    }
  }), _descriptor30 = _applyDecoratedDescriptor(_class2.prototype, "onChange", [_dec31], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return "";
    }
  })), _class2)) || _class);
  _exports = Field;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/InternalField", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/CommonUtils","sap/fe/core/converters/helpers/BindingHelper","sap/fe/core/converters/MetaModelConverter","sap/fe/core/formatters/CollaborationFormatter","sap/fe/core/formatters/ValueFormatter","sap/fe/core/helpers/BindingToolkit","sap/fe/core/helpers/ModelHelper","sap/fe/core/helpers/StableIdHelper","sap/fe/core/TemplateModel","sap/fe/core/templating/DataModelPathHelper","sap/fe/core/templating/PropertyHelper","sap/fe/core/templating/UIFormatters","sap/fe/macros/field/FieldTemplating","sap/fe/macros/situations/SituationsIndicator.fragment","sap/ui/mdc/enum/EditMode"],function(e,t,i,a,n,r,o,l,s,u,d,p,c,f,b,m,v){"use strict";var y,g,h,O,x,I,E,S,T,F,w,j,P,A,M,D,U,C,$,k,V,z,B,W,_,N,L,R,q,H,K,Q,X,J,G,Y,Z,ee,te,ie,ae,ne,re,oe,le,se,ue,de,pe,ce,fe,be,me,ve,ye,ge,he,Oe,xe,Ie,Ee,Se,Te;var Fe={};var we=c.isSemanticKey;var je=p.getTargetObjectPath;var Pe=p.getRelativePaths;var Ae=p.getContextRelativeTargetObjectPath;var Me=u.generate;var De=l.pathInModel;var Ue=l.not;var Ce=l.ifElse;var $e=l.getExpressionFromAnnotation;var ke=l.formatWithTypeInformation;var Ve=l.formatResult;var ze=l.constant;var Be=l.compileExpression;var We=l.and;var _e=a.Entity;var Ne=t.xml;var Le=e.defineBuildingBlock;var Re=e.BuildingBlockBase;var qe=e.blockEvent;var He=e.blockAttribute;function Ke(e,t,i,a){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(a):void 0})}function Qe(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function Xe(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;Je(e,t)}function Je(e,t){Je=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return Je(e,t)}function Ge(e,t,i,a,n){var r={};Object.keys(a).forEach(function(e){r[e]=a[e]});r.enumerable=!!r.enumerable;r.configurable=!!r.configurable;if("value"in r||r.initializer){r.writable=true}r=i.slice().reverse().reduce(function(i,a){return a(e,t,i)||i},r);if(n&&r.initializer!==void 0){r.value=r.initializer?r.initializer.call(n):void 0;r.initializer=undefined}if(r.initializer===void 0){Object.defineProperty(e,t,r);r=null}return r}function Ye(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let Ze=(y=Le({name:"Field",namespace:"sap.fe.macros.internal",designtime:"sap/fe/macros/internal/Field.designtime"}),g=He({type:"string"}),h=He({type:"string"}),O=He({type:"string"}),x=He({type:"string"}),I=He({type:"string"}),E=He({type:"string"}),S=He({type:"string",defaultValue:"FieldValueHelp"}),T=He({type:"string",computed:true}),F=He({type:"sap.ui.model.Context",required:true,$kind:["EntitySet","NavigationProperty","EntityType","Singleton"]}),w=He({type:"sap.ui.model.Context",required:false,computed:true,$kind:["EntityType"]}),j=He({type:"boolean",defaultValue:true}),P=He({type:"sap.ui.model.Context",required:true,$kind:["Property"],$Type:["com.sap.vocabularies.UI.v1.DataField","com.sap.vocabularies.UI.v1.DataFieldWithUrl","com.sap.vocabularies.UI.v1.DataFieldForAnnotation","com.sap.vocabularies.UI.v1.DataFieldForAction","com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation","com.sap.vocabularies.UI.v1.DataFieldWithAction","com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation","com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath","com.sap.vocabularies.UI.v1.DataPointType"]}),A=He({type:"sap.ui.model.Context",required:false,computed:true}),M=He({type:"sap.ui.mdc.enum.EditMode"}),D=He({type:"boolean"}),U=He({type:"string"}),C=He({type:"string"}),$=He({type:"sap.ui.core.TextAlign"}),k=He({type:"string",computed:true}),V=He({type:"string",computed:true}),z=He({type:"boolean",computed:true}),B=He({type:"string",computed:true}),W=He({type:"string",computed:true}),_=He({type:"string",computed:true}),N=He({type:"string",required:false}),L=He({type:"boolean",required:false}),R=He({type:"string"}),q=He({type:"boolean"}),H=He({type:"object",validate:function(e){if(e.textAlignMode&&!["Table","Form"].includes(e.textAlignMode)){throw new Error(`Allowed value ${e.textAlignMode} for textAlignMode does not match`)}if(e.displayMode&&!["Value","Description","ValueDescription","DescriptionValue"].includes(e.displayMode)){throw new Error(`Allowed value ${e.displayMode} for displayMode does not match`)}if(e.fieldMode&&!["nowrapper",""].includes(e.fieldMode)){throw new Error(`Allowed value ${e.fieldMode} for fieldMode does not match`)}if(e.measureDisplayMode&&!["Hidden","ReadOnly"].includes(e.measureDisplayMode)){throw new Error(`Allowed value ${e.measureDisplayMode} for measureDisplayMode does not match`)}if(e.textExpandBehaviorDisplay&&!["InPlace","Popover"].includes(e.textExpandBehaviorDisplay)){throw new Error(`Allowed value ${e.textExpandBehaviorDisplay} for textExpandBehaviorDisplay does not match`)}if(e.semanticKeyStyle&&!["ObjectIdentifier","Label",""].includes(e.semanticKeyStyle)){throw new Error(`Allowed value ${e.semanticKeyStyle} for semanticKeyStyle does not match`)}return e}}),K=qe(),y(Q=(X=function(e){Xe(t,e);t.getOverrides=function e(t,i){const a={};if(t){const e=t[i];if(e){Object.keys(e).forEach(function(t){a[t]=e[t]})}}return a};t.getObjectIdentifierTitle=function e(t,i){var a,n,r,l,s,u,d,p,c,f;let b=De(Ae(i));let m=t===null||t===void 0?void 0:t.displayMode;const v=i.targetObject.type==="PropertyPath"?i.targetObject.$target:i.targetObject;b=ke(v,b);const y=(a=v.annotations)===null||a===void 0?void 0:(n=a.Common)===null||n===void 0?void 0:n.Text;if(y===undefined){m="Value"}const g=Pe(i);const h=[];h.push(De("T_NEW_OBJECT","sap.fe.i18n"));h.push(De("T_ANNOTATION_HELPER_DEFAULT_OBJECT_PAGE_HEADER_TITLE_NO_HEADER_INFO","sap.fe.i18n"));if(!!((r=i.targetEntitySet)!==null&&r!==void 0&&(l=r.annotations)!==null&&l!==void 0&&(s=l.Common)!==null&&s!==void 0&&s.DraftRoot)||!!((u=i.targetEntitySet)!==null&&u!==void 0&&(d=u.annotations)!==null&&d!==void 0&&(p=d.Common)!==null&&p!==void 0&&p.DraftNode)){h.push(_e.HasDraft);h.push(_e.IsActive)}else{h.push(ze(null));h.push(ze(null))}switch(m){case"Value":h.push(b);h.push(ze(null));break;case"Description":h.push($e(y,g));h.push(ze(null));break;case"ValueDescription":h.push(b);h.push($e(y,g));break;default:if(y!==null&&y!==void 0&&(c=y.annotations)!==null&&c!==void 0&&(f=c.UI)!==null&&f!==void 0&&f.TextArrangement){h.push($e(y,g));h.push(b)}else{var O,x,I;h.push($e(y,g));if((O=i.targetObject)!==null&&O!==void 0&&(x=O.annotations)!==null&&x!==void 0&&(I=x.Common)!==null&&I!==void 0&&I.SemanticObject){h.push(b)}else{h.push(ze(null))}}break}return Be(Ve(h,o.formatOPTitle))};t.getObjectIdentifierText=function e(t,i){var a,n,r,l;let s=De(Ae(i));const u=t===null||t===void 0?void 0:t.displayMode;const d=i.targetObject.type==="PropertyPath"?i.targetObject.$target:i.targetObject;const p=(a=d.annotations)===null||a===void 0?void 0:(n=a.Common)===null||n===void 0?void 0:n.Text;if(p===undefined||p!==null&&p!==void 0&&(r=p.annotations)!==null&&r!==void 0&&(l=r.UI)!==null&&l!==void 0&&l.TextArrangement){return undefined}s=ke(d,s);switch(u){case"ValueDescription":const e=Pe(i);return Be($e(p,e));case"DescriptionValue":return Be(Ve([s],o.formatToKeepWhitespace));default:return undefined}};t.setUpDataPointType=function e(t){if((t===null||t===void 0?void 0:t.term)==="com.sap.vocabularies.UI.v1.DataPoint"){t.$Type=t.$Type||"com.sap.vocabularies.UI.v1.DataPointType"}};t.setUpVisibleProperties=function e(t,i){t.visible=b.getVisibleExpression(i,t.formatOptions);t.displayVisible=t.formatOptions.fieldMode==="nowrapper"?t.visible:undefined};t.getContentId=function e(t){return`${t}-content`};t.setUpSemanticObjects=function e(t,i){var a,n;let r=[];r=b.getSemanticObjectExpressionToResolve(i===null||i===void 0?void 0:(a=i.targetObject)===null||a===void 0?void 0:(n=a.annotations)===null||n===void 0?void 0:n.Common);if(!!t.semanticObject&&typeof t.semanticObject==="string"&&t.semanticObject[0]==="{"){r.push({key:t.semanticObject.substr(1,t.semanticObject.length-2),value:t.semanticObject})}t.semanticObjects=b.getSemanticObjects(r);if(!t.semanticObject&&i.navigationProperties.length>0){i.navigationProperties.forEach(function(e){var i,a;if(e!==null&&e!==void 0&&(i=e.annotations)!==null&&i!==void 0&&(a=i.Common)!==null&&a!==void 0&&a.SemanticObject){t.semanticObject=e.annotations.Common.SemanticObject;t.hasSemanticObjectOnNavigation=true}})}};t.setUpEditableProperties=function e(t,a,n,o){var l,u,d;const p=n!==null&&n!==void 0&&(l=n.targetObject)!==null&&l!==void 0&&l.Value?n.targetObject.Value:n===null||n===void 0?void 0:n.targetObject;if(t.editMode!==undefined&&t.editMode!==null){t.editModeAsObject=t.editMode}else{const e=t.formatOptions.measureDisplayMode?t.formatOptions.measureDisplayMode==="ReadOnly":false;t.editModeAsObject=f.getEditMode(p,n,e,true,a);t.editMode=Be(t.editModeAsObject)}const c=f.getEditableExpressionAsObject(p,a,n);const b=i.getRequiredPropertiesFromInsertRestrictions((u=t.entitySet)===null||u===void 0?void 0:u.getPath().replaceAll("/$NavigationPropertyBinding/","/"),o);const m=i.getRequiredPropertiesFromUpdateRestrictions((d=t.entitySet)===null||d===void 0?void 0:d.getPath().replaceAll("/$NavigationPropertyBinding/","/"),o);const v={requiredPropertiesFromInsertRestrictions:b,requiredPropertiesFromUpdateRestrictions:m};if(s.isCollaborationDraftSupported(o)){t.collaborationEnabled=true;const e=f.getCollaborationExpression(n,r.hasCollaborationActivity);t.collaborationHasActivityExpression=Be(e);t.collaborationInitialsExpression=Be(f.getCollaborationExpression(n,r.getCollaborationActivityInitials));t.collaborationColorExpression=Be(f.getCollaborationExpression(n,r.getCollaborationActivityColor));t.editableExpression=Be(We(c,Ue(e)));t.editMode=Be(Ce(e,ze("ReadOnly"),t.editModeAsObject))}else{t.editableExpression=Be(c)}t.enabledExpression=f.getEnabledExpression(p,a,false,n);t.requiredExpression=f.getRequiredExpression(p,a,false,false,v,n)};t.setUpFormatOptions=function e(i,a,n,r){var o;const l=t.getOverrides(n,i.dataField.getPath());if(!i.formatOptions.displayMode){i.formatOptions.displayMode=f.getDisplayMode(a)}i.formatOptions.textLinesEdit=l.textLinesEdit||l.formatOptions&&l.formatOptions.textLinesEdit||i.formatOptions.textLinesEdit||4;i.formatOptions.textMaxLines=l.textMaxLines||l.formatOptions&&l.formatOptions.textMaxLines||i.formatOptions.textMaxLines;if((o=r.models.viewData)!==null&&o!==void 0&&o.getProperty("/retrieveTextFromValueList")){i.formatOptions.retrieveTextFromValueList=b.isRetrieveTextFromValueListEnabled(a.targetObject,i.formatOptions);if(i.formatOptions.retrieveTextFromValueList){var s,u,d;const e=!!(a!==null&&a!==void 0&&(s=a.targetEntityType)!==null&&s!==void 0&&(u=s.annotations)!==null&&u!==void 0&&(d=u.UI)!==null&&d!==void 0&&d.TextArrangement);i.formatOptions.displayMode=e?i.formatOptions.displayMode:"DescriptionValue"}}if(i.formatOptions.fieldMode==="nowrapper"&&i.editMode==="Display"){if(i._flexId){i.noWrapperId=i._flexId}else{i.noWrapperId=i.idPrefix?Me([i.idPrefix,"Field-content"]):undefined}}};t.setUpDisplayStyle=function e(i,a,n){var r,o,l,s,u,d,p,c,v,y,g,h,O,x,I,E,S,T,F,w,j;const P=n.targetObject;if(!n.targetObject){i.displayStyle="Text";return}if(P.type==="Edm.Stream"){i.fileSrc=Be($e(a.Value));i.displayStyle="File";return}if((r=P.annotations)!==null&&r!==void 0&&(o=r.UI)!==null&&o!==void 0&&o.IsImageURL){i.avatarVisible=b.getVisibleExpression(n);i.avatarSrc=Be($e(a.Value));i.displayStyle="Avatar";return}const A=P?b.isUsedInNavigationWithQuickViewFacets(n,P):false;switch(a.$Type){case"com.sap.vocabularies.UI.v1.DataPointType":i.displayStyle="DataPoint";return;case"com.sap.vocabularies.UI.v1.DataFieldForAnnotation":if(((l=a.Target)===null||l===void 0?void 0:(s=l.$target)===null||s===void 0?void 0:s.$Type)==="com.sap.vocabularies.UI.v1.DataPointType"){i.displayStyle="DataPoint";return}else if(((u=a.Target)===null||u===void 0?void 0:(d=u.$target)===null||d===void 0?void 0:d.$Type)==="com.sap.vocabularies.Communication.v1.ContactType"){i.displayStyle="Contact";return}break;case"com.sap.vocabularies.UI.v1.DataFieldForAction":i.displayStyle="Button";return;case"com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation":t.setUpNavigationAvailable(i,a);i.displayStyle="Button";return;case"com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation":i.text=t.getTextWithWhiteSpace(i.formatOptions,n);case"com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath":case"com.sap.vocabularies.UI.v1.DataFieldWithAction":i.displayStyle="Link";return}if(we(P,n)&&i.formatOptions.semanticKeyStyle){var M,D,U;i.hasQuickViewFacets=A;i.hasSituationsIndicator=m.getSituationsNavigationProperty(n.targetEntityType)!==undefined;t.setUpObjectIdentifierTitleAndText(i,n);if((M=n.targetEntitySet)!==null&&M!==void 0&&(D=M.annotations)!==null&&D!==void 0&&(U=D.Common)!==null&&U!==void 0&&U.DraftRoot){i.displayStyle="SemanticKeyWithDraftIndicator";return}i.displayStyle=i.formatOptions.semanticKeyStyle==="ObjectIdentifier"?"ObjectIdentifier":"LabelSemanticKey";return}if(a.Criticality){i.hasQuickViewFacets=A;i.displayStyle="ObjectStatus";return}if((p=P.annotations)!==null&&p!==void 0&&(c=p.Measures)!==null&&c!==void 0&&c.ISOCurrency&&String(i.formatOptions.isCurrencyAligned)==="true"){if(i.formatOptions.measureDisplayMode==="Hidden"){i.displayStyle="Text";return}i.valueAsStringBindingExpression=b.getValueBinding(n,i.formatOptions,true,true,undefined,true);i.unitBindingExpression=Be(f.getBindingForUnitOrCurrency(n));i.displayStyle="AmountWithCurrency";return}if((v=P.annotations)!==null&&v!==void 0&&(y=v.Communication)!==null&&y!==void 0&&y.IsEmailAddress||(g=P.annotations)!==null&&g!==void 0&&(h=g.Communication)!==null&&h!==void 0&&h.IsPhoneNumber){i.text=t.getTextWithWhiteSpace(i.formatOptions,n);i.displayStyle="Link";return}if((O=P.annotations)!==null&&O!==void 0&&(x=O.UI)!==null&&x!==void 0&&x.MultiLineText){i.displayStyle="ExpandableText";return}if(A){i.text=t.getTextWithWhiteSpace(i.formatOptions,n);i.hasQuickViewFacets=true;i.displayStyle="LinkWithQuickView";return}if(i.semanticObject&&!(P!==null&&P!==void 0&&(I=P.annotations)!==null&&I!==void 0&&(E=I.Communication)!==null&&E!==void 0&&E.IsEmailAddress||P!==null&&P!==void 0&&(S=P.annotations)!==null&&S!==void 0&&(T=S.Communication)!==null&&T!==void 0&&T.IsPhoneNumber)){i.hasQuickViewFacets=A;i.text=t.getTextWithWhiteSpace(i.formatOptions,n);i.displayStyle="LinkWithQuickView";return}if(b.hasSemanticObjectInNavigationOrProperty(n)){i.hasQuickViewFacets=A;i.displayStyle="LinkWrapper";return}const C=(F=P.annotations)===null||F===void 0?void 0:F.Common;const $=n===null||n===void 0?void 0:(w=n.navigationProperties[0])===null||w===void 0?void 0:(j=w.annotations)===null||j===void 0?void 0:j.Common;for(const e in C){if(e.indexOf("SemanticObject")===0){i.hasQuickViewFacets=A;i.displayStyle="LinkWrapper";return}}for(const e in $){if(e.indexOf("SemanticObject")===0){i.hasQuickViewFacets=A;i.displayStyle="LinkWrapper";return}}if(a.$Type==="com.sap.vocabularies.UI.v1.DataFieldWithUrl"){i.text=t.getTextWithWhiteSpace(i.formatOptions,n);i.displayStyle="Link";i.iconUrl=a.IconUrl?Be($e(a.IconUrl)):undefined;i.linkUrl=Be($e(a.Url));return}i.displayStyle="Text"};t.setUpEditStyle=function e(t,i,a){b.setEditStyleProperties(t,i,a)};t.setUpObjectIdentifierTitleAndText=function e(i,a){var n;if(((n=i.formatOptions)===null||n===void 0?void 0:n.semanticKeyStyle)==="ObjectIdentifier"){var r,o,l;i.identifierTitle=t.getObjectIdentifierTitle(i.formatOptions,a);if(!((r=a.targetObject)!==null&&r!==void 0&&(o=r.annotations)!==null&&o!==void 0&&(l=o.Common)!==null&&l!==void 0&&l.SemanticObject)){i.identifierText=t.getObjectIdentifierText(i.formatOptions,a)}else{i.identifierText=undefined}}else{i.identifierTitle=undefined;i.identifierText=undefined}};t.getTextWithWhiteSpace=function e(t,i){const a=b.getTextBinding(i,t,true);return a._type==="PathInModel"||typeof a==="string"?Be(Ve([a],"WSR")):Be(a)};t.setUpNavigationAvailable=function e(t,i){t.navigationAvailable=true;if((i===null||i===void 0?void 0:i.$Type)==="com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation"&&i.NavigationAvailable!==undefined&&String(t.formatOptions.ignoreNavigationAvailable)!=="true"){t.navigationAvailable=Be($e(i.NavigationAvailable))}};function t(i,a,r){var o;var l;l=e.call(this,i)||this;Ke(l,"dataSourcePath",J,Qe(l));Ke(l,"emptyIndicatorMode",G,Qe(l));Ke(l,"_flexId",Y,Qe(l));Ke(l,"idPrefix",Z,Qe(l));Ke(l,"_apiId",ee,Qe(l));Ke(l,"noWrapperId",te,Qe(l));Ke(l,"vhIdPrefix",ie,Qe(l));Ke(l,"_vhFlexId",ae,Qe(l));Ke(l,"entitySet",ne,Qe(l));Ke(l,"entityType",re,Qe(l));Ke(l,"navigateAfterAction",oe,Qe(l));Ke(l,"dataField",le,Qe(l));Ke(l,"semanticObjects",se,Qe(l));Ke(l,"editMode",ue,Qe(l));Ke(l,"wrap",de,Qe(l));Ke(l,"class",pe,Qe(l));Ke(l,"ariaLabelledBy",ce,Qe(l));Ke(l,"textAlign",fe,Qe(l));Ke(l,"editableExpression",be,Qe(l));Ke(l,"enabledExpression",me,Qe(l));Ke(l,"collaborationEnabled",ve,Qe(l));Ke(l,"collaborationHasActivityExpression",ye,Qe(l));Ke(l,"collaborationInitialsExpression",ge,Qe(l));Ke(l,"collaborationColorExpression",he,Qe(l));Ke(l,"semanticObject",Oe,Qe(l));Ke(l,"hasSemanticObjectOnNavigation",xe,Qe(l));Ke(l,"requiredExpression",Ie,Qe(l));Ke(l,"visible",Ee,Qe(l));Ke(l,"formatOptions",Se,Qe(l));Ke(l,"onChange",Te,Qe(l));const s=n.convertMetaModelContext(l.dataField);let u=n.getInvolvedDataModelObjects(l.dataField,l.entitySet);t.setUpDataPointType(s);t.setUpVisibleProperties(Qe(l),u);if(l._flexId){l._apiId=l._flexId;l._flexId=t.getContentId(l._flexId);l._vhFlexId=`${l._flexId}_${l.vhIdPrefix}`}const p=b.getDataModelObjectPathForValue(u);u=p||u;t.setUpSemanticObjects(Qe(l),u);l.dataSourcePath=je(u);const c=r.models.metaModel||r.models.entitySet;l.entityType=c.createBindingContext(`/${u.targetEntityType.fullyQualifiedName}`);t.setUpEditableProperties(Qe(l),s,u,c);t.setUpFormatOptions(Qe(l),u,a,r);t.setUpDisplayStyle(Qe(l),s,u);t.setUpEditStyle(Qe(l),s,u);const f=["Avatar","AmountWithCurrency"];if(l.displayStyle&&f.indexOf(l.displayStyle)===-1&&u.targetObject){l.text=l.text??b.getTextBinding(u,l.formatOptions);t.setUpObjectIdentifierTitleAndText(Qe(l),u)}else{l.text=""}if(((o=l.dataField.getObject("@sapui.name"))===null||o===void 0?void 0:o.indexOf("com.sap.vocabularies.UI.v1.DataPoint"))>-1){const e=l.dataField.getObject();e.$Type=e.$Type||"com.sap.vocabularies.UI.v1.DataPointType";l.dataField=new d(e,l.dataField.getModel()).createBindingContext("/")}l.emptyIndicatorMode=l.formatOptions.showEmptyIndicator?"On":undefined;return l}Fe=t;var a=t.prototype;a.getTemplate=function e(){if(this.formatOptions.fieldMode==="nowrapper"&&this.editMode===v.Display){return Ne`<core:Fragment fragmentName="sap.fe.macros.internal.field.FieldContent" type="XML" />`}else{let e;if(this._apiId){e=this._apiId}else if(this.idPrefix){e=Me([this.idPrefix,"Field"])}else{e=undefined}if(this.onChange!==null&&this.onChange!=="null"){return Ne`
					<macroField:FieldAPI
						xmlns:macroField="sap.fe.macros.field"
						change="${this.onChange}"
						id="${e}"
						required="${this.requiredExpression}"
						editable="${this.editableExpression}"
						collaborationEnabled="${this.collaborationEnabled}"
						visible="${this.visible}"
					>
						<core:Fragment fragmentName="sap.fe.macros.internal.field.FieldContent" type="XML" />
					</macroField:FieldAPI>
				`}else{return Ne`<macroField:FieldAPI
						xmlns:macroField="sap.fe.macros.field"
						id="${e}"
						required="${this.requiredExpression}"
						editable="${this.editableExpression}"
						collaborationEnabled="${this.collaborationEnabled}"
						visible="${this.visible}"
					>
						<core:Fragment fragmentName="sap.fe.macros.internal.field.FieldContent" type="XML" />
					</macroField:FieldAPI>
					`}}};return t}(Re),J=Ge(X.prototype,"dataSourcePath",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),G=Ge(X.prototype,"emptyIndicatorMode",[h],{configurable:true,enumerable:true,writable:true,initializer:null}),Y=Ge(X.prototype,"_flexId",[O],{configurable:true,enumerable:true,writable:true,initializer:null}),Z=Ge(X.prototype,"idPrefix",[x],{configurable:true,enumerable:true,writable:true,initializer:null}),ee=Ge(X.prototype,"_apiId",[I],{configurable:true,enumerable:true,writable:true,initializer:null}),te=Ge(X.prototype,"noWrapperId",[E],{configurable:true,enumerable:true,writable:true,initializer:null}),ie=Ge(X.prototype,"vhIdPrefix",[S],{configurable:true,enumerable:true,writable:true,initializer:null}),ae=Ge(X.prototype,"_vhFlexId",[T],{configurable:true,enumerable:true,writable:true,initializer:null}),ne=Ge(X.prototype,"entitySet",[F],{configurable:true,enumerable:true,writable:true,initializer:null}),re=Ge(X.prototype,"entityType",[w],{configurable:true,enumerable:true,writable:true,initializer:null}),oe=Ge(X.prototype,"navigateAfterAction",[j],{configurable:true,enumerable:true,writable:true,initializer:null}),le=Ge(X.prototype,"dataField",[P],{configurable:true,enumerable:true,writable:true,initializer:null}),se=Ge(X.prototype,"semanticObjects",[A],{configurable:true,enumerable:true,writable:true,initializer:null}),ue=Ge(X.prototype,"editMode",[M],{configurable:true,enumerable:true,writable:true,initializer:null}),de=Ge(X.prototype,"wrap",[D],{configurable:true,enumerable:true,writable:true,initializer:null}),pe=Ge(X.prototype,"class",[U],{configurable:true,enumerable:true,writable:true,initializer:null}),ce=Ge(X.prototype,"ariaLabelledBy",[C],{configurable:true,enumerable:true,writable:true,initializer:null}),fe=Ge(X.prototype,"textAlign",[$],{configurable:true,enumerable:true,writable:true,initializer:null}),be=Ge(X.prototype,"editableExpression",[k],{configurable:true,enumerable:true,writable:true,initializer:null}),me=Ge(X.prototype,"enabledExpression",[V],{configurable:true,enumerable:true,writable:true,initializer:null}),ve=Ge(X.prototype,"collaborationEnabled",[z],{configurable:true,enumerable:true,writable:true,initializer:null}),ye=Ge(X.prototype,"collaborationHasActivityExpression",[B],{configurable:true,enumerable:true,writable:true,initializer:null}),ge=Ge(X.prototype,"collaborationInitialsExpression",[W],{configurable:true,enumerable:true,writable:true,initializer:null}),he=Ge(X.prototype,"collaborationColorExpression",[_],{configurable:true,enumerable:true,writable:true,initializer:null}),Oe=Ge(X.prototype,"semanticObject",[N],{configurable:true,enumerable:true,writable:true,initializer:null}),xe=Ge(X.prototype,"hasSemanticObjectOnNavigation",[L],{configurable:true,enumerable:true,writable:true,initializer:null}),Ie=Ge(X.prototype,"requiredExpression",[R],{configurable:true,enumerable:true,writable:true,initializer:null}),Ee=Ge(X.prototype,"visible",[q],{configurable:true,enumerable:true,writable:true,initializer:null}),Se=Ge(X.prototype,"formatOptions",[H],{configurable:true,enumerable:true,writable:true,initializer:function(){return{}}}),Te=Ge(X.prototype,"onChange",[K],{configurable:true,enumerable:true,writable:true,initializer:function(){return""}}),X))||Q);Fe=Ze;return Fe},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/collaborationHelper-dbg", ["sap/fe/core/CommonUtils", "sap/fe/core/controllerextensions/collaboration/ActivitySync", "sap/fe/core/controllerextensions/collaboration/CollaborationCommon"], function (CommonUtils, CollaborationActivitySync, CollaborationCommon) {
  "use strict";

  var Activity = CollaborationCommon.Activity;
  function getRelatedFieldFromValueHelp(oValueHelp) {
    const oView = CommonUtils.getTargetView(oValueHelp);
    return oView.findElements(true, function (oElem) {
      return !!(oElem.getFieldHelp && oElem.getDomRef() && oElem.getFieldHelp() === oValueHelp.getId());
    })[0];
  }
  function onValueHelpOpenDialog(oEvent) {
    const oValueHelp = oEvent.getSource();
    const oField = collaborationHelper.getRelatedFieldFromValueHelp(oValueHelp);
    const bCollaborationEnabled = CollaborationActivitySync.isConnected(oField);
    if (bCollaborationEnabled && oField.getBinding("value")) {
      var _oField$getBinding, _oField$getBindingCon, _oField$getBinding2, _oField$getBindingCon2, _oField$getBinding3;
      const sFullPath = (_oField$getBinding = oField.getBinding("value")) !== null && _oField$getBinding !== void 0 && _oField$getBinding.isA("sap.ui.model.CompositeBinding") ?
      // for the compositeBinding, we just send a message containing the path of the first element
      // it is enough to lock the entire field
      `${(_oField$getBindingCon = oField.getBindingContext()) === null || _oField$getBindingCon === void 0 ? void 0 : _oField$getBindingCon.getPath()}/${(_oField$getBinding2 = oField.getBinding("value")) === null || _oField$getBinding2 === void 0 ? void 0 : _oField$getBinding2.getBindings()[0].getPath()}` : `${(_oField$getBindingCon2 = oField.getBindingContext()) === null || _oField$getBindingCon2 === void 0 ? void 0 : _oField$getBindingCon2.getPath()}/${(_oField$getBinding3 = oField.getBinding("value")) === null || _oField$getBinding3 === void 0 ? void 0 : _oField$getBinding3.getPath()}`;
      CollaborationActivitySync.send(oField, Activity.LiveChange, sFullPath);
    }
  }
  function onValueHelpCloseDialog(oEvent) {
    var _oField$getBinding4;
    const oValueHelp = oEvent.getSource();
    const oField = collaborationHelper.getRelatedFieldFromValueHelp(oValueHelp);
    const bCollaborationEnabled = CollaborationActivitySync.isConnected(oField);
    const isCompositeBinding = (_oField$getBinding4 = oField.getBinding("value")) === null || _oField$getBinding4 === void 0 ? void 0 : _oField$getBinding4.isA("sap.ui.model.CompositeBinding");
    const oValueBeforeUpdate = isCompositeBinding ? oField.getValue()[1] : oField.getValue();
    return new Promise(resolve => {
      setTimeout(function () {
        var _oField$getBinding5;
        const value = isCompositeBinding ? oValueHelp.getConditions()[0].values[0] : (_oField$getBinding5 = oField.getBinding("value")) === null || _oField$getBinding5 === void 0 ? void 0 : _oField$getBinding5.getValue();
        if (bCollaborationEnabled && oValueBeforeUpdate === value) {
          var _oField$getBindingCon3, _oField$getBindingCon4, _oField$getBinding6;
          const sFullPath = isCompositeBinding ? `${(_oField$getBindingCon3 = oField.getBindingContext()) === null || _oField$getBindingCon3 === void 0 ? void 0 : _oField$getBindingCon3.getPath()}/${oField.getBinding("value").getBindings()[0].getPath()}` : `${(_oField$getBindingCon4 = oField.getBindingContext()) === null || _oField$getBindingCon4 === void 0 ? void 0 : _oField$getBindingCon4.getPath()}/${(_oField$getBinding6 = oField.getBinding("value")) === null || _oField$getBinding6 === void 0 ? void 0 : _oField$getBinding6.getPath()}`;
          CollaborationActivitySync.send(oField, Activity.Undo, sFullPath);
        }
        resolve();
      }, 0);
    });
  }
  const collaborationHelper = {
    getRelatedFieldFromValueHelp,
    onValueHelpOpenDialog,
    onValueHelpCloseDialog
  };
  return collaborationHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/collaborationHelper", ["sap/fe/core/CommonUtils","sap/fe/core/controllerextensions/collaboration/ActivitySync","sap/fe/core/controllerextensions/collaboration/CollaborationCommon"],function(e,n,t){"use strict";var i=t.Activity;function o(n){const t=e.getTargetView(n);return t.findElements(true,function(e){return!!(e.getFieldHelp&&e.getDomRef()&&e.getFieldHelp()===n.getId())})[0]}function l(e){const t=e.getSource();const o=d.getRelatedFieldFromValueHelp(t);const l=n.isConnected(o);if(l&&o.getBinding("value")){var g,a,u,s,v;const e=(g=o.getBinding("value"))!==null&&g!==void 0&&g.isA("sap.ui.model.CompositeBinding")?`${(a=o.getBindingContext())===null||a===void 0?void 0:a.getPath()}/${(u=o.getBinding("value"))===null||u===void 0?void 0:u.getBindings()[0].getPath()}`:`${(s=o.getBindingContext())===null||s===void 0?void 0:s.getPath()}/${(v=o.getBinding("value"))===null||v===void 0?void 0:v.getPath()}`;n.send(o,i.LiveChange,e)}}function g(e){var t;const o=e.getSource();const l=d.getRelatedFieldFromValueHelp(o);const g=n.isConnected(l);const a=(t=l.getBinding("value"))===null||t===void 0?void 0:t.isA("sap.ui.model.CompositeBinding");const u=a?l.getValue()[1]:l.getValue();return new Promise(e=>{setTimeout(function(){var t;const d=a?o.getConditions()[0].values[0]:(t=l.getBinding("value"))===null||t===void 0?void 0:t.getValue();if(g&&u===d){var s,v,c;const e=a?`${(s=l.getBindingContext())===null||s===void 0?void 0:s.getPath()}/${l.getBinding("value").getBindings()[0].getPath()}`:`${(v=l.getBindingContext())===null||v===void 0?void 0:v.getPath()}/${(c=l.getBinding("value"))===null||c===void 0?void 0:c.getPath()}`;n.send(l,i.Undo,e)}e()},0)})}const d={getRelatedFieldFromValueHelp:o,onValueHelpOpenDialog:l,onValueHelpCloseDialog:g};return d},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/form/FormTemplating-dbg", ["sap/fe/core/helpers/BindingToolkit", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/macros/field/FieldTemplating"], function (BindingToolkit, DataModelPathHelper, FieldTemplating) {
  "use strict";

  var _exports = {};
  var getTextBindingExpression = FieldTemplating.getTextBindingExpression;
  var enhanceDataModelPath = DataModelPathHelper.enhanceDataModelPath;
  var constant = BindingToolkit.constant;
  var concat = BindingToolkit.concat;
  var compileExpression = BindingToolkit.compileExpression;
  const connectedFieldsTemplateRegex = /(?:({[^}]+})[^{]*)/g;
  const connectedFieldsTemplateSubRegex = /{([^}]+)}(.*)/;
  const getLabelForConnectedFields = function (oConnectedFieldsPath) {
    let compileBindingExpression = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
    const oConnectedFields = oConnectedFieldsPath.targetObject;
    // First we separate each group of `{TemplatePart} xxx`
    const aTemplateMatches = oConnectedFields.Template.toString().match(connectedFieldsTemplateRegex);
    if (aTemplateMatches) {
      const aPartsToConcat = aTemplateMatches.reduce((aSubPartsToConcat, oMatch) => {
        // Then for each sub-group, we retrieve the name of the data object and the remaining text, if it exists
        const aSubMatch = oMatch.match(connectedFieldsTemplateSubRegex);
        if (aSubMatch && aSubMatch.length > 1) {
          const targetValue = aSubMatch[1];
          if (oConnectedFields.Data[targetValue]) {
            const oDataFieldPath = enhanceDataModelPath(oConnectedFieldsPath,
            // TODO Better type for the Edm.Dictionary
            oConnectedFields.Data[targetValue].fullyQualifiedName.replace(oConnectedFieldsPath.targetEntityType.fullyQualifiedName, ""));
            oDataFieldPath.targetObject = oDataFieldPath.targetObject.Value;
            aSubPartsToConcat.push(getTextBindingExpression(oDataFieldPath, {}));
            if (aSubMatch.length > 2) {
              aSubPartsToConcat.push(constant(aSubMatch[2]));
            }
          }
        }
        return aSubPartsToConcat;
      }, []);
      return compileBindingExpression ? compileExpression(concat(...aPartsToConcat)) : concat(...aPartsToConcat);
    }
    return "";
  };
  _exports.getLabelForConnectedFields = getLabelForConnectedFields;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/form/FormTemplating", ["sap/fe/core/helpers/BindingToolkit","sap/fe/core/templating/DataModelPathHelper","sap/fe/macros/field/FieldTemplating"],function(e,t,a){"use strict";var n={};var r=a.getTextBindingExpression;var i=t.enhanceDataModelPath;var c=e.constant;var l=e.concat;var o=e.compileExpression;const s=/(?:({[^}]+})[^{]*)/g;const u=/{([^}]+)}(.*)/;const f=function(e){let t=arguments.length>1&&arguments[1]!==undefined?arguments[1]:true;const a=e.targetObject;const n=a.Template.toString().match(s);if(n){const s=n.reduce((t,n)=>{const l=n.match(u);if(l&&l.length>1){const n=l[1];if(a.Data[n]){const o=i(e,a.Data[n].fullyQualifiedName.replace(e.targetEntityType.fullyQualifiedName,""));o.targetObject=o.targetObject.Value;t.push(r(o,{}));if(l.length>2){t.push(c(l[2]))}}}return t},[]);return t?o(l(...s)):l(...s)}return""};n.getLabelForConnectedFields=f;return n},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/helpers/ActionHelper-dbg", ["sap/fe/core/converters/helpers/BindingHelper", "sap/fe/core/helpers/BindingToolkit", "sap/fe/macros/CommonHelper"], function (BindingHelper, BindingToolkit, CommonHelper) {
  "use strict";

  var isPathInModelExpression = BindingToolkit.isPathInModelExpression;
  var getExpressionFromAnnotation = BindingToolkit.getExpressionFromAnnotation;
  var bindingContextPathVisitor = BindingHelper.bindingContextPathVisitor;
  const ActionHelper = {
    /**
     * Returns an array of actions that are not enabled with a multiple selection.
     *
     * @function
     * @name getMultiSelectDisabledActions
     * @param aCollection Array of records
     * @param oContext The context object of the control
     * @returns An array of action paths
     * @ui5-restricted
     */
    getMultiSelectDisabledActions(aCollection, oContext) {
      const aMultiSelectDisabledActions = [];
      let sActionPath, sActionName, sAnnotationPath, oParameterAnnotations, oAction;
      if (aCollection) {
        const aActionMetadata = aCollection.filter(function (oItem) {
          return oItem.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAction";
        });
        aActionMetadata.forEach(function (oActionMetadata) {
          sActionName = oActionMetadata.Action;
          sActionPath = CommonHelper.getActionPath(oContext.context, true, sActionName, false);
          oAction = oContext.context.getObject(`${sActionPath}/@$ui5.overload/0`);
          if (oAction && oAction.$Parameter && oAction.$IsBound) {
            for (const n in oAction.$Parameter) {
              sAnnotationPath = `${sActionPath}/${oAction.$Parameter[n].$Name}@`;
              oParameterAnnotations = oContext.context.getObject(sAnnotationPath);
              if (oParameterAnnotations && (oParameterAnnotations["@com.sap.vocabularies.UI.v1.Hidden"] && oParameterAnnotations["@com.sap.vocabularies.UI.v1.Hidden"].$Path || oParameterAnnotations["@com.sap.vocabularies.Common.v1.FieldControl"] && oParameterAnnotations["@com.sap.vocabularies.Common.v1.FieldControl"].$Path)) {
                aMultiSelectDisabledActions.push(sActionName);
                break;
              }
            }
          }
        });
      }
      return aMultiSelectDisabledActions;
    },
    /**
     * Method to get the expression for the 'press' event for the DataFieldForActionButton.
     *
     * @function
     * @name getPressEventDataFieldForActionButton
     * @param sId Control ID
     * @param oAction Action object
     * @param oParams Parameters
     * @param sOperationAvailableMap OperationAvailableMap as stringified JSON object
     * @returns The binding expression
     */
    getPressEventDataFieldForActionButton(sId, oAction, oParams, sOperationAvailableMap) {
      const sInvocationGrouping = oAction.InvocationGrouping && oAction.InvocationGrouping.$EnumMember === "com.sap.vocabularies.UI.v1.OperationGroupingType/ChangeSet" ? "ChangeSet" : "Isolated";
      oParams = oParams || {};
      oParams["invocationGrouping"] = CommonHelper.addSingleQuotes(sInvocationGrouping);
      oParams["controlId"] = CommonHelper.addSingleQuotes(sId);
      oParams["operationAvailableMap"] = CommonHelper.addSingleQuotes(sOperationAvailableMap);
      oParams["model"] = "${$source>/}.getModel()";
      oParams["label"] = oAction.Label && CommonHelper.addSingleQuotes(oAction.Label, true);
      return CommonHelper.generateFunction(".editFlow.invokeAction", CommonHelper.addSingleQuotes(oAction.Action), CommonHelper.objectToString(oParams));
    },
    /**
     * Return Number of contexts expression.
     *
     * @function
     * @name getNumberOfContextsExpression
     * @param vActionEnabled Status of action (single or multiselect)
     * @returns Number of contexts expression
     */
    getNumberOfContextsExpression(vActionEnabled) {
      let sNumberOfSelectedContexts;
      if (vActionEnabled === "single") {
        sNumberOfSelectedContexts = "${internal>numberOfSelectedContexts} === 1";
      } else {
        sNumberOfSelectedContexts = "${internal>numberOfSelectedContexts} > 0";
      }
      return sNumberOfSelectedContexts;
    },
    /**
     * Return UI Control (LineItem/Chart) Operation Available Map.
     *
     * @function
     * @name getOperationAvailableMap
     * @param aCollection Array of records
     * @param sControl Control name (lineItem / chart)
     * @param oContext Converter context
     * @returns The record containing all action names and their corresponding Core.OperationAvailable property paths
     */
    getOperationAvailableMap(aCollection, sControl, oContext) {
      let oOperationAvailableMap = {};
      if (aCollection) {
        aCollection.forEach(oRecord => {
          if (oRecord.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAction") {
            if (oRecord.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAction") {
              const actionName = oRecord.Action;
              if ((actionName === null || actionName === void 0 ? void 0 : actionName.indexOf("/")) < 0 && !oRecord.Determining) {
                if (sControl === "table") {
                  oOperationAvailableMap = this._getOperationAvailableMapOfTable(oRecord, actionName, oOperationAvailableMap, oContext);
                } else if (sControl === "chart") {
                  oOperationAvailableMap = this._getOperationAvailableMapOfChart(actionName, oOperationAvailableMap, oContext);
                }
              }
            }
          }
        });
      }
      return oOperationAvailableMap;
    },
    /**
     * Return LineItem Action Operation Available Map.
     *
     * @function
     * @name _getOperationAvailableMapOfTable
     * @private
     * @param oDataFieldForAction Data field for action object
     * @param sActionName Action name
     * @param oOperationAvailableMap Operation available map object
     * @param oConverterContext Converter context object
     * @returns The record containing all action name of line item and the corresponding Core.OperationAvailable property path
     */
    _getOperationAvailableMapOfTable(oDataFieldForAction, sActionName, oOperationAvailableMap, oConverterContext) {
      var _actionTarget$annotat, _actionTarget$annotat2, _actionTarget$paramet;
      const actionTarget = oDataFieldForAction.ActionTarget;
      if ((actionTarget === null || actionTarget === void 0 ? void 0 : (_actionTarget$annotat = actionTarget.annotations) === null || _actionTarget$annotat === void 0 ? void 0 : (_actionTarget$annotat2 = _actionTarget$annotat.Core) === null || _actionTarget$annotat2 === void 0 ? void 0 : _actionTarget$annotat2.OperationAvailable) === null) {
        // We disabled action advertisement but kept it in the code for the time being
        //oOperationAvailableMap = this._addToMap(sActionName, null, oOperationAvailableMap);
      } else if (actionTarget !== null && actionTarget !== void 0 && (_actionTarget$paramet = actionTarget.parameters) !== null && _actionTarget$paramet !== void 0 && _actionTarget$paramet.length) {
        var _actionTarget$annotat3, _actionTarget$annotat4, _actionTarget$annotat5, _actionTarget$annotat6;
        const bindingParameterFullName = actionTarget.parameters[0].fullyQualifiedName,
          targetExpression = getExpressionFromAnnotation(actionTarget === null || actionTarget === void 0 ? void 0 : (_actionTarget$annotat3 = actionTarget.annotations) === null || _actionTarget$annotat3 === void 0 ? void 0 : (_actionTarget$annotat4 = _actionTarget$annotat3.Core) === null || _actionTarget$annotat4 === void 0 ? void 0 : _actionTarget$annotat4.OperationAvailable, [], undefined, path => bindingContextPathVisitor(path, oConverterContext, bindingParameterFullName));
        if (isPathInModelExpression(targetExpression)) {
          oOperationAvailableMap = this._addToMap(sActionName, targetExpression.path, oOperationAvailableMap);
        } else if ((actionTarget === null || actionTarget === void 0 ? void 0 : (_actionTarget$annotat5 = actionTarget.annotations) === null || _actionTarget$annotat5 === void 0 ? void 0 : (_actionTarget$annotat6 = _actionTarget$annotat5.Core) === null || _actionTarget$annotat6 === void 0 ? void 0 : _actionTarget$annotat6.OperationAvailable) !== undefined) {
          oOperationAvailableMap = this._addToMap(sActionName, targetExpression, oOperationAvailableMap);
        }
      }
      return oOperationAvailableMap;
    },
    /**
     * Return LineItem Action Operation Available Map.
     *
     * @function
     * @name _getOperationAvailableMapOfChart
     * @private
     * @param sActionName Action name
     * @param oOperationAvailableMap Operation available map object
     * @param oContext Context object
     * @returns The record containing all action name of chart and the corresponding Core.OperationAvailable property path
     */
    _getOperationAvailableMapOfChart(sActionName, oOperationAvailableMap, oContext) {
      let oResult = CommonHelper.getActionPath(oContext.context, false, sActionName, true);
      if (oResult === null) {
        oOperationAvailableMap = this._addToMap(sActionName, null, oOperationAvailableMap);
      } else {
        oResult = CommonHelper.getActionPath(oContext.context, false, sActionName);
        if (oResult.sProperty) {
          oOperationAvailableMap = this._addToMap(sActionName, oResult.sProperty.substr(oResult.sBindingParameter.length + 1), oOperationAvailableMap);
        }
      }
      return oOperationAvailableMap;
    },
    /**
     * Return Map.
     *
     * @function
     * @name _addToMap
     * @private
     * @param sKey Key
     * @param oValue Value
     * @param oMap Map object
     * @returns Map object
     */
    _addToMap(sKey, oValue, oMap) {
      if (sKey && oMap) {
        oMap[sKey] = oValue;
      }
      return oMap;
    }
  };
  return ActionHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/helpers/ActionHelper", ["sap/fe/core/converters/helpers/BindingHelper","sap/fe/core/helpers/BindingToolkit","sap/fe/macros/CommonHelper"],function(e,t,o){"use strict";var i=t.isPathInModelExpression;var a=t.getExpressionFromAnnotation;var n=e.bindingContextPathVisitor;const l={getMultiSelectDisabledActions(e,t){const i=[];let a,n,l,r,s;if(e){const d=e.filter(function(e){return e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAction"});d.forEach(function(e){n=e.Action;a=o.getActionPath(t.context,true,n,false);s=t.context.getObject(`${a}/@$ui5.overload/0`);if(s&&s.$Parameter&&s.$IsBound){for(const e in s.$Parameter){l=`${a}/${s.$Parameter[e].$Name}@`;r=t.context.getObject(l);if(r&&(r["@com.sap.vocabularies.UI.v1.Hidden"]&&r["@com.sap.vocabularies.UI.v1.Hidden"].$Path||r["@com.sap.vocabularies.Common.v1.FieldControl"]&&r["@com.sap.vocabularies.Common.v1.FieldControl"].$Path)){i.push(n);break}}}})}return i},getPressEventDataFieldForActionButton(e,t,i,a){const n=t.InvocationGrouping&&t.InvocationGrouping.$EnumMember==="com.sap.vocabularies.UI.v1.OperationGroupingType/ChangeSet"?"ChangeSet":"Isolated";i=i||{};i["invocationGrouping"]=o.addSingleQuotes(n);i["controlId"]=o.addSingleQuotes(e);i["operationAvailableMap"]=o.addSingleQuotes(a);i["model"]="${$source>/}.getModel()";i["label"]=t.Label&&o.addSingleQuotes(t.Label,true);return o.generateFunction(".editFlow.invokeAction",o.addSingleQuotes(t.Action),o.objectToString(i))},getNumberOfContextsExpression(e){let t;if(e==="single"){t="${internal>numberOfSelectedContexts} === 1"}else{t="${internal>numberOfSelectedContexts} > 0"}return t},getOperationAvailableMap(e,t,o){let i={};if(e){e.forEach(e=>{if(e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAction"){if(e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAction"){const a=e.Action;if((a===null||a===void 0?void 0:a.indexOf("/"))<0&&!e.Determining){if(t==="table"){i=this._getOperationAvailableMapOfTable(e,a,i,o)}else if(t==="chart"){i=this._getOperationAvailableMapOfChart(a,i,o)}}}}})}return i},_getOperationAvailableMapOfTable(e,t,o,l){var r,s,d;const c=e.ActionTarget;if((c===null||c===void 0?void 0:(r=c.annotations)===null||r===void 0?void 0:(s=r.Core)===null||s===void 0?void 0:s.OperationAvailable)===null){}else if(c!==null&&c!==void 0&&(d=c.parameters)!==null&&d!==void 0&&d.length){var u,v,p,f;const e=c.parameters[0].fullyQualifiedName,r=a(c===null||c===void 0?void 0:(u=c.annotations)===null||u===void 0?void 0:(v=u.Core)===null||v===void 0?void 0:v.OperationAvailable,[],undefined,t=>n(t,l,e));if(i(r)){o=this._addToMap(t,r.path,o)}else if((c===null||c===void 0?void 0:(p=c.annotations)===null||p===void 0?void 0:(f=p.Core)===null||f===void 0?void 0:f.OperationAvailable)!==undefined){o=this._addToMap(t,r,o)}}return o},_getOperationAvailableMapOfChart(e,t,i){let a=o.getActionPath(i.context,false,e,true);if(a===null){t=this._addToMap(e,null,t)}else{a=o.getActionPath(i.context,false,e);if(a.sProperty){t=this._addToMap(e,a.sProperty.substr(a.sBindingParameter.length+1),t)}}return t},_addToMap(e,t,o){if(e&&o){o[e]=t}return o}};return l},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/helpers/DataPointTemplating-dbg", ["sap/fe/core/formatters/ValueFormatter", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/UIFormatters", "sap/ui/model/odata/v4/AnnotationHelper"], function (valueFormatters, BindingToolkit, DataModelPathHelper, PropertyHelper, UIFormatters, AnnotationHelper) {
  "use strict";

  var _exports = {};
  var getDisplayMode = UIFormatters.getDisplayMode;
  var getBindingWithUnitOrCurrency = UIFormatters.getBindingWithUnitOrCurrency;
  var getBindingWithTimezone = UIFormatters.getBindingWithTimezone;
  var isProperty = PropertyHelper.isProperty;
  var hasStaticPercentUnit = PropertyHelper.hasStaticPercentUnit;
  var getRelativePaths = DataModelPathHelper.getRelativePaths;
  var enhanceDataModelPath = DataModelPathHelper.enhanceDataModelPath;
  var unresolvableExpression = BindingToolkit.unresolvableExpression;
  var isPathInModelExpression = BindingToolkit.isPathInModelExpression;
  var getExpressionFromAnnotation = BindingToolkit.getExpressionFromAnnotation;
  var formatWithTypeInformation = BindingToolkit.formatWithTypeInformation;
  var formatResult = BindingToolkit.formatResult;
  var EDM_TYPE_MAPPING = BindingToolkit.EDM_TYPE_MAPPING;
  var compileExpression = BindingToolkit.compileExpression;
  const getDataPointTargetExpression = oDataModelPath => {
    return oDataModelPath !== null && oDataModelPath !== void 0 && oDataModelPath.TargetValue ? getExpressionFromAnnotation(oDataModelPath.TargetValue) : unresolvableExpression;
  };
  const oResourceModel = sap.ui.getCore().getLibraryResourceBundle("sap.fe.macros");
  const buildExpressionForProgressIndicatorDisplayValue = oPropertyDataModelObjectPath => {
    var _oPropertyDataModelOb;
    const fieldValue = (oPropertyDataModelObjectPath === null || oPropertyDataModelObjectPath === void 0 ? void 0 : (_oPropertyDataModelOb = oPropertyDataModelObjectPath.targetObject) === null || _oPropertyDataModelOb === void 0 ? void 0 : _oPropertyDataModelOb.Value) || "";
    const relativeLocation = getRelativePaths(oPropertyDataModelObjectPath);
    let fieldValueExpression = getExpressionFromAnnotation(fieldValue, relativeLocation);
    const TargetExpression = getDataPointTargetExpression(oPropertyDataModelObjectPath.targetObject);
    if (fieldValueExpression && TargetExpression) {
      var _targetObject$annotat, _targetObject$annotat2, _targetObject$annotat3, _targetObject$annotat4;
      let targetObject = oPropertyDataModelObjectPath.targetObject.Value;
      if (!isProperty(targetObject)) {
        targetObject = oPropertyDataModelObjectPath.targetObject.Value.$target;
      }
      const unit = ((_targetObject$annotat = targetObject.annotations) === null || _targetObject$annotat === void 0 ? void 0 : (_targetObject$annotat2 = _targetObject$annotat.Measures) === null || _targetObject$annotat2 === void 0 ? void 0 : _targetObject$annotat2.Unit) || ((_targetObject$annotat3 = targetObject.annotations) === null || _targetObject$annotat3 === void 0 ? void 0 : (_targetObject$annotat4 = _targetObject$annotat3.Measures) === null || _targetObject$annotat4 === void 0 ? void 0 : _targetObject$annotat4.ISOCurrency);
      if (!unit) {
        return oResourceModel.getText("T_COMMON_PROGRESS_INDICATOR_DISPLAY_VALUE_NO_UOM", [compileExpression(fieldValueExpression), compileExpression(TargetExpression)]);
      }
      // If the unit isn't a path, we check for a % sign as it is a special case.
      if (hasStaticPercentUnit(fieldValue === null || fieldValue === void 0 ? void 0 : fieldValue.$target)) {
        return `${compileExpression(fieldValueExpression)} %`;
      }
      fieldValueExpression = formatWithTypeInformation(targetObject, fieldValueExpression);
      const unitBindingExpression = unit.$target ? formatWithTypeInformation(unit.$target, getExpressionFromAnnotation(unit, relativeLocation)) : getExpressionFromAnnotation(unit, relativeLocation);
      return compileExpression(formatResult([fieldValueExpression, TargetExpression, unitBindingExpression], valueFormatters.formatProgressIndicatorText));
    }
    return undefined;
  };
  _exports.buildExpressionForProgressIndicatorDisplayValue = buildExpressionForProgressIndicatorDisplayValue;
  const buildUnitBindingExpression = dataPoint => {
    var _dataPoint$targetObje, _dataPoint$targetObje2, _targetObject$annotat5, _targetObject$annotat6, _targetObject$annotat7, _targetObject$annotat8;
    const relativeLocation = getRelativePaths(dataPoint);
    const targetObject = dataPoint === null || dataPoint === void 0 ? void 0 : (_dataPoint$targetObje = dataPoint.targetObject) === null || _dataPoint$targetObje === void 0 ? void 0 : (_dataPoint$targetObje2 = _dataPoint$targetObje.Value) === null || _dataPoint$targetObje2 === void 0 ? void 0 : _dataPoint$targetObje2.$target;
    if (!isProperty(targetObject)) {
      return "";
    }
    const unit = ((_targetObject$annotat5 = targetObject.annotations) === null || _targetObject$annotat5 === void 0 ? void 0 : (_targetObject$annotat6 = _targetObject$annotat5.Measures) === null || _targetObject$annotat6 === void 0 ? void 0 : _targetObject$annotat6.Unit) || ((_targetObject$annotat7 = targetObject.annotations) === null || _targetObject$annotat7 === void 0 ? void 0 : (_targetObject$annotat8 = _targetObject$annotat7.Measures) === null || _targetObject$annotat8 === void 0 ? void 0 : _targetObject$annotat8.ISOCurrency);
    return unit ? compileExpression(getExpressionFromAnnotation(unit, relativeLocation)) : "";
  };
  _exports.buildUnitBindingExpression = buildUnitBindingExpression;
  const buildRatingIndicatorSubtitleExpression = (oContext, mSampleSize) => {
    if (mSampleSize) {
      return formatRatingIndicatorSubTitle(AnnotationHelper.value(mSampleSize, {
        context: oContext
      }));
    }
  };
  // returns the text for the Rating Indicator Subtitle (e.g. '7 reviews')
  const formatRatingIndicatorSubTitle = iSampleSizeValue => {
    if (iSampleSizeValue) {
      const sSubTitleLabel = iSampleSizeValue > 1 ? oResourceModel.getText("T_ANNOTATION_HELPER_RATING_INDICATOR_SUBTITLE_LABEL_PLURAL") : oResourceModel.getText("T_ANNOTATION_HELPER_RATING_INDICATOR_SUBTITLE_LABEL");
      return oResourceModel.getText("T_ANNOTATION_HELPER_RATING_INDICATOR_SUBTITLE", [String(iSampleSizeValue), sSubTitleLabel]);
    }
  };

  /**
   * This function is used to get the header text of rating indicator.
   *
   * @param oContext Context of interface
   * @param oDataPoint Data point object
   * @returns {string | undefined} Expression binding for rating indicator text
   */
  const getHeaderRatingIndicatorText = (oContext, oDataPoint) => {
    let result;
    if (oDataPoint && oDataPoint.SampleSize) {
      result = buildRatingIndicatorSubtitleExpression(oContext, oDataPoint.SampleSize);
    } else if (oDataPoint && oDataPoint.Description) {
      const sModelValue = AnnotationHelper.value(oDataPoint.Description, {
        context: oContext
      });
      result = "${path:" + sModelValue + "}";
    }
    return result;
  };
  getHeaderRatingIndicatorText.requiresIContext = true;
  _exports.getHeaderRatingIndicatorText = getHeaderRatingIndicatorText;
  const buildExpressionForDescription = fieldValue => {
    var _fieldValue$targetObj, _fieldValue$targetObj2, _fieldValue$targetObj3;
    const relativeLocation = getRelativePaths(fieldValue);
    if (fieldValue !== null && fieldValue !== void 0 && (_fieldValue$targetObj = fieldValue.targetObject) !== null && _fieldValue$targetObj !== void 0 && (_fieldValue$targetObj2 = _fieldValue$targetObj.annotations) !== null && _fieldValue$targetObj2 !== void 0 && (_fieldValue$targetObj3 = _fieldValue$targetObj2.Common) !== null && _fieldValue$targetObj3 !== void 0 && _fieldValue$targetObj3.Text) {
      var _fieldValue$targetObj4, _fieldValue$targetObj5;
      const oTextExpression = getExpressionFromAnnotation(fieldValue === null || fieldValue === void 0 ? void 0 : (_fieldValue$targetObj4 = fieldValue.targetObject.annotations) === null || _fieldValue$targetObj4 === void 0 ? void 0 : (_fieldValue$targetObj5 = _fieldValue$targetObj4.Common) === null || _fieldValue$targetObj5 === void 0 ? void 0 : _fieldValue$targetObj5.Text, relativeLocation);
      if (isPathInModelExpression(oTextExpression)) {
        oTextExpression.parameters = {
          $$noPatch: true
        };
      }
      return oTextExpression;
    }
    return undefined;
  };
  const getDecimalFormat = (outExpression, fieldValue, sNumberOfFractionalDigits) => {
    if (!outExpression.constraints) {
      outExpression.constraints = {};
    }
    outExpression.constraints = Object.assign(outExpression.constraints, {
      precision: fieldValue.$target.precision,
      scale: sNumberOfFractionalDigits ? sNumberOfFractionalDigits : fieldValue.$target.scale
    });
    // sNumberOfFractionalDigits is only defined in getValueFormatted when NumberOfFractionalDigits is defined.
    // In that case, we need to instance the preserveDecimals parameter because of a change MDC side
    if (sNumberOfFractionalDigits) {
      if (!outExpression.formatOptions) {
        outExpression.formatOptions = {};
      }
      outExpression.formatOptions = Object.assign(outExpression.formatOptions, {
        preserveDecimals: false
      });
    }
    return outExpression;
  };
  const getValueFormatted = (oPropertyDataModelPath, fieldValue, sPropertyType, sNumberOfFractionalDigits) => {
    var _fieldValue$path;
    let outExpression;
    const relativeLocation = (fieldValue === null || fieldValue === void 0 ? void 0 : (_fieldValue$path = fieldValue.path) === null || _fieldValue$path === void 0 ? void 0 : _fieldValue$path.indexOf("/")) === -1 ? getRelativePaths(oPropertyDataModelPath) : [];
    outExpression = getExpressionFromAnnotation(fieldValue, relativeLocation);
    const oPropertyDefinition = oPropertyDataModelPath.targetObject;
    if (sPropertyType && isPathInModelExpression(outExpression)) {
      var _EDM_TYPE_MAPPING$sPr;
      formatWithTypeInformation(oPropertyDefinition, outExpression);
      outExpression.type = (_EDM_TYPE_MAPPING$sPr = EDM_TYPE_MAPPING[sPropertyType]) === null || _EDM_TYPE_MAPPING$sPr === void 0 ? void 0 : _EDM_TYPE_MAPPING$sPr.type;
      switch (sPropertyType) {
        case "Edm.Decimal":
          // for the listReport, the decimal fields are formatted by returning a string
          // for the facets of the OP, the decimal fields are formatted by returning a promise, so we manage all the cases
          outExpression = getDecimalFormat(outExpression, fieldValue, sNumberOfFractionalDigits);
          break;
        default:
      }
    }
    return outExpression;
  };
  _exports.getValueFormatted = getValueFormatted;
  const buildFieldBindingExpression = (oDataModelPath, dataPointFormatOptions, bHideMeasure) => {
    var _oDataPointValue$$tar, _oPropertyDataModelOb2, _oPropertyDataModelOb3, _oPropertyDataModelOb4;
    const oDataPoint = oDataModelPath.targetObject;
    const oDataPointValue = (oDataPoint === null || oDataPoint === void 0 ? void 0 : oDataPoint.Value) || "";
    const sPropertyType = oDataPointValue === null || oDataPointValue === void 0 ? void 0 : (_oDataPointValue$$tar = oDataPointValue.$target) === null || _oDataPointValue$$tar === void 0 ? void 0 : _oDataPointValue$$tar.type;
    let sNumberOfFractionalDigits;
    if (sPropertyType === "Edm.Decimal" && oDataPoint.ValueFormat) {
      if (oDataPoint.ValueFormat.NumberOfFractionalDigits) {
        sNumberOfFractionalDigits = oDataPoint.ValueFormat.NumberOfFractionalDigits;
      }
    }
    const oPropertyDataModelObjectPath = enhanceDataModelPath(oDataModelPath, oDataPointValue.path);
    const oDescription = oPropertyDataModelObjectPath ? buildExpressionForDescription(oPropertyDataModelObjectPath) : undefined;
    const oFormattedValue = getValueFormatted(oPropertyDataModelObjectPath, oDataPointValue, sPropertyType, sNumberOfFractionalDigits);
    const sDisplayMode = oDescription ? dataPointFormatOptions.displayMode || getDisplayMode(oPropertyDataModelObjectPath) : "Value";
    let oBindingExpression;
    switch (sDisplayMode) {
      case "Description":
        oBindingExpression = oDescription;
        break;
      case "ValueDescription":
        oBindingExpression = formatResult([oFormattedValue, oDescription], valueFormatters.formatWithBrackets);
        break;
      case "DescriptionValue":
        oBindingExpression = formatResult([oDescription, oFormattedValue], valueFormatters.formatWithBrackets);
        break;
      default:
        if ((_oPropertyDataModelOb2 = oPropertyDataModelObjectPath.targetObject) !== null && _oPropertyDataModelOb2 !== void 0 && (_oPropertyDataModelOb3 = _oPropertyDataModelOb2.annotations) !== null && _oPropertyDataModelOb3 !== void 0 && (_oPropertyDataModelOb4 = _oPropertyDataModelOb3.Common) !== null && _oPropertyDataModelOb4 !== void 0 && _oPropertyDataModelOb4.Timezone) {
          oBindingExpression = getBindingWithTimezone(oPropertyDataModelObjectPath, oFormattedValue);
        } else {
          oBindingExpression = _computeBindingWithUnitOrCurrency(oPropertyDataModelObjectPath, oFormattedValue, bHideMeasure || (dataPointFormatOptions === null || dataPointFormatOptions === void 0 ? void 0 : dataPointFormatOptions.measureDisplayMode) === "Hidden");
        }
    }
    return compileExpression(oBindingExpression);
  };
  _exports.buildFieldBindingExpression = buildFieldBindingExpression;
  const _computeBindingWithUnitOrCurrency = (propertyDataModelObjectPath, formattedValue, hideMeasure) => {
    var _propertyDataModelObj, _propertyDataModelObj2, _propertyDataModelObj3, _propertyDataModelObj4, _propertyDataModelObj5, _propertyDataModelObj6;
    if ((_propertyDataModelObj = propertyDataModelObjectPath.targetObject) !== null && _propertyDataModelObj !== void 0 && (_propertyDataModelObj2 = _propertyDataModelObj.annotations) !== null && _propertyDataModelObj2 !== void 0 && (_propertyDataModelObj3 = _propertyDataModelObj2.Measures) !== null && _propertyDataModelObj3 !== void 0 && _propertyDataModelObj3.Unit || (_propertyDataModelObj4 = propertyDataModelObjectPath.targetObject) !== null && _propertyDataModelObj4 !== void 0 && (_propertyDataModelObj5 = _propertyDataModelObj4.annotations) !== null && _propertyDataModelObj5 !== void 0 && (_propertyDataModelObj6 = _propertyDataModelObj5.Measures) !== null && _propertyDataModelObj6 !== void 0 && _propertyDataModelObj6.ISOCurrency) {
      if (hideMeasure && hasStaticPercentUnit(propertyDataModelObjectPath.targetObject)) {
        return formattedValue;
      }
      return getBindingWithUnitOrCurrency(propertyDataModelObjectPath, formattedValue, undefined, hideMeasure ? {
        showMeasure: false
      } : undefined);
    }
    return formattedValue;
  };

  /**
   * Method to calculate the percentage value of Progress Indicator. Basic formula is Value/Target * 100.
   *
   * @param oPropertyDataModelObjectPath
   * @returns The expression binding used to calculate the percentage value, which is shown in the progress indicator based on the formula given above.
   */
  _exports._computeBindingWithUnitOrCurrency = _computeBindingWithUnitOrCurrency;
  const buildExpressionForProgressIndicatorPercentValue = oPropertyDataModelObjectPath => {
    var _oPropertyDataModelOb5, _oPropertyDefinition$, _oPropertyDefinition$2, _oPropertyDefinition$3, _oPropertyDefinition$4;
    const fieldValue = (oPropertyDataModelObjectPath === null || oPropertyDataModelObjectPath === void 0 ? void 0 : (_oPropertyDataModelOb5 = oPropertyDataModelObjectPath.targetObject) === null || _oPropertyDataModelOb5 === void 0 ? void 0 : _oPropertyDataModelOb5.Value) || "";
    const relativeLocation = getRelativePaths(oPropertyDataModelObjectPath);
    const fieldValueExpression = getExpressionFromAnnotation(fieldValue, relativeLocation);
    const TargetExpression = getDataPointTargetExpression(oPropertyDataModelObjectPath.targetObject);
    const oPropertyDefinition = fieldValue.$target;
    const unit = ((_oPropertyDefinition$ = oPropertyDefinition.annotations) === null || _oPropertyDefinition$ === void 0 ? void 0 : (_oPropertyDefinition$2 = _oPropertyDefinition$.Measures) === null || _oPropertyDefinition$2 === void 0 ? void 0 : _oPropertyDefinition$2.Unit) || ((_oPropertyDefinition$3 = oPropertyDefinition.annotations) === null || _oPropertyDefinition$3 === void 0 ? void 0 : (_oPropertyDefinition$4 = _oPropertyDefinition$3.Measures) === null || _oPropertyDefinition$4 === void 0 ? void 0 : _oPropertyDefinition$4.ISOCurrency);
    if (unit) {
      const unitBindingExpression = unit.$target ? formatWithTypeInformation(unit.$target, getExpressionFromAnnotation(unit, relativeLocation)) : getExpressionFromAnnotation(unit, relativeLocation);
      return compileExpression(formatResult([fieldValueExpression, TargetExpression, unitBindingExpression], valueFormatters.computePercentage));
    }
    return compileExpression(formatResult([fieldValueExpression, TargetExpression, ""], valueFormatters.computePercentage));
  };
  _exports.buildExpressionForProgressIndicatorPercentValue = buildExpressionForProgressIndicatorPercentValue;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/helpers/DataPointTemplating", ["sap/fe/core/formatters/ValueFormatter","sap/fe/core/helpers/BindingToolkit","sap/fe/core/templating/DataModelPathHelper","sap/fe/core/templating/PropertyHelper","sap/fe/core/templating/UIFormatters","sap/ui/model/odata/v4/AnnotationHelper"],function(t,e,n,o,i,r){"use strict";var a={};var s=i.getDisplayMode;var l=i.getBindingWithUnitOrCurrency;var u=i.getBindingWithTimezone;var d=o.isProperty;var c=o.hasStaticPercentUnit;var v=n.getRelativePaths;var g=n.enhanceDataModelPath;var p=e.unresolvableExpression;var f=e.isPathInModelExpression;var m=e.getExpressionFromAnnotation;var O=e.formatWithTypeInformation;var T=e.formatResult;var I=e.EDM_TYPE_MAPPING;var b=e.compileExpression;const _=t=>t!==null&&t!==void 0&&t.TargetValue?m(t.TargetValue):p;const E=sap.ui.getCore().getLibraryResourceBundle("sap.fe.macros");const P=e=>{var n;const o=(e===null||e===void 0?void 0:(n=e.targetObject)===null||n===void 0?void 0:n.Value)||"";const i=v(e);let r=m(o,i);const a=_(e.targetObject);if(r&&a){var s,l,u,g;let n=e.targetObject.Value;if(!d(n)){n=e.targetObject.Value.$target}const v=((s=n.annotations)===null||s===void 0?void 0:(l=s.Measures)===null||l===void 0?void 0:l.Unit)||((u=n.annotations)===null||u===void 0?void 0:(g=u.Measures)===null||g===void 0?void 0:g.ISOCurrency);if(!v){return E.getText("T_COMMON_PROGRESS_INDICATOR_DISPLAY_VALUE_NO_UOM",[b(r),b(a)])}if(c(o===null||o===void 0?void 0:o.$target)){return`${b(r)} %`}r=O(n,r);const p=v.$target?O(v.$target,m(v,i)):m(v,i);return b(T([r,a,p],t.formatProgressIndicatorText))}return undefined};a.buildExpressionForProgressIndicatorDisplayValue=P;const A=t=>{var e,n,o,i,r,a;const s=v(t);const l=t===null||t===void 0?void 0:(e=t.targetObject)===null||e===void 0?void 0:(n=e.Value)===null||n===void 0?void 0:n.$target;if(!d(l)){return""}const u=((o=l.annotations)===null||o===void 0?void 0:(i=o.Measures)===null||i===void 0?void 0:i.Unit)||((r=l.annotations)===null||r===void 0?void 0:(a=r.Measures)===null||a===void 0?void 0:a.ISOCurrency);return u?b(m(u,s)):""};a.buildUnitBindingExpression=A;const D=(t,e)=>{if(e){return N(r.value(e,{context:t}))}};const N=t=>{if(t){const e=t>1?E.getText("T_ANNOTATION_HELPER_RATING_INDICATOR_SUBTITLE_LABEL_PLURAL"):E.getText("T_ANNOTATION_HELPER_RATING_INDICATOR_SUBTITLE_LABEL");return E.getText("T_ANNOTATION_HELPER_RATING_INDICATOR_SUBTITLE",[String(t),e])}};const h=(t,e)=>{let n;if(e&&e.SampleSize){n=D(t,e.SampleSize)}else if(e&&e.Description){const o=r.value(e.Description,{context:t});n="${path:"+o+"}"}return n};h.requiresIContext=true;a.getHeaderRatingIndicatorText=h;const x=t=>{var e,n,o;const i=v(t);if(t!==null&&t!==void 0&&(e=t.targetObject)!==null&&e!==void 0&&(n=e.annotations)!==null&&n!==void 0&&(o=n.Common)!==null&&o!==void 0&&o.Text){var r,a;const e=m(t===null||t===void 0?void 0:(r=t.targetObject.annotations)===null||r===void 0?void 0:(a=r.Common)===null||a===void 0?void 0:a.Text,i);if(f(e)){e.parameters={$$noPatch:true}}return e}return undefined};const M=(t,e,n)=>{if(!t.constraints){t.constraints={}}t.constraints=Object.assign(t.constraints,{precision:e.$target.precision,scale:n?n:e.$target.scale});if(n){if(!t.formatOptions){t.formatOptions={}}t.formatOptions=Object.assign(t.formatOptions,{preserveDecimals:false})}return t};const V=(t,e,n,o)=>{var i;let r;const a=(e===null||e===void 0?void 0:(i=e.path)===null||i===void 0?void 0:i.indexOf("/"))===-1?v(t):[];r=m(e,a);const s=t.targetObject;if(n&&f(r)){var l;O(s,r);r.type=(l=I[n])===null||l===void 0?void 0:l.type;switch(n){case"Edm.Decimal":r=M(r,e,o);break;default:}}return r};a.getValueFormatted=V;const j=(e,n,o)=>{var i,r,a,l;const d=e.targetObject;const c=(d===null||d===void 0?void 0:d.Value)||"";const v=c===null||c===void 0?void 0:(i=c.$target)===null||i===void 0?void 0:i.type;let p;if(v==="Edm.Decimal"&&d.ValueFormat){if(d.ValueFormat.NumberOfFractionalDigits){p=d.ValueFormat.NumberOfFractionalDigits}}const f=g(e,c.path);const m=f?x(f):undefined;const O=V(f,c,v,p);const I=m?n.displayMode||s(f):"Value";let _;switch(I){case"Description":_=m;break;case"ValueDescription":_=T([O,m],t.formatWithBrackets);break;case"DescriptionValue":_=T([m,O],t.formatWithBrackets);break;default:if((r=f.targetObject)!==null&&r!==void 0&&(a=r.annotations)!==null&&a!==void 0&&(l=a.Common)!==null&&l!==void 0&&l.Timezone){_=u(f,O)}else{_=y(f,O,o||(n===null||n===void 0?void 0:n.measureDisplayMode)==="Hidden")}}return b(_)};a.buildFieldBindingExpression=j;const y=(t,e,n)=>{var o,i,r,a,s,u;if((o=t.targetObject)!==null&&o!==void 0&&(i=o.annotations)!==null&&i!==void 0&&(r=i.Measures)!==null&&r!==void 0&&r.Unit||(a=t.targetObject)!==null&&a!==void 0&&(s=a.annotations)!==null&&s!==void 0&&(u=s.Measures)!==null&&u!==void 0&&u.ISOCurrency){if(n&&c(t.targetObject)){return e}return l(t,e,undefined,n?{showMeasure:false}:undefined)}return e};a._computeBindingWithUnitOrCurrency=y;const R=e=>{var n,o,i,r,a;const s=(e===null||e===void 0?void 0:(n=e.targetObject)===null||n===void 0?void 0:n.Value)||"";const l=v(e);const u=m(s,l);const d=_(e.targetObject);const c=s.$target;const g=((o=c.annotations)===null||o===void 0?void 0:(i=o.Measures)===null||i===void 0?void 0:i.Unit)||((r=c.annotations)===null||r===void 0?void 0:(a=r.Measures)===null||a===void 0?void 0:a.ISOCurrency);if(g){const e=g.$target?O(g.$target,m(g,l)):m(g,l);return b(T([u,d,e],t.computePercentage))}return b(T([u,d,""],t.computePercentage))};a.buildExpressionForProgressIndicatorPercentValue=R;return a},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/helpers/DefaultActionHandler-dbg", ["sap/fe/macros/CommonHelper", "sap/fe/macros/table/TableHelper", "sap/m/library"], function (CommonHelper, Table, library) {
  "use strict";

  var MenuButtonMode = library.MenuButtonMode;
  const DefaultActionHandler = {
    /**
     * The default action group handler that is invoked when adding the menu button handling appropriately.
     *
     * @param oCtx The current context in which the handler is called
     * @param oAction The current action context
     * @param oDataFieldForDefaultAction The current dataField for the default action
     * @param defaultActionContextOrEntitySet The current context for the default action
     * @param mode The optional parameter for the handler mode; default setting is Table
     * @returns The appropriate expression string
     */
    getDefaultActionHandler: function (oCtx, oAction, oDataFieldForDefaultAction, defaultActionContextOrEntitySet) {
      let mode = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : "Table";
      if (oAction.defaultAction) {
        try {
          switch (oAction.defaultAction.type) {
            case "ForAction":
              {
                if (mode === "Table") {
                  return Table.pressEventDataFieldForActionButton(oCtx, oDataFieldForDefaultAction, oCtx.collection.getObject("@sapui.name"), oCtx.tableDefinition.getObject("operationAvailableMap"), defaultActionContextOrEntitySet, oAction.isNavigable, oAction.enableAutoScroll, oAction.defaultValuesExtensionFunction);
                }
                return undefined;
              }
            case "ForNavigation":
              {
                if (mode === "Table") {
                  return CommonHelper.getPressHandlerForDataFieldForIBN(oDataFieldForDefaultAction, "${internal>selectedContexts}", !oCtx.tableDefinition.getObject("enableAnalytics"));
                }
                return undefined;
              }
            default:
              {
                if (oAction.defaultAction.command) {
                  return "cmd:" + oAction.defaultAction.command;
                }
                if (oAction.defaultAction.noWrap) {
                  return oAction.defaultAction.press;
                } else {
                  switch (mode) {
                    case "Table":
                      {
                        return CommonHelper.buildActionWrapper(oAction.defaultAction, oCtx);
                      }
                    case "Form":
                      {
                        return CommonHelper.buildActionWrapper(oAction.defaultAction, {
                          id: "forTheForm"
                        });
                      }
                  }
                }
              }
          }
        } catch (ioEx) {
          return "binding for the default action is not working as expected";
        }
      }
      return undefined;
    },
    /**
     * The function determines during templating whether to use the defaultActionOnly
     * setting for the sap.m.MenuButton control in case a defaultAction is provided.
     *
     * @param oAction The current action context
     * @returns A Boolean value
     */
    getUseDefaultActionOnly: function (oAction) {
      if (oAction.defaultAction) {
        return true;
      } else {
        return false;
      }
    },
    /**
     * The function determines during templating whether to use the 'Split'
     * or 'Regular' MenuButtonMode for the sap.m.MenuButton control
     * in case a defaultAction is available.
     *
     * @param oAction The current action context
     * @returns The MenuButtonMode
     */
    getButtonMode: function (oAction) {
      if (oAction.defaultAction) {
        return MenuButtonMode.Split;
      } else {
        return MenuButtonMode.Regular;
      }
    }
  };
  return DefaultActionHandler;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/helpers/DefaultActionHandler", ["sap/fe/macros/CommonHelper","sap/fe/macros/table/TableHelper","sap/m/library"],function(e,t,n){"use strict";var a=n.MenuButtonMode;const i={getDefaultActionHandler:function(n,a,i,r){let o=arguments.length>4&&arguments[4]!==undefined?arguments[4]:"Table";if(a.defaultAction){try{switch(a.defaultAction.type){case"ForAction":{if(o==="Table"){return t.pressEventDataFieldForActionButton(n,i,n.collection.getObject("@sapui.name"),n.tableDefinition.getObject("operationAvailableMap"),r,a.isNavigable,a.enableAutoScroll,a.defaultValuesExtensionFunction)}return undefined}case"ForNavigation":{if(o==="Table"){return e.getPressHandlerForDataFieldForIBN(i,"${internal>selectedContexts}",!n.tableDefinition.getObject("enableAnalytics"))}return undefined}default:{if(a.defaultAction.command){return"cmd:"+a.defaultAction.command}if(a.defaultAction.noWrap){return a.defaultAction.press}else{switch(o){case"Table":{return e.buildActionWrapper(a.defaultAction,n)}case"Form":{return e.buildActionWrapper(a.defaultAction,{id:"forTheForm"})}}}}}}catch(e){return"binding for the default action is not working as expected"}}return undefined},getUseDefaultActionOnly:function(e){if(e.defaultAction){return true}else{return false}},getButtonMode:function(e){if(e.defaultAction){return a.Split}else{return a.Regular}}};return i},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/helpers/TableTemplating-dbg", ["sap/fe/core/helpers/BindingToolkit"], function (BindingToolkit) {
  "use strict";

  var _exports = {};
  var resolveBindingString = BindingToolkit.resolveBindingString;
  var not = BindingToolkit.not;
  var equal = BindingToolkit.equal;
  var constant = BindingToolkit.constant;
  var compileExpression = BindingToolkit.compileExpression;
  var and = BindingToolkit.and;
  /**
   * Method to compute the headerVisible property.
   *
   * @param oProps Object containing the table properties
   * @returns Expression binding for headerVisible
   */
  const buildExpressionForHeaderVisible = oProps => {
    const headerBindingExpression = resolveBindingString(oProps === null || oProps === void 0 ? void 0 : oProps.header);
    const tabTileBindingExpression = resolveBindingString(oProps === null || oProps === void 0 ? void 0 : oProps.tabTitle);
    const headerVisibleBindingExpression = constant(oProps.headerVisible);
    return compileExpression(and(headerVisibleBindingExpression, not(equal(headerBindingExpression, tabTileBindingExpression))));
  };
  _exports.buildExpressionForHeaderVisible = buildExpressionForHeaderVisible;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/helpers/TableTemplating", ["sap/fe/core/helpers/BindingToolkit"],function(e){"use strict";var i={};var n=e.resolveBindingString;var r=e.not;var o=e.equal;var s=e.constant;var a=e.compileExpression;var t=e.and;const l=e=>{const i=n(e===null||e===void 0?void 0:e.header);const l=n(e===null||e===void 0?void 0:e.tabTitle);const d=s(e.headerVisible);return a(t(d,r(o(i,l))))};i.buildExpressionForHeaderVisible=l;return i},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/valuehelp/TableDelegate-dbg", ["sap/base/Log", "sap/base/util/deepEqual", "sap/fe/core/CommonUtils", "sap/fe/core/converters/controls/ListReport/FilterBar", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/ModelHelper", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/core/templating/DisplayModeFormatter", "sap/fe/core/templating/PropertyHelper", "sap/fe/core/type/EDM", "sap/fe/core/type/TypeUtil", "sap/fe/macros/DelegateUtil", "sap/fe/macros/ODataMetaModelUtil", "sap/ui/core/Core", "sap/ui/mdc/odata/v4/TableDelegate", "sap/ui/mdc/odata/v4/util/DelegateUtil", "sap/ui/mdc/util/FilterUtil", "sap/ui/model/Filter", "sap/ui/model/FilterOperator", "sap/ui/model/Sorter"], function (Log, deepEqual, CommonUtils, FilterBar, MetaModelConverter, ModelHelper, DataModelPathHelper, DisplayModeFormatter, PropertyHelper, EDM, TypeUtil, MacrosDelegateUtil, ODataMetaModelUtil, Core, TableDelegate, DelegateUtil, FilterUtil, Filter, FilterOperator, Sorter) {
  "use strict";

  var isTypeFilterable = EDM.isTypeFilterable;
  var getLabel = PropertyHelper.getLabel;
  var getAssociatedUnitPropertyPath = PropertyHelper.getAssociatedUnitPropertyPath;
  var getAssociatedTimezonePropertyPath = PropertyHelper.getAssociatedTimezonePropertyPath;
  var getAssociatedTextPropertyPath = PropertyHelper.getAssociatedTextPropertyPath;
  var getAssociatedCurrencyPropertyPath = PropertyHelper.getAssociatedCurrencyPropertyPath;
  var getDisplayMode = DisplayModeFormatter.getDisplayMode;
  var getTargetObjectPath = DataModelPathHelper.getTargetObjectPath;
  var enhanceDataModelPath = DataModelPathHelper.enhanceDataModelPath;
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  var fetchTypeConfig = FilterBar.fetchTypeConfig;
  /**
   * Test delegate for OData V4.
   */
  const ODataTableDelegate = Object.assign({}, TableDelegate);
  ODataTableDelegate.fetchProperties = function (table) {
    const model = this._getModel(table);
    let createPropertyInfos;
    if (!model) {
      createPropertyInfos = new Promise(resolve => {
        table.attachModelContextChange({
          resolver: resolve
        }, onModelContextChange, this);
      }).then(oSubModel => {
        return this._createPropertyInfos(table, oSubModel);
      });
    } else {
      createPropertyInfos = this._createPropertyInfos(table, model);
    }
    return createPropertyInfos.then(function (properties) {
      MacrosDelegateUtil.setCachedProperties(table, properties);
      table.getBindingContext("internal").setProperty("tablePropertiesAvailable", true);
      return properties;
    });
  };
  ODataTableDelegate.createInternalBindingContext = function (table) {
    let dialog = table;
    while (dialog && !dialog.isA("sap.ui.mdc.valuehelp.Dialog")) {
      dialog = dialog.getParent();
    }
    if (dialog) {
      const internalModel = table.getModel("internal");
      const newInternalBindingContextPath = dialog.getBindingContext("internal").getPath() + `::VHDialog::${dialog.getId()}::table`;
      const newInternalBindingContext = internalModel.bindContext(newInternalBindingContextPath).getBoundContext();
      table.setBindingContext(newInternalBindingContext, "internal");
    }
  };
  function onModelContextChange(event, data) {
    const table = event.getSource();
    ODataTableDelegate.createInternalBindingContext(table);
    const model = this._getModel(table);
    if (model) {
      table.detachModelContextChange(onModelContextChange);
      data.resolver(model);
    }
  }
  /**
   * Collect related properties from a property's annotations.
   *
   * @param dataModelPropertyPath The model object path of the property.
   * @returns The related properties that were identified.
   */
  function _collectRelatedProperties(dataModelPropertyPath) {
    const dataModelAdditionalPropertyPath = _getAdditionalProperty(dataModelPropertyPath);
    const relatedProperties = {};
    if (dataModelAdditionalPropertyPath !== null && dataModelAdditionalPropertyPath !== void 0 && dataModelAdditionalPropertyPath.targetObject) {
      var _property$annotations, _property$annotations2, _textAnnotation$annot, _textAnnotation$annot2, _textAnnotation$annot3;
      const additionalProperty = dataModelAdditionalPropertyPath.targetObject;
      const additionalPropertyPath = getTargetObjectPath(dataModelAdditionalPropertyPath, true);
      const property = dataModelPropertyPath.targetObject;
      const propertyPath = getTargetObjectPath(dataModelPropertyPath, true);
      const textAnnotation = (_property$annotations = property.annotations) === null || _property$annotations === void 0 ? void 0 : (_property$annotations2 = _property$annotations.Common) === null || _property$annotations2 === void 0 ? void 0 : _property$annotations2.Text,
        textArrangement = textAnnotation === null || textAnnotation === void 0 ? void 0 : (_textAnnotation$annot = textAnnotation.annotations) === null || _textAnnotation$annot === void 0 ? void 0 : (_textAnnotation$annot2 = _textAnnotation$annot.UI) === null || _textAnnotation$annot2 === void 0 ? void 0 : (_textAnnotation$annot3 = _textAnnotation$annot2.TextArrangement) === null || _textAnnotation$annot3 === void 0 ? void 0 : _textAnnotation$annot3.toString(),
        displayMode = textAnnotation && textArrangement && getDisplayMode(property);
      if (displayMode === "Description") {
        relatedProperties[additionalPropertyPath] = additionalProperty;
      } else if (displayMode && displayMode !== "Value" || !textAnnotation) {
        relatedProperties[propertyPath] = property;
        relatedProperties[additionalPropertyPath] = additionalProperty;
      }
    }
    return relatedProperties;
  }
  ODataTableDelegate._createPropertyInfos = function (oTable, oModel) {
    const oMetadataInfo = oTable.getDelegate().payload;
    const aProperties = [];
    const sEntitySetPath = `/${oMetadataInfo.collectionName}`;
    const oMetaModel = oModel.getMetaModel();
    return oMetaModel.requestObject(`${sEntitySetPath}@`).then(function (mEntitySetAnnotations) {
      const oSortRestrictionsInfo = ODataMetaModelUtil.getSortRestrictionsInfo(mEntitySetAnnotations);
      const oFilterRestrictions = mEntitySetAnnotations["@Org.OData.Capabilities.V1.FilterRestrictions"];
      const oFilterRestrictionsInfo = ODataMetaModelUtil.getFilterRestrictionsInfo(oFilterRestrictions);
      const customDataForColumns = MacrosDelegateUtil.getCustomData(oTable, "columns");
      const propertiesToBeCreated = {};
      const dataModelEntityPath = getInvolvedDataModelObjects(oTable.getModel().getMetaModel().getContext(sEntitySetPath));
      customDataForColumns.customData.forEach(function (columnDef) {
        const oPropertyInfo = {
          name: columnDef.path,
          label: columnDef.label,
          sortable: _isSortableProperty(oSortRestrictionsInfo, columnDef),
          filterable: _isFilterableProperty(oFilterRestrictionsInfo, columnDef),
          maxConditions: _getPropertyMaxConditions(oFilterRestrictionsInfo, columnDef),
          typeConfig: isTypeFilterable(columnDef.$Type) ? oTable.getTypeUtil().getTypeConfig(columnDef.$Type) : undefined
        };
        const dataModelPropertyPath = enhanceDataModelPath(dataModelEntityPath, columnDef.path);
        const property = dataModelPropertyPath.targetObject;
        if (property) {
          const targetPropertyPath = getTargetObjectPath(dataModelPropertyPath, true);
          let oTypeConfig;
          if (isTypeFilterable(property.type)) {
            const propertyTypeConfig = fetchTypeConfig(property);
            oTypeConfig = TypeUtil.getTypeConfig(propertyTypeConfig.type, propertyTypeConfig.formatOptions, propertyTypeConfig.constraints) ?? oTable.getTypeUtil().getTypeConfig(columnDef.$Type);
          }
          //Check if there is an additional property linked to the property as a Unit, Currency, Timezone or textArrangement
          const relatedPropertiesInfo = _collectRelatedProperties(dataModelPropertyPath);
          const relatedPropertyPaths = Object.keys(relatedPropertiesInfo);
          if (relatedPropertyPaths.length) {
            oPropertyInfo.propertyInfos = relatedPropertyPaths;
            //Complex properties must be hidden for sorting and filtering
            oPropertyInfo.sortable = false;
            oPropertyInfo.filterable = false;
            // Collect information of related columns to be created.
            relatedPropertyPaths.forEach(path => {
              propertiesToBeCreated[path] = relatedPropertiesInfo[path];
            });
            // Also add property for the inOut Parameters on the ValueHelp when textArrangement is set to #TextOnly
            // It will not be linked to the complex Property (BCP 2270141154)
            if (!relatedPropertyPaths.find(path => relatedPropertiesInfo[path] === property)) {
              propertiesToBeCreated[targetPropertyPath] = property;
            }
          } else {
            oPropertyInfo.path = columnDef.path;
          }
          oPropertyInfo.typeConfig = oPropertyInfo.typeConfig ? oTypeConfig : undefined;
        } else {
          oPropertyInfo.path = columnDef.path;
        }
        aProperties.push(oPropertyInfo);
      });
      const relatedColumns = _createRelatedProperties(propertiesToBeCreated, aProperties, oSortRestrictionsInfo, oFilterRestrictionsInfo);
      return aProperties.concat(relatedColumns);
    });
  };

  /**
   * Updates the binding info with the relevant path and model from the metadata.
   *
   * @param oMDCTable The MDCTable instance
   * @param oBindingInfo The bindingInfo of the table
   */
  ODataTableDelegate.updateBindingInfo = function (oMDCTable, oBindingInfo) {
    TableDelegate.updateBindingInfo.apply(this, [oMDCTable, oBindingInfo]);
    if (!oMDCTable) {
      return;
    }
    const oMetadataInfo = oMDCTable.getDelegate().payload;
    if (oMetadataInfo && oBindingInfo) {
      oBindingInfo.path = oBindingInfo.path || oMetadataInfo.collectionPath || `/${oMetadataInfo.collectionName}`;
      oBindingInfo.model = oBindingInfo.model || oMetadataInfo.model;
    }
    if (!oBindingInfo) {
      oBindingInfo = {};
    }
    const oFilter = Core.byId(oMDCTable.getFilter()),
      bFilterEnabled = oMDCTable.isFilteringEnabled();
    let mConditions;
    let oInnerFilterInfo, oOuterFilterInfo;
    const aFilters = [];
    const tableProperties = MacrosDelegateUtil.getCachedProperties(oMDCTable);

    //TODO: consider a mechanism ('FilterMergeUtil' or enhance 'FilterUtil') to allow the connection between different filters)
    if (bFilterEnabled) {
      mConditions = oMDCTable.getConditions();
      oInnerFilterInfo = FilterUtil.getFilterInfo(oMDCTable, mConditions, tableProperties, []);
      if (oInnerFilterInfo.filters) {
        aFilters.push(oInnerFilterInfo.filters);
      }
    }
    if (oFilter) {
      mConditions = oFilter.getConditions();
      if (mConditions) {
        const aParameterNames = DelegateUtil.getParameterNames(oFilter);
        // The table properties needs to updated with the filter field if no Selectionfierlds are annotated and not part as value help parameter
        ODataTableDelegate._updatePropertyInfo(tableProperties, oMDCTable, mConditions, oMetadataInfo);
        oOuterFilterInfo = FilterUtil.getFilterInfo(oFilter, mConditions, tableProperties, aParameterNames);
        if (oOuterFilterInfo.filters) {
          aFilters.push(oOuterFilterInfo.filters);
        }
        const sParameterPath = DelegateUtil.getParametersInfo(oFilter, mConditions);
        if (sParameterPath) {
          oBindingInfo.path = sParameterPath;
        }
      }

      // get the basic search
      oBindingInfo.parameters.$search = CommonUtils.normalizeSearchTerm(oFilter.getSearch()) || undefined;
    }
    this._applyDefaultSorting(oBindingInfo, oMDCTable.getDelegate().payload);
    // add select to oBindingInfo (BCP 2170163012)
    oBindingInfo.parameters.$select = tableProperties === null || tableProperties === void 0 ? void 0 : tableProperties.reduce(function (sQuery, oProperty) {
      // Navigation properties (represented by X/Y) should not be added to $select.
      // ToDo : They should be added as $expand=X($select=Y) instead
      if (oProperty.path && oProperty.path.indexOf("/") === -1) {
        sQuery = sQuery ? `${sQuery},${oProperty.path}` : oProperty.path;
      }
      return sQuery;
    }, "");

    // Add $count
    oBindingInfo.parameters.$count = true;

    //If the entity is DraftEnabled add a DraftFilter
    if (ModelHelper.isDraftSupported(oMDCTable.getModel().getMetaModel(), oBindingInfo.path)) {
      aFilters.push(new Filter("IsActiveEntity", FilterOperator.EQ, true));
    }
    oBindingInfo.filters = new Filter(aFilters, true);
  };
  ODataTableDelegate.getTypeUtil = function /*oPayload*/
  () {
    return TypeUtil;
  };
  ODataTableDelegate._getModel = function (oTable) {
    const oMetadataInfo = oTable.getDelegate().payload;
    return oTable.getModel(oMetadataInfo.model);
  };

  /**
   * Applies a default sort order if needed. This is only the case if the request is not a $search request
   * (means the parameter $search of the bindingInfo is undefined) and if not already a sort order is set,
   * e.g. via presentation variant or manual by the user.
   *
   * @param oBindingInfo The bindingInfo of the table
   * @param oPayload The payload of the TableDelegate
   */
  ODataTableDelegate._applyDefaultSorting = function (oBindingInfo, oPayload) {
    if (oBindingInfo.parameters && oBindingInfo.parameters.$search == undefined && oBindingInfo.sorter && oBindingInfo.sorter.length == 0) {
      const defaultSortPropertyName = oPayload ? oPayload.defaultSortPropertyName : undefined;
      if (defaultSortPropertyName) {
        oBindingInfo.sorter.push(new Sorter(defaultSortPropertyName, false));
      }
    }
  };

  /**
   * Updates the table properties with filter field infos.
   *
   * @param aTableProperties Array with table properties
   * @param oMDCTable The MDCTable instance
   * @param mConditions The conditions of the table
   * @param oMetadataInfo The metadata info of the filter field
   */
  ODataTableDelegate._updatePropertyInfo = function (aTableProperties, oMDCTable, mConditions, oMetadataInfo) {
    const aConditionKey = Object.keys(mConditions),
      oMetaModel = oMDCTable.getModel().getMetaModel();
    aConditionKey.forEach(function (conditionKey) {
      if (aTableProperties.findIndex(function (tableProperty) {
        return tableProperty.path === conditionKey;
      }) === -1) {
        const oColumnDef = {
          path: conditionKey,
          typeConfig: oMDCTable.getTypeUtil().getTypeConfig(oMetaModel.getObject(`/${oMetadataInfo.collectionName}/${conditionKey}`).$Type)
        };
        aTableProperties.push(oColumnDef);
      }
    });
  };
  ODataTableDelegate.updateBinding = function (oTable, oBindingInfo, oBinding) {
    let bNeedManualRefresh = false;
    const oInternalBindingContext = oTable.getBindingContext("internal");
    const sManualUpdatePropertyKey = "pendingManualBindingUpdate";
    const bPendingManualUpdate = oInternalBindingContext === null || oInternalBindingContext === void 0 ? void 0 : oInternalBindingContext.getProperty(sManualUpdatePropertyKey);
    let oRowBinding = oTable.getRowBinding();

    //oBinding=null means that a rebinding needs to be forced via updateBinding in mdc TableDelegate
    TableDelegate.updateBinding.apply(ODataTableDelegate, [oTable, oBindingInfo, oBinding]);
    //get row binding after rebind from TableDelegate.updateBinding in case oBinding was null
    if (!oRowBinding) {
      oRowBinding = oTable.getRowBinding();
    }
    if (oRowBinding) {
      /**
       * Manual refresh if filters are not changed by binding.refresh() since updating the bindingInfo
       * is not enough to trigger a batch request.
       * Removing columns creates one batch request that was not executed before
       */
      const oldFilters = oRowBinding.getFilters("Application");
      bNeedManualRefresh = deepEqual(oBindingInfo.filters, oldFilters[0]) && oRowBinding.getQueryOptionsFromParameters().$search === oBindingInfo.parameters.$search && !bPendingManualUpdate;
    }
    if (bNeedManualRefresh && oTable.getFilter()) {
      oInternalBindingContext === null || oInternalBindingContext === void 0 ? void 0 : oInternalBindingContext.setProperty(sManualUpdatePropertyKey, true);
      oRowBinding.requestRefresh(oRowBinding.getGroupId()).finally(function () {
        oInternalBindingContext === null || oInternalBindingContext === void 0 ? void 0 : oInternalBindingContext.setProperty(sManualUpdatePropertyKey, false);
      }).catch(function (oError) {
        Log.error("Error while refreshing a filterBar VH table", oError);
      });
    }
    oTable.fireEvent("bindingUpdated");
    //no need to check for semantic targets here since we are in a VH and don't want to allow further navigation
  };

  /**
   * Creates a simple property for each identified complex property.
   *
   * @param propertiesToBeCreated Identified properties.
   * @param existingColumns The list of columns created for properties defined on the Value List.
   * @param oSortRestrictionsInfo An object containing the sort restriction information
   * @param oFilterRestrictionsInfo An object containing the filter restriction information
   * @returns The array of properties created.
   */
  function _createRelatedProperties(propertiesToBeCreated, existingColumns, oSortRestrictionsInfo, oFilterRestrictionsInfo) {
    const relatedPropertyNameMap = {},
      relatedColumns = [];
    Object.keys(propertiesToBeCreated).forEach(path => {
      const property = propertiesToBeCreated[path],
        relatedColumn = existingColumns.find(column => column.path === path); // Complex properties doesn't get path so only simple column are found
      if (!relatedColumn) {
        const newName = `Property::${path}`;
        relatedPropertyNameMap[path] = newName;
        const valueHelpTableColumn = {
          name: newName,
          label: getLabel(property),
          path: path,
          sortable: _isSortableProperty(oSortRestrictionsInfo, property),
          filterable: _isFilterableProperty(oFilterRestrictionsInfo, property)
        };
        valueHelpTableColumn.maxConditions = _getPropertyMaxConditions(oFilterRestrictionsInfo, valueHelpTableColumn);
        if (isTypeFilterable(property.type)) {
          const propertyTypeConfig = fetchTypeConfig(property);
          valueHelpTableColumn.typeConfig = TypeUtil.getTypeConfig(propertyTypeConfig.type, propertyTypeConfig.formatOptions, propertyTypeConfig.constraints);
        }
        relatedColumns.push(valueHelpTableColumn);
      }
    });
    // The property 'name' has been prefixed with 'Property::' for uniqueness.
    // Update the same in other propertyInfos[] references which point to this property.
    existingColumns.forEach(column => {
      if (column.propertyInfos) {
        var _column$propertyInfos;
        column.propertyInfos = (_column$propertyInfos = column.propertyInfos) === null || _column$propertyInfos === void 0 ? void 0 : _column$propertyInfos.map(columnName => relatedPropertyNameMap[columnName] ?? columnName);
      }
    });
    return relatedColumns;
  }
  /**
   * Identifies if the given property is sortable based on the sort restriction information.
   *
   * @param sortRestrictionsInfo The sort restriction information from the restriction annotation.
   * @param property The target property.
   * @returns `true` if the given property is sortable.
   */
  function _isSortableProperty(sortRestrictionsInfo, property) {
    return property.path && sortRestrictionsInfo.propertyInfo[property.path] ? sortRestrictionsInfo.propertyInfo[property.path].sortable : property.sortable;
  }

  /**
   * Identifies if the given property is filterable based on the sort restriction information.
   *
   * @param oFilterRestrictionsInfo The filter restriction information from the restriction annotation.
   * @param property The target property.
   * @returns `true` if the given property is filterable.
   */
  function _isFilterableProperty(oFilterRestrictionsInfo, property) {
    return property.path && oFilterRestrictionsInfo[property.path] ? oFilterRestrictionsInfo[property.path].filterable : property.filterable;
  }

  /**
   * Identifies the maxConditions for a given property.
   *
   * @param oFilterRestrictionsInfo The filter restriction information from the restriction annotation.
   * @param valueHelpColumn The target property.
   * @returns `-1` or `1` if the property is a MultiValueFilterExpression.
   */
  function _getPropertyMaxConditions(oFilterRestrictionsInfo, valueHelpColumn) {
    return valueHelpColumn.path && ODataMetaModelUtil.isMultiValueFilterExpression(oFilterRestrictionsInfo.propertyInfo[valueHelpColumn.path]) ? -1 : 1;
  }

  /**
   * Identifies the additional property which references to the unit, timezone, textArrangement or currency.
   *
   * @param dataModelPropertyPath The model object path of the property.
   * @returns The additional property.
   */

  function _getAdditionalProperty(dataModelPropertyPath) {
    const oProperty = dataModelPropertyPath.targetObject;
    const additionalPropertyPath = getAssociatedTextPropertyPath(oProperty) || getAssociatedCurrencyPropertyPath(oProperty) || getAssociatedUnitPropertyPath(oProperty) || getAssociatedTimezonePropertyPath(oProperty);
    if (!additionalPropertyPath) {
      return undefined;
    }
    const dataModelAdditionalProperty = enhanceDataModelPath(dataModelPropertyPath, additionalPropertyPath);

    //Additional Property could refer to a navigation property, keep the name and path as navigation property
    const additionalProperty = dataModelAdditionalProperty.targetObject;
    if (!additionalProperty) {
      return undefined;
    }
    return dataModelAdditionalProperty;
  }
  return ODataTableDelegate;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/valuehelp/TableDelegate", ["sap/base/Log","sap/base/util/deepEqual","sap/fe/core/CommonUtils","sap/fe/core/converters/controls/ListReport/FilterBar","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/ModelHelper","sap/fe/core/templating/DataModelPathHelper","sap/fe/core/templating/DisplayModeFormatter","sap/fe/core/templating/PropertyHelper","sap/fe/core/type/EDM","sap/fe/core/type/TypeUtil","sap/fe/macros/DelegateUtil","sap/fe/macros/ODataMetaModelUtil","sap/ui/core/Core","sap/ui/mdc/odata/v4/TableDelegate","sap/ui/mdc/odata/v4/util/DelegateUtil","sap/ui/mdc/util/FilterUtil","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/Sorter"],function(e,t,n,o,r,i,a,s,l,c,p,f,d,g,u,h,y,m,v,b){"use strict";var C=c.isTypeFilterable;var P=l.getLabel;var M=l.getAssociatedUnitPropertyPath;var I=l.getAssociatedTimezonePropertyPath;var D=l.getAssociatedTextPropertyPath;var T=l.getAssociatedCurrencyPropertyPath;var O=s.getDisplayMode;var x=a.getTargetObjectPath;var $=a.enhanceDataModelPath;var B=r.getInvolvedDataModelObjects;var F=o.fetchTypeConfig;const j=Object.assign({},u);j.fetchProperties=function(e){const t=this._getModel(e);let n;if(!t){n=new Promise(t=>{e.attachModelContextChange({resolver:t},U,this)}).then(t=>this._createPropertyInfos(e,t))}else{n=this._createPropertyInfos(e,t)}return n.then(function(t){f.setCachedProperties(e,t);e.getBindingContext("internal").setProperty("tablePropertiesAvailable",true);return t})};j.createInternalBindingContext=function(e){let t=e;while(t&&!t.isA("sap.ui.mdc.valuehelp.Dialog")){t=t.getParent()}if(t){const n=e.getModel("internal");const o=t.getBindingContext("internal").getPath()+`::VHDialog::${t.getId()}::table`;const r=n.bindContext(o).getBoundContext();e.setBindingContext(r,"internal")}};function U(e,t){const n=e.getSource();j.createInternalBindingContext(n);const o=this._getModel(n);if(o){n.detachModelContextChange(U);t.resolver(o)}}function E(e){const t=R(e);const n={};if(t!==null&&t!==void 0&&t.targetObject){var o,r,i,a,s;const l=t.targetObject;const c=x(t,true);const p=e.targetObject;const f=x(e,true);const d=(o=p.annotations)===null||o===void 0?void 0:(r=o.Common)===null||r===void 0?void 0:r.Text,g=d===null||d===void 0?void 0:(i=d.annotations)===null||i===void 0?void 0:(a=i.UI)===null||a===void 0?void 0:(s=a.TextArrangement)===null||s===void 0?void 0:s.toString(),u=d&&g&&O(p);if(u==="Description"){n[c]=l}else if(u&&u!=="Value"||!d){n[f]=p;n[c]=l}}return n}j._createPropertyInfos=function(e,t){const n=e.getDelegate().payload;const o=[];const r=`/${n.collectionName}`;const i=t.getMetaModel();return i.requestObject(`${r}@`).then(function(t){const n=d.getSortRestrictionsInfo(t);const i=t["@Org.OData.Capabilities.V1.FilterRestrictions"];const a=d.getFilterRestrictionsInfo(i);const s=f.getCustomData(e,"columns");const l={};const c=B(e.getModel().getMetaModel().getContext(r));s.customData.forEach(function(t){const r={name:t.path,label:t.label,sortable:_(n,t),filterable:A(a,t),maxConditions:w(a,t),typeConfig:C(t.$Type)?e.getTypeUtil().getTypeConfig(t.$Type):undefined};const i=$(c,t.path);const s=i.targetObject;if(s){const n=x(i,true);let o;if(C(s.type)){const n=F(s);o=p.getTypeConfig(n.type,n.formatOptions,n.constraints)??e.getTypeUtil().getTypeConfig(t.$Type)}const a=E(i);const c=Object.keys(a);if(c.length){r.propertyInfos=c;r.sortable=false;r.filterable=false;c.forEach(e=>{l[e]=a[e]});if(!c.find(e=>a[e]===s)){l[n]=s}}else{r.path=t.path}r.typeConfig=r.typeConfig?o:undefined}else{r.path=t.path}o.push(r)});const g=S(l,o,n,a);return o.concat(g)})};j.updateBindingInfo=function(e,t){u.updateBindingInfo.apply(this,[e,t]);if(!e){return}const o=e.getDelegate().payload;if(o&&t){t.path=t.path||o.collectionPath||`/${o.collectionName}`;t.model=t.model||o.model}if(!t){t={}}const r=g.byId(e.getFilter()),a=e.isFilteringEnabled();let s;let l,c;const p=[];const d=f.getCachedProperties(e);if(a){s=e.getConditions();l=y.getFilterInfo(e,s,d,[]);if(l.filters){p.push(l.filters)}}if(r){s=r.getConditions();if(s){const n=h.getParameterNames(r);j._updatePropertyInfo(d,e,s,o);c=y.getFilterInfo(r,s,d,n);if(c.filters){p.push(c.filters)}const i=h.getParametersInfo(r,s);if(i){t.path=i}}t.parameters.$search=n.normalizeSearchTerm(r.getSearch())||undefined}this._applyDefaultSorting(t,e.getDelegate().payload);t.parameters.$select=d===null||d===void 0?void 0:d.reduce(function(e,t){if(t.path&&t.path.indexOf("/")===-1){e=e?`${e},${t.path}`:t.path}return e},"");t.parameters.$count=true;if(i.isDraftSupported(e.getModel().getMetaModel(),t.path)){p.push(new m("IsActiveEntity",v.EQ,true))}t.filters=new m(p,true)};j.getTypeUtil=function(){return p};j._getModel=function(e){const t=e.getDelegate().payload;return e.getModel(t.model)};j._applyDefaultSorting=function(e,t){if(e.parameters&&e.parameters.$search==undefined&&e.sorter&&e.sorter.length==0){const n=t?t.defaultSortPropertyName:undefined;if(n){e.sorter.push(new b(n,false))}}};j._updatePropertyInfo=function(e,t,n,o){const r=Object.keys(n),i=t.getModel().getMetaModel();r.forEach(function(n){if(e.findIndex(function(e){return e.path===n})===-1){const r={path:n,typeConfig:t.getTypeUtil().getTypeConfig(i.getObject(`/${o.collectionName}/${n}`).$Type)};e.push(r)}})};j.updateBinding=function(n,o,r){let i=false;const a=n.getBindingContext("internal");const s="pendingManualBindingUpdate";const l=a===null||a===void 0?void 0:a.getProperty(s);let c=n.getRowBinding();u.updateBinding.apply(j,[n,o,r]);if(!c){c=n.getRowBinding()}if(c){const e=c.getFilters("Application");i=t(o.filters,e[0])&&c.getQueryOptionsFromParameters().$search===o.parameters.$search&&!l}if(i&&n.getFilter()){a===null||a===void 0?void 0:a.setProperty(s,true);c.requestRefresh(c.getGroupId()).finally(function(){a===null||a===void 0?void 0:a.setProperty(s,false)}).catch(function(t){e.error("Error while refreshing a filterBar VH table",t)})}n.fireEvent("bindingUpdated")};function S(e,t,n,o){const r={},i=[];Object.keys(e).forEach(a=>{const s=e[a],l=t.find(e=>e.path===a);if(!l){const e=`Property::${a}`;r[a]=e;const t={name:e,label:P(s),path:a,sortable:_(n,s),filterable:A(o,s)};t.maxConditions=w(o,t);if(C(s.type)){const e=F(s);t.typeConfig=p.getTypeConfig(e.type,e.formatOptions,e.constraints)}i.push(t)}});t.forEach(e=>{if(e.propertyInfos){var t;e.propertyInfos=(t=e.propertyInfos)===null||t===void 0?void 0:t.map(e=>r[e]??e)}});return i}function _(e,t){return t.path&&e.propertyInfo[t.path]?e.propertyInfo[t.path].sortable:t.sortable}function A(e,t){return t.path&&e[t.path]?e[t.path].filterable:t.filterable}function w(e,t){return t.path&&d.isMultiValueFilterExpression(e.propertyInfo[t.path])?-1:1}function R(e){const t=e.targetObject;const n=D(t)||T(t)||M(t)||I(t);if(!n){return undefined}const o=$(e,n);const r=o.targetObject;if(!r){return undefined}return o}return j},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/valuehelp/ValueHelpTemplating-dbg", ["sap/fe/core/helpers/BindingToolkit", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/UIFormatters", "sap/fe/macros/field/FieldHelper"], function (BindingToolkit, StableIdHelper, DataModelPathHelper, PropertyHelper, UIFormatters, FieldHelper) {
  "use strict";

  var _exports = {};
  var getDisplayMode = UIFormatters.getDisplayMode;
  var isUnit = PropertyHelper.isUnit;
  var isSemanticKey = PropertyHelper.isSemanticKey;
  var isProperty = PropertyHelper.isProperty;
  var isGuid = PropertyHelper.isGuid;
  var isCurrency = PropertyHelper.isCurrency;
  var hasValueListForValidation = PropertyHelper.hasValueListForValidation;
  var hasValueHelpWithFixedValues = PropertyHelper.hasValueHelpWithFixedValues;
  var hasValueHelp = PropertyHelper.hasValueHelp;
  var hasDateType = PropertyHelper.hasDateType;
  var checkFilterExpressionRestrictions = DataModelPathHelper.checkFilterExpressionRestrictions;
  var generate = StableIdHelper.generate;
  var compileExpression = BindingToolkit.compileExpression;
  /**
   * Retrieve the displayMode for the value help.
   * The main rule is that if a property is used in a VHTable then we don't want to display the text arrangement directly.
   *
   * @param propertyPath The current property
   * @param isValueHelpWithFixedValues The value help is a drop-down list
   * @returns The target displayMode
   */
  const getValueHelpTableDisplayMode = function (propertyPath, isValueHelpWithFixedValues) {
    var _propertyPath$targetO, _propertyPath$targetO2, _oTextAnnotation$anno, _oTextAnnotation$anno2, _oTextAnnotation$anno3;
    const sDisplayMode = getDisplayMode(propertyPath);
    const oTextAnnotation = (_propertyPath$targetO = propertyPath.targetObject.annotations) === null || _propertyPath$targetO === void 0 ? void 0 : (_propertyPath$targetO2 = _propertyPath$targetO.Common) === null || _propertyPath$targetO2 === void 0 ? void 0 : _propertyPath$targetO2.Text;
    const oTextArrangementAnnotation = typeof oTextAnnotation !== "string" && (oTextAnnotation === null || oTextAnnotation === void 0 ? void 0 : (_oTextAnnotation$anno = oTextAnnotation.annotations) === null || _oTextAnnotation$anno === void 0 ? void 0 : (_oTextAnnotation$anno2 = _oTextAnnotation$anno.UI) === null || _oTextAnnotation$anno2 === void 0 ? void 0 : (_oTextAnnotation$anno3 = _oTextAnnotation$anno2.TextArrangement) === null || _oTextAnnotation$anno3 === void 0 ? void 0 : _oTextAnnotation$anno3.toString());
    if (isValueHelpWithFixedValues) {
      return oTextAnnotation && typeof oTextAnnotation !== "string" && oTextAnnotation.path ? sDisplayMode : "Value";
    } else {
      // Only explicit defined TextArrangements in a Value Help with Dialog are considered
      return oTextArrangementAnnotation ? sDisplayMode : "Value";
    }
  };

  /**
   * Method to return delegate property of Value Help.
   *
   * @function
   * @name getDelegateConfiguration
   * @memberof sap.fe.macros.internal.valuehelp.ValueHelpTemplating.js
   * @param propertyPath The current property path
   * @param conditionModelName Condition model of the Value Help
   * @param originalPropertyPath The original property path
   * @param requestGroupId The requestGroupId to use for requests
   * @param useMultiValueField If true the value help is for a multi value Field
   * @returns The expression needed to configure the delegate
   */
  _exports.getValueHelpTableDisplayMode = getValueHelpTableDisplayMode;
  const getDelegateConfiguration = function (propertyPath, conditionModelName, originalPropertyPath, requestGroupId) {
    let useMultiValueField = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;
    const isUnitValueHelp = propertyPath !== originalPropertyPath;
    const delegateConfiguration = {
      name: "sap/fe/macros/valuehelp/ValueHelpDelegate",
      payload: {
        propertyPath,
        isUnitValueHelp,
        conditionModel: conditionModelName,
        requestGroupId,
        useMultiValueField,
        qualifiers: {},
        valueHelpQualifier: ""
      }
    };
    return compileExpression(delegateConfiguration); // for some reason "qualifiers: {}" is ignored here
  };

  /**
   * Method to generate the ID for Value Help.
   *
   * @function
   * @name generateID
   * @memberof sap.fe.macros.internal.valuehelp.ValueHelpTemplating.js
   * @param sFlexId Flex ID of the current object
   * @param sIdPrefix Prefix for the ValueHelp ID
   * @param sOriginalPropertyName Name of the property
   * @param sPropertyName Name of the ValueHelp Property
   * @returns The Id generated for the ValueHelp
   */
  _exports.getDelegateConfiguration = getDelegateConfiguration;
  const generateID = function (sFlexId, sIdPrefix, sOriginalPropertyName, sPropertyName) {
    if (sFlexId) {
      return sFlexId;
    }
    let sProperty = sPropertyName;
    if (sOriginalPropertyName !== sPropertyName) {
      sProperty = `${sOriginalPropertyName}::${sPropertyName}`;
    }
    return generate([sIdPrefix, sProperty]);
  };

  /**
   * Method to check if a property needs to be validated or not when used in the valuehelp.
   *
   * @function
   * @name requiresValidation
   * @memberof sap.fe.macros.internal.valuehelp.ValueHelpTemplating.js
   * @param  property ValueHelp property type annotations
   * @returns `true` if the value help needs to be validated
   */
  _exports.generateID = generateID;
  const requiresValidation = function (property) {
    return hasValueHelpWithFixedValues(property) || hasValueListForValidation(property) || hasValueHelp(property) && (isUnit(property) || isCurrency(property) || isGuid(property));
  };

  /**
   * Method to decide if case-sensitive filter requests are to be used or not.
   *
   *  If the back end has FilterFunctions Capabilies for the service or the entity, we check it includes support for tolower.
   *
   * @function
   * @name useCaseSensitiveFilterRequests
   * @memberof sap.fe.macros.internal.valuehelp.ValueHelpTemplating.js
   * @param oDataModelPath Current data model path·
   * @param aEntityContainerFilterFunctions Filter functions of entity container
   * @returns `true` if the entity set or service supports case sensitive filter requests
   */
  _exports.requiresValidation = requiresValidation;
  const useCaseSensitiveFilterRequests = function (oDataModelPath, aEntityContainerFilterFunctions) {
    var _oDataModelPath$targe, _oDataModelPath$targe2, _oDataModelPath$targe3;
    const filterFunctions = (oDataModelPath === null || oDataModelPath === void 0 ? void 0 : (_oDataModelPath$targe = oDataModelPath.targetEntitySet) === null || _oDataModelPath$targe === void 0 ? void 0 : (_oDataModelPath$targe2 = _oDataModelPath$targe.annotations) === null || _oDataModelPath$targe2 === void 0 ? void 0 : (_oDataModelPath$targe3 = _oDataModelPath$targe2.Capabilities) === null || _oDataModelPath$targe3 === void 0 ? void 0 : _oDataModelPath$targe3.FilterFunctions) || aEntityContainerFilterFunctions;
    return filterFunctions ? !(filterFunctions.indexOf("tolower") > -1) : true;
  };
  _exports.useCaseSensitiveFilterRequests = useCaseSensitiveFilterRequests;
  const isSemanticDateRange = function (oDataModelPath) {
    const targetProperty = oDataModelPath.targetObject;
    const targetRestrictions = checkFilterExpressionRestrictions(oDataModelPath, ["SingleRange"]);
    return hasDateType(targetProperty) && compileExpression(targetRestrictions);
  };
  _exports.isSemanticDateRange = isSemanticDateRange;
  const shouldShowConditionPanel = function (oDataModelPath, oContextPath) {
    // Force push the context path inside
    oDataModelPath.contextLocation = oContextPath;
    return compileExpression(checkFilterExpressionRestrictions(oDataModelPath, ["SingleValue", "MultiValue"])) === "false";
  };
  _exports.shouldShowConditionPanel = shouldShowConditionPanel;
  const getColumnDataProperty = function (sValueListProperty, propertyPath) {
    var _propertyPath$targetO3, _propertyPath$targetO4, _propertyPath$targetO5, _propertyPath$targetO6, _propertyPath$targetO7, _propertyPath$targetO8;
    if (propertyPath !== null && propertyPath !== void 0 && (_propertyPath$targetO3 = propertyPath.targetObject) !== null && _propertyPath$targetO3 !== void 0 && (_propertyPath$targetO4 = _propertyPath$targetO3.annotations) !== null && _propertyPath$targetO4 !== void 0 && (_propertyPath$targetO5 = _propertyPath$targetO4.Common) !== null && _propertyPath$targetO5 !== void 0 && _propertyPath$targetO5.Text && (_propertyPath$targetO6 = propertyPath.targetObject.annotations.Common.Text) !== null && _propertyPath$targetO6 !== void 0 && (_propertyPath$targetO7 = _propertyPath$targetO6.annotations) !== null && _propertyPath$targetO7 !== void 0 && (_propertyPath$targetO8 = _propertyPath$targetO7.UI) !== null && _propertyPath$targetO8 !== void 0 && _propertyPath$targetO8.TextArrangement && propertyPath.targetObject.annotations.Common.Text.annotations.UI.TextArrangement.valueOf() === "UI.TextArrangementType/TextOnly") {
      return propertyPath.targetObject.annotations.Common.Text.path;
    }
    return sValueListProperty;
  };
  _exports.getColumnDataProperty = getColumnDataProperty;
  const getColumnHAlign = function (propertyPath) {
    const property = propertyPath.targetObject;
    const propertyType = isProperty(property) ? property.type : "";
    return !propertyType || isSemanticKey(property, propertyPath) ? "Begin" : FieldHelper.getPropertyAlignment(propertyType, {
      textAlignMode: "Table"
    });
  };
  _exports.getColumnHAlign = getColumnHAlign;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/valuehelp/ValueHelpTemplating", ["sap/fe/core/helpers/BindingToolkit","sap/fe/core/helpers/StableIdHelper","sap/fe/core/templating/DataModelPathHelper","sap/fe/core/templating/PropertyHelper","sap/fe/core/templating/UIFormatters","sap/fe/macros/field/FieldHelper"],function(e,t,n,o,i,a){"use strict";var l={};var r=i.getDisplayMode;var s=o.isUnit;var u=o.isSemanticKey;var c=o.isProperty;var d=o.isGuid;var v=o.isCurrency;var p=o.hasValueListForValidation;var g=o.hasValueHelpWithFixedValues;var f=o.hasValueHelp;var m=o.hasDateType;var y=n.checkFilterExpressionRestrictions;var h=t.generate;var x=e.compileExpression;const T=function(e,t){var n,o,i,a,l;const s=r(e);const u=(n=e.targetObject.annotations)===null||n===void 0?void 0:(o=n.Common)===null||o===void 0?void 0:o.Text;const c=typeof u!=="string"&&(u===null||u===void 0?void 0:(i=u.annotations)===null||i===void 0?void 0:(a=i.UI)===null||a===void 0?void 0:(l=a.TextArrangement)===null||l===void 0?void 0:l.toString());if(t){return u&&typeof u!=="string"&&u.path?s:"Value"}else{return c?s:"Value"}};l.getValueHelpTableDisplayMode=T;const V=function(e,t,n,o){let i=arguments.length>4&&arguments[4]!==undefined?arguments[4]:false;const a=e!==n;const l={name:"sap/fe/macros/valuehelp/ValueHelpDelegate",payload:{propertyPath:e,isUnitValueHelp:a,conditionModel:t,requestGroupId:o,useMultiValueField:i,qualifiers:{},valueHelpQualifier:""}};return x(l)};l.getDelegateConfiguration=V;const C=function(e,t,n,o){if(e){return e}let i=o;if(n!==o){i=`${n}::${o}`}return h([t,i])};l.generateID=C;const b=function(e){return g(e)||p(e)||f(e)&&(s(e)||v(e)||d(e))};l.requiresValidation=b;const H=function(e,t){var n,o,i;const a=(e===null||e===void 0?void 0:(n=e.targetEntitySet)===null||n===void 0?void 0:(o=n.annotations)===null||o===void 0?void 0:(i=o.Capabilities)===null||i===void 0?void 0:i.FilterFunctions)||t;return a?!(a.indexOf("tolower")>-1):true};l.useCaseSensitiveFilterRequests=H;const O=function(e){const t=e.targetObject;const n=y(e,["SingleRange"]);return m(t)&&x(n)};l.isSemanticDateRange=O;const D=function(e,t){e.contextLocation=t;return x(y(e,["SingleValue","MultiValue"]))==="false"};l.shouldShowConditionPanel=D;const F=function(e,t){var n,o,i,a,l,r;if(t!==null&&t!==void 0&&(n=t.targetObject)!==null&&n!==void 0&&(o=n.annotations)!==null&&o!==void 0&&(i=o.Common)!==null&&i!==void 0&&i.Text&&(a=t.targetObject.annotations.Common.Text)!==null&&a!==void 0&&(l=a.annotations)!==null&&l!==void 0&&(r=l.UI)!==null&&r!==void 0&&r.TextArrangement&&t.targetObject.annotations.Common.Text.annotations.UI.TextArrangement.valueOf()==="UI.TextArrangementType/TextOnly"){return t.targetObject.annotations.Common.Text.path}return e};l.getColumnDataProperty=F;const S=function(e){const t=e.targetObject;const n=c(t)?t.type:"";return!n||u(t,e)?"Begin":a.getPropertyAlignment(n,{textAlignMode:"Table"})};l.getColumnHAlign=S;return l},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/valuehelp/ValueListHelper-dbg", ["sap/base/Log", "sap/base/util/ObjectPath", "sap/fe/core/CommonUtils", "sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/UIFormatters", "sap/fe/macros/ODataMetaModelUtil", "sap/m/table/Util", "sap/ui/core/Fragment", "sap/ui/core/util/XMLPreprocessor", "sap/ui/core/XMLTemplateProcessor", "sap/ui/dom/units/Rem", "sap/ui/mdc/valuehelp/content/Conditions", "sap/ui/mdc/valuehelp/content/MDCTable", "sap/ui/mdc/valuehelp/content/MTable", "sap/ui/model/json/JSONModel"], function (Log, ObjectPath, CommonUtils, PropertyHelper, UIFormatters, ODataMetaModelUtil, Util, Fragment, XMLPreprocessor, XMLTemplateProcessor, Rem, Conditions, MDCTable, MTable, JSONModel) {
  "use strict";

  var _exports = {};
  var getTypeConfig = UIFormatters.getTypeConfig;
  var getDisplayMode = UIFormatters.getDisplayMode;
  var getAssociatedUnitProperty = PropertyHelper.getAssociatedUnitProperty;
  var getAssociatedTimezoneProperty = PropertyHelper.getAssociatedTimezoneProperty;
  var getAssociatedTextProperty = PropertyHelper.getAssociatedTextProperty;
  var getAssociatedCurrencyProperty = PropertyHelper.getAssociatedCurrencyProperty;
  var Level = Log.Level;
  const columnNotAlreadyDefined = (columnDefs, vhKey) => !columnDefs.some(column => column.path === vhKey);
  const AnnotationLabel = "@com.sap.vocabularies.Common.v1.Label",
    AnnotationText = "@com.sap.vocabularies.Common.v1.Text",
    AnnotationTextUITextArrangement = "@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement",
    AnnotationValueListParameterIn = "com.sap.vocabularies.Common.v1.ValueListParameterIn",
    AnnotationValueListParameterConstant = "com.sap.vocabularies.Common.v1.ValueListParameterConstant",
    AnnotationValueListParameterOut = "com.sap.vocabularies.Common.v1.ValueListParameterOut",
    AnnotationValueListParameterInOut = "com.sap.vocabularies.Common.v1.ValueListParameterInOut",
    AnnotationValueListWithFixedValues = "@com.sap.vocabularies.Common.v1.ValueListWithFixedValues";
  _exports.AnnotationLabel = AnnotationLabel;
  _exports.AnnotationValueListWithFixedValues = AnnotationValueListWithFixedValues;
  _exports.AnnotationValueListParameterInOut = AnnotationValueListParameterInOut;
  _exports.AnnotationValueListParameterOut = AnnotationValueListParameterOut;
  _exports.AnnotationValueListParameterConstant = AnnotationValueListParameterConstant;
  _exports.AnnotationValueListParameterIn = AnnotationValueListParameterIn;
  _exports.AnnotationTextUITextArrangement = AnnotationTextUITextArrangement;
  _exports.AnnotationText = AnnotationText;
  function _getDefaultSortPropertyName(valueListInfo) {
    let sortFieldName;
    const metaModel = valueListInfo.$model.getMetaModel();
    const entitySetAnnotations = metaModel.getObject(`/${valueListInfo.CollectionPath}@`) || {};
    const sortRestrictionsInfo = ODataMetaModelUtil.getSortRestrictionsInfo(entitySetAnnotations);
    const foundElement = valueListInfo.Parameters.find(function (element) {
      return (element.$Type === "com.sap.vocabularies.Common.v1.ValueListParameterInOut" || element.$Type === "com.sap.vocabularies.Common.v1.ValueListParameterOut" || element.$Type === "com.sap.vocabularies.Common.v1.ValueListParameterDisplayOnly") && !(metaModel.getObject(`/${valueListInfo.CollectionPath}/${element.ValueListProperty}@com.sap.vocabularies.UI.v1.Hidden`) === true);
    });
    if (foundElement) {
      if (metaModel.getObject(`/${valueListInfo.CollectionPath}/${foundElement.ValueListProperty}@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement/$EnumMember`) === "com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly") {
        sortFieldName = metaModel.getObject(`/${valueListInfo.CollectionPath}/${foundElement.ValueListProperty}@com.sap.vocabularies.Common.v1.Text/$Path`);
      } else {
        sortFieldName = foundElement.ValueListProperty;
      }
    }
    if (sortFieldName && (!sortRestrictionsInfo.propertyInfo[sortFieldName] || sortRestrictionsInfo.propertyInfo[sortFieldName].sortable)) {
      return sortFieldName;
    } else {
      return undefined;
    }
  }
  function _redundantDescription(oVLParameter, aColumnInfo) {
    const oColumnInfo = aColumnInfo.find(function (columnInfo) {
      return oVLParameter.ValueListProperty === columnInfo.textColumnName;
    });
    if (oVLParameter.ValueListProperty === (oColumnInfo === null || oColumnInfo === void 0 ? void 0 : oColumnInfo.textColumnName) && !oColumnInfo.keyColumnHidden && oColumnInfo.keyColumnDisplayFormat !== "Value") {
      return true;
    }
    return undefined;
  }
  function _hasImportanceHigh(oValueListContext) {
    return oValueListContext.Parameters.some(function (oParameter) {
      return oParameter["@com.sap.vocabularies.UI.v1.Importance"] && oParameter["@com.sap.vocabularies.UI.v1.Importance"].$EnumMember === "com.sap.vocabularies.UI.v1.ImportanceType/High";
    });
  }
  function _build$SelectString(control) {
    const oViewData = control.getModel("viewData");
    if (oViewData) {
      const oData = oViewData.getData();
      if (oData) {
        const aColumns = oData.columns;
        if (aColumns) {
          return aColumns.reduce(function (sQuery, oProperty) {
            // Navigation properties (represented by X/Y) should not be added to $select.
            // TODO : They should be added as $expand=X($select=Y) instead
            if (oProperty.path && oProperty.path.indexOf("/") === -1) {
              sQuery = sQuery ? `${sQuery},${oProperty.path}` : oProperty.path;
            }
            return sQuery;
          }, undefined);
        }
      }
    }
    return undefined;
  }
  function _getValueHelpColumnDisplayFormat(oPropertyAnnotations, isValueHelpWithFixedValues) {
    const sDisplayMode = CommonUtils.computeDisplayMode(oPropertyAnnotations, undefined);
    const oTextAnnotation = oPropertyAnnotations && oPropertyAnnotations["@com.sap.vocabularies.Common.v1.Text"];
    const oTextArrangementAnnotation = oTextAnnotation && oPropertyAnnotations["@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement"];
    if (isValueHelpWithFixedValues) {
      return oTextAnnotation && typeof oTextAnnotation !== "string" && oTextAnnotation.$Path ? sDisplayMode : "Value";
    } else {
      // Only explicit defined TextArrangements in a Value Help with Dialog are considered
      return oTextArrangementAnnotation ? sDisplayMode : "Value";
    }
  }
  const ValueListHelper = {
    getValueListCollectionEntitySet: function (oValueListContext) {
      const mValueList = oValueListContext.getObject();
      return mValueList.$model.getMetaModel().createBindingContext(`/${mValueList.CollectionPath}`);
    },
    getTableDelegate: function (oValueList) {
      let sDefaultSortPropertyName = _getDefaultSortPropertyName(oValueList);
      if (sDefaultSortPropertyName) {
        sDefaultSortPropertyName = `'${sDefaultSortPropertyName}'`;
      }
      return "{name: 'sap/fe/macros/internal/valuehelp/TableDelegate', payload: {collectionName: '" + oValueList.CollectionPath + "'" + (sDefaultSortPropertyName ? ", defaultSortPropertyName: " + sDefaultSortPropertyName : "") + "}}";
    },
    getSortConditionsFromPresentationVariant: function (valueListInfo, isSuggestion) {
      const presentationVariantQualifier = valueListInfo.PresentationVariantQualifier === "" ? "" : `#${valueListInfo.PresentationVariantQualifier}`,
        presentationVariantPath = `/${valueListInfo.CollectionPath}/@com.sap.vocabularies.UI.v1.PresentationVariant${presentationVariantQualifier}`;
      const presentationVariant = valueListInfo.$model.getMetaModel().getObject(presentationVariantPath);
      if (presentationVariant && presentationVariant.SortOrder) {
        const sortConditions = {
          sorters: []
        };
        if (isSuggestion) {
          presentationVariant.SortOrder.forEach(function (condition) {
            const sorter = {};
            sorter.path = condition.Property.$PropertyPath;
            if (condition.Descending) {
              sorter.descending = true;
            } else {
              sorter.ascending = true;
            }
            sortConditions.sorters.push(sorter);
          });
          return `sorter: ${JSON.stringify(sortConditions.sorters)}`;
        } else {
          presentationVariant.SortOrder.forEach(function (condition) {
            const sorter = {};
            sorter.name = condition.Property.$PropertyPath;
            if (condition.Descending) {
              sorter.descending = true;
            } else {
              sorter.ascending = true;
            }
            sortConditions.sorters.push(sorter);
          });
          return JSON.stringify(sortConditions);
        }
      }
      return undefined;
    },
    getPropertyPath: function (oParameters) {
      return !oParameters.UnboundAction ? `${oParameters.EntityTypePath}/${oParameters.Action}/${oParameters.Property}` : `/${oParameters.Action.substring(oParameters.Action.lastIndexOf(".") + 1)}/${oParameters.Property}`;
    },
    getValueListProperty: function (oPropertyContext) {
      const oValueListModel = oPropertyContext.getModel();
      const mValueList = oValueListModel.getObject("/");
      return mValueList.$model.getMetaModel().createBindingContext(`/${mValueList.CollectionPath}/${oPropertyContext.getObject()}`);
    },
    // This function is used for value help m-table and mdc-table
    getColumnVisibility: function (oValueList, oVLParameter, oSource) {
      const isDropDownList = oSource && !!oSource.valueHelpWithFixedValues,
        oColumnInfo = oSource.columnInfo,
        isVisible = !_redundantDescription(oVLParameter, oColumnInfo.columnInfos),
        isDialogTable = oColumnInfo.isDialogTable;
      if (isDropDownList || !isDropDownList && isDialogTable || !isDropDownList && !_hasImportanceHigh(oValueList)) {
        const columnWithHiddenAnnotation = oColumnInfo.columnInfos.find(function (columnInfo) {
          return oVLParameter.ValueListProperty === columnInfo.columnName && columnInfo.hasHiddenAnnotation === true;
        });
        return !columnWithHiddenAnnotation ? isVisible : false;
      } else if (!isDropDownList && _hasImportanceHigh(oValueList)) {
        return oVLParameter && oVLParameter["@com.sap.vocabularies.UI.v1.Importance"] && oVLParameter["@com.sap.vocabularies.UI.v1.Importance"].$EnumMember === "com.sap.vocabularies.UI.v1.ImportanceType/High" ? true : false;
      }
      return true;
    },
    getColumnVisibilityInfo: function (oValueList, sPropertyFullPath, bIsDropDownListe, isDialogTable) {
      const oMetaModel = oValueList.$model.getMetaModel();
      const aColumnInfos = [];
      const oColumnInfos = {
        isDialogTable: isDialogTable,
        columnInfos: aColumnInfos
      };
      oValueList.Parameters.forEach(function (oParameter) {
        const oPropertyAnnotations = oMetaModel.getObject(`/${oValueList.CollectionPath}/${oParameter.ValueListProperty}@`);
        const oTextAnnotation = oPropertyAnnotations && oPropertyAnnotations["@com.sap.vocabularies.Common.v1.Text"];
        let columnInfo = {};
        if (oTextAnnotation) {
          columnInfo = {
            keyColumnHidden: oPropertyAnnotations["@com.sap.vocabularies.UI.v1.Hidden"] ? true : false,
            keyColumnDisplayFormat: oTextAnnotation && _getValueHelpColumnDisplayFormat(oPropertyAnnotations, bIsDropDownListe),
            textColumnName: oTextAnnotation && oTextAnnotation.$Path,
            columnName: oParameter.ValueListProperty,
            hasHiddenAnnotation: oPropertyAnnotations && oPropertyAnnotations["@com.sap.vocabularies.UI.v1.Hidden"] ? true : false
          };
        } else if (oPropertyAnnotations && oPropertyAnnotations["@com.sap.vocabularies.UI.v1.Hidden"]) {
          columnInfo = {
            columnName: oParameter.ValueListProperty,
            hasHiddenAnnotation: oPropertyAnnotations && oPropertyAnnotations["@com.sap.vocabularies.UI.v1.Hidden"] ? true : false
          };
        }
        oColumnInfos.columnInfos.push(columnInfo);
      });
      return oColumnInfos;
    },
    getTableItemsParameters: function (valueListInfo, requestGroupId, isSuggestion, isValueHelpWithFixedValues) {
      const itemParameters = [`path: '/${valueListInfo.CollectionPath}'`];

      // add select to oBindingInfo (BCP 2180255956 / 2170163012)
      const selectString = _build$SelectString(this);
      if (requestGroupId) {
        const selectStringPart = selectString ? `, '${selectString}'` : "";
        itemParameters.push(`parameters: {$$groupId: '${requestGroupId}'${selectStringPart}}`);
      } else if (selectString) {
        itemParameters.push(`parameters: {$select: '${selectString}'}`);
      }
      const isSuspended = valueListInfo.Parameters.some(function (oParameter) {
        return isSuggestion || oParameter.$Type === "com.sap.vocabularies.Common.v1.ValueListParameterIn";
      });
      itemParameters.push(`suspended: ${isSuspended}`);
      if (!isValueHelpWithFixedValues) {
        itemParameters.push("length: 10");
      }
      const sortConditionsFromPresentationVariant = ValueListHelper.getSortConditionsFromPresentationVariant(valueListInfo, isSuggestion);
      if (sortConditionsFromPresentationVariant) {
        itemParameters.push(sortConditionsFromPresentationVariant);
      } else if (isValueHelpWithFixedValues) {
        const defaultSortPropertyName = _getDefaultSortPropertyName(valueListInfo);
        if (defaultSortPropertyName) {
          itemParameters.push(`sorter: [{path: '${defaultSortPropertyName}', ascending: true}]`);
        }
      }
      return "{" + itemParameters.join(", ") + "}";
    },
    // Is needed for "external" representation in qunit
    hasImportance: function (oValueListContext) {
      return _hasImportanceHigh(oValueListContext.getObject()) ? "Importance/High" : "None";
    },
    // Is needed for "external" representation in qunit
    getMinScreenWidth: function (oValueList) {
      return _hasImportanceHigh(oValueList) ? "{= ${_VHUI>/minScreenWidth}}" : "416px";
    },
    /**
     * Retrieves the column width for a given property.
     *
     * @param propertyPath The propertyPath
     * @returns The width as a string.
     */
    getColumnWidth: function (propertyPath) {
      var _property$annotations, _property$annotations2, _textAnnotation$annot, _textAnnotation$annot2, _textAnnotation$annot3, _property$annotations3, _property$annotations4, _property$annotations5;
      const property = propertyPath.targetObject;
      let relatedProperty = [property];
      // The additional property could refer to the text, currency, unit or timezone
      const additionalProperty = getAssociatedTextProperty(property) || getAssociatedCurrencyProperty(property) || getAssociatedUnitProperty(property) || getAssociatedTimezoneProperty(property),
        textAnnotation = (_property$annotations = property.annotations) === null || _property$annotations === void 0 ? void 0 : (_property$annotations2 = _property$annotations.Common) === null || _property$annotations2 === void 0 ? void 0 : _property$annotations2.Text,
        textArrangement = textAnnotation === null || textAnnotation === void 0 ? void 0 : (_textAnnotation$annot = textAnnotation.annotations) === null || _textAnnotation$annot === void 0 ? void 0 : (_textAnnotation$annot2 = _textAnnotation$annot.UI) === null || _textAnnotation$annot2 === void 0 ? void 0 : (_textAnnotation$annot3 = _textAnnotation$annot2.TextArrangement) === null || _textAnnotation$annot3 === void 0 ? void 0 : _textAnnotation$annot3.toString(),
        label = (_property$annotations3 = property.annotations) === null || _property$annotations3 === void 0 ? void 0 : (_property$annotations4 = _property$annotations3.Common) === null || _property$annotations4 === void 0 ? void 0 : (_property$annotations5 = _property$annotations4.Label) === null || _property$annotations5 === void 0 ? void 0 : _property$annotations5.toString(),
        displayMode = textArrangement && getDisplayMode(propertyPath);
      if (additionalProperty) {
        if (displayMode === "Description") {
          relatedProperty = [additionalProperty];
        } else if (!textAnnotation || displayMode && displayMode !== "Value") {
          relatedProperty.push(additionalProperty);
        }
      }
      let size = 0;
      const instances = [];
      relatedProperty.forEach(prop => {
        const propertyTypeConfig = getTypeConfig(prop, undefined);
        const PropertyODataConstructor = ObjectPath.get(propertyTypeConfig.type);
        if (PropertyODataConstructor) {
          instances.push(new PropertyODataConstructor(propertyTypeConfig.formatOptions, propertyTypeConfig.constraints));
        }
      });
      const sWidth = Util.calcColumnWidth(instances, label);
      size = sWidth ? parseFloat(sWidth.replace("rem", "")) : 0;
      if (size === 0) {
        Log.error(`Cannot compute the column width for property: ${property.name}`);
      }
      return size <= 20 ? size.toString() + "rem" : "20rem";
    },
    getOutParameterPaths: function (aParameters) {
      let sPath = "";
      aParameters.forEach(function (oParameter) {
        if (oParameter.$Type.endsWith("Out")) {
          sPath += `{${oParameter.ValueListProperty}}`;
        }
      });
      return sPath;
    },
    entityIsSearchable: function (propertyAnnotations, collectionAnnotations) {
      var _propertyAnnotations$, _collectionAnnotation;
      const searchSupported = (_propertyAnnotations$ = propertyAnnotations["@com.sap.vocabularies.Common.v1.ValueList"]) === null || _propertyAnnotations$ === void 0 ? void 0 : _propertyAnnotations$.SearchSupported,
        searchable = (_collectionAnnotation = collectionAnnotations["@Org.OData.Capabilities.V1.SearchRestrictions"]) === null || _collectionAnnotation === void 0 ? void 0 : _collectionAnnotation.Searchable;
      if (searchable === undefined && searchSupported === false || searchable === true && searchSupported === false || searchable === false) {
        return false;
      }
      return true;
    },
    /**
     * Returns the condition path required for the condition model.
     * For e.g. <1:N-PropertyName>*\/<1:1-PropertyName>/<PropertyName>.
     *
     * @param metaModel The metamodel instance
     * @param entitySet The entity set path
     * @param propertyPath The property path
     * @returns The formatted condition path
     * @private
     */
    _getConditionPath: function (metaModel, entitySet, propertyPath) {
      // (see also: sap/fe/core/converters/controls/ListReport/FilterBar.ts)
      const parts = propertyPath.split("/");
      let conditionPath = "",
        partialPath;
      while (parts.length) {
        let part = parts.shift();
        partialPath = partialPath ? `${partialPath}/${part}` : part;
        const property = metaModel.getObject(`${entitySet}/${partialPath}`);
        if (property && property.$kind === "NavigationProperty" && property.$isCollection) {
          part += "*";
        }
        conditionPath = conditionPath ? `${conditionPath}/${part}` : part;
      }
      return conditionPath;
    },
    /**
     * Returns array of column definitions corresponding to properties defined as Selection Fields on the CollectionPath entity set in a ValueHelp.
     *
     * @param metaModel The metamodel instance
     * @param entitySet The entity set path
     * @returns Array of column definitions
     * @private
     */
    _getColumnDefinitionFromSelectionFields: function (metaModel, entitySet) {
      const columnDefs = [],
        //selectionFields = metaModel.getObject(entitySet + "/@com.sap.vocabularies.UI.v1.SelectionFields") as SelectionField[] | undefined;
        entityTypeAnnotations = metaModel.getObject(`${entitySet}/@`),
        selectionFields = entityTypeAnnotations["@com.sap.vocabularies.UI.v1.SelectionFields"];
      if (selectionFields) {
        selectionFields.forEach(function (selectionField) {
          const selectionFieldPath = `${entitySet}/${selectionField.$PropertyPath}`,
            conditionPath = ValueListHelper._getConditionPath(metaModel, entitySet, selectionField.$PropertyPath),
            propertyAnnotations = metaModel.getObject(`${selectionFieldPath}@`),
            columnDef = {
              path: conditionPath,
              label: propertyAnnotations[AnnotationLabel] || selectionFieldPath,
              sortable: true,
              filterable: CommonUtils.isPropertyFilterable(metaModel, entitySet, selectionField.$PropertyPath, false),
              $Type: metaModel.getObject(selectionFieldPath).$Type
            };
          columnDefs.push(columnDef);
        });
      }
      return columnDefs;
    },
    _mergeColumnDefinitionsFromProperties: function (columnDefs, valueListInfo, valueListProperty, property, propertyAnnotations) {
      var _propertyAnnotations$2;
      let columnPath = valueListProperty,
        columnPropertyType = property.$Type;
      const label = propertyAnnotations[AnnotationLabel] || columnPath,
        textAnnotation = propertyAnnotations[AnnotationText];
      if (textAnnotation && ((_propertyAnnotations$2 = propertyAnnotations[AnnotationTextUITextArrangement]) === null || _propertyAnnotations$2 === void 0 ? void 0 : _propertyAnnotations$2.$EnumMember) === "com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly") {
        // the column property is the one coming from the text annotation
        columnPath = textAnnotation.$Path;
        const textPropertyPath = `/${valueListInfo.CollectionPath}/${columnPath}`;
        columnPropertyType = valueListInfo.$model.getMetaModel().getObject(textPropertyPath).$Type;
      }
      if (columnNotAlreadyDefined(columnDefs, columnPath)) {
        const columnDef = {
          path: columnPath,
          label: label,
          sortable: true,
          filterable: !propertyAnnotations["@com.sap.vocabularies.UI.v1.HiddenFilter"],
          $Type: columnPropertyType
        };
        columnDefs.push(columnDef);
      }
    },
    filterInOutParameters: function (vhParameters, typeFilter) {
      return vhParameters.filter(function (parameter) {
        return typeFilter.indexOf(parameter.parmeterType) > -1;
      });
    },
    getInParameters: function (vhParameters) {
      return ValueListHelper.filterInOutParameters(vhParameters, [AnnotationValueListParameterIn, AnnotationValueListParameterConstant, AnnotationValueListParameterInOut]);
    },
    getOutParameters: function (vhParameters) {
      return ValueListHelper.filterInOutParameters(vhParameters, [AnnotationValueListParameterOut, AnnotationValueListParameterInOut]);
    },
    createVHUIModel: function (valueHelp, propertyPath, metaModel) {
      // setting the _VHUI model evaluated in the ValueListTable fragment
      const vhUIModel = new JSONModel({}),
        propertyAnnotations = metaModel.getObject(`${propertyPath}@`);
      valueHelp.setModel(vhUIModel, "_VHUI");
      // Identifies the "ContextDependent-Scenario"
      vhUIModel.setProperty("/hasValueListRelevantQualifiers", !!propertyAnnotations["@com.sap.vocabularies.Common.v1.ValueListRelevantQualifiers"]);
      /* Property label for dialog title */
      vhUIModel.setProperty("/propertyLabel", propertyAnnotations[AnnotationLabel]);
      return vhUIModel;
    },
    /**
     * Returns the title of the value help dialog.
     * By default, the data field label is used, otherwise either the property label or the value list label is used as a fallback.
     * For context-dependent value helps, by default the value list label is used, otherwise either the property label or the data field label is used as a fallback.
     *
     * @param valueHelp The valueHelp instance
     * @param valuehelpLabel The label in the value help metadata
     * @returns The title for the valueHelp dialog
     * @private
     */
    _getDialogTitle: function (valueHelp, valuehelpLabel) {
      var _valueHelp$getControl;
      const propertyLabel = valueHelp.getModel("_VHUI").getProperty("/propertyLabel");
      const dataFieldLabel = (_valueHelp$getControl = valueHelp.getControl()) === null || _valueHelp$getControl === void 0 ? void 0 : _valueHelp$getControl.getProperty("label");
      return valueHelp.getModel("_VHUI").getProperty("/hasValueListRelevantQualifiers") ? valuehelpLabel || propertyLabel || dataFieldLabel : dataFieldLabel || propertyLabel || valuehelpLabel;
    },
    destroyVHContent: function (valueHelp) {
      if (valueHelp.getDialog()) {
        valueHelp.getDialog().destroyContent();
      }
      if (valueHelp.getTypeahead()) {
        valueHelp.getTypeahead().destroyContent();
      }
    },
    putDefaultQualifierFirst: function (qualifiers) {
      const indexDefaultVH = qualifiers.indexOf("");

      // default ValueHelp without qualifier should be the first
      if (indexDefaultVH > 0) {
        qualifiers.unshift(qualifiers[indexDefaultVH]);
        qualifiers.splice(indexDefaultVH + 1, 1);
      }
      return qualifiers;
    },
    _getContextPrefix: function (bindingContext, propertyBindingParts) {
      if (bindingContext && bindingContext.getPath()) {
        const bindigContextParts = bindingContext.getPath().split("/");
        if (propertyBindingParts.length - bindigContextParts.length > 1) {
          const contextPrefixParts = [];
          for (let i = bindigContextParts.length; i < propertyBindingParts.length - 1; i++) {
            contextPrefixParts.push(propertyBindingParts[i]);
          }
          return `${contextPrefixParts.join("/")}/`;
        }
      }
      return "";
    },
    _getVhParameter: function (conditionModel, valueHelp, contextPrefix, parameter, vhMetaModel, localDataPropertyPath) {
      let valuePath = "";
      const bindingContext = valueHelp.getBindingContext();
      if (conditionModel && conditionModel.length > 0) {
        var _valueHelp$getParent;
        if ((_valueHelp$getParent = valueHelp.getParent()) !== null && _valueHelp$getParent !== void 0 && _valueHelp$getParent.isA("sap.ui.mdc.Table") && bindingContext && ValueListHelper._parameterIsA(parameter, ["com.sap.vocabularies.Common.v1.ValueListParameterIn", "com.sap.vocabularies.Common.v1.ValueListParameterInOut"])) {
          // Special handling for value help used in filter dialog
          const parts = localDataPropertyPath.split("/");
          if (parts.length > 1) {
            const firstNavigationProperty = parts[0];
            const oBoundEntity = vhMetaModel.getMetaContext(bindingContext.getPath());
            const sPathOfTable = valueHelp.getParent().getRowBinding().getPath(); //TODO
            if (oBoundEntity.getObject(`${sPathOfTable}/$Partner`) === firstNavigationProperty) {
              // Using the condition model doesn't make any sense in case an in-parameter uses a navigation property
              // referring to the partner. Therefore reducing the path and using the FVH context instead of the condition model
              valuePath = localDataPropertyPath.replace(firstNavigationProperty + "/", "");
            }
          }
        }
        if (!valuePath) {
          valuePath = conditionModel + ">/conditions/" + localDataPropertyPath;
        }
      } else {
        valuePath = contextPrefix + localDataPropertyPath;
      }
      return {
        parmeterType: parameter.$Type,
        source: valuePath,
        helpPath: parameter.ValueListProperty,
        constantValue: parameter.Constant,
        initialValueFilterEmpty: Boolean(parameter.InitialValueIsSignificant)
      };
    },
    _parameterIsA(parameter, parameterTypes) {
      return parameterTypes.includes(parameter.$Type);
    },
    _enrichPath: function (path, propertyPath, localDataPropertyPath, parameter, propertyName, propertyAnnotations) {
      if (!path.key && ValueListHelper._parameterIsA(parameter, ["com.sap.vocabularies.Common.v1.ValueListParameterOut", "com.sap.vocabularies.Common.v1.ValueListParameterInOut"]) && localDataPropertyPath === propertyName) {
        var _propertyAnnotations$3;
        path.fieldPropertyPath = propertyPath;
        path.key = parameter.ValueListProperty;

        //Only the text annotation of the key can specify the description
        path.descriptionPath = ((_propertyAnnotations$3 = propertyAnnotations[AnnotationText]) === null || _propertyAnnotations$3 === void 0 ? void 0 : _propertyAnnotations$3.$Path) || "";
      }
    },
    _enrichKeys: function (vhKeys, parameter) {
      if (ValueListHelper._parameterIsA(parameter, ["com.sap.vocabularies.Common.v1.ValueListParameterOut", "com.sap.vocabularies.Common.v1.ValueListParameterInOut"]) && !vhKeys.includes(parameter.ValueListProperty)) {
        vhKeys.push(parameter.ValueListProperty);
      }
    },
    _processParameters: function (annotationValueListType, propertyName, conditionModel, valueHelp, contextPrefix, vhMetaModel, valueHelpQualifier) {
      var _metaModel$getObject;
      const metaModel = annotationValueListType.$model.getMetaModel(),
        entitySetPath = `/${annotationValueListType.CollectionPath}`,
        columnDefs = ValueListHelper._getColumnDefinitionFromSelectionFields(metaModel, entitySetPath),
        vhParameters = [],
        vhKeys = (_metaModel$getObject = metaModel.getObject(entitySetPath + `/`)) !== null && _metaModel$getObject !== void 0 && _metaModel$getObject.$Key ? [...metaModel.getObject(entitySetPath + `/`).$Key] : [];
      const path = {
        fieldPropertyPath: "",
        descriptionPath: "",
        key: ""
      };
      for (const parameter of annotationValueListType.Parameters) {
        var _parameter$LocalDataP;
        //All String fields are allowed for filter
        const propertyPath = `/${annotationValueListType.CollectionPath}/${parameter.ValueListProperty}`,
          property = metaModel.getObject(propertyPath),
          propertyAnnotations = metaModel.getObject(`${propertyPath}@`) || {},
          localDataPropertyPath = ((_parameter$LocalDataP = parameter.LocalDataProperty) === null || _parameter$LocalDataP === void 0 ? void 0 : _parameter$LocalDataP.$PropertyPath) || "";

        // If property is undefined, then the property coming for the entry isn't defined in
        // the metamodel, therefore we don't need to add it in the in/out parameters
        if (property) {
          // Search for the *out Parameter mapped to the local property
          ValueListHelper._enrichPath(path, propertyPath, localDataPropertyPath, parameter, propertyName, propertyAnnotations);
          const valueListProperty = parameter.ValueListProperty;
          ValueListHelper._mergeColumnDefinitionsFromProperties(columnDefs, annotationValueListType, valueListProperty, property, propertyAnnotations);
        }

        //In and InOut and Out
        if (ValueListHelper._parameterIsA(parameter, ["com.sap.vocabularies.Common.v1.ValueListParameterIn", "com.sap.vocabularies.Common.v1.ValueListParameterOut", "com.sap.vocabularies.Common.v1.ValueListParameterInOut"]) && localDataPropertyPath !== propertyName) {
          const vhParameter = ValueListHelper._getVhParameter(conditionModel, valueHelp, contextPrefix, parameter, vhMetaModel, localDataPropertyPath);
          vhParameters.push(vhParameter);
        }

        //Constant as InParamter for filtering
        if (parameter.$Type === AnnotationValueListParameterConstant) {
          vhParameters.push({
            parmeterType: parameter.$Type,
            source: parameter.ValueListProperty,
            helpPath: parameter.ValueListProperty,
            constantValue: parameter.Constant,
            initialValueFilterEmpty: Boolean(parameter.InitialValueIsSignificant)
          });
        }

        // Enrich keys with out-parameters
        ValueListHelper._enrichKeys(vhKeys, parameter);
      }

      /* Ensure that vhKeys are part of the columnDefs, otherwise it is not considered in $select (BCP 2270141154) */
      for (const vhKey of vhKeys) {
        if (columnNotAlreadyDefined(columnDefs, vhKey)) {
          const columnDef = {
            path: vhKey,
            $Type: metaModel.getObject(`/${annotationValueListType.CollectionPath}/${path.key}`).$Type,
            label: "",
            sortable: false,
            filterable: undefined
          };
          columnDefs.push(columnDef);
        }
      }
      return {
        keyValue: path.key,
        descriptionValue: path.descriptionPath,
        fieldPropertyPath: path.fieldPropertyPath,
        vhKeys: vhKeys,
        vhParameters: vhParameters,
        valueListInfo: annotationValueListType,
        columnDefs: columnDefs,
        valueHelpQualifier
      };
    },
    _logError: function (propertyPath, error) {
      const status = error ? error.status : undefined;
      const message = error instanceof Error ? error.message : String(error);
      const msg = status === 404 ? `Metadata not found (${status}) for value help of property ${propertyPath}` : message;
      Log.error(msg);
    },
    getValueListInfo: async function (valueHelp, propertyPath, payload) {
      const bindingContext = valueHelp.getBindingContext(),
        conditionModel = payload.conditionModel,
        vhMetaModel = valueHelp.getModel().getMetaModel(),
        valueListInfos = [],
        propertyPathParts = propertyPath.split("/");
      try {
        const valueListByQualifier = await vhMetaModel.requestValueListInfo(propertyPath, true, bindingContext);
        const valueHelpQualifiers = ValueListHelper.putDefaultQualifierFirst(Object.keys(valueListByQualifier)),
          propertyName = propertyPathParts.pop();
        const contextPrefix = payload.useMultiValueField ? ValueListHelper._getContextPrefix(bindingContext, propertyPathParts) : "";
        for (const valueHelpQualifier of valueHelpQualifiers) {
          // Add column definitions for properties defined as Selection fields on the CollectionPath entity set.
          const annotationValueListType = valueListByQualifier[valueHelpQualifier];
          const valueListInfo = ValueListHelper._processParameters(annotationValueListType, propertyName, conditionModel, valueHelp, contextPrefix, vhMetaModel, valueHelpQualifier);
          valueListInfos.push(valueListInfo);
        }
      } catch (err) {
        this._logError(propertyPath, err);
        ValueListHelper.destroyVHContent(valueHelp);
      }
      return valueListInfos;
    },
    ALLFRAGMENTS: undefined,
    logFragment: undefined,
    _logTemplatedFragments: function (propertyPath, fragmentName, fragmentDefinition) {
      const logInfo = {
        path: propertyPath,
        fragmentName: fragmentName,
        fragment: fragmentDefinition
      };
      if (Log.getLevel() === Level.DEBUG) {
        //In debug mode we log all generated fragments
        ValueListHelper.ALLFRAGMENTS = ValueListHelper.ALLFRAGMENTS || [];
        ValueListHelper.ALLFRAGMENTS.push(logInfo);
      }
      if (ValueListHelper.logFragment) {
        //One Tool Subscriber allowed
        setTimeout(function () {
          ValueListHelper.logFragment(logInfo);
        }, 0);
      }
    },
    _templateFragment: async function (fragmentName, valueListInfo, sourceModel, propertyPath) {
      const localValueListInfo = valueListInfo.valueListInfo,
        valueListModel = new JSONModel(localValueListInfo),
        valueListServiceMetaModel = localValueListInfo.$model.getMetaModel(),
        viewData = new JSONModel({
          converterType: "ListReport",
          columns: valueListInfo.columnDefs || null
        });
      const fragmentDefinition = await XMLPreprocessor.process(XMLTemplateProcessor.loadTemplate(fragmentName, "fragment"), {
        name: fragmentName
      }, {
        bindingContexts: {
          valueList: valueListModel.createBindingContext("/"),
          contextPath: valueListServiceMetaModel.createBindingContext(`/${localValueListInfo.CollectionPath}/`),
          source: sourceModel.createBindingContext("/")
        },
        models: {
          valueList: valueListModel,
          contextPath: valueListServiceMetaModel,
          source: sourceModel,
          metaModel: valueListServiceMetaModel,
          viewData: viewData
        }
      });
      ValueListHelper._logTemplatedFragments(propertyPath, fragmentName, fragmentDefinition);
      return await Fragment.load({
        definition: fragmentDefinition
      });
    },
    _getContentId: function (valueHelpId, valueHelpQualifier, isTypeahead) {
      const contentType = isTypeahead ? "Popover" : "Dialog";
      return `${valueHelpId}::${contentType}::qualifier::${valueHelpQualifier}`;
    },
    _addInOutParametersToPayload: function (payload, valueListInfo) {
      const valueHelpQualifier = valueListInfo.valueHelpQualifier;
      if (!payload.qualifiers) {
        payload.qualifiers = {};
      }
      if (!payload.qualifiers[valueHelpQualifier]) {
        payload.qualifiers[valueHelpQualifier] = {
          vhKeys: valueListInfo.vhKeys,
          vhParameters: valueListInfo.vhParameters
        };
      }
    },
    _getValueHelpColumnDisplayFormat: function (propertyAnnotations, isValueHelpWithFixedValues) {
      const displayMode = CommonUtils.computeDisplayMode(propertyAnnotations, undefined),
        textAnnotation = propertyAnnotations && propertyAnnotations[AnnotationText],
        textArrangementAnnotation = textAnnotation && propertyAnnotations[AnnotationTextUITextArrangement];
      if (isValueHelpWithFixedValues) {
        return textAnnotation && typeof textAnnotation !== "string" && textAnnotation.$Path ? displayMode : "Value";
      } else {
        // Only explicit defined TextArrangements in a Value Help with Dialog are considered
        return textArrangementAnnotation ? displayMode : "Value";
      }
    },
    _getWidthInRem: function (control, isUnitValueHelp) {
      let width = control.$().width(); // JQuery
      if (isUnitValueHelp && width) {
        width = 0.3 * width;
      }
      const floatWidth = width ? parseFloat(String(Rem.fromPx(width))) : 0;
      return isNaN(floatWidth) ? 0 : floatWidth;
    },
    _getTableWidth: function (table, minWidth) {
      let width;
      const columns = table.getColumns(),
        visibleColumns = columns && columns.filter(function (column) {
          return column && column.getVisible && column.getVisible();
        }) || [],
        sumWidth = visibleColumns.reduce(function (sum, column) {
          width = column.getWidth();
          if (width && width.endsWith("px")) {
            width = String(Rem.fromPx(width));
          }
          const floatWidth = parseFloat(width);
          return sum + (isNaN(floatWidth) ? 9 : floatWidth);
        }, visibleColumns.length);
      return `${Math.max(sumWidth, minWidth)}em`;
    },
    _createValueHelpTypeahead: async function (propertyPath, valueHelp, content, valueListInfo, payload) {
      const contentId = content.getId(),
        propertyAnnotations = valueHelp.getModel().getMetaModel().getObject(`${propertyPath}@`),
        valueHelpWithFixedValues = propertyAnnotations[AnnotationValueListWithFixedValues] ?? false,
        isDialogTable = false,
        columnInfo = ValueListHelper.getColumnVisibilityInfo(valueListInfo.valueListInfo, propertyPath, valueHelpWithFixedValues, isDialogTable),
        sourceModel = new JSONModel({
          id: contentId,
          groupId: payload.requestGroupId || undefined,
          bSuggestion: true,
          propertyPath: propertyPath,
          columnInfo: columnInfo,
          valueHelpWithFixedValues: valueHelpWithFixedValues
        });
      content.setKeyPath(valueListInfo.keyValue);
      content.setDescriptionPath(valueListInfo.descriptionValue);
      payload.isValueListWithFixedValues = valueHelpWithFixedValues;
      const collectionAnnotations = valueListInfo.valueListInfo.$model.getMetaModel().getObject(`/${valueListInfo.valueListInfo.CollectionPath}@`) || {};
      content.setFilterFields(ValueListHelper.entityIsSearchable(propertyAnnotations, collectionAnnotations) ? "$search" : "");
      const table = await ValueListHelper._templateFragment("sap.fe.macros.internal.valuehelp.ValueListTable", valueListInfo, sourceModel, propertyPath);
      table.setModel(valueListInfo.valueListInfo.$model);
      Log.info(`Value List- suggest Table XML content created [${propertyPath}]`, table.getMetadata().getName(), "MDC Templating");
      content.setTable(table);
      const field = valueHelp.getControl();
      if (field !== undefined && (field.isA("sap.ui.mdc.FilterField") || field.isA("sap.ui.mdc.Field") || field.isA("sap.ui.mdc.MultiValueField"))) {
        //Can the filterfield be something else that we need the .isA() check?
        const reduceWidthForUnitValueHelp = Boolean(payload.isUnitValueHelp);
        const tableWidth = ValueListHelper._getTableWidth(table, ValueListHelper._getWidthInRem(field, reduceWidthForUnitValueHelp));
        table.setWidth(tableWidth);
        if (valueHelpWithFixedValues) {
          table.setMode(field.getMaxConditions() === 1 ? "SingleSelectMaster" : "MultiSelect");
        } else {
          table.setMode("SingleSelectMaster");
        }
      }
    },
    _createValueHelpDialog: async function (propertyPath, valueHelp, content, valueListInfo, payload) {
      const propertyAnnotations = valueHelp.getModel().getMetaModel().getObject(`${propertyPath}@`),
        isDropDownListe = false,
        isDialogTable = true,
        columnInfo = ValueListHelper.getColumnVisibilityInfo(valueListInfo.valueListInfo, propertyPath, isDropDownListe, isDialogTable),
        sourceModel = new JSONModel({
          id: content.getId(),
          groupId: payload.requestGroupId || undefined,
          bSuggestion: false,
          columnInfo: columnInfo,
          valueHelpWithFixedValues: isDropDownListe
        });
      content.setKeyPath(valueListInfo.keyValue);
      content.setDescriptionPath(valueListInfo.descriptionValue);
      const collectionAnnotations = valueListInfo.valueListInfo.$model.getMetaModel().getObject(`/${valueListInfo.valueListInfo.CollectionPath}@`) || {};
      content.setFilterFields(ValueListHelper.entityIsSearchable(propertyAnnotations, collectionAnnotations) ? "$search" : "");
      const tablePromise = ValueListHelper._templateFragment("sap.fe.macros.internal.valuehelp.ValueListDialogTable", valueListInfo, sourceModel, propertyPath);
      const filterBarPromise = ValueListHelper._templateFragment("sap.fe.macros.internal.valuehelp.ValueListFilterBar", valueListInfo, sourceModel, propertyPath);
      const [table, filterBar] = await Promise.all([tablePromise, filterBarPromise]);
      table.setModel(valueListInfo.valueListInfo.$model);
      filterBar.setModel(valueListInfo.valueListInfo.$model);
      content.setFilterBar(filterBar);
      content.setTable(table);
      table.setFilter(filterBar.getId());
      table.initialized();
      const field = valueHelp.getControl();
      if (field !== undefined) {
        table.setSelectionMode(field.getMaxConditions() === 1 ? "SingleMaster" : "Multi");
      }
      table.setWidth("100%");

      //This is a temporary workarround - provided by MDC (see FIORITECHP1-24002)
      const mdcTable = table;
      mdcTable._setShowP13nButton(false);
    },
    _getContentById: function (contentList, contentId) {
      return contentList.find(function (item) {
        return item.getId() === contentId;
      });
    },
    _createPopoverContent: function (contentId, caseSensitive, useAsValueHelp) {
      return new MTable({
        id: contentId,
        group: "group1",
        caseSensitive: caseSensitive,
        useAsValueHelp: useAsValueHelp
      });
    },
    _createDialogContent: function (contentId, caseSensitive, forceBind) {
      return new MDCTable({
        id: contentId,
        group: "group1",
        caseSensitive: caseSensitive,
        forceBind: forceBind
      });
    },
    _showConditionsContent: function (contentList, container) {
      let conditionsContent = contentList.length && contentList[contentList.length - 1].getMetadata().getName() === "sap.ui.mdc.valuehelp.content.Conditions" ? contentList[contentList.length - 1] : undefined;
      if (conditionsContent) {
        conditionsContent.setVisible(true);
      } else {
        conditionsContent = new Conditions();
        container.addContent(conditionsContent);
      }
    },
    _alignOrCreateContent: function (valueListInfo, contentId, caseSensitive, showConditionPanel, container) {
      const contentList = container.getContent();
      let content = ValueListHelper._getContentById(contentList, contentId);
      if (!content) {
        const forceBind = valueListInfo.valueListInfo.FetchValues === 2 ? false : true;
        content = ValueListHelper._createDialogContent(contentId, caseSensitive, forceBind);
        if (!showConditionPanel) {
          container.addContent(content);
        } else {
          container.insertContent(content, contentList.length - 1); // insert content before conditions content
        }
      } else {
        content.setVisible(true);
      }
      return content;
    },
    _prepareValueHelpTypeAhead: function (valueHelp, container, valueListInfos, payload, caseSensitive, firstTypeAheadContent) {
      const contentList = container.getContent();
      let qualifierForTypeahead = valueHelp.data("valuelistForValidation") || ""; // can also be null
      if (qualifierForTypeahead === " ") {
        qualifierForTypeahead = "";
      }
      const valueListInfo = qualifierForTypeahead ? valueListInfos.filter(function (subValueListInfo) {
        return subValueListInfo.valueHelpQualifier === qualifierForTypeahead;
      })[0] : valueListInfos[0];
      ValueListHelper._addInOutParametersToPayload(payload, valueListInfo);
      const contentId = ValueListHelper._getContentId(valueHelp.getId(), valueListInfo.valueHelpQualifier, true);
      let content = ValueListHelper._getContentById(contentList, contentId);
      if (!content) {
        const useAsValueHelp = firstTypeAheadContent.getUseAsValueHelp();
        content = ValueListHelper._createPopoverContent(contentId, caseSensitive, useAsValueHelp);
        container.insertContent(content, 0); // insert content as first content
      } else if (contentId !== contentList[0].getId()) {
        // content already available but not as first content?
        container.removeContent(content);
        container.insertContent(content, 0); // move content to first position
      }

      return {
        valueListInfo,
        content
      };
    },
    _prepareValueHelpDialog: function (valueHelp, container, valueListInfos, payload, selectedContentId, caseSensitive) {
      const showConditionPanel = valueHelp.data("showConditionPanel") && valueHelp.data("showConditionPanel") !== "false";
      const contentList = container.getContent();

      // set all contents to invisible
      for (const contentListItem of contentList) {
        contentListItem.setVisible(false);
      }
      if (showConditionPanel) {
        this._showConditionsContent(contentList, container);
      }
      let selectedInfo, selectedContent;

      // Create or reuse contents for the current context
      for (const valueListInfo of valueListInfos) {
        const valueHelpQualifier = valueListInfo.valueHelpQualifier;
        ValueListHelper._addInOutParametersToPayload(payload, valueListInfo);
        const contentId = ValueListHelper._getContentId(valueHelp.getId(), valueHelpQualifier, false);
        const content = this._alignOrCreateContent(valueListInfo, contentId, caseSensitive, showConditionPanel, container);
        if (valueListInfo.valueListInfo.Label) {
          const title = CommonUtils.getTranslatedTextFromExpBindingString(valueListInfo.valueListInfo.Label, valueHelp.getControl());
          content.setTitle(title);
        }
        if (!selectedContent || selectedContentId && selectedContentId === contentId) {
          selectedContent = content;
          selectedInfo = valueListInfo;
        }
      }
      if (!selectedInfo || !selectedContent) {
        throw new Error("selectedInfo or selectedContent undefined");
      }
      return {
        selectedInfo,
        selectedContent
      };
    },
    showValueList: async function (payload, container, selectedContentId) {
      const valueHelp = container.getParent(),
        isTypeahead = container.isTypeahead(),
        propertyPath = payload.propertyPath,
        metaModel = valueHelp.getModel().getMetaModel(),
        vhUIModel = valueHelp.getModel("_VHUI") || ValueListHelper.createVHUIModel(valueHelp, propertyPath, metaModel);
      if (!payload.qualifiers) {
        payload.qualifiers = {};
      }
      vhUIModel.setProperty("/isSuggestion", isTypeahead);
      vhUIModel.setProperty("/minScreenWidth", !isTypeahead ? "418px" : undefined);
      try {
        const valueListInfos = await ValueListHelper.getValueListInfo(valueHelp, propertyPath, payload);
        const firstTypeAheadContent = valueHelp.getTypeahead().getContent()[0],
          caseSensitive = firstTypeAheadContent.getCaseSensitive(); // take caseSensitive from first Typeahead content

        if (isTypeahead) {
          const {
            valueListInfo,
            content
          } = ValueListHelper._prepareValueHelpTypeAhead(valueHelp, container, valueListInfos, payload, caseSensitive, firstTypeAheadContent);
          payload.valueHelpQualifier = valueListInfo.valueHelpQualifier;
          if (content.getTable() === undefined || content.getTable() === null) {
            await ValueListHelper._createValueHelpTypeahead(propertyPath, valueHelp, content, valueListInfo, payload);
          }
        } else {
          var _selectedInfo$valueLi;
          const {
            selectedInfo,
            selectedContent
          } = ValueListHelper._prepareValueHelpDialog(valueHelp, container, valueListInfos, payload, selectedContentId, caseSensitive);
          payload.valueHelpQualifier = selectedInfo.valueHelpQualifier;
          /* For context depentent value helps the value list label is used for the dialog title */
          const title = CommonUtils.getTranslatedTextFromExpBindingString(ValueListHelper._getDialogTitle(valueHelp, (_selectedInfo$valueLi = selectedInfo.valueListInfo) === null || _selectedInfo$valueLi === void 0 ? void 0 : _selectedInfo$valueLi.Label), valueHelp.getControl());
          container.setTitle(title);
          if (selectedContent.getTable() === undefined || selectedContent.getTable() === null) {
            await ValueListHelper._createValueHelpDialog(propertyPath, valueHelp, selectedContent, selectedInfo, payload);
          }
        }
      } catch (err) {
        this._logError(propertyPath, err);
        ValueListHelper.destroyVHContent(valueHelp);
      }
    }
  };
  return ValueListHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/internal/valuehelp/ValueListHelper", ["sap/base/Log","sap/base/util/ObjectPath","sap/fe/core/CommonUtils","sap/fe/core/templating/PropertyHelper","sap/fe/core/templating/UIFormatters","sap/fe/macros/ODataMetaModelUtil","sap/m/table/Util","sap/ui/core/Fragment","sap/ui/core/util/XMLPreprocessor","sap/ui/core/XMLTemplateProcessor","sap/ui/dom/units/Rem","sap/ui/mdc/valuehelp/content/Conditions","sap/ui/mdc/valuehelp/content/MDCTable","sap/ui/mdc/valuehelp/content/MTable","sap/ui/model/json/JSONModel"],function(e,t,n,o,a,i,r,s,l,u,c,p,d,m,f){"use strict";var g={};var v=a.getTypeConfig;var h=a.getDisplayMode;var P=o.getAssociatedUnitProperty;var y=o.getAssociatedTimezoneProperty;var C=o.getAssociatedTextProperty;var b=o.getAssociatedCurrencyProperty;var I=e.Level;const V=(e,t)=>!e.some(e=>e.path===t);const $="@com.sap.vocabularies.Common.v1.Label",L="@com.sap.vocabularies.Common.v1.Text",T="@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement",M="com.sap.vocabularies.Common.v1.ValueListParameterIn",O="com.sap.vocabularies.Common.v1.ValueListParameterConstant",_="com.sap.vocabularies.Common.v1.ValueListParameterOut",x="com.sap.vocabularies.Common.v1.ValueListParameterInOut",F="@com.sap.vocabularies.Common.v1.ValueListWithFixedValues";g.AnnotationLabel=$;g.AnnotationValueListWithFixedValues=F;g.AnnotationValueListParameterInOut=x;g.AnnotationValueListParameterOut=_;g.AnnotationValueListParameterConstant=O;g.AnnotationValueListParameterIn=M;g.AnnotationTextUITextArrangement=T;g.AnnotationText=L;function S(e){let t;const n=e.$model.getMetaModel();const o=n.getObject(`/${e.CollectionPath}@`)||{};const a=i.getSortRestrictionsInfo(o);const r=e.Parameters.find(function(t){return(t.$Type==="com.sap.vocabularies.Common.v1.ValueListParameterInOut"||t.$Type==="com.sap.vocabularies.Common.v1.ValueListParameterOut"||t.$Type==="com.sap.vocabularies.Common.v1.ValueListParameterDisplayOnly")&&!(n.getObject(`/${e.CollectionPath}/${t.ValueListProperty}@com.sap.vocabularies.UI.v1.Hidden`)===true)});if(r){if(n.getObject(`/${e.CollectionPath}/${r.ValueListProperty}@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement/$EnumMember`)==="com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly"){t=n.getObject(`/${e.CollectionPath}/${r.ValueListProperty}@com.sap.vocabularies.Common.v1.Text/$Path`)}else{t=r.ValueListProperty}}if(t&&(!a.propertyInfo[t]||a.propertyInfo[t].sortable)){return t}else{return undefined}}function H(e,t){const n=t.find(function(t){return e.ValueListProperty===t.textColumnName});if(e.ValueListProperty===(n===null||n===void 0?void 0:n.textColumnName)&&!n.keyColumnHidden&&n.keyColumnDisplayFormat!=="Value"){return true}return undefined}function A(e){return e.Parameters.some(function(e){return e["@com.sap.vocabularies.UI.v1.Importance"]&&e["@com.sap.vocabularies.UI.v1.Importance"].$EnumMember==="com.sap.vocabularies.UI.v1.ImportanceType/High"})}function D(e){const t=e.getModel("viewData");if(t){const e=t.getData();if(e){const t=e.columns;if(t){return t.reduce(function(e,t){if(t.path&&t.path.indexOf("/")===-1){e=e?`${e},${t.path}`:t.path}return e},undefined)}}}return undefined}function U(e,t){const o=n.computeDisplayMode(e,undefined);const a=e&&e["@com.sap.vocabularies.Common.v1.Text"];const i=a&&e["@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement"];if(t){return a&&typeof a!=="string"&&a.$Path?o:"Value"}else{return i?o:"Value"}}const j={getValueListCollectionEntitySet:function(e){const t=e.getObject();return t.$model.getMetaModel().createBindingContext(`/${t.CollectionPath}`)},getTableDelegate:function(e){let t=S(e);if(t){t=`'${t}'`}return"{name: 'sap/fe/macros/internal/valuehelp/TableDelegate', payload: {collectionName: '"+e.CollectionPath+"'"+(t?", defaultSortPropertyName: "+t:"")+"}}"},getSortConditionsFromPresentationVariant:function(e,t){const n=e.PresentationVariantQualifier===""?"":`#${e.PresentationVariantQualifier}`,o=`/${e.CollectionPath}/@com.sap.vocabularies.UI.v1.PresentationVariant${n}`;const a=e.$model.getMetaModel().getObject(o);if(a&&a.SortOrder){const e={sorters:[]};if(t){a.SortOrder.forEach(function(t){const n={};n.path=t.Property.$PropertyPath;if(t.Descending){n.descending=true}else{n.ascending=true}e.sorters.push(n)});return`sorter: ${JSON.stringify(e.sorters)}`}else{a.SortOrder.forEach(function(t){const n={};n.name=t.Property.$PropertyPath;if(t.Descending){n.descending=true}else{n.ascending=true}e.sorters.push(n)});return JSON.stringify(e)}}return undefined},getPropertyPath:function(e){return!e.UnboundAction?`${e.EntityTypePath}/${e.Action}/${e.Property}`:`/${e.Action.substring(e.Action.lastIndexOf(".")+1)}/${e.Property}`},getValueListProperty:function(e){const t=e.getModel();const n=t.getObject("/");return n.$model.getMetaModel().createBindingContext(`/${n.CollectionPath}/${e.getObject()}`)},getColumnVisibility:function(e,t,n){const o=n&&!!n.valueHelpWithFixedValues,a=n.columnInfo,i=!H(t,a.columnInfos),r=a.isDialogTable;if(o||!o&&r||!o&&!A(e)){const e=a.columnInfos.find(function(e){return t.ValueListProperty===e.columnName&&e.hasHiddenAnnotation===true});return!e?i:false}else if(!o&&A(e)){return t&&t["@com.sap.vocabularies.UI.v1.Importance"]&&t["@com.sap.vocabularies.UI.v1.Importance"].$EnumMember==="com.sap.vocabularies.UI.v1.ImportanceType/High"?true:false}return true},getColumnVisibilityInfo:function(e,t,n,o){const a=e.$model.getMetaModel();const i=[];const r={isDialogTable:o,columnInfos:i};e.Parameters.forEach(function(t){const o=a.getObject(`/${e.CollectionPath}/${t.ValueListProperty}@`);const i=o&&o["@com.sap.vocabularies.Common.v1.Text"];let s={};if(i){s={keyColumnHidden:o["@com.sap.vocabularies.UI.v1.Hidden"]?true:false,keyColumnDisplayFormat:i&&U(o,n),textColumnName:i&&i.$Path,columnName:t.ValueListProperty,hasHiddenAnnotation:o&&o["@com.sap.vocabularies.UI.v1.Hidden"]?true:false}}else if(o&&o["@com.sap.vocabularies.UI.v1.Hidden"]){s={columnName:t.ValueListProperty,hasHiddenAnnotation:o&&o["@com.sap.vocabularies.UI.v1.Hidden"]?true:false}}r.columnInfos.push(s)});return r},getTableItemsParameters:function(e,t,n,o){const a=[`path: '/${e.CollectionPath}'`];const i=D(this);if(t){const e=i?`, '${i}'`:"";a.push(`parameters: {$$groupId: '${t}'${e}}`)}else if(i){a.push(`parameters: {$select: '${i}'}`)}const r=e.Parameters.some(function(e){return n||e.$Type==="com.sap.vocabularies.Common.v1.ValueListParameterIn"});a.push(`suspended: ${r}`);if(!o){a.push("length: 10")}const s=j.getSortConditionsFromPresentationVariant(e,n);if(s){a.push(s)}else if(o){const t=S(e);if(t){a.push(`sorter: [{path: '${t}', ascending: true}]`)}}return"{"+a.join(", ")+"}"},hasImportance:function(e){return A(e.getObject())?"Importance/High":"None"},getMinScreenWidth:function(e){return A(e)?"{= ${_VHUI>/minScreenWidth}}":"416px"},getColumnWidth:function(n){var o,a,i,s,l,u,c,p;const d=n.targetObject;let m=[d];const f=C(d)||b(d)||P(d)||y(d),g=(o=d.annotations)===null||o===void 0?void 0:(a=o.Common)===null||a===void 0?void 0:a.Text,I=g===null||g===void 0?void 0:(i=g.annotations)===null||i===void 0?void 0:(s=i.UI)===null||s===void 0?void 0:(l=s.TextArrangement)===null||l===void 0?void 0:l.toString(),V=(u=d.annotations)===null||u===void 0?void 0:(c=u.Common)===null||c===void 0?void 0:(p=c.Label)===null||p===void 0?void 0:p.toString(),$=I&&h(n);if(f){if($==="Description"){m=[f]}else if(!g||$&&$!=="Value"){m.push(f)}}let L=0;const T=[];m.forEach(e=>{const n=v(e,undefined);const o=t.get(n.type);if(o){T.push(new o(n.formatOptions,n.constraints))}});const M=r.calcColumnWidth(T,V);L=M?parseFloat(M.replace("rem","")):0;if(L===0){e.error(`Cannot compute the column width for property: ${d.name}`)}return L<=20?L.toString()+"rem":"20rem"},getOutParameterPaths:function(e){let t="";e.forEach(function(e){if(e.$Type.endsWith("Out")){t+=`{${e.ValueListProperty}}`}});return t},entityIsSearchable:function(e,t){var n,o;const a=(n=e["@com.sap.vocabularies.Common.v1.ValueList"])===null||n===void 0?void 0:n.SearchSupported,i=(o=t["@Org.OData.Capabilities.V1.SearchRestrictions"])===null||o===void 0?void 0:o.Searchable;if(i===undefined&&a===false||i===true&&a===false||i===false){return false}return true},_getConditionPath:function(e,t,n){const o=n.split("/");let a="",i;while(o.length){let n=o.shift();i=i?`${i}/${n}`:n;const r=e.getObject(`${t}/${i}`);if(r&&r.$kind==="NavigationProperty"&&r.$isCollection){n+="*"}a=a?`${a}/${n}`:n}return a},_getColumnDefinitionFromSelectionFields:function(e,t){const o=[],a=e.getObject(`${t}/@`),i=a["@com.sap.vocabularies.UI.v1.SelectionFields"];if(i){i.forEach(function(a){const i=`${t}/${a.$PropertyPath}`,r=j._getConditionPath(e,t,a.$PropertyPath),s=e.getObject(`${i}@`),l={path:r,label:s[$]||i,sortable:true,filterable:n.isPropertyFilterable(e,t,a.$PropertyPath,false),$Type:e.getObject(i).$Type};o.push(l)})}return o},_mergeColumnDefinitionsFromProperties:function(e,t,n,o,a){var i;let r=n,s=o.$Type;const l=a[$]||r,u=a[L];if(u&&((i=a[T])===null||i===void 0?void 0:i.$EnumMember)==="com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly"){r=u.$Path;const e=`/${t.CollectionPath}/${r}`;s=t.$model.getMetaModel().getObject(e).$Type}if(V(e,r)){const t={path:r,label:l,sortable:true,filterable:!a["@com.sap.vocabularies.UI.v1.HiddenFilter"],$Type:s};e.push(t)}},filterInOutParameters:function(e,t){return e.filter(function(e){return t.indexOf(e.parmeterType)>-1})},getInParameters:function(e){return j.filterInOutParameters(e,[M,O,x])},getOutParameters:function(e){return j.filterInOutParameters(e,[_,x])},createVHUIModel:function(e,t,n){const o=new f({}),a=n.getObject(`${t}@`);e.setModel(o,"_VHUI");o.setProperty("/hasValueListRelevantQualifiers",!!a["@com.sap.vocabularies.Common.v1.ValueListRelevantQualifiers"]);o.setProperty("/propertyLabel",a[$]);return o},_getDialogTitle:function(e,t){var n;const o=e.getModel("_VHUI").getProperty("/propertyLabel");const a=(n=e.getControl())===null||n===void 0?void 0:n.getProperty("label");return e.getModel("_VHUI").getProperty("/hasValueListRelevantQualifiers")?t||o||a:a||o||t},destroyVHContent:function(e){if(e.getDialog()){e.getDialog().destroyContent()}if(e.getTypeahead()){e.getTypeahead().destroyContent()}},putDefaultQualifierFirst:function(e){const t=e.indexOf("");if(t>0){e.unshift(e[t]);e.splice(t+1,1)}return e},_getContextPrefix:function(e,t){if(e&&e.getPath()){const n=e.getPath().split("/");if(t.length-n.length>1){const e=[];for(let o=n.length;o<t.length-1;o++){e.push(t[o])}return`${e.join("/")}/`}}return""},_getVhParameter:function(e,t,n,o,a,i){let r="";const s=t.getBindingContext();if(e&&e.length>0){var l;if((l=t.getParent())!==null&&l!==void 0&&l.isA("sap.ui.mdc.Table")&&s&&j._parameterIsA(o,["com.sap.vocabularies.Common.v1.ValueListParameterIn","com.sap.vocabularies.Common.v1.ValueListParameterInOut"])){const e=i.split("/");if(e.length>1){const n=e[0];const o=a.getMetaContext(s.getPath());const l=t.getParent().getRowBinding().getPath();if(o.getObject(`${l}/$Partner`)===n){r=i.replace(n+"/","")}}}if(!r){r=e+">/conditions/"+i}}else{r=n+i}return{parmeterType:o.$Type,source:r,helpPath:o.ValueListProperty,constantValue:o.Constant,initialValueFilterEmpty:Boolean(o.InitialValueIsSignificant)}},_parameterIsA(e,t){return t.includes(e.$Type)},_enrichPath:function(e,t,n,o,a,i){if(!e.key&&j._parameterIsA(o,["com.sap.vocabularies.Common.v1.ValueListParameterOut","com.sap.vocabularies.Common.v1.ValueListParameterInOut"])&&n===a){var r;e.fieldPropertyPath=t;e.key=o.ValueListProperty;e.descriptionPath=((r=i[L])===null||r===void 0?void 0:r.$Path)||""}},_enrichKeys:function(e,t){if(j._parameterIsA(t,["com.sap.vocabularies.Common.v1.ValueListParameterOut","com.sap.vocabularies.Common.v1.ValueListParameterInOut"])&&!e.includes(t.ValueListProperty)){e.push(t.ValueListProperty)}},_processParameters:function(e,t,n,o,a,i,r){var s;const l=e.$model.getMetaModel(),u=`/${e.CollectionPath}`,c=j._getColumnDefinitionFromSelectionFields(l,u),p=[],d=(s=l.getObject(u+`/`))!==null&&s!==void 0&&s.$Key?[...l.getObject(u+`/`).$Key]:[];const m={fieldPropertyPath:"",descriptionPath:"",key:""};for(const r of e.Parameters){var f;const s=`/${e.CollectionPath}/${r.ValueListProperty}`,u=l.getObject(s),g=l.getObject(`${s}@`)||{},v=((f=r.LocalDataProperty)===null||f===void 0?void 0:f.$PropertyPath)||"";if(u){j._enrichPath(m,s,v,r,t,g);const n=r.ValueListProperty;j._mergeColumnDefinitionsFromProperties(c,e,n,u,g)}if(j._parameterIsA(r,["com.sap.vocabularies.Common.v1.ValueListParameterIn","com.sap.vocabularies.Common.v1.ValueListParameterOut","com.sap.vocabularies.Common.v1.ValueListParameterInOut"])&&v!==t){const e=j._getVhParameter(n,o,a,r,i,v);p.push(e)}if(r.$Type===O){p.push({parmeterType:r.$Type,source:r.ValueListProperty,helpPath:r.ValueListProperty,constantValue:r.Constant,initialValueFilterEmpty:Boolean(r.InitialValueIsSignificant)})}j._enrichKeys(d,r)}for(const t of d){if(V(c,t)){const n={path:t,$Type:l.getObject(`/${e.CollectionPath}/${m.key}`).$Type,label:"",sortable:false,filterable:undefined};c.push(n)}}return{keyValue:m.key,descriptionValue:m.descriptionPath,fieldPropertyPath:m.fieldPropertyPath,vhKeys:d,vhParameters:p,valueListInfo:e,columnDefs:c,valueHelpQualifier:r}},_logError:function(t,n){const o=n?n.status:undefined;const a=n instanceof Error?n.message:String(n);const i=o===404?`Metadata not found (${o}) for value help of property ${t}`:a;e.error(i)},getValueListInfo:async function(e,t,n){const o=e.getBindingContext(),a=n.conditionModel,i=e.getModel().getMetaModel(),r=[],s=t.split("/");try{const l=await i.requestValueListInfo(t,true,o);const u=j.putDefaultQualifierFirst(Object.keys(l)),c=s.pop();const p=n.useMultiValueField?j._getContextPrefix(o,s):"";for(const t of u){const n=l[t];const o=j._processParameters(n,c,a,e,p,i,t);r.push(o)}}catch(n){this._logError(t,n);j.destroyVHContent(e)}return r},ALLFRAGMENTS:undefined,logFragment:undefined,_logTemplatedFragments:function(t,n,o){const a={path:t,fragmentName:n,fragment:o};if(e.getLevel()===I.DEBUG){j.ALLFRAGMENTS=j.ALLFRAGMENTS||[];j.ALLFRAGMENTS.push(a)}if(j.logFragment){setTimeout(function(){j.logFragment(a)},0)}},_templateFragment:async function(e,t,n,o){const a=t.valueListInfo,i=new f(a),r=a.$model.getMetaModel(),c=new f({converterType:"ListReport",columns:t.columnDefs||null});const p=await l.process(u.loadTemplate(e,"fragment"),{name:e},{bindingContexts:{valueList:i.createBindingContext("/"),contextPath:r.createBindingContext(`/${a.CollectionPath}/`),source:n.createBindingContext("/")},models:{valueList:i,contextPath:r,source:n,metaModel:r,viewData:c}});j._logTemplatedFragments(o,e,p);return await s.load({definition:p})},_getContentId:function(e,t,n){const o=n?"Popover":"Dialog";return`${e}::${o}::qualifier::${t}`},_addInOutParametersToPayload:function(e,t){const n=t.valueHelpQualifier;if(!e.qualifiers){e.qualifiers={}}if(!e.qualifiers[n]){e.qualifiers[n]={vhKeys:t.vhKeys,vhParameters:t.vhParameters}}},_getValueHelpColumnDisplayFormat:function(e,t){const o=n.computeDisplayMode(e,undefined),a=e&&e[L],i=a&&e[T];if(t){return a&&typeof a!=="string"&&a.$Path?o:"Value"}else{return i?o:"Value"}},_getWidthInRem:function(e,t){let n=e.$().width();if(t&&n){n=.3*n}const o=n?parseFloat(String(c.fromPx(n))):0;return isNaN(o)?0:o},_getTableWidth:function(e,t){let n;const o=e.getColumns(),a=o&&o.filter(function(e){return e&&e.getVisible&&e.getVisible()})||[],i=a.reduce(function(e,t){n=t.getWidth();if(n&&n.endsWith("px")){n=String(c.fromPx(n))}const o=parseFloat(n);return e+(isNaN(o)?9:o)},a.length);return`${Math.max(i,t)}em`},_createValueHelpTypeahead:async function(t,n,o,a,i){const r=o.getId(),s=n.getModel().getMetaModel().getObject(`${t}@`),l=s[F]??false,u=false,c=j.getColumnVisibilityInfo(a.valueListInfo,t,l,u),p=new f({id:r,groupId:i.requestGroupId||undefined,bSuggestion:true,propertyPath:t,columnInfo:c,valueHelpWithFixedValues:l});o.setKeyPath(a.keyValue);o.setDescriptionPath(a.descriptionValue);i.isValueListWithFixedValues=l;const d=a.valueListInfo.$model.getMetaModel().getObject(`/${a.valueListInfo.CollectionPath}@`)||{};o.setFilterFields(j.entityIsSearchable(s,d)?"$search":"");const m=await j._templateFragment("sap.fe.macros.internal.valuehelp.ValueListTable",a,p,t);m.setModel(a.valueListInfo.$model);e.info(`Value List- suggest Table XML content created [${t}]`,m.getMetadata().getName(),"MDC Templating");o.setTable(m);const g=n.getControl();if(g!==undefined&&(g.isA("sap.ui.mdc.FilterField")||g.isA("sap.ui.mdc.Field")||g.isA("sap.ui.mdc.MultiValueField"))){const e=Boolean(i.isUnitValueHelp);const t=j._getTableWidth(m,j._getWidthInRem(g,e));m.setWidth(t);if(l){m.setMode(g.getMaxConditions()===1?"SingleSelectMaster":"MultiSelect")}else{m.setMode("SingleSelectMaster")}}},_createValueHelpDialog:async function(e,t,n,o,a){const i=t.getModel().getMetaModel().getObject(`${e}@`),r=false,s=true,l=j.getColumnVisibilityInfo(o.valueListInfo,e,r,s),u=new f({id:n.getId(),groupId:a.requestGroupId||undefined,bSuggestion:false,columnInfo:l,valueHelpWithFixedValues:r});n.setKeyPath(o.keyValue);n.setDescriptionPath(o.descriptionValue);const c=o.valueListInfo.$model.getMetaModel().getObject(`/${o.valueListInfo.CollectionPath}@`)||{};n.setFilterFields(j.entityIsSearchable(i,c)?"$search":"");const p=j._templateFragment("sap.fe.macros.internal.valuehelp.ValueListDialogTable",o,u,e);const d=j._templateFragment("sap.fe.macros.internal.valuehelp.ValueListFilterBar",o,u,e);const[m,g]=await Promise.all([p,d]);m.setModel(o.valueListInfo.$model);g.setModel(o.valueListInfo.$model);n.setFilterBar(g);n.setTable(m);m.setFilter(g.getId());m.initialized();const v=t.getControl();if(v!==undefined){m.setSelectionMode(v.getMaxConditions()===1?"SingleMaster":"Multi")}m.setWidth("100%");const h=m;h._setShowP13nButton(false)},_getContentById:function(e,t){return e.find(function(e){return e.getId()===t})},_createPopoverContent:function(e,t,n){return new m({id:e,group:"group1",caseSensitive:t,useAsValueHelp:n})},_createDialogContent:function(e,t,n){return new d({id:e,group:"group1",caseSensitive:t,forceBind:n})},_showConditionsContent:function(e,t){let n=e.length&&e[e.length-1].getMetadata().getName()==="sap.ui.mdc.valuehelp.content.Conditions"?e[e.length-1]:undefined;if(n){n.setVisible(true)}else{n=new p;t.addContent(n)}},_alignOrCreateContent:function(e,t,n,o,a){const i=a.getContent();let r=j._getContentById(i,t);if(!r){const s=e.valueListInfo.FetchValues===2?false:true;r=j._createDialogContent(t,n,s);if(!o){a.addContent(r)}else{a.insertContent(r,i.length-1)}}else{r.setVisible(true)}return r},_prepareValueHelpTypeAhead:function(e,t,n,o,a,i){const r=t.getContent();let s=e.data("valuelistForValidation")||"";if(s===" "){s=""}const l=s?n.filter(function(e){return e.valueHelpQualifier===s})[0]:n[0];j._addInOutParametersToPayload(o,l);const u=j._getContentId(e.getId(),l.valueHelpQualifier,true);let c=j._getContentById(r,u);if(!c){const e=i.getUseAsValueHelp();c=j._createPopoverContent(u,a,e);t.insertContent(c,0)}else if(u!==r[0].getId()){t.removeContent(c);t.insertContent(c,0)}return{valueListInfo:l,content:c}},_prepareValueHelpDialog:function(e,t,o,a,i,r){const s=e.data("showConditionPanel")&&e.data("showConditionPanel")!=="false";const l=t.getContent();for(const e of l){e.setVisible(false)}if(s){this._showConditionsContent(l,t)}let u,c;for(const l of o){const o=l.valueHelpQualifier;j._addInOutParametersToPayload(a,l);const p=j._getContentId(e.getId(),o,false);const d=this._alignOrCreateContent(l,p,r,s,t);if(l.valueListInfo.Label){const t=n.getTranslatedTextFromExpBindingString(l.valueListInfo.Label,e.getControl());d.setTitle(t)}if(!c||i&&i===p){c=d;u=l}}if(!u||!c){throw new Error("selectedInfo or selectedContent undefined")}return{selectedInfo:u,selectedContent:c}},showValueList:async function(e,t,o){const a=t.getParent(),i=t.isTypeahead(),r=e.propertyPath,s=a.getModel().getMetaModel(),l=a.getModel("_VHUI")||j.createVHUIModel(a,r,s);if(!e.qualifiers){e.qualifiers={}}l.setProperty("/isSuggestion",i);l.setProperty("/minScreenWidth",!i?"418px":undefined);try{const s=await j.getValueListInfo(a,r,e);const l=a.getTypeahead().getContent()[0],c=l.getCaseSensitive();if(i){const{valueListInfo:n,content:o}=j._prepareValueHelpTypeAhead(a,t,s,e,c,l);e.valueHelpQualifier=n.valueHelpQualifier;if(o.getTable()===undefined||o.getTable()===null){await j._createValueHelpTypeahead(r,a,o,n,e)}}else{var u;const{selectedInfo:i,selectedContent:l}=j._prepareValueHelpDialog(a,t,s,e,o,c);e.valueHelpQualifier=i.valueHelpQualifier;const p=n.getTranslatedTextFromExpBindingString(j._getDialogTitle(a,(u=i.valueListInfo)===null||u===void 0?void 0:u.Label),a.getControl());t.setTitle(p);if(l.getTable()===undefined||l.getTable()===null){await j._createValueHelpDialog(r,a,l,i,e)}}}catch(e){this._logError(r,e);j.destroyVHContent(a)}}};return j},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/kpiTag/KPITag.block-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/formatters/KPIFormatter", "sap/fe/core/helpers/BindingToolkit"], function (BuildingBlock, BuildingBlockRuntime, kpiFormatters, BindingToolkit) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;
  var _exports = {};
  var resolveBindingString = BindingToolkit.resolveBindingString;
  var pathInModel = BindingToolkit.pathInModel;
  var formatResult = BindingToolkit.formatResult;
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let KPITag = (
  /**
   * A building block used to display a KPI in the Analytical List Page
   *
   * @private
   * @experimental
   */
  _dec = defineBuildingBlock({
    name: "KPITag",
    namespace: "sap.fe.macros"
  }), _dec2 = blockAttribute({
    type: "string",
    required: true
  }), _dec3 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true
  }), _dec4 = blockAttribute({
    type: "string",
    required: true
  }), _dec5 = blockAttribute({
    type: "boolean",
    required: false
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(KPITag, _BuildingBlockBase);
    function KPITag() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _BuildingBlockBase.call(this, ...args) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "kpiModelName", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "hasUnit", _descriptor4, _assertThisInitialized(_this));
      return _this;
    }
    _exports = KPITag;
    var _proto = KPITag.prototype;
    /**
     * Creates a binding expression for a specific property in the KPI model.
     *
     * @param propertyName The property to bind to in the KPI model
     * @returns A binding expression
     */
    _proto.getKpiPropertyExpression = function getKpiPropertyExpression(propertyName) {
      return pathInModel(`/${this.id}/manifest/sap.card/data/json/${propertyName}`, this.kpiModelName);
    }

    /**
     * Creates binding expressions for the KPITag's text and tooltip.
     *
     * @returns Object containing the binding expressions for the text and the tooltip
     */;
    _proto.getBindingExpressions = function getBindingExpressions() {
      const kpiTitle = this.metaPath.getProperty("Title");
      if (!kpiTitle) {
        return {
          text: undefined,
          tooltip: undefined
        };
      }
      const titleExpression = resolveBindingString(kpiTitle);
      return {
        text: formatResult([titleExpression], kpiFormatters.labelFormat),
        tooltip: formatResult([titleExpression, this.getKpiPropertyExpression("mainValueUnscaled"), this.getKpiPropertyExpression("mainUnit"), this.getKpiPropertyExpression("mainCriticality"), String(this.hasUnit)], kpiFormatters.tooltipFormat)
      };
    }

    /**
     * The building block template function.
     *
     * @returns An XML-based string
     */;
    _proto.getTemplate = function getTemplate() {
      const {
        text,
        tooltip
      } = this.getBindingExpressions();
      return xml`<m:GenericTag
			id="kpiTag-${this.id}"
			text="${text}"
			design="StatusIconHidden"
			status="${this.getKpiPropertyExpression("mainCriticality")}"
			class="sapUiTinyMarginBegin"
			tooltip="${tooltip}"
			press=".kpiManagement.onKPIPressed(\${$source>},'${this.id}')"
		>
			<m:ObjectNumber
				state="${this.getKpiPropertyExpression("mainCriticality")}"
				emphasized="false"
				number="${this.getKpiPropertyExpression("mainValue")}"
				unit="${this.getKpiPropertyExpression("mainUnit")}"

			/>
		</m:GenericTag>`;
    };
    return KPITag;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "kpiModelName", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "hasUnit", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = KPITag;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/kpiTag/KPITag.block", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/formatters/KPIFormatter","sap/fe/core/helpers/BindingToolkit"],function(e,t,i,r){"use strict";var n,a,o,l,s,u,p,c,d,f,g;var b={};var m=r.resolveBindingString;var h=r.pathInModel;var y=r.formatResult;var v=t.xml;var P=e.defineBuildingBlock;var x=e.BuildingBlockBase;var B=e.blockAttribute;function k(e,t,i,r){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(r):void 0})}function z(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function E(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;w(e,t)}function w(e,t){w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return w(e,t)}function $(e,t,i,r,n){var a={};Object.keys(r).forEach(function(e){a[e]=r[e]});a.enumerable=!!a.enumerable;a.configurable=!!a.configurable;if("value"in a||a.initializer){a.writable=true}a=i.slice().reverse().reduce(function(i,r){return r(e,t,i)||i},a);if(n&&a.initializer!==void 0){a.value=a.initializer?a.initializer.call(n):void 0;a.initializer=undefined}if(a.initializer===void 0){Object.defineProperty(e,t,a);a=null}return a}function K(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let O=(n=P({name:"KPITag",namespace:"sap.fe.macros"}),a=B({type:"string",required:true}),o=B({type:"sap.ui.model.Context",required:true}),l=B({type:"string",required:true}),s=B({type:"boolean",required:false}),n(u=(p=function(e){E(t,e);function t(){var t;for(var i=arguments.length,r=new Array(i),n=0;n<i;n++){r[n]=arguments[n]}t=e.call(this,...r)||this;k(t,"id",c,z(t));k(t,"metaPath",d,z(t));k(t,"kpiModelName",f,z(t));k(t,"hasUnit",g,z(t));return t}b=t;var r=t.prototype;r.getKpiPropertyExpression=function e(t){return h(`/${this.id}/manifest/sap.card/data/json/${t}`,this.kpiModelName)};r.getBindingExpressions=function e(){const t=this.metaPath.getProperty("Title");if(!t){return{text:undefined,tooltip:undefined}}const r=m(t);return{text:y([r],i.labelFormat),tooltip:y([r,this.getKpiPropertyExpression("mainValueUnscaled"),this.getKpiPropertyExpression("mainUnit"),this.getKpiPropertyExpression("mainCriticality"),String(this.hasUnit)],i.tooltipFormat)}};r.getTemplate=function e(){const{text:t,tooltip:i}=this.getBindingExpressions();return v`<m:GenericTag
			id="kpiTag-${this.id}"
			text="${t}"
			design="StatusIconHidden"
			status="${this.getKpiPropertyExpression("mainCriticality")}"
			class="sapUiTinyMarginBegin"
			tooltip="${i}"
			press=".kpiManagement.onKPIPressed(\${$source>},'${this.id}')"
		>
			<m:ObjectNumber
				state="${this.getKpiPropertyExpression("mainCriticality")}"
				emphasized="false"
				number="${this.getKpiPropertyExpression("mainValue")}"
				unit="${this.getKpiPropertyExpression("mainUnit")}"

			/>
		</m:GenericTag>`};return t}(x),c=$(p.prototype,"id",[a],{configurable:true,enumerable:true,writable:true,initializer:null}),d=$(p.prototype,"metaPath",[o],{configurable:true,enumerable:true,writable:true,initializer:null}),f=$(p.prototype,"kpiModelName",[l],{configurable:true,enumerable:true,writable:true,initializer:null}),g=$(p.prototype,"hasUnit",[s],{configurable:true,enumerable:true,writable:true,initializer:null}),p))||u);b=O;return b},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/library-dbg", ["sap/fe/core/library", "sap/fe/macros/filter/type/MultiValue", "sap/fe/macros/filter/type/Range", "sap/fe/macros/macroLibrary", "sap/ui/core/Core", "sap/ui/core/Fragment", "sap/ui/core/library", "sap/ui/core/XMLTemplateProcessor", "sap/ui/mdc/field/ConditionsType", "sap/ui/mdc/library", "sap/ui/unified/library"], function (_library, _MultiValue, _Range, _macroLibrary, Core, Fragment, _library2, _XMLTemplateProcessor, _ConditionsType, _library3, _library4) {
  "use strict";

  var _exports = {};
  /**
   * Library containing the building blocks for SAP Fiori elements.
   *
   * @namespace
   * @name sap.fe.macros
   * @public
   */
  const macrosNamespace = "sap.fe.macros";

  // library dependencies
  _exports.macrosNamespace = macrosNamespace;
  const thisLib = Core.initLibrary({
    name: "sap.fe.macros",
    dependencies: ["sap.ui.core", "sap.ui.mdc", "sap.ui.unified", "sap.fe.core"],
    types: ["sap.fe.macros.NavigationType"],
    interfaces: [],
    controls: [],
    elements: [],
    // eslint-disable-next-line no-template-curly-in-string
    version: "1.111.1",
    noLibraryCSS: true
  });
  thisLib.NavigationType = {
    /**
     * For External Navigation
     *
     * @public
     */
    External: "External",
    /**
     * For In-Page Navigation
     *
     * @public
     */
    InPage: "InPage",
    /**
     * For No Navigation
     *
     * @public
     */
    None: "None"
  };
  Fragment.registerType("CUSTOM", {
    load: Fragment.getType("XML").load,
    init: function (mSettings) {
      mSettings.containingView = {
        oController: mSettings.containingView.getController() && mSettings.containingView.getController().getExtensionAPI(mSettings.id)
      };
      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        args[_key - 1] = arguments[_key];
      }
      return Fragment.getType("XML").init.apply(this, [mSettings, args]);
    }
  });
  return thisLib;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/library", ["sap/fe/core/library","sap/fe/macros/filter/type/MultiValue","sap/fe/macros/filter/type/Range","sap/fe/macros/macroLibrary","sap/ui/core/Core","sap/ui/core/Fragment","sap/ui/core/library","sap/ui/core/XMLTemplateProcessor","sap/ui/mdc/field/ConditionsType","sap/ui/mdc/library","sap/ui/unified/library"],function(e,a,r,i,n,o,s,t,p,c,l){"use strict";var u={};const f="sap.fe.macros";u.macrosNamespace=f;const y=n.initLibrary({name:"sap.fe.macros",dependencies:["sap.ui.core","sap.ui.mdc","sap.ui.unified","sap.fe.core"],types:["sap.fe.macros.NavigationType"],interfaces:[],controls:[],elements:[],version:"1.111.1",noLibraryCSS:true});y.NavigationType={External:"External",InPage:"InPage",None:"None"};o.registerType("CUSTOM",{load:o.getType("XML").load,init:function(e){e.containingView={oController:e.containingView.getController()&&e.containingView.getController().getExtensionAPI(e.id)};for(var a=arguments.length,r=new Array(a>1?a-1:0),i=1;i<a;i++){r[i-1]=arguments[i]}return o.getType("XML").init.apply(this,[e,r])}});return y},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/macroLibrary-dbg", ["sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/macros/chart/ChartBuildingBlock", "sap/fe/macros/fcl/FlexibleColumnLayoutActions", "sap/fe/macros/filterBar/FilterBarBuildingBlock", "sap/fe/macros/form/FormBuildingBlock", "sap/fe/macros/form/FormContainerBuildingBlock", "sap/fe/macros/fpm/CustomFragment.block", "sap/fe/macros/internal/FilterField", "sap/fe/macros/situations/SituationsIndicator.fragment", "sap/fe/macros/visualfilters/VisualFilterBuildingBlock", "sap/ui/core/util/XMLPreprocessor", "./contact/Contact", "./draftIndicator/DraftIndicator.block", "./field/PublicField", "./form/FormElementBlock", "./internal/ActionCommand.block", "./internal/DataPoint", "./internal/InternalField", "./kpiTag/KPITag.block", "./microchart/MicroChart.metadata", "./multiValueField/MultiValueField.block", "./paginator/Paginator.metadata", "./quickView/QuickView.metadata", "./share/Share.block", "./table/Table.metadata", "./valuehelp/ValueHelp.metadata", "./valuehelp/ValueHelpFilterBar.metadata"], function (BuildingBlockRuntime, ChartBuildingBlock, FlexibleColumnLayoutActions, FilterBarBuildingBlock, FormBuildingBlock, FormContainerBuildingBlock, CustomFragment, FilterField, SituationsIndicator, VisualFilterBuildingBlock, XMLPreprocessor, Contact, DraftIndicator, PublicField, FormElement, ActionCommand, DataPoint, InternalField, KPITag, MicroChart, MultiValueFieldBlock, Paginator, QuickView, Share, Table, ValueHelp, ValueHelpFilterBar) {
  "use strict";

  var registerBuildingBlock = BuildingBlockRuntime.registerBuildingBlock;
  const sNamespace = "sap.fe.macros",
    aControls = [Table, FormBuildingBlock, FormContainerBuildingBlock, PublicField, InternalField, FilterBarBuildingBlock, FilterField, ChartBuildingBlock, ValueHelp, ValueHelpFilterBar, MicroChart, Contact, QuickView, VisualFilterBuildingBlock, DraftIndicator, DataPoint, FormElement, FlexibleColumnLayoutActions, KPITag, MultiValueFieldBlock, Paginator, ActionCommand, SituationsIndicator, CustomFragment].map(function (vEntry) {
      if (typeof vEntry === "string") {
        return {
          name: vEntry,
          namespace: sNamespace,
          metadata: {
            metadataContexts: {},
            properties: {},
            events: {}
          }
        };
      }
      return vEntry;
    });
  function registerAll() {
    // runtime building blocks have to be registered explicitly, as block.register() executes steps additional to registerBuildingBlock
    Share.register();
    DraftIndicator.register();

    // as a first version we expect that there's a fragment with exactly the namespace/name
    aControls.forEach(function (oEntry) {
      registerBuildingBlock(oEntry);
    });
  }

  //This is needed in for templating test utils
  function deregisterAll() {
    aControls.forEach(function (oEntry) {
      XMLPreprocessor.plugIn(null, oEntry.namespace, oEntry.name);
    });
  }

  //Always register when loaded for compatibility
  registerAll();
  return {
    register: registerAll,
    deregister: deregisterAll
  };
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/macroLibrary", ["sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/macros/chart/ChartBuildingBlock","sap/fe/macros/fcl/FlexibleColumnLayoutActions","sap/fe/macros/filterBar/FilterBarBuildingBlock","sap/fe/macros/form/FormBuildingBlock","sap/fe/macros/form/FormContainerBuildingBlock","sap/fe/macros/fpm/CustomFragment.block","sap/fe/macros/internal/FilterField","sap/fe/macros/situations/SituationsIndicator.fragment","sap/fe/macros/visualfilters/VisualFilterBuildingBlock","sap/ui/core/util/XMLPreprocessor","./contact/Contact","./draftIndicator/DraftIndicator.block","./field/PublicField","./form/FormElementBlock","./internal/ActionCommand.block","./internal/DataPoint","./internal/InternalField","./kpiTag/KPITag.block","./microchart/MicroChart.metadata","./multiValueField/MultiValueField.block","./paginator/Paginator.metadata","./quickView/QuickView.metadata","./share/Share.block","./table/Table.metadata","./valuehelp/ValueHelp.metadata","./valuehelp/ValueHelpFilterBar.metadata"],function(a,e,t,i,r,l,o,n,c,s,u,m,f,d,p,g,B,k,F,b,h,C,V,I,v,P,E){"use strict";var M=a.registerBuildingBlock;const T="sap.fe.macros",w=[v,r,l,d,k,i,n,e,P,E,b,m,V,s,f,B,p,t,F,h,C,g,c,o].map(function(a){if(typeof a==="string"){return{name:a,namespace:T,metadata:{metadataContexts:{},properties:{},events:{}}}}return a});function x(){I.register();f.register();w.forEach(function(a){M(a)})}function y(){w.forEach(function(a){u.plugIn(null,a.namespace,a.name)})}x();return{register:x,deregister:y}},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/messages/MessageButton-dbg", ["sap/base/Log", "sap/base/util/UriParameters", "sap/fe/core/controllerextensions/messageHandler/messageHandling", "sap/fe/core/helpers/ClassSupport", "sap/fe/macros/messages/MessagePopover", "sap/m/Button", "sap/m/ColumnListItem", "sap/m/Dialog", "sap/m/FormattedText", "sap/m/library", "sap/ui/core/Core", "sap/ui/core/library", "sap/ui/core/mvc/View", "sap/ui/model/Filter", "sap/ui/model/FilterOperator", "sap/ui/model/Sorter"], function (Log, UriParameters, messageHandling, ClassSupport, MessagePopover, Button, ColumnListItem, Dialog, FormattedText, library, Core, coreLibrary, View, Filter, FilterOperator, Sorter) {
  "use strict";

  var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;
  var MessageType = coreLibrary.MessageType;
  var ButtonType = library.ButtonType;
  var event = ClassSupport.event;
  var defineUI5Class = ClassSupport.defineUI5Class;
  var aggregation = ClassSupport.aggregation;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let MessageButton = (_dec = defineUI5Class("sap.fe.macros.messages.MessageButton"), _dec2 = aggregation({
    type: "sap.fe.macros.messages.MessageFilter",
    multiple: true,
    singularName: "customFilter"
  }), _dec3 = event(), _dec(_class = (_class2 = /*#__PURE__*/function (_Button) {
    _inheritsLoose(MessageButton, _Button);
    function MessageButton() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _Button.call(this, ...args) || this;
      _initializerDefineProperty(_this, "customFilters", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "messageChange", _descriptor2, _assertThisInitialized(_this));
      _this.sGeneralGroupText = "";
      _this.sViewId = "";
      _this.sLastActionText = "";
      return _this;
    }
    var _proto = MessageButton.prototype;
    _proto.init = function init() {
      Button.prototype.init.apply(this);
      //press event handler attached to open the message popover
      this.attachPress(this.handleMessagePopoverPress, this);
      this.oMessagePopover = new MessagePopover();
      this.oItemBinding = this.oMessagePopover.getBinding("items");
      this.oItemBinding.attachChange(this._setMessageData, this);
      const messageButtonId = this.getId();
      if (messageButtonId) {
        this.oMessagePopover.addCustomData(new sap.ui.core.CustomData({
          key: "messageButtonId",
          value: messageButtonId
        })); // TODO check for custom data type
      }

      this.attachModelContextChange(this._applyFiltersAndSort.bind(this));
      this.oMessagePopover.attachActiveTitlePress(this._activeTitlePress.bind(this));
    }

    /**
     * The method that is called when a user clicks on the MessageButton control.
     *
     * @param oEvent Event object
     */;
    _proto.handleMessagePopoverPress = function handleMessagePopoverPress(oEvent) {
      this.oMessagePopover.toggle(oEvent.getSource());
    }

    /**
     * The method that groups the messages based on the section or subsection they belong to.
     * This method force the loading of contexts for all tables before to apply the grouping.
     *
     * @param oView Current view.
     * @returns Return promise.
     * @private
     */;
    _proto._applyGroupingAsync = async function _applyGroupingAsync(oView) {
      const aWaitForData = [];
      const oViewBindingContext = oView.getBindingContext();
      const _findTablesRelatedToMessages = view => {
        const oRes = [];
        const aMessages = this.oItemBinding.getContexts().map(function (oContext) {
          return oContext.getObject();
        });
        const oViewContext = view.getBindingContext();
        if (oViewContext) {
          const oObjectPage = view.getContent()[0];
          messageHandling.getVisibleSectionsFromObjectPageLayout(oObjectPage).forEach(function (oSection) {
            oSection.getSubSections().forEach(function (oSubSection) {
              oSubSection.findElements(true).forEach(function (oElem) {
                if (oElem.isA("sap.ui.mdc.Table")) {
                  for (let i = 0; i < aMessages.length; i++) {
                    const oRowBinding = oElem.getRowBinding();
                    if (oRowBinding) {
                      const sElemeBindingPath = `${oViewContext.getPath()}/${oElem.getRowBinding().getPath()}`;
                      if (aMessages[i].target.indexOf(sElemeBindingPath) === 0) {
                        oRes.push({
                          table: oElem,
                          subsection: oSubSection
                        });
                        break;
                      }
                    }
                  }
                }
              });
            });
          });
        }
        return oRes;
      };
      // Search for table related to Messages and initialize the binding context of the parent subsection to retrieve the data
      const oTables = _findTablesRelatedToMessages.bind(this)(oView);
      oTables.forEach(function (_oTable) {
        var _oMDCTable$getBinding;
        const oMDCTable = _oTable.table,
          oSubsection = _oTable.subsection;
        if (!oMDCTable.getBindingContext() || ((_oMDCTable$getBinding = oMDCTable.getBindingContext()) === null || _oMDCTable$getBinding === void 0 ? void 0 : _oMDCTable$getBinding.getPath()) !== (oViewBindingContext === null || oViewBindingContext === void 0 ? void 0 : oViewBindingContext.getPath())) {
          oSubsection.setBindingContext(oViewBindingContext);
          if (!oMDCTable.getRowBinding().isLengthFinal()) {
            aWaitForData.push(new Promise(function (resolve) {
              oMDCTable.getRowBinding().attachEventOnce("dataReceived", function () {
                resolve();
              });
            }));
          }
        }
      });
      const waitForGroupingApplied = new Promise(resolve => {
        setTimeout(async () => {
          this._applyGrouping();
          resolve();
        }, 0);
      });
      try {
        await Promise.all(aWaitForData);
        oView.getModel().checkMessages();
        await waitForGroupingApplied;
      } catch (err) {
        Log.error("Error while grouping the messages in the messagePopOver");
      }
    }

    /**
     * The method that groups the messages based on the section or subsection they belong to.
     *
     * @private
     */;
    _proto._applyGrouping = function _applyGrouping() {
      this.oObjectPageLayout = this._getObjectPageLayout(this, this.oObjectPageLayout);
      if (!this.oObjectPageLayout) {
        return;
      }
      const aMessages = this.oMessagePopover.getItems();
      const aSections = messageHandling.getVisibleSectionsFromObjectPageLayout(this.oObjectPageLayout);
      const bEnableBinding = this._checkControlIdInSections(aMessages, false);
      if (bEnableBinding) {
        this._fnEnableBindings(aSections);
      }
    }

    /**
     * The method retrieves the binding context for the refError object.
     * The refError contains a map to store the indexes of the rows with errors.
     *
     * @param oTable The table for which we want to get the refError Object.
     * @returns Context of the refError.
     * @private
     */;
    _proto._getTableRefErrorContext = function _getTableRefErrorContext(oTable) {
      const oModel = oTable.getModel("internal");
      //initialize the refError property if it doesn't exist
      if (!oTable.getBindingContext("internal").getProperty("refError")) {
        oModel.setProperty("refError", {}, oTable.getBindingContext("internal"));
      }
      const sRefErrorContextPath = oTable.getBindingContext("internal").getPath() + "/refError/" + oTable.getBindingContext().getPath().replace("/", "$") + "$" + oTable.getRowBinding().getPath().replace("/", "$");
      const oContext = oModel.getContext(sRefErrorContextPath);
      if (!oContext.getProperty("")) {
        oModel.setProperty("", {}, oContext);
      }
      return oContext;
    };
    _proto._updateInternalModel = function _updateInternalModel(oTableRowContext, iRowIndex, sTableTargetColProperty, oTable, oMessageObject, bIsCreationRow) {
      let oTemp;
      if (bIsCreationRow) {
        oTemp = {
          rowIndex: "CreationRow",
          targetColProperty: sTableTargetColProperty ? sTableTargetColProperty : ""
        };
      } else {
        oTemp = {
          rowIndex: oTableRowContext ? iRowIndex : "",
          targetColProperty: sTableTargetColProperty ? sTableTargetColProperty : ""
        };
      }
      const oModel = oTable.getModel("internal"),
        oContext = this._getTableRefErrorContext(oTable);
      //we first remove the entries with obsolete message ids from the internal model before inserting the new error info :
      const aValidMessageIds = sap.ui.getCore().getMessageManager().getMessageModel().getData().map(function (message) {
        return message.id;
      });
      let aObsoleteMessagelIds;
      if (oContext.getProperty()) {
        aObsoleteMessagelIds = Object.keys(oContext.getProperty()).filter(function (internalMessageId) {
          return aValidMessageIds.indexOf(internalMessageId) === -1;
        });
        aObsoleteMessagelIds.forEach(function (obsoleteId) {
          delete oContext.getProperty()[obsoleteId];
        });
      }
      oModel.setProperty(oMessageObject.getId(), Object.assign({}, oContext.getProperty(oMessageObject.getId()) ? oContext.getProperty(oMessageObject.getId()) : {}, oTemp), oContext);
    }

    /**
     * The method that sets groups for transient messages.
     *
     * @param {object} message The transient message for which we want to compute and set group.
     * @param {string} sActionName The action name.
     * @private
     */;
    _proto._setGroupLabelForTransientMsg = function _setGroupLabelForTransientMsg(message, sActionName) {
      this.sLastActionText = this.sLastActionText ? this.sLastActionText : Core.getLibraryResourceBundle("sap.fe.core").getText("T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_LAST_ACTION");
      message.setGroupName(`${this.sLastActionText}: ${sActionName}`);
    }

    /**
     * The method that groups messages and adds the subtitle.
     *
     * @param {object} message The message we use to compute the group and subtitle.
     * @param {object} section The section containing the controls.
     * @param {object} subSection The subsection containing the controls.
     * @param {object} aElements List of controls from a subsection related to a message.
     * @param {boolean} bMultipleSubSections True if there is more than 1 subsection in the section.
     * @param {string} sActionName The action name.
     * @returns {object} Return the control targeted by the message.
     * @private
     */;
    _proto._computeMessageGroupAndSubTitle = function _computeMessageGroupAndSubTitle(message, section, subSection, aElements, bMultipleSubSections, sActionName) {
      var _message$getBindingCo;
      this.oItemBinding.detachChange(this._setMessageData, this);
      const oMessageObject = (_message$getBindingCo = message.getBindingContext("message")) === null || _message$getBindingCo === void 0 ? void 0 : _message$getBindingCo.getObject();
      const setSectionNameInGroup = true;
      let oElement, oTable, oTargetTableInfo, l, iRowIndex, oTargetedControl, bIsCreationRow;
      const bIsBackendMessage = new RegExp("^/").test(oMessageObject === null || oMessageObject === void 0 ? void 0 : oMessageObject.getTargets()[0]),
        oResourceBundle = Core.getLibraryResourceBundle("sap.fe.core");
      if (bIsBackendMessage) {
        for (l = 0; l < aElements.length; l++) {
          oElement = aElements[l];
          oTargetedControl = oElement;
          if (oElement.isA("sap.m.Table") || oElement.isA("sap.ui.table.Table")) {
            oTable = oElement.getParent();
            const oRowBinding = oTable.getRowBinding();
            const fnCallbackSetGroupName = (oMessageObj, actionName) => {
              this._setGroupLabelForTransientMsg(message, actionName);
            };
            if (oRowBinding && oRowBinding.isLengthFinal() && oTable.getBindingContext()) {
              const obj = messageHandling.getTableColumnDataAndSetSubtile(oMessageObject, oTable, oElement, oRowBinding, sActionName, setSectionNameInGroup, fnCallbackSetGroupName);
              oTargetTableInfo = obj.oTargetTableInfo;
              if (obj.subTitle) {
                message.setSubtitle(obj.subTitle);
              }
              message.setActiveTitle(!!oTargetTableInfo.oTableRowContext);
              if (oTargetTableInfo.oTableRowContext) {
                this._formatMessageDescription(message, oTargetTableInfo.oTableRowContext, oTargetTableInfo.sTableTargetColName, oResourceBundle, oTable);
              }
              iRowIndex = oTargetTableInfo.oTableRowContext && oTargetTableInfo.oTableRowContext.getIndex();
              this._updateInternalModel(oTargetTableInfo.oTableRowContext, iRowIndex, oTargetTableInfo.sTableTargetColProperty, oTable, oMessageObject);
            }
          } else {
            message.setActiveTitle(true);
            //check if the targeted control is a child of one of the other controls
            const bIsTargetedControlOrphan = messageHandling.bIsOrphanElement(oTargetedControl, aElements);
            if (bIsTargetedControlOrphan) {
              //set the subtitle
              message.setSubtitle("");
              break;
            }
          }
        }
      } else {
        //There is only one elt as this is a frontEnd message
        oTargetedControl = aElements[0];
        oTable = this._getMdcTable(oTargetedControl);
        if (oTable) {
          oTargetTableInfo = {};
          oTargetTableInfo.tableHeader = oTable.getHeader();
          const iTargetColumnIndex = this._getTableColumnIndex(oTargetedControl);
          oTargetTableInfo.sTableTargetColProperty = iTargetColumnIndex > -1 ? oTable.getColumns()[iTargetColumnIndex].getDataProperty() : undefined;
          oTargetTableInfo.sTableTargetColProperty = oTargetTableInfo.sTableTargetColProperty;
          oTargetTableInfo.sTableTargetColName = oTargetTableInfo.sTableTargetColProperty && iTargetColumnIndex > -1 ? oTable.getColumns()[iTargetColumnIndex].getHeader() : undefined;
          bIsCreationRow = this._getTableRow(oTargetedControl).isA("sap.ui.table.CreationRow");
          if (!bIsCreationRow) {
            iRowIndex = this._getTableRowIndex(oTargetedControl);
            oTargetTableInfo.oTableRowBindingContexts = oTable.getRowBinding().getCurrentContexts();
            oTargetTableInfo.oTableRowContext = oTargetTableInfo.oTableRowBindingContexts[iRowIndex];
          }
          const sMessageSubtitle = messageHandling.getMessageSubtitle(oMessageObject, oTargetTableInfo.oTableRowBindingContexts, oTargetTableInfo.oTableRowContext, oTargetTableInfo.sTableTargetColName, oResourceBundle, oTable, bIsCreationRow, iTargetColumnIndex === 0 && oTargetedControl.getValueState() === "Error" ? oTargetedControl : undefined);
          //set the subtitle
          if (sMessageSubtitle) {
            message.setSubtitle(sMessageSubtitle);
          }
          message.setActiveTitle(true);
          this._updateInternalModel(oTargetTableInfo.oTableRowContext, iRowIndex, oTargetTableInfo.sTableTargetColProperty, oTable, oMessageObject, bIsCreationRow);
        }
      }
      if (setSectionNameInGroup) {
        const sectionBasedGroupName = messageHandling.createSectionGroupName(section, subSection, bMultipleSubSections, oTargetTableInfo, oResourceBundle);
        message.setGroupName(sectionBasedGroupName);
        const sViewId = this._getViewId(this.getId());
        const oView = Core.byId(sViewId);
        const oMessageTargetProperty = oMessageObject.getTargets()[0] && oMessageObject.getTargets()[0].split("/").pop();
        const oUIModel = oView === null || oView === void 0 ? void 0 : oView.getModel("internal");
        if (oUIModel && oUIModel.getProperty("/messageTargetProperty") && oMessageTargetProperty && oMessageTargetProperty === oUIModel.getProperty("/messageTargetProperty")) {
          this.oMessagePopover.fireActiveTitlePress({
            item: message
          });
          oUIModel.setProperty("/messageTargetProperty", false);
        }
      }
      this.oItemBinding.attachChange(this._setMessageData, this);
      return oTargetedControl;
    };
    _proto._checkControlIdInSections = function _checkControlIdInSections(aMessages, bEnableBinding) {
      let section, aSubSections, message, i, j, k;
      this.sGeneralGroupText = this.sGeneralGroupText ? this.sGeneralGroupText : Core.getLibraryResourceBundle("sap.fe.core").getText("T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_GENERAL");
      //Get all sections from the object page layout
      const aVisibleSections = messageHandling.getVisibleSectionsFromObjectPageLayout(this.oObjectPageLayout);
      if (aVisibleSections) {
        var _oView$getBindingCont;
        const viewId = this._getViewId(this.getId());
        const oView = Core.byId(viewId);
        const sActionName = oView === null || oView === void 0 ? void 0 : (_oView$getBindingCont = oView.getBindingContext("internal")) === null || _oView$getBindingCont === void 0 ? void 0 : _oView$getBindingCont.getProperty("sActionName");
        if (sActionName) {
          (oView === null || oView === void 0 ? void 0 : oView.getBindingContext("internal")).setProperty("sActionName", null);
        }
        for (i = aMessages.length - 1; i >= 0; --i) {
          // Loop over all messages
          message = aMessages[i];
          let bIsGeneralGroupName = true;
          for (j = aVisibleSections.length - 1; j >= 0; --j) {
            // Loop over all visible sections
            section = aVisibleSections[j];
            aSubSections = section.getSubSections();
            for (k = aSubSections.length - 1; k >= 0; --k) {
              // Loop over all sub-sections
              const subSection = aSubSections[k];
              const oMessageObject = message.getBindingContext("message").getObject();
              const aControls = messageHandling.getControlFromMessageRelatingToSubSection(subSection, oMessageObject);
              if (aControls.length > 0) {
                const oTargetedControl = this._computeMessageGroupAndSubTitle(message, section, subSection, aControls, aSubSections.length > 1, sActionName);
                // if we found table that matches with the message, we don't stop the loop
                // in case we find an additional control (eg mdc field) that also match with the message
                if (oTargetedControl && !oTargetedControl.isA("sap.m.Table") && !oTargetedControl.isA("sap.ui.table.Table")) {
                  j = k = -1;
                }
                bIsGeneralGroupName = false;
              }
            }
          }
          if (bIsGeneralGroupName) {
            const oMessageObject = message.getBindingContext("message").getObject();
            message.setActiveTitle(false);
            if (oMessageObject.persistent && sActionName) {
              this._setGroupLabelForTransientMsg(message, sActionName);
            } else {
              message.setGroupName(this.sGeneralGroupText);
            }
          }
          if (!bEnableBinding && message.getGroupName() === this.sGeneralGroupText && this._findTargetForMessage(message)) {
            return true;
          }
        }
      }
    };
    _proto._findTargetForMessage = function _findTargetForMessage(message) {
      const messageObject = message.getBindingContext("message") && message.getBindingContext("message").getObject();
      if (messageObject && messageObject.target) {
        const oMetaModel = this.oObjectPageLayout && this.oObjectPageLayout.getModel() && this.oObjectPageLayout.getModel().getMetaModel(),
          contextPath = oMetaModel && oMetaModel.getMetaPath(messageObject.target),
          oContextPathMetadata = oMetaModel && oMetaModel.getObject(contextPath);
        if (oContextPathMetadata && oContextPathMetadata.$kind === "Property") {
          return true;
        }
      }
    };
    _proto._fnEnableBindings = function _fnEnableBindings(aSections) {
      if (UriParameters.fromQuery(window.location.search).get("sap-fe-xx-lazyloadingtest")) {
        return;
      }
      for (let iSection = 0; iSection < aSections.length; iSection++) {
        const oSection = aSections[iSection];
        let nonTableChartcontrolFound = false;
        const aSubSections = oSection.getSubSections();
        for (let iSubSection = 0; iSubSection < aSubSections.length; iSubSection++) {
          const oSubSection = aSubSections[iSubSection];
          const oAllBlocks = oSubSection.getBlocks();
          if (oAllBlocks) {
            for (let block = 0; block < oSubSection.getBlocks().length; block++) {
              var _oAllBlocks$block$get;
              if (oAllBlocks[block].getContent && !((_oAllBlocks$block$get = oAllBlocks[block].getContent()) !== null && _oAllBlocks$block$get !== void 0 && _oAllBlocks$block$get.isA("sap.fe.macros.table.TableAPI"))) {
                nonTableChartcontrolFound = true;
                break;
              }
            }
            if (nonTableChartcontrolFound) {
              oSubSection.setBindingContext(undefined);
            }
          }
          if (oSubSection.getBindingContext()) {
            this._findMessageGroupAfterRebinding();
            oSubSection.getBindingContext().getBinding().attachDataReceived(this._findMessageGroupAfterRebinding.bind(this));
          }
        }
      }
    };
    _proto._findMessageGroupAfterRebinding = function _findMessageGroupAfterRebinding() {
      const aMessages = this.oMessagePopover.getItems();
      this._checkControlIdInSections(aMessages, true);
    }

    /**
     * The method that retrieves the view ID (HTMLView/XMLView/JSONview/JSView/Templateview) of any control.
     *
     * @param sControlId ID of the control needed to retrieve the view ID
     * @returns The view ID of the control
     */;
    _proto._getViewId = function _getViewId(sControlId) {
      let sViewId,
        oControl = Core.byId(sControlId);
      while (oControl) {
        if (oControl instanceof View) {
          sViewId = oControl.getId();
          break;
        }
        oControl = oControl.getParent();
      }
      return sViewId;
    };
    _proto._setLongtextUrlDescription = function _setLongtextUrlDescription(sMessageDescriptionContent, oDiagnosisTitle) {
      this.oMessagePopover.setAsyncDescriptionHandler(function (config) {
        // This stores the old description
        const sOldDescription = sMessageDescriptionContent;
        // Here we can fetch the data and concatenate it to the old one
        // By default, the longtextUrl fetching will overwrite the description (with the default behaviour)
        // Here as we have overwritten the default async handler, which fetches and replaces the description of the item
        // we can manually modify it to include whatever needed.
        const sLongTextUrl = config.item.getLongtextUrl();
        if (sLongTextUrl) {
          jQuery.ajax({
            type: "GET",
            url: sLongTextUrl,
            success: function (data) {
              const sDiagnosisText = oDiagnosisTitle.getHtmlText() + data;
              config.item.setDescription(`${sOldDescription}${sDiagnosisText}`);
              config.promise.resolve();
            },
            error: function () {
              config.item.setDescription(sMessageDescriptionContent);
              const sError = `A request has failed for long text data. URL: ${sLongTextUrl}`;
              Log.error(sError);
              config.promise.reject(sError);
            }
          });
        }
      });
    };
    _proto._formatMessageDescription = function _formatMessageDescription(message, oTableRowContext, sTableTargetColName, oResourceBundle, oTable) {
      var _message$getBindingCo2;
      const sTableFirstColProperty = oTable.getParent().getIdentifierColumn();
      let sColumnInfo = "";
      const oMsgObj = (_message$getBindingCo2 = message.getBindingContext("message")) === null || _message$getBindingCo2 === void 0 ? void 0 : _message$getBindingCo2.getObject();
      const oColFromTableSettings = messageHandling.fetchColumnInfo(oMsgObj, oTable);
      if (sTableTargetColName) {
        // if column in present in table definition
        sColumnInfo = `${oResourceBundle.getText("T_MESSAGE_GROUP_DESCRIPTION_TABLE_COLUMN")}: ${sTableTargetColName}`;
      } else if (oColFromTableSettings) {
        if (oColFromTableSettings.availability === "Hidden") {
          // if column in neither in table definition nor personalization
          if (message.getType() === "Error") {
            sColumnInfo = sTableFirstColProperty ? `${oResourceBundle.getText("T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC_ERROR")} ${oTableRowContext.getValue(sTableFirstColProperty)}` + "." : `${oResourceBundle.getText("T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC_ERROR")}` + ".";
          } else {
            sColumnInfo = sTableFirstColProperty ? `${oResourceBundle.getText("T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC")} ${oTableRowContext.getValue(sTableFirstColProperty)}` + "." : `${oResourceBundle.getText("T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC")}` + ".";
          }
        } else {
          // if column is not in table definition but in personalization
          //if no navigation to sub op then remove link to error field BCP : 2280168899
          if (!this._navigationConfigured(oTable)) {
            message.setActiveTitle(false);
          }
          sColumnInfo = `${oResourceBundle.getText("T_MESSAGE_GROUP_DESCRIPTION_TABLE_COLUMN")}: ${oColFromTableSettings.label} (${oResourceBundle.getText("T_COLUMN_INDICATOR_IN_TABLE_DEFINITION")})`;
        }
      }
      const oFieldsAffectedTitle = new FormattedText({
        htmlText: `<html><body><strong>${oResourceBundle.getText("T_FIELDS_AFFECTED_TITLE")}</strong></body></html><br>`
      });
      let sFieldAffectedText;
      if (sTableFirstColProperty) {
        sFieldAffectedText = `${oFieldsAffectedTitle.getHtmlText()}<br>${oResourceBundle.getText("T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR")}: ${oTable.getHeader()}<br>${oResourceBundle.getText("T_MESSAGE_GROUP_DESCRIPTION_TABLE_ROW")}: ${oTableRowContext.getValue(sTableFirstColProperty)}<br>${sColumnInfo}<br>`;
      } else if (sColumnInfo == "" || !sColumnInfo) {
        sFieldAffectedText = "";
      } else {
        sFieldAffectedText = `${oFieldsAffectedTitle.getHtmlText()}<br>${oResourceBundle.getText("T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR")}: ${oTable.getHeader()}<br>${sColumnInfo}<br>`;
      }
      const oDiagnosisTitle = new FormattedText({
        htmlText: `<html><body><strong>${oResourceBundle.getText("T_DIAGNOSIS_TITLE")}</strong></body></html><br>`
      });
      // get the UI messages from the message context to set it to Diagnosis section
      const sUIMessageDescription = message.getBindingContext("message").getObject().description;
      //set the description to null to reset it below
      message.setDescription(null);
      let sDiagnosisText = "";
      let sMessageDescriptionContent = "";
      if (message.getLongtextUrl()) {
        sMessageDescriptionContent = `${sFieldAffectedText}<br>`;
        this._setLongtextUrlDescription(sMessageDescriptionContent, oDiagnosisTitle);
      } else if (sUIMessageDescription) {
        sDiagnosisText = `${oDiagnosisTitle.getHtmlText()}<br>${sUIMessageDescription}`;
        sMessageDescriptionContent = `${sFieldAffectedText}<br>${sDiagnosisText}`;
        message.setDescription(sMessageDescriptionContent);
      } else {
        message.setDescription(sFieldAffectedText);
      }
    }

    /**
     * Method to set the button text, count and icon property based upon the message items
     * ButtonType:  Possible settings for warning and error messages are 'critical' and 'negative'.
     *
     *
     * @private
     */;
    _proto._setMessageData = function _setMessageData() {
      clearTimeout(this._setMessageDataTimeout);
      this._setMessageDataTimeout = setTimeout(async () => {
        const sIcon = "",
          oMessages = this.oMessagePopover.getItems(),
          oMessageCount = {
            Error: 0,
            Warning: 0,
            Success: 0,
            Information: 0
          },
          oResourceBundle = Core.getLibraryResourceBundle("sap.fe.core"),
          iMessageLength = oMessages.length;
        let sButtonType = ButtonType.Default,
          sMessageKey = "",
          sTooltipText = "",
          sMessageText = "";
        if (iMessageLength > 0) {
          for (let i = 0; i < iMessageLength; i++) {
            if (!oMessages[i].getType() || oMessages[i].getType() === "") {
              ++oMessageCount["Information"];
            } else {
              ++oMessageCount[oMessages[i].getType()];
            }
          }
          if (oMessageCount[MessageType.Error] > 0) {
            sButtonType = ButtonType.Negative;
          } else if (oMessageCount[MessageType.Warning] > 0) {
            sButtonType = ButtonType.Critical;
          } else if (oMessageCount[MessageType.Success] > 0) {
            sButtonType = ButtonType.Success;
          } else if (oMessageCount[MessageType.Information] > 0) {
            sButtonType = ButtonType.Neutral;
          }
          const totalNumberOfMessages = oMessageCount[MessageType.Error] + oMessageCount[MessageType.Warning] + oMessageCount[MessageType.Success] + oMessageCount[MessageType.Information];
          this.setText(totalNumberOfMessages.toString());
          if (oMessageCount.Error === 1) {
            sMessageKey = "C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_TITLE_ERROR";
          } else if (oMessageCount.Error > 1) {
            sMessageKey = "C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_MULTIPLE_ERROR_TOOLTIP";
          } else if (!oMessageCount.Error && oMessageCount.Warning) {
            sMessageKey = "C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_WARNING_TOOLTIP";
          } else if (!oMessageCount.Error && !oMessageCount.Warning && oMessageCount.Information) {
            sMessageKey = "C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_INFO";
          } else if (!oMessageCount.Error && !oMessageCount.Warning && !oMessageCount.Information && oMessageCount.Success) {
            sMessageKey = "C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_SUCCESS";
          }
          if (sMessageKey) {
            sMessageText = oResourceBundle.getText(sMessageKey);
            sTooltipText = oMessageCount.Error ? `${oMessageCount.Error} ${sMessageText}` : sMessageText;
            this.setTooltip(sTooltipText);
          }
          this.setIcon(sIcon);
          this.setType(sButtonType);
          this.setVisible(true);
          const oView = Core.byId(this.sViewId);
          if (oView) {
            const oPageReady = oView.getController().pageReady;
            try {
              await oPageReady.waitPageReady();
              await this._applyGroupingAsync(oView);
            } catch (err) {
              Log.error("fail grouping messages");
            }
            this.fireMessageChange({
              iMessageLength: iMessageLength
            });
          }
          if (iMessageLength > 1) {
            this.oMessagePopover.navigateBack();
          }
        } else {
          this.setVisible(false);
          this.fireMessageChange({
            iMessageLength: iMessageLength
          });
        }
      }, 100);
    }

    /**
     * The method that is called when a user clicks on the title of the message.
     *
     * @function
     * @name _activeTitlePress
     * @private
     * @param oEvent Event object passed from the handler
     */;
    _proto._activeTitlePress = async function _activeTitlePress(oEvent) {
      const oInternalModelContext = this.getBindingContext("pageInternal");
      oInternalModelContext.setProperty("errorNavigationSectionFlag", true);
      const oItem = oEvent.getParameter("item"),
        oMessage = oItem.getBindingContext("message").getObject(),
        bIsBackendMessage = new RegExp("^/").test(oMessage.getTarget()),
        oView = Core.byId(this.sViewId);
      let oControl, sSectionTitle;
      const _defaultFocus = function (message, mdcTable) {
        const focusInfo = {
          preventScroll: true,
          targetInfo: message
        };
        mdcTable.focus(focusInfo);
      };

      //check if the pressed item is related to a table control
      if (oItem.getGroupName().indexOf("Table:") !== -1) {
        let oTargetMdcTable;
        if (bIsBackendMessage) {
          oTargetMdcTable = oMessage.controlIds.map(function (sControlId) {
            const control = Core.byId(sControlId);
            const oParentControl = control && control.getParent();
            return oParentControl && oParentControl.isA("sap.ui.mdc.Table") && oParentControl.getHeader() === oItem.getGroupName().split(", Table: ")[1] ? oParentControl : null;
          }).reduce(function (acc, val) {
            return val ? val : acc;
          });
          if (oTargetMdcTable) {
            sSectionTitle = oItem.getGroupName().split(", ")[0];
            try {
              await this._navigateFromMessageToSectionTableInIconTabBarMode(oTargetMdcTable, this.oObjectPageLayout, sSectionTitle);
              const oRefErrorContext = this._getTableRefErrorContext(oTargetMdcTable);
              const oRefError = oRefErrorContext.getProperty(oItem.getBindingContext("message").getObject().getId());
              const _setFocusOnTargetField = async (targetMdcTable, iRowIndex) => {
                const aTargetMdcTableRow = this._getMdcTableRows(targetMdcTable),
                  iFirstVisibleRow = this._getGridTable(targetMdcTable).getFirstVisibleRow();
                if (aTargetMdcTableRow.length > 0 && aTargetMdcTableRow[0]) {
                  const oTargetRow = aTargetMdcTableRow[iRowIndex - iFirstVisibleRow],
                    oTargetCell = this.getTargetCell(oTargetRow, oMessage);
                  if (oTargetCell) {
                    this.setFocusToControl(oTargetCell);
                    return undefined;
                  } else {
                    // control not found on table
                    const errorProperty = oMessage.getTarget().split("/").pop();
                    if (errorProperty) {
                      oView.getModel("internal").setProperty("/messageTargetProperty", errorProperty);
                    }
                    if (this._navigationConfigured(targetMdcTable)) {
                      return oView.getController()._routing.navigateForwardToContext(oTargetRow.getBindingContext());
                    } else {
                      return false;
                    }
                  }
                }
                return undefined;
              };
              if (oTargetMdcTable.data("tableType") === "GridTable" && oRefError.rowIndex !== "") {
                const iFirstVisibleRow = this._getGridTable(oTargetMdcTable).getFirstVisibleRow();
                try {
                  await oTargetMdcTable.scrollToIndex(oRefError.rowIndex);
                  const aTargetMdcTableRow = this._getMdcTableRows(oTargetMdcTable);
                  let iNewFirstVisibleRow, bScrollNeeded;
                  if (aTargetMdcTableRow.length > 0 && aTargetMdcTableRow[0]) {
                    iNewFirstVisibleRow = aTargetMdcTableRow[0].getParent().getFirstVisibleRow();
                    bScrollNeeded = iFirstVisibleRow - iNewFirstVisibleRow !== 0;
                  }
                  let oWaitControlIdAdded;
                  if (bScrollNeeded) {
                    //The scrollToIndex function does not wait for the UI update. As a workaround, pending a fix from MDC (BCP: 2170251631) we use the event "UIUpdated".
                    oWaitControlIdAdded = new Promise(function (resolve) {
                      Core.attachEvent("UIUpdated", resolve);
                    });
                  } else {
                    oWaitControlIdAdded = Promise.resolve();
                  }
                  await oWaitControlIdAdded;
                  setTimeout(async function () {
                    const focusOnTargetField = await _setFocusOnTargetField(oTargetMdcTable, oRefError.rowIndex);
                    if (focusOnTargetField === false) {
                      _defaultFocus(oMessage, oTargetMdcTable);
                    }
                  }, 0);
                } catch (err) {
                  Log.error("Error while focusing on error");
                }
              } else if (oTargetMdcTable.data("tableType") === "ResponsiveTable" && oRefError) {
                const focusOnMessageTargetControl = await this.focusOnMessageTargetControl(oView, oMessage, oTargetMdcTable, oRefError.rowIndex);
                if (focusOnMessageTargetControl === false) {
                  _defaultFocus(oMessage, oTargetMdcTable);
                }
              } else {
                this.focusOnMessageTargetControl(oView, oMessage);
              }
            } catch (err) {
              Log.error("Fail to navigate to Error control");
            }
          }
        } else {
          oControl = Core.byId(oMessage.controlIds[0]);
          //If the control underlying the frontEnd message is not within the current section, we first go into the target section:
          const oSelectedSection = Core.byId(this.oObjectPageLayout.getSelectedSection());
          if ((oSelectedSection === null || oSelectedSection === void 0 ? void 0 : oSelectedSection.findElements(true).indexOf(oControl)) === -1) {
            sSectionTitle = oItem.getGroupName().split(", ")[0];
            this._navigateFromMessageToSectionInIconTabBarMode(this.oObjectPageLayout, sSectionTitle);
          }
          this.setFocusToControl(oControl);
        }
      } else {
        // focus on control
        sSectionTitle = oItem.getGroupName().split(", ")[0];
        this._navigateFromMessageToSectionInIconTabBarMode(this.oObjectPageLayout, sSectionTitle);
        this.focusOnMessageTargetControl(oView, oMessage);
      }
    }

    /**
     * Retrieves a table cell targeted by a message.
     *
     * @param {object} targetRow A table row
     * @param {object} message Message targeting a cell
     * @returns {object} Returns the cell
     * @private
     */;
    _proto.getTargetCell = function getTargetCell(targetRow, message) {
      return message.getControlIds().length > 0 ? message.getControlIds().map(function (controlId) {
        const isControlInTable = targetRow.findElements(true, function (elem) {
          return elem.getId() === controlId;
        });
        return isControlInTable.length > 0 ? Core.byId(controlId) : null;
      }).reduce(function (acc, val) {
        return val ? val : acc;
      }) : null;
    }

    /**
     * Focus on the control targeted by a message.
     *
     * @param {object} view The current view
     * @param {object} message The message targeting the control on which we want to set the focus
     * @param {object} targetMdcTable The table targeted by the message (optional)
     * @param {number} rowIndex The row index of the table targeted by the message (optional)
     * @returns {Promise} Promise
     * @private
     */;
    _proto.focusOnMessageTargetControl = async function focusOnMessageTargetControl(view, message, targetMdcTable, rowIndex) {
      const aAllViewElements = view.findElements(true);
      const aErroneousControls = message.getControlIds().filter(function (sControlId) {
        return aAllViewElements.some(function (oElem) {
          return oElem.getId() === sControlId && oElem.getDomRef();
        });
      }).map(function (sControlId) {
        return Core.byId(sControlId);
      });
      const aNotTableErroneousControls = aErroneousControls.filter(function (oElem) {
        return !oElem.isA("sap.m.Table") && !oElem.isA("sap.ui.table.Table");
      });
      //The focus is set on Not Table control in priority
      if (aNotTableErroneousControls.length > 0) {
        this.setFocusToControl(aNotTableErroneousControls[0]);
        return undefined;
      } else if (aErroneousControls.length > 0) {
        const aTargetMdcTableRow = targetMdcTable ? targetMdcTable.findElements(true, function (oElem) {
          return oElem.isA(ColumnListItem.getMetadata().getName());
        }) : [];
        if (aTargetMdcTableRow.length > 0 && aTargetMdcTableRow[0]) {
          const oTargetRow = aTargetMdcTableRow[rowIndex];
          const oTargetCell = this.getTargetCell(oTargetRow, message);
          if (oTargetCell) {
            const oTargetField = oTargetCell.isA("sap.fe.macros.field.FieldAPI") ? oTargetCell.getContent().getContentEdit()[0] : oTargetCell.getItems()[0].getContent().getContentEdit()[0];
            this.setFocusToControl(oTargetField);
            return undefined;
          } else {
            const errorProperty = message.getTarget().split("/").pop();
            if (errorProperty) {
              view.getModel("internal").setProperty("/messageTargetProperty", errorProperty);
            }
            if (this._navigationConfigured(targetMdcTable)) {
              return view.getController()._routing.navigateForwardToContext(oTargetRow.getBindingContext());
            } else {
              return false;
            }
          }
        }
        return undefined;
      }
      return undefined;
    }

    /**
     *
     * @param obj The message object
     * @param aSections The array of sections in the object page
     * @returns The rank of the message
     */;
    _proto._getMessageRank = function _getMessageRank(obj, aSections) {
      if (aSections) {
        let section, aSubSections, subSection, j, k, aElements, aAllElements, sectionRank;
        for (j = aSections.length - 1; j >= 0; --j) {
          // Loop over all sections
          section = aSections[j];
          aSubSections = section.getSubSections();
          for (k = aSubSections.length - 1; k >= 0; --k) {
            // Loop over all sub-sections
            subSection = aSubSections[k];
            aAllElements = subSection.findElements(true); // Get all elements inside a sub-section
            //Try to find the control 1 inside the sub section
            aElements = aAllElements.filter(this._fnFilterUponId.bind(this, obj.getControlId()));
            sectionRank = j + 1;
            if (aElements.length > 0) {
              if (section.getVisible() && subSection.getVisible()) {
                if (!obj.hasOwnProperty("sectionName")) {
                  obj.sectionName = section.getTitle();
                }
                if (!obj.hasOwnProperty("subSectionName")) {
                  obj.subSectionName = subSection.getTitle();
                }
                return sectionRank * 10 + (k + 1);
              } else {
                // if section or subsection is invisible then group name would be Last Action
                // so ranking should be lower
                return 1;
              }
            }
          }
        }
        //if sub section title is Other messages, we return a high number(rank), which ensures
        //that messages belonging to this sub section always come later in messagePopover
        if (!obj.sectionName && !obj.subSectionName && obj.persistent) {
          return 1;
        }
        return 999;
      }
      return 999;
    }

    /**
     * Method to set the filters based upon the message items
     * The desired filter operation is:
     * ( filters provided by user && ( validation = true && Control should be present in view ) || messages for the current matching context ).
     *
     * @private
     */;
    _proto._applyFiltersAndSort = function _applyFiltersAndSort() {
      let oValidationFilters,
        oValidationAndContextFilter,
        oFilters,
        sPath,
        oSorter,
        oDialogFilter,
        objectPageLayoutSections = null;
      const aUserDefinedFilter = [];
      const filterOutMessagesInDialog = () => {
        const fnTest = aControlIds => {
          let index = Infinity,
            oControl = Core.byId(aControlIds[0]);
          const errorFieldControl = Core.byId(aControlIds[0]);
          while (oControl) {
            const fieldRankinDialog = oControl instanceof Dialog ? (errorFieldControl === null || errorFieldControl === void 0 ? void 0 : errorFieldControl.getParent()).findElements(true).indexOf(errorFieldControl) : Infinity;
            if (oControl instanceof Dialog) {
              if (index > fieldRankinDialog) {
                index = fieldRankinDialog;
                // Set the focus to the dialog's control
                this.setFocusToControl(errorFieldControl);
              }
              // messages for sap.m.Dialog should not appear in the message button
              return false;
            }
            oControl = oControl.getParent();
          }
          return true;
        };
        return new Filter({
          path: "controlIds",
          test: fnTest,
          caseSensitive: true
        });
      };
      //Filter function to verify if the control is part of the current view or not
      function getCheckControlInViewFilter() {
        const fnTest = function (aControlIds) {
          if (!aControlIds.length) {
            return false;
          }
          let oControl = Core.byId(aControlIds[0]);
          while (oControl) {
            if (oControl.getId() === sViewId) {
              return true;
            }
            if (oControl instanceof Dialog) {
              // messages for sap.m.Dialog should not appear in the message button
              return false;
            }
            oControl = oControl.getParent();
          }
          return false;
        };
        return new Filter({
          path: "controlIds",
          test: fnTest,
          caseSensitive: true
        });
      }
      if (!this.sViewId) {
        this.sViewId = this._getViewId(this.getId());
      }
      const sViewId = this.sViewId;
      //Add the filters provided by the user
      const aCustomFilters = this.getAggregation("customFilters");
      if (aCustomFilters) {
        aCustomFilters.forEach(function (filter) {
          aUserDefinedFilter.push(new Filter({
            path: filter.getProperty("path"),
            operator: filter.getProperty("operator"),
            value1: filter.getProperty("value1"),
            value2: filter.getProperty("value2")
          }));
        });
      }
      const oBindingContext = this.getBindingContext();
      if (!oBindingContext) {
        this.setVisible(false);
        return;
      } else {
        sPath = oBindingContext.getPath();
        //Filter for filtering out only validation messages which are currently present in the view
        oValidationFilters = new Filter({
          filters: [new Filter({
            path: "validation",
            operator: FilterOperator.EQ,
            value1: true
          }), getCheckControlInViewFilter()],
          and: true
        });
        //Filter for filtering out the bound messages i.e target starts with the context path
        oValidationAndContextFilter = new Filter({
          filters: [oValidationFilters, new Filter({
            path: "target",
            operator: FilterOperator.StartsWith,
            value1: sPath
          })],
          and: false
        });
        oDialogFilter = new Filter({
          filters: [filterOutMessagesInDialog()]
        });
      }
      const oValidationContextDialogFilters = new Filter({
        filters: [oValidationAndContextFilter, oDialogFilter],
        and: true
      });
      // and finally - if there any - add custom filter (via OR)
      if (aUserDefinedFilter.length > 0) {
        oFilters = new Filter({
          filters: [aUserDefinedFilter, oValidationContextDialogFilters],
          and: false
        });
      } else {
        oFilters = oValidationContextDialogFilters;
      }
      this.oItemBinding.filter(oFilters);
      this.oObjectPageLayout = this._getObjectPageLayout(this, this.oObjectPageLayout);
      // We support sorting only for ObjectPageLayout use-case.
      if (this.oObjectPageLayout) {
        oSorter = new Sorter("", null, null, (obj1, obj2) => {
          if (!objectPageLayoutSections) {
            objectPageLayoutSections = this.oObjectPageLayout && this.oObjectPageLayout.getSections();
          }
          const rankA = this._getMessageRank(obj1, objectPageLayoutSections);
          const rankB = this._getMessageRank(obj2, objectPageLayoutSections);
          if (rankA < rankB) {
            return -1;
          }
          if (rankA > rankB) {
            return 1;
          }
          return 0;
        });
        this.oItemBinding.sort(oSorter);
      }
    }

    /**
     *
     * @param sControlId
     * @param oItem
     * @returns True if the control ID matches the item ID
     */;
    _proto._fnFilterUponId = function _fnFilterUponId(sControlId, oItem) {
      return sControlId === oItem.getId();
    }

    /**
     * Retrieves the section based on section title and visibility.
     *
     * @param oObjectPage Object page.
     * @param sSectionTitle Section title.
     * @returns The section
     * @private
     */;
    _proto._getSectionBySectionTitle = function _getSectionBySectionTitle(oObjectPage, sSectionTitle) {
      let oSection;
      if (sSectionTitle) {
        const aSections = oObjectPage.getSections();
        for (let i = 0; i < aSections.length; i++) {
          if (aSections[i].getVisible() && aSections[i].getTitle() === sSectionTitle) {
            oSection = aSections[i];
            break;
          }
        }
      }
      return oSection;
    }

    /**
     * Navigates to the section if the object page uses an IconTabBar and if the current section is not the target of the navigation.
     *
     * @param oObjectPage Object page.
     * @param sSectionTitle Section title.
     * @private
     */;
    _proto._navigateFromMessageToSectionInIconTabBarMode = function _navigateFromMessageToSectionInIconTabBarMode(oObjectPage, sSectionTitle) {
      const bUseIconTabBar = oObjectPage.getUseIconTabBar();
      if (bUseIconTabBar) {
        const oSection = this._getSectionBySectionTitle(oObjectPage, sSectionTitle);
        const sSelectedSectionId = oObjectPage.getSelectedSection();
        if (oSection && sSelectedSectionId !== oSection.getId()) {
          oObjectPage.setSelectedSection(oSection.getId());
        }
      }
    };
    _proto._navigateFromMessageToSectionTableInIconTabBarMode = async function _navigateFromMessageToSectionTableInIconTabBarMode(oTable, oObjectPage, sSectionTitle) {
      const oRowBinding = oTable.getRowBinding();
      const oTableContext = oTable.getBindingContext();
      const oOPContext = oObjectPage.getBindingContext();
      const bShouldWaitForTableRefresh = !(oTableContext === oOPContext);
      this._navigateFromMessageToSectionInIconTabBarMode(oObjectPage, sSectionTitle);
      return new Promise(function (resolve) {
        if (bShouldWaitForTableRefresh) {
          oRowBinding.attachEventOnce("change", function () {
            resolve();
          });
        } else {
          resolve();
        }
      });
    }

    /**
     * Retrieves the MdcTable if it is found among any of the parent elements.
     *
     * @param oElement Control
     * @returns MDC table || undefined
     * @private
     */;
    _proto._getMdcTable = function _getMdcTable(oElement) {
      //check if the element has a table within any of its parents
      let oParentElement = oElement.getParent();
      while (oParentElement && !oParentElement.isA("sap.ui.mdc.Table")) {
        oParentElement = oParentElement.getParent();
      }
      return oParentElement && oParentElement.isA("sap.ui.mdc.Table") ? oParentElement : undefined;
    };
    _proto._getGridTable = function _getGridTable(oMdcTable) {
      return oMdcTable.findElements(true, function (oElem) {
        return oElem.isA("sap.ui.table.Table") && /** We check the element belongs to the MdcTable :*/
        oElem.getParent() === oMdcTable;
      })[0];
    }

    /**
     * Retrieves the table row (if available) containing the element.
     *
     * @param oElement Control
     * @returns Table row || undefined
     * @private
     */;
    _proto._getTableRow = function _getTableRow(oElement) {
      let oParentElement = oElement.getParent();
      while (oParentElement && !oParentElement.isA("sap.ui.table.Row") && !oParentElement.isA("sap.ui.table.CreationRow") && !oParentElement.isA(ColumnListItem.getMetadata().getName())) {
        oParentElement = oParentElement.getParent();
      }
      return oParentElement && (oParentElement.isA("sap.ui.table.Row") || oParentElement.isA("sap.ui.table.CreationRow") || oParentElement.isA(ColumnListItem.getMetadata().getName())) ? oParentElement : undefined;
    }

    /**
     * Retrieves the index of the table row containing the element.
     *
     * @param oElement Control
     * @returns Row index || undefined
     * @private
     */;
    _proto._getTableRowIndex = function _getTableRowIndex(oElement) {
      const oTableRow = this._getTableRow(oElement);
      let iRowIndex;
      if (oTableRow.isA("sap.ui.table.Row")) {
        iRowIndex = oTableRow.getIndex();
      } else {
        iRowIndex = oTableRow.getTable().getItems().findIndex(function (element) {
          return element.getId() === oTableRow.getId();
        });
      }
      return iRowIndex;
    }

    /**
     * Retrieves the index of the table column containing the element.
     *
     * @param oElement Control
     * @returns Column index || undefined
     * @private
     */;
    _proto._getTableColumnIndex = function _getTableColumnIndex(oElement) {
      const getTargetCellIndex = function (element, oTargetRow) {
        return oTargetRow.getCells().findIndex(function (oCell) {
          return oCell.getId() === element.getId();
        });
      };
      const getTargetColumnIndex = function (element, oTargetRow) {
        let oTargetElement = element.getParent(),
          iTargetCellIndex = getTargetCellIndex(oTargetElement, oTargetRow);
        while (oTargetElement && iTargetCellIndex < 0) {
          oTargetElement = oTargetElement.getParent();
          iTargetCellIndex = getTargetCellIndex(oTargetElement, oTargetRow);
        }
        return iTargetCellIndex;
      };
      const oTargetRow = this._getTableRow(oElement);
      let iTargetColumnIndex;
      iTargetColumnIndex = getTargetColumnIndex(oElement, oTargetRow);
      if (oTargetRow.isA("sap.ui.table.CreationRow")) {
        const sTargetCellId = oTargetRow.getCells()[iTargetColumnIndex].getId(),
          aTableColumns = oTargetRow.getTable().getColumns();
        iTargetColumnIndex = aTableColumns.findIndex(function (column) {
          if (column.getCreationTemplate()) {
            return sTargetCellId.search(column.getCreationTemplate().getId()) > -1 ? true : false;
          } else {
            return false;
          }
        });
      }
      return iTargetColumnIndex;
    };
    _proto._getMdcTableRows = function _getMdcTableRows(oMdcTable) {
      return oMdcTable.findElements(true, function (oElem) {
        return oElem.isA("sap.ui.table.Row") && /** We check the element belongs to the Mdc Table :*/
        oElem.getTable().getParent() === oMdcTable;
      });
    };
    _proto._getObjectPageLayout = function _getObjectPageLayout(oElement, oObjectPageLayout) {
      if (oObjectPageLayout) {
        return oObjectPageLayout;
      }
      oObjectPageLayout = oElement;
      //Iterate over parent till you have not reached the object page layout
      while (oObjectPageLayout && !oObjectPageLayout.isA("sap.uxap.ObjectPageLayout")) {
        oObjectPageLayout = oObjectPageLayout.getParent();
      }
      return oObjectPageLayout;
    }

    /**
     * The method that is called to check if a navigation is configured from the table to a sub object page.
     *
     * @private
     * @param table MdcTable
     * @returns Either true or false
     */;
    _proto._navigationConfigured = function _navigationConfigured(table) {
      // TODO: this logic would be moved to check the same at the template time to avoid the same check happening multiple times.
      const component = sap.ui.require("sap/ui/core/Component"),
        navObject = table && component.getOwnerComponentFor(table) && component.getOwnerComponentFor(table).getNavigation();
      let subOPConfigured = false,
        navConfigured = false;
      if (navObject && Object.keys(navObject).indexOf(table.getRowBinding().sPath) !== -1) {
        subOPConfigured = navObject[table === null || table === void 0 ? void 0 : table.getRowBinding().sPath] && navObject[table === null || table === void 0 ? void 0 : table.getRowBinding().sPath].detail && navObject[table === null || table === void 0 ? void 0 : table.getRowBinding().sPath].detail.route ? true : false;
      }
      navConfigured = subOPConfigured && (table === null || table === void 0 ? void 0 : table.getRowSettings().getRowActions()) && (table === null || table === void 0 ? void 0 : table.getRowSettings().getRowActions()[0].mProperties.type.indexOf("Navigation")) !== -1;
      return navConfigured;
    };
    _proto.setFocusToControl = function setFocusToControl(control) {
      const messagePopover = this.oMessagePopover;
      if (messagePopover && control && control.focus) {
        const fnFocus = () => {
          control.focus();
        };
        if (!messagePopover.isOpen()) {
          // when navigating to parent page to child page (on click of message), the child page might have a focus logic that might use a timeout.
          // we use the below timeouts to override this focus so that we focus on the target control of the message in the child page.
          setTimeout(fnFocus, 0);
        } else {
          const fnOnClose = () => {
            setTimeout(fnFocus, 0);
            messagePopover.detachEvent("afterClose", fnOnClose);
          };
          messagePopover.attachEvent("afterClose", fnOnClose);
          messagePopover.close();
        }
      } else {
        Log.warning("FE V4 : MessageButton : element doesn't have focus method for focusing.");
      }
    };
    return MessageButton;
  }(Button), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "customFilters", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "messageChange", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  return MessageButton;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/messages/MessageButton", ["sap/base/Log","sap/base/util/UriParameters","sap/fe/core/controllerextensions/messageHandler/messageHandling","sap/fe/core/helpers/ClassSupport","sap/fe/macros/messages/MessagePopover","sap/m/Button","sap/m/ColumnListItem","sap/m/Dialog","sap/m/FormattedText","sap/m/library","sap/ui/core/Core","sap/ui/core/library","sap/ui/core/mvc/View","sap/ui/model/Filter","sap/ui/model/FilterOperator","sap/ui/model/Sorter"],function(e,t,n,i,o,s,r,a,g,l,c,u,f,d,h,p){"use strict";var T,b,_,m,I,C,P;var y=u.MessageType;var E=l.ButtonType;var S=i.event;var M=i.defineUI5Class;var v=i.aggregation;function w(e,t,n,i){if(!n)return;Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(i):void 0})}function x(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function A(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;O(e,t)}function O(e,t){O=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,n){t.__proto__=n;return t};return O(e,t)}function R(e,t,n,i,o){var s={};Object.keys(i).forEach(function(e){s[e]=i[e]});s.enumerable=!!s.enumerable;s.configurable=!!s.configurable;if("value"in s||s.initializer){s.writable=true}s=n.slice().reverse().reduce(function(n,i){return i(e,t,n)||n},s);if(o&&s.initializer!==void 0){s.value=s.initializer?s.initializer.call(o):void 0;s.initializer=undefined}if(s.initializer===void 0){Object.defineProperty(e,t,s);s=null}return s}function B(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let L=(T=M("sap.fe.macros.messages.MessageButton"),b=v({type:"sap.fe.macros.messages.MessageFilter",multiple:true,singularName:"customFilter"}),_=S(),T(m=(I=function(i){A(l,i);function l(){var e;for(var t=arguments.length,n=new Array(t),o=0;o<t;o++){n[o]=arguments[o]}e=i.call(this,...n)||this;w(e,"customFilters",C,x(e));w(e,"messageChange",P,x(e));e.sGeneralGroupText="";e.sViewId="";e.sLastActionText="";return e}var u=l.prototype;u.init=function e(){s.prototype.init.apply(this);this.attachPress(this.handleMessagePopoverPress,this);this.oMessagePopover=new o;this.oItemBinding=this.oMessagePopover.getBinding("items");this.oItemBinding.attachChange(this._setMessageData,this);const t=this.getId();if(t){this.oMessagePopover.addCustomData(new sap.ui.core.CustomData({key:"messageButtonId",value:t}))}this.attachModelContextChange(this._applyFiltersAndSort.bind(this));this.oMessagePopover.attachActiveTitlePress(this._activeTitlePress.bind(this))};u.handleMessagePopoverPress=function e(t){this.oMessagePopover.toggle(t.getSource())};u._applyGroupingAsync=async function t(i){const o=[];const s=i.getBindingContext();const r=e=>{const t=[];const i=this.oItemBinding.getContexts().map(function(e){return e.getObject()});const o=e.getBindingContext();if(o){const s=e.getContent()[0];n.getVisibleSectionsFromObjectPageLayout(s).forEach(function(e){e.getSubSections().forEach(function(e){e.findElements(true).forEach(function(n){if(n.isA("sap.ui.mdc.Table")){for(let s=0;s<i.length;s++){const r=n.getRowBinding();if(r){const r=`${o.getPath()}/${n.getRowBinding().getPath()}`;if(i[s].target.indexOf(r)===0){t.push({table:n,subsection:e});break}}}}})})})}return t};const a=r.bind(this)(i);a.forEach(function(e){var t;const n=e.table,i=e.subsection;if(!n.getBindingContext()||((t=n.getBindingContext())===null||t===void 0?void 0:t.getPath())!==(s===null||s===void 0?void 0:s.getPath())){i.setBindingContext(s);if(!n.getRowBinding().isLengthFinal()){o.push(new Promise(function(e){n.getRowBinding().attachEventOnce("dataReceived",function(){e()})}))}}});const g=new Promise(e=>{setTimeout(async()=>{this._applyGrouping();e()},0)});try{await Promise.all(o);i.getModel().checkMessages();await g}catch(t){e.error("Error while grouping the messages in the messagePopOver")}};u._applyGrouping=function e(){this.oObjectPageLayout=this._getObjectPageLayout(this,this.oObjectPageLayout);if(!this.oObjectPageLayout){return}const t=this.oMessagePopover.getItems();const i=n.getVisibleSectionsFromObjectPageLayout(this.oObjectPageLayout);const o=this._checkControlIdInSections(t,false);if(o){this._fnEnableBindings(i)}};u._getTableRefErrorContext=function e(t){const n=t.getModel("internal");if(!t.getBindingContext("internal").getProperty("refError")){n.setProperty("refError",{},t.getBindingContext("internal"))}const i=t.getBindingContext("internal").getPath()+"/refError/"+t.getBindingContext().getPath().replace("/","$")+"$"+t.getRowBinding().getPath().replace("/","$");const o=n.getContext(i);if(!o.getProperty("")){n.setProperty("",{},o)}return o};u._updateInternalModel=function e(t,n,i,o,s,r){let a;if(r){a={rowIndex:"CreationRow",targetColProperty:i?i:""}}else{a={rowIndex:t?n:"",targetColProperty:i?i:""}}const g=o.getModel("internal"),l=this._getTableRefErrorContext(o);const c=sap.ui.getCore().getMessageManager().getMessageModel().getData().map(function(e){return e.id});let u;if(l.getProperty()){u=Object.keys(l.getProperty()).filter(function(e){return c.indexOf(e)===-1});u.forEach(function(e){delete l.getProperty()[e]})}g.setProperty(s.getId(),Object.assign({},l.getProperty(s.getId())?l.getProperty(s.getId()):{},a),l)};u._setGroupLabelForTransientMsg=function e(t,n){this.sLastActionText=this.sLastActionText?this.sLastActionText:c.getLibraryResourceBundle("sap.fe.core").getText("T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_LAST_ACTION");t.setGroupName(`${this.sLastActionText}: ${n}`)};u._computeMessageGroupAndSubTitle=function e(t,i,o,s,r,a){var g;this.oItemBinding.detachChange(this._setMessageData,this);const l=(g=t.getBindingContext("message"))===null||g===void 0?void 0:g.getObject();const u=true;let f,d,h,p,T,b,_;const m=new RegExp("^/").test(l===null||l===void 0?void 0:l.getTargets()[0]),I=c.getLibraryResourceBundle("sap.fe.core");if(m){for(p=0;p<s.length;p++){f=s[p];b=f;if(f.isA("sap.m.Table")||f.isA("sap.ui.table.Table")){d=f.getParent();const e=d.getRowBinding();const i=(e,n)=>{this._setGroupLabelForTransientMsg(t,n)};if(e&&e.isLengthFinal()&&d.getBindingContext()){const o=n.getTableColumnDataAndSetSubtile(l,d,f,e,a,u,i);h=o.oTargetTableInfo;if(o.subTitle){t.setSubtitle(o.subTitle)}t.setActiveTitle(!!h.oTableRowContext);if(h.oTableRowContext){this._formatMessageDescription(t,h.oTableRowContext,h.sTableTargetColName,I,d)}T=h.oTableRowContext&&h.oTableRowContext.getIndex();this._updateInternalModel(h.oTableRowContext,T,h.sTableTargetColProperty,d,l)}}else{t.setActiveTitle(true);const e=n.bIsOrphanElement(b,s);if(e){t.setSubtitle("");break}}}}else{b=s[0];d=this._getMdcTable(b);if(d){h={};h.tableHeader=d.getHeader();const e=this._getTableColumnIndex(b);h.sTableTargetColProperty=e>-1?d.getColumns()[e].getDataProperty():undefined;h.sTableTargetColProperty=h.sTableTargetColProperty;h.sTableTargetColName=h.sTableTargetColProperty&&e>-1?d.getColumns()[e].getHeader():undefined;_=this._getTableRow(b).isA("sap.ui.table.CreationRow");if(!_){T=this._getTableRowIndex(b);h.oTableRowBindingContexts=d.getRowBinding().getCurrentContexts();h.oTableRowContext=h.oTableRowBindingContexts[T]}const i=n.getMessageSubtitle(l,h.oTableRowBindingContexts,h.oTableRowContext,h.sTableTargetColName,I,d,_,e===0&&b.getValueState()==="Error"?b:undefined);if(i){t.setSubtitle(i)}t.setActiveTitle(true);this._updateInternalModel(h.oTableRowContext,T,h.sTableTargetColProperty,d,l,_)}}if(u){const e=n.createSectionGroupName(i,o,r,h,I);t.setGroupName(e);const s=this._getViewId(this.getId());const a=c.byId(s);const g=l.getTargets()[0]&&l.getTargets()[0].split("/").pop();const u=a===null||a===void 0?void 0:a.getModel("internal");if(u&&u.getProperty("/messageTargetProperty")&&g&&g===u.getProperty("/messageTargetProperty")){this.oMessagePopover.fireActiveTitlePress({item:t});u.setProperty("/messageTargetProperty",false)}}this.oItemBinding.attachChange(this._setMessageData,this);return b};u._checkControlIdInSections=function e(t,i){let o,s,r,a,g,l;this.sGeneralGroupText=this.sGeneralGroupText?this.sGeneralGroupText:c.getLibraryResourceBundle("sap.fe.core").getText("T_MESSAGE_BUTTON_SAPFE_MESSAGE_GROUP_GENERAL");const u=n.getVisibleSectionsFromObjectPageLayout(this.oObjectPageLayout);if(u){var f;const e=this._getViewId(this.getId());const d=c.byId(e);const h=d===null||d===void 0?void 0:(f=d.getBindingContext("internal"))===null||f===void 0?void 0:f.getProperty("sActionName");if(h){(d===null||d===void 0?void 0:d.getBindingContext("internal")).setProperty("sActionName",null)}for(a=t.length-1;a>=0;--a){r=t[a];let e=true;for(g=u.length-1;g>=0;--g){o=u[g];s=o.getSubSections();for(l=s.length-1;l>=0;--l){const t=s[l];const i=r.getBindingContext("message").getObject();const a=n.getControlFromMessageRelatingToSubSection(t,i);if(a.length>0){const n=this._computeMessageGroupAndSubTitle(r,o,t,a,s.length>1,h);if(n&&!n.isA("sap.m.Table")&&!n.isA("sap.ui.table.Table")){g=l=-1}e=false}}}if(e){const e=r.getBindingContext("message").getObject();r.setActiveTitle(false);if(e.persistent&&h){this._setGroupLabelForTransientMsg(r,h)}else{r.setGroupName(this.sGeneralGroupText)}}if(!i&&r.getGroupName()===this.sGeneralGroupText&&this._findTargetForMessage(r)){return true}}}};u._findTargetForMessage=function e(t){const n=t.getBindingContext("message")&&t.getBindingContext("message").getObject();if(n&&n.target){const e=this.oObjectPageLayout&&this.oObjectPageLayout.getModel()&&this.oObjectPageLayout.getModel().getMetaModel(),t=e&&e.getMetaPath(n.target),i=e&&e.getObject(t);if(i&&i.$kind==="Property"){return true}}};u._fnEnableBindings=function e(n){if(t.fromQuery(window.location.search).get("sap-fe-xx-lazyloadingtest")){return}for(let e=0;e<n.length;e++){const t=n[e];let o=false;const s=t.getSubSections();for(let e=0;e<s.length;e++){const t=s[e];const n=t.getBlocks();if(n){for(let e=0;e<t.getBlocks().length;e++){var i;if(n[e].getContent&&!((i=n[e].getContent())!==null&&i!==void 0&&i.isA("sap.fe.macros.table.TableAPI"))){o=true;break}}if(o){t.setBindingContext(undefined)}}if(t.getBindingContext()){this._findMessageGroupAfterRebinding();t.getBindingContext().getBinding().attachDataReceived(this._findMessageGroupAfterRebinding.bind(this))}}}};u._findMessageGroupAfterRebinding=function e(){const t=this.oMessagePopover.getItems();this._checkControlIdInSections(t,true)};u._getViewId=function e(t){let n,i=c.byId(t);while(i){if(i instanceof f){n=i.getId();break}i=i.getParent()}return n};u._setLongtextUrlDescription=function t(n,i){this.oMessagePopover.setAsyncDescriptionHandler(function(t){const o=n;const s=t.item.getLongtextUrl();if(s){jQuery.ajax({type:"GET",url:s,success:function(e){const n=i.getHtmlText()+e;t.item.setDescription(`${o}${n}`);t.promise.resolve()},error:function(){t.item.setDescription(n);const i=`A request has failed for long text data. URL: ${s}`;e.error(i);t.promise.reject(i)}})}})};u._formatMessageDescription=function e(t,i,o,s,r){var a;const l=r.getParent().getIdentifierColumn();let c="";const u=(a=t.getBindingContext("message"))===null||a===void 0?void 0:a.getObject();const f=n.fetchColumnInfo(u,r);if(o){c=`${s.getText("T_MESSAGE_GROUP_DESCRIPTION_TABLE_COLUMN")}: ${o}`}else if(f){if(f.availability==="Hidden"){if(t.getType()==="Error"){c=l?`${s.getText("T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC_ERROR")} ${i.getValue(l)}`+".":`${s.getText("T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC_ERROR")}`+"."}else{c=l?`${s.getText("T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC")} ${i.getValue(l)}`+".":`${s.getText("T_COLUMN_AVAILABLE_DIAGNOSIS_MSGDESC")}`+"."}}else{if(!this._navigationConfigured(r)){t.setActiveTitle(false)}c=`${s.getText("T_MESSAGE_GROUP_DESCRIPTION_TABLE_COLUMN")}: ${f.label} (${s.getText("T_COLUMN_INDICATOR_IN_TABLE_DEFINITION")})`}}const d=new g({htmlText:`<html><body><strong>${s.getText("T_FIELDS_AFFECTED_TITLE")}</strong></body></html><br>`});let h;if(l){h=`${d.getHtmlText()}<br>${s.getText("T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR")}: ${r.getHeader()}<br>${s.getText("T_MESSAGE_GROUP_DESCRIPTION_TABLE_ROW")}: ${i.getValue(l)}<br>${c}<br>`}else if(c==""||!c){h=""}else{h=`${d.getHtmlText()}<br>${s.getText("T_MESSAGE_GROUP_TITLE_TABLE_DENOMINATOR")}: ${r.getHeader()}<br>${c}<br>`}const p=new g({htmlText:`<html><body><strong>${s.getText("T_DIAGNOSIS_TITLE")}</strong></body></html><br>`});const T=t.getBindingContext("message").getObject().description;t.setDescription(null);let b="";let _="";if(t.getLongtextUrl()){_=`${h}<br>`;this._setLongtextUrlDescription(_,p)}else if(T){b=`${p.getHtmlText()}<br>${T}`;_=`${h}<br>${b}`;t.setDescription(_)}else{t.setDescription(h)}};u._setMessageData=function t(){clearTimeout(this._setMessageDataTimeout);this._setMessageDataTimeout=setTimeout(async()=>{const t="",n=this.oMessagePopover.getItems(),i={Error:0,Warning:0,Success:0,Information:0},o=c.getLibraryResourceBundle("sap.fe.core"),s=n.length;let r=E.Default,a="",g="",l="";if(s>0){for(let e=0;e<s;e++){if(!n[e].getType()||n[e].getType()===""){++i["Information"]}else{++i[n[e].getType()]}}if(i[y.Error]>0){r=E.Negative}else if(i[y.Warning]>0){r=E.Critical}else if(i[y.Success]>0){r=E.Success}else if(i[y.Information]>0){r=E.Neutral}const u=i[y.Error]+i[y.Warning]+i[y.Success]+i[y.Information];this.setText(u.toString());if(i.Error===1){a="C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_TITLE_ERROR"}else if(i.Error>1){a="C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_MULTIPLE_ERROR_TOOLTIP"}else if(!i.Error&&i.Warning){a="C_COMMON_SAPFE_ERROR_MESSAGES_PAGE_WARNING_TOOLTIP"}else if(!i.Error&&!i.Warning&&i.Information){a="C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_INFO"}else if(!i.Error&&!i.Warning&&!i.Information&&i.Success){a="C_MESSAGE_HANDLING_SAPFE_ERROR_MESSAGES_PAGE_TITLE_SUCCESS"}if(a){l=o.getText(a);g=i.Error?`${i.Error} ${l}`:l;this.setTooltip(g)}this.setIcon(t);this.setType(r);this.setVisible(true);const f=c.byId(this.sViewId);if(f){const t=f.getController().pageReady;try{await t.waitPageReady();await this._applyGroupingAsync(f)}catch(t){e.error("fail grouping messages")}this.fireMessageChange({iMessageLength:s})}if(s>1){this.oMessagePopover.navigateBack()}}else{this.setVisible(false);this.fireMessageChange({iMessageLength:s})}},100)};u._activeTitlePress=async function t(n){const i=this.getBindingContext("pageInternal");i.setProperty("errorNavigationSectionFlag",true);const o=n.getParameter("item"),s=o.getBindingContext("message").getObject(),r=new RegExp("^/").test(s.getTarget()),a=c.byId(this.sViewId);let g,l;const u=function(e,t){const n={preventScroll:true,targetInfo:e};t.focus(n)};if(o.getGroupName().indexOf("Table:")!==-1){let t;if(r){t=s.controlIds.map(function(e){const t=c.byId(e);const n=t&&t.getParent();return n&&n.isA("sap.ui.mdc.Table")&&n.getHeader()===o.getGroupName().split(", Table: ")[1]?n:null}).reduce(function(e,t){return t?t:e});if(t){l=o.getGroupName().split(", ")[0];try{await this._navigateFromMessageToSectionTableInIconTabBarMode(t,this.oObjectPageLayout,l);const n=this._getTableRefErrorContext(t);const i=n.getProperty(o.getBindingContext("message").getObject().getId());const r=async(e,t)=>{const n=this._getMdcTableRows(e),i=this._getGridTable(e).getFirstVisibleRow();if(n.length>0&&n[0]){const o=n[t-i],r=this.getTargetCell(o,s);if(r){this.setFocusToControl(r);return undefined}else{const t=s.getTarget().split("/").pop();if(t){a.getModel("internal").setProperty("/messageTargetProperty",t)}if(this._navigationConfigured(e)){return a.getController()._routing.navigateForwardToContext(o.getBindingContext())}else{return false}}}return undefined};if(t.data("tableType")==="GridTable"&&i.rowIndex!==""){const n=this._getGridTable(t).getFirstVisibleRow();try{await t.scrollToIndex(i.rowIndex);const e=this._getMdcTableRows(t);let o,a;if(e.length>0&&e[0]){o=e[0].getParent().getFirstVisibleRow();a=n-o!==0}let g;if(a){g=new Promise(function(e){c.attachEvent("UIUpdated",e)})}else{g=Promise.resolve()}await g;setTimeout(async function(){const e=await r(t,i.rowIndex);if(e===false){u(s,t)}},0)}catch(t){e.error("Error while focusing on error")}}else if(t.data("tableType")==="ResponsiveTable"&&i){const e=await this.focusOnMessageTargetControl(a,s,t,i.rowIndex);if(e===false){u(s,t)}}else{this.focusOnMessageTargetControl(a,s)}}catch(t){e.error("Fail to navigate to Error control")}}}else{g=c.byId(s.controlIds[0]);const e=c.byId(this.oObjectPageLayout.getSelectedSection());if((e===null||e===void 0?void 0:e.findElements(true).indexOf(g))===-1){l=o.getGroupName().split(", ")[0];this._navigateFromMessageToSectionInIconTabBarMode(this.oObjectPageLayout,l)}this.setFocusToControl(g)}}else{l=o.getGroupName().split(", ")[0];this._navigateFromMessageToSectionInIconTabBarMode(this.oObjectPageLayout,l);this.focusOnMessageTargetControl(a,s)}};u.getTargetCell=function e(t,n){return n.getControlIds().length>0?n.getControlIds().map(function(e){const n=t.findElements(true,function(t){return t.getId()===e});return n.length>0?c.byId(e):null}).reduce(function(e,t){return t?t:e}):null};u.focusOnMessageTargetControl=async function e(t,n,i,o){const s=t.findElements(true);const a=n.getControlIds().filter(function(e){return s.some(function(t){return t.getId()===e&&t.getDomRef()})}).map(function(e){return c.byId(e)});const g=a.filter(function(e){return!e.isA("sap.m.Table")&&!e.isA("sap.ui.table.Table")});if(g.length>0){this.setFocusToControl(g[0]);return undefined}else if(a.length>0){const e=i?i.findElements(true,function(e){return e.isA(r.getMetadata().getName())}):[];if(e.length>0&&e[0]){const s=e[o];const r=this.getTargetCell(s,n);if(r){const e=r.isA("sap.fe.macros.field.FieldAPI")?r.getContent().getContentEdit()[0]:r.getItems()[0].getContent().getContentEdit()[0];this.setFocusToControl(e);return undefined}else{const e=n.getTarget().split("/").pop();if(e){t.getModel("internal").setProperty("/messageTargetProperty",e)}if(this._navigationConfigured(i)){return t.getController()._routing.navigateForwardToContext(s.getBindingContext())}else{return false}}}return undefined}return undefined};u._getMessageRank=function e(t,n){if(n){let e,i,o,s,r,a,g,l;for(s=n.length-1;s>=0;--s){e=n[s];i=e.getSubSections();for(r=i.length-1;r>=0;--r){o=i[r];g=o.findElements(true);a=g.filter(this._fnFilterUponId.bind(this,t.getControlId()));l=s+1;if(a.length>0){if(e.getVisible()&&o.getVisible()){if(!t.hasOwnProperty("sectionName")){t.sectionName=e.getTitle()}if(!t.hasOwnProperty("subSectionName")){t.subSectionName=o.getTitle()}return l*10+(r+1)}else{return 1}}}}if(!t.sectionName&&!t.subSectionName&&t.persistent){return 1}return 999}return 999};u._applyFiltersAndSort=function e(){let t,n,i,o,s,r,g=null;const l=[];const u=()=>{const e=e=>{let t=Infinity,n=c.byId(e[0]);const i=c.byId(e[0]);while(n){const e=n instanceof a?(i===null||i===void 0?void 0:i.getParent()).findElements(true).indexOf(i):Infinity;if(n instanceof a){if(t>e){t=e;this.setFocusToControl(i)}return false}n=n.getParent()}return true};return new d({path:"controlIds",test:e,caseSensitive:true})};function f(){const e=function(e){if(!e.length){return false}let t=c.byId(e[0]);while(t){if(t.getId()===T){return true}if(t instanceof a){return false}t=t.getParent()}return false};return new d({path:"controlIds",test:e,caseSensitive:true})}if(!this.sViewId){this.sViewId=this._getViewId(this.getId())}const T=this.sViewId;const b=this.getAggregation("customFilters");if(b){b.forEach(function(e){l.push(new d({path:e.getProperty("path"),operator:e.getProperty("operator"),value1:e.getProperty("value1"),value2:e.getProperty("value2")}))})}const _=this.getBindingContext();if(!_){this.setVisible(false);return}else{o=_.getPath();t=new d({filters:[new d({path:"validation",operator:h.EQ,value1:true}),f()],and:true});n=new d({filters:[t,new d({path:"target",operator:h.StartsWith,value1:o})],and:false});r=new d({filters:[u()]})}const m=new d({filters:[n,r],and:true});if(l.length>0){i=new d({filters:[l,m],and:false})}else{i=m}this.oItemBinding.filter(i);this.oObjectPageLayout=this._getObjectPageLayout(this,this.oObjectPageLayout);if(this.oObjectPageLayout){s=new p("",null,null,(e,t)=>{if(!g){g=this.oObjectPageLayout&&this.oObjectPageLayout.getSections()}const n=this._getMessageRank(e,g);const i=this._getMessageRank(t,g);if(n<i){return-1}if(n>i){return 1}return 0});this.oItemBinding.sort(s)}};u._fnFilterUponId=function e(t,n){return t===n.getId()};u._getSectionBySectionTitle=function e(t,n){let i;if(n){const e=t.getSections();for(let t=0;t<e.length;t++){if(e[t].getVisible()&&e[t].getTitle()===n){i=e[t];break}}}return i};u._navigateFromMessageToSectionInIconTabBarMode=function e(t,n){const i=t.getUseIconTabBar();if(i){const e=this._getSectionBySectionTitle(t,n);const i=t.getSelectedSection();if(e&&i!==e.getId()){t.setSelectedSection(e.getId())}}};u._navigateFromMessageToSectionTableInIconTabBarMode=async function e(t,n,i){const o=t.getRowBinding();const s=t.getBindingContext();const r=n.getBindingContext();const a=!(s===r);this._navigateFromMessageToSectionInIconTabBarMode(n,i);return new Promise(function(e){if(a){o.attachEventOnce("change",function(){e()})}else{e()}})};u._getMdcTable=function e(t){let n=t.getParent();while(n&&!n.isA("sap.ui.mdc.Table")){n=n.getParent()}return n&&n.isA("sap.ui.mdc.Table")?n:undefined};u._getGridTable=function e(t){return t.findElements(true,function(e){return e.isA("sap.ui.table.Table")&&e.getParent()===t})[0]};u._getTableRow=function e(t){let n=t.getParent();while(n&&!n.isA("sap.ui.table.Row")&&!n.isA("sap.ui.table.CreationRow")&&!n.isA(r.getMetadata().getName())){n=n.getParent()}return n&&(n.isA("sap.ui.table.Row")||n.isA("sap.ui.table.CreationRow")||n.isA(r.getMetadata().getName()))?n:undefined};u._getTableRowIndex=function e(t){const n=this._getTableRow(t);let i;if(n.isA("sap.ui.table.Row")){i=n.getIndex()}else{i=n.getTable().getItems().findIndex(function(e){return e.getId()===n.getId()})}return i};u._getTableColumnIndex=function e(t){const n=function(e,t){return t.getCells().findIndex(function(t){return t.getId()===e.getId()})};const i=function(e,t){let i=e.getParent(),o=n(i,t);while(i&&o<0){i=i.getParent();o=n(i,t)}return o};const o=this._getTableRow(t);let s;s=i(t,o);if(o.isA("sap.ui.table.CreationRow")){const e=o.getCells()[s].getId(),t=o.getTable().getColumns();s=t.findIndex(function(t){if(t.getCreationTemplate()){return e.search(t.getCreationTemplate().getId())>-1?true:false}else{return false}})}return s};u._getMdcTableRows=function e(t){return t.findElements(true,function(e){return e.isA("sap.ui.table.Row")&&e.getTable().getParent()===t})};u._getObjectPageLayout=function e(t,n){if(n){return n}n=t;while(n&&!n.isA("sap.uxap.ObjectPageLayout")){n=n.getParent()}return n};u._navigationConfigured=function e(t){const n=sap.ui.require("sap/ui/core/Component"),i=t&&n.getOwnerComponentFor(t)&&n.getOwnerComponentFor(t).getNavigation();let o=false,s=false;if(i&&Object.keys(i).indexOf(t.getRowBinding().sPath)!==-1){o=i[t===null||t===void 0?void 0:t.getRowBinding().sPath]&&i[t===null||t===void 0?void 0:t.getRowBinding().sPath].detail&&i[t===null||t===void 0?void 0:t.getRowBinding().sPath].detail.route?true:false}s=o&&(t===null||t===void 0?void 0:t.getRowSettings().getRowActions())&&(t===null||t===void 0?void 0:t.getRowSettings().getRowActions()[0].mProperties.type.indexOf("Navigation"))!==-1;return s};u.setFocusToControl=function t(n){const i=this.oMessagePopover;if(i&&n&&n.focus){const e=()=>{n.focus()};if(!i.isOpen()){setTimeout(e,0)}else{const t=()=>{setTimeout(e,0);i.detachEvent("afterClose",t)};i.attachEvent("afterClose",t);i.close()}}else{e.warning("FE V4 : MessageButton : element doesn't have focus method for focusing.")}};return l}(s),C=R(I.prototype,"customFilters",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),P=R(I.prototype,"messageChange",[_],{configurable:true,enumerable:true,writable:true,initializer:null}),I))||m);return L},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/messages/MessageFilter-dbg", ["sap/fe/core/helpers/ClassSupport", "sap/ui/core/Element", "sap/ui/model/FilterOperator"], function (ClassSupport, Element, FilterOperator) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;
  var property = ClassSupport.property;
  var defineUI5Class = ClassSupport.defineUI5Class;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let MessageFilter = (_dec = defineUI5Class("sap.fe.macros.messages.MessageFilter"), _dec2 = property({
    type: "string"
  }), _dec3 = property({
    type: "sap.ui.model.FilterOperator",
    defaultValue: FilterOperator.Contains
  }), _dec4 = property({
    type: "string"
  }), _dec5 = property({
    type: "string"
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_Element) {
    _inheritsLoose(MessageFilter, _Element);
    function MessageFilter() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _Element.call(this, ...args) || this;
      _initializerDefineProperty(_this, "path", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "operator", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "value1", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "value2", _descriptor4, _assertThisInitialized(_this));
      return _this;
    }
    return MessageFilter;
  }(Element), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "path", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "operator", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "value1", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "value2", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  return MessageFilter;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/messages/MessageFilter", ["sap/fe/core/helpers/ClassSupport","sap/ui/core/Element","sap/ui/model/FilterOperator"],function(e,r,t){"use strict";var i,n,a,l,o,u,s,p,c,f,b;var d=e.property;var v=e.defineUI5Class;function y(e,r,t,i){if(!t)return;Object.defineProperty(e,r,{enumerable:t.enumerable,configurable:t.configurable,writable:t.writable,value:t.initializer?t.initializer.call(i):void 0})}function g(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function h(e,r){e.prototype=Object.create(r.prototype);e.prototype.constructor=e;m(e,r)}function m(e,r){m=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(r,t){r.__proto__=t;return r};return m(e,r)}function w(e,r,t,i,n){var a={};Object.keys(i).forEach(function(e){a[e]=i[e]});a.enumerable=!!a.enumerable;a.configurable=!!a.configurable;if("value"in a||a.initializer){a.writable=true}a=t.slice().reverse().reduce(function(t,i){return i(e,r,t)||t},a);if(n&&a.initializer!==void 0){a.value=a.initializer?a.initializer.call(n):void 0;a.initializer=undefined}if(a.initializer===void 0){Object.defineProperty(e,r,a);a=null}return a}function z(e,r){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let O=(i=v("sap.fe.macros.messages.MessageFilter"),n=d({type:"string"}),a=d({type:"sap.ui.model.FilterOperator",defaultValue:t.Contains}),l=d({type:"string"}),o=d({type:"string"}),i(u=(s=function(e){h(r,e);function r(){var r;for(var t=arguments.length,i=new Array(t),n=0;n<t;n++){i[n]=arguments[n]}r=e.call(this,...i)||this;y(r,"path",p,g(r));y(r,"operator",c,g(r));y(r,"value1",f,g(r));y(r,"value2",b,g(r));return r}return r}(r),p=w(s.prototype,"path",[n],{configurable:true,enumerable:true,writable:true,initializer:null}),c=w(s.prototype,"operator",[a],{configurable:true,enumerable:true,writable:true,initializer:null}),f=w(s.prototype,"value1",[l],{configurable:true,enumerable:true,writable:true,initializer:null}),b=w(s.prototype,"value2",[o],{configurable:true,enumerable:true,writable:true,initializer:null}),s))||u);return O},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/messages/MessagePopover-dbg", ["sap/fe/core/helpers/ClassSupport", "sap/m/MessageItem", "sap/m/MessagePopover"], function (ClassSupport, MessageItem, MessagePopover) {
  "use strict";

  var _dec, _class;
  var defineUI5Class = ClassSupport.defineUI5Class;
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  let FeMessagePopover = (_dec = defineUI5Class("sap.fe.macros.messages.MessagePopover"), _dec(_class = /*#__PURE__*/function (_MessagePopover) {
    _inheritsLoose(FeMessagePopover, _MessagePopover);
    function FeMessagePopover() {
      return _MessagePopover.apply(this, arguments) || this;
    }
    var _proto = FeMessagePopover.prototype;
    _proto.init = function init() {
      MessagePopover.prototype.init.apply(this);
      this.setModel(sap.ui.getCore().getMessageManager().getMessageModel(), "message");
      this.bindAggregation("items", {
        path: "message>/",
        length: 9999,
        template: new MessageItem({
          type: "{message>type}",
          title: "{message>message}",
          description: "{message>description}",
          markupDescription: true,
          longtextUrl: "{message>descriptionUrl}",
          subtitle: "{message>additionalText}",
          activeTitle: "{= ${message>controlIds}.length > 0 ? true : false}"
        })
      });
      this.setGroupItems(true);
    };
    return FeMessagePopover;
  }(MessagePopover)) || _class);
  return FeMessagePopover;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/messages/MessagePopover", ["sap/fe/core/helpers/ClassSupport","sap/m/MessageItem","sap/m/MessagePopover"],function(e,t,s){"use strict";var r,o;var a=e.defineUI5Class;function i(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;n(e,t)}function n(e,t){n=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,s){t.__proto__=s;return t};return n(e,t)}let p=(r=a("sap.fe.macros.messages.MessagePopover"),r(o=function(e){i(r,e);function r(){return e.apply(this,arguments)||this}var o=r.prototype;o.init=function e(){s.prototype.init.apply(this);this.setModel(sap.ui.getCore().getMessageManager().getMessageModel(),"message");this.bindAggregation("items",{path:"message>/",length:9999,template:new t({type:"{message>type}",title:"{message>message}",description:"{message>description}",markupDescription:true,longtextUrl:"{message>descriptionUrl}",subtitle:"{message>additionalText}",activeTitle:"{= ${message>controlIds}.length > 0 ? true : false}"})});this.setGroupItems(true)};return r}(s))||o);return p},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/microchart/MicroChart.metadata-dbg", ["sap/fe/macros/MacroMetadata"], function (MacroMetadata) {
  "use strict";

  /**
   * @classdesc
   * Building block used to create a MicroChart based on the metadata provided by OData V4.
   * @class sap.fe.macros.MicroChart
   * @hideconstructor
   * @public
   * @since 1.93.0
   */
  const MicroChart = MacroMetadata.extend("sap.fe.macros.microchart.MicroChart", {
    /**
     * Name of the macro control.
     */
    name: "MicroChart",
    /**
     * Namespace of the macro control.
     */
    namespace: "sap.fe.macros.internal",
    publicNamespace: "sap.fe.macros",
    /**
     * Fragment source of the macro (optional) - if not set, fragment is generated from namespace and name.
     */
    fragment: "sap.fe.macros.microchart.MicroChart",
    /**
     * The metadata describing the macro control.
     */
    metadata: {
      /**
       * Macro stereotype for documentation generation. Not visible in documentation.
       */
      stereotype: "xmlmacro",
      /**
       * Properties.
       */
      properties: {
        /**
         * Metadata path to the entitySet or navigationProperty.
         */
        contextPath: {
          type: "sap.ui.model.Context",
          $kind: ["EntitySet", "NavigationProperty"],
          isPublic: true
        },
        /**
         * Metadata path to the Chart annotations.
         */
        metaPath: {
          type: "sap.ui.model.Context",
          required: true,
          isPublic: true
        },
        /**
         * ID of the MicroChart.
         */
        id: {
          type: "string",
          isPublic: true,
          required: true
        },
        /**
         * To control the rendering of Title, Subtitle and Currency Labels. When the size is xs then we do
         * not see the inner labels of the MicroChart as well.
         */
        showOnlyChart: {
          type: "boolean",
          defaultValue: false,
          isPublic: true
        },
        /**
         * Batch group ID along with which this call should be grouped.
         */
        batchGroupId: {
          type: "string",
          defaultValue: "",
          isPublic: true
        },
        /**
         * Title for the MicroChart. If no title is provided, the title from the Chart annotation is used.
         */
        title: {
          type: "string",
          defaultValue: "",
          visibility: "hidden"
        },
        /**
         * Show blank space in case there is no data in the chart
         */
        hideOnNoData: {
          type: "boolean",
          defaultValue: false,
          isPublic: true
        },
        /**
         * Description for the MicroChart. If no description is provided, the description from the Chart annotation is used.
         */
        description: {
          type: "string",
          defaultValue: "",
          visibility: "hidden"
        },
        /**
         * Type of navigation, that is, External or InPage
         */
        navigationType: {
          type: "sap.fe.macros.NavigationType",
          defaultValue: "None",
          visibility: "hidden"
        },
        /**
         * Event handler for onTitlePressed event
         */
        onTitlePressed: {
          type: "string",
          visibility: "hidden"
        },
        /**
         * Size of the MicroChart
         */
        size: {
          type: "string",
          isPublic: true
        },
        /**
         * Defines whether the MicroChart is part of an analytical table
         */
        isAnalytics: {
          type: "boolean",
          defaultValue: false,
          visibility: "hidden"
        }
      },
      events: {}
    }
  });
  return MicroChart;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/microchart/MicroChart.metadata", ["sap/fe/macros/MacroMetadata"],function(e){"use strict";const t=e.extend("sap.fe.macros.microchart.MicroChart",{name:"MicroChart",namespace:"sap.fe.macros.internal",publicNamespace:"sap.fe.macros",fragment:"sap.fe.macros.microchart.MicroChart",metadata:{stereotype:"xmlmacro",properties:{contextPath:{type:"sap.ui.model.Context",$kind:["EntitySet","NavigationProperty"],isPublic:true},metaPath:{type:"sap.ui.model.Context",required:true,isPublic:true},id:{type:"string",isPublic:true,required:true},showOnlyChart:{type:"boolean",defaultValue:false,isPublic:true},batchGroupId:{type:"string",defaultValue:"",isPublic:true},title:{type:"string",defaultValue:"",visibility:"hidden"},hideOnNoData:{type:"boolean",defaultValue:false,isPublic:true},description:{type:"string",defaultValue:"",visibility:"hidden"},navigationType:{type:"sap.fe.macros.NavigationType",defaultValue:"None",visibility:"hidden"},onTitlePressed:{type:"string",visibility:"hidden"},size:{type:"string",isPublic:true},isAnalytics:{type:"boolean",defaultValue:false,visibility:"hidden"}},events:{}}});return t},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/microchart/MicroChartContainer-dbg", ["sap/base/Log", "sap/fe/core/helpers/ClassSupport", "sap/fe/macros/library", "sap/m/FlexBox", "sap/m/Label", "sap/m/library", "sap/suite/ui/microchart/AreaMicroChart", "sap/suite/ui/microchart/ColumnMicroChart", "sap/suite/ui/microchart/ComparisonMicroChart", "sap/suite/ui/microchart/LineMicroChart", "sap/ui/core/Control", "sap/ui/core/format/NumberFormat", "sap/ui/model/odata/v4/ODataListBinding", "sap/ui/model/odata/v4/ODataMetaModel", "sap/ui/model/type/Date"], function (Log, ClassSupport, macroLib, FlexBox, Label, mobilelibrary, AreaMicroChart, ColumnMicroChart, ComparisonMicroChart, LineMicroChart, Control, NumberFormat, ODataV4ListBinding, ODataMetaModel, DateType) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16;
  var property = ClassSupport.property;
  var event = ClassSupport.event;
  var defineUI5Class = ClassSupport.defineUI5Class;
  var aggregation = ClassSupport.aggregation;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  const NavigationType = macroLib.NavigationType;
  const ValueColor = mobilelibrary.ValueColor;
  /**
   *  Container Control for Micro Chart and UoM.
   *
   * @private
   * @experimental This module is only for internal/experimental use!
   */
  let MicroChartContainer = (_dec = defineUI5Class("sap.fe.macros.microchart.MicroChartContainer"), _dec2 = property({
    type: "boolean",
    defaultValue: false
  }), _dec3 = property({
    type: "string",
    defaultValue: undefined
  }), _dec4 = property({
    type: "string[]",
    defaultValue: []
  }), _dec5 = property({
    type: "string",
    defaultValue: undefined
  }), _dec6 = property({
    type: "string[]",
    defaultValue: []
  }), _dec7 = property({
    type: "int",
    defaultValue: undefined
  }), _dec8 = property({
    type: "int",
    defaultValue: 1
  }), _dec9 = property({
    type: "int",
    defaultValue: undefined
  }), _dec10 = property({
    type: "string",
    defaultValue: ""
  }), _dec11 = property({
    type: "string",
    defaultValue: ""
  }), _dec12 = property({
    type: "sap.fe.macros.NavigationType",
    defaultValue: "None"
  }), _dec13 = property({
    type: "string",
    defaultValue: ""
  }), _dec14 = event(), _dec15 = aggregation({
    type: "sap.ui.core.Control",
    multiple: false,
    isDefault: true
  }), _dec16 = aggregation({
    type: "sap.m.Label",
    multiple: false
  }), _dec17 = aggregation({
    type: "sap.ui.core.Control",
    multiple: true
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_Control) {
    _inheritsLoose(MicroChartContainer, _Control);
    function MicroChartContainer() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _Control.call(this, ...args) || this;
      _initializerDefineProperty(_this, "showOnlyChart", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "uomPath", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "measures", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "dimension", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "dataPointQualifiers", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "measurePrecision", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "measureScale", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "dimensionPrecision", _descriptor8, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "chartTitle", _descriptor9, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "chartDescription", _descriptor10, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "navigationType", _descriptor11, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "calendarPattern", _descriptor12, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "onTitlePressed", _descriptor13, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "microChart", _descriptor14, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "_uomLabel", _descriptor15, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "microChartTitle", _descriptor16, _assertThisInitialized(_this));
      return _this;
    }
    MicroChartContainer.render = function render(oRm, oControl) {
      oRm.openStart("div", oControl);
      oRm.openEnd();
      if (!oControl.showOnlyChart) {
        const oChartTitle = oControl.microChartTitle;
        if (oChartTitle) {
          oChartTitle.forEach(function (oSubChartTitle) {
            oRm.openStart("div");
            oRm.openEnd();
            oRm.renderControl(oSubChartTitle);
            oRm.close("div");
          });
        }
        oRm.openStart("div");
        oRm.openEnd();
        const oChartDescription = new Label({
          text: oControl.chartDescription
        });
        oRm.renderControl(oChartDescription);
        oRm.close("div");
      }
      const oMicroChart = oControl.microChart;
      if (oMicroChart) {
        oMicroChart.addStyleClass("sapUiTinyMarginTopBottom");
        oRm.renderControl(oMicroChart);
        if (!oControl.showOnlyChart && oControl.uomPath) {
          const oSettings = oControl._checkIfChartRequiresRuntimeLabels() ? undefined : {
              text: {
                path: oControl.uomPath
              }
            },
            oLabel = new Label(oSettings),
            oFlexBox = new FlexBox({
              alignItems: "Start",
              justifyContent: "End",
              items: [oLabel]
            });
          oRm.renderControl(oFlexBox);
          oControl.setAggregation("_uomLabel", oLabel);
        }
      }
      oRm.close("div");
    };
    var _proto = MicroChartContainer.prototype;
    _proto.onBeforeRendering = function onBeforeRendering() {
      const oBinding = this._getListBindingForRuntimeLabels();
      if (oBinding) {
        oBinding.detachEvent("change", this._setRuntimeChartLabelsAndUnitOfMeasure, this);
        this._olistBinding = undefined;
      }
    };
    _proto.onAfterRendering = function onAfterRendering() {
      const oBinding = this._getListBindingForRuntimeLabels();
      if (!this._checkIfChartRequiresRuntimeLabels()) {
        return;
      }
      if (oBinding) {
        oBinding.attachEvent("change", this._setRuntimeChartLabelsAndUnitOfMeasure, this);
        this._olistBinding = oBinding;
      }
    };
    _proto.setShowOnlyChart = function setShowOnlyChart(sValue) {
      if (!sValue && this._olistBinding) {
        this._setChartLabels();
      }
      this.setProperty("showOnlyChart", sValue, false /*re-rendering*/);
    };
    _proto._checkIfChartRequiresRuntimeLabels = function _checkIfChartRequiresRuntimeLabels() {
      const oMicroChart = this.microChart;
      return Boolean(oMicroChart instanceof AreaMicroChart || oMicroChart instanceof ColumnMicroChart || oMicroChart instanceof LineMicroChart || oMicroChart instanceof ComparisonMicroChart);
    };
    _proto._checkForChartLabelAggregations = function _checkForChartLabelAggregations() {
      const oMicroChart = this.microChart;
      return Boolean(oMicroChart instanceof AreaMicroChart && oMicroChart.getAggregation("firstYLabel") && oMicroChart.getAggregation("lastYLabel") && oMicroChart.getAggregation("firstXLabel") && oMicroChart.getAggregation("lastXLabel") || oMicroChart instanceof ColumnMicroChart && oMicroChart.getAggregation("leftTopLabel") && oMicroChart.getAggregation("rightTopLabel") && oMicroChart.getAggregation("leftBottomLabel") && oMicroChart.getAggregation("rightBottomLabel") || oMicroChart instanceof LineMicroChart);
    };
    _proto._getListBindingForRuntimeLabels = function _getListBindingForRuntimeLabels() {
      const oMicroChart = this.microChart;
      let oBinding;
      if (oMicroChart instanceof AreaMicroChart) {
        const oChart = oMicroChart.getChart();
        oBinding = oChart && oMicroChart.getChart().getBinding("points");
      } else if (oMicroChart instanceof ColumnMicroChart) {
        oBinding = oMicroChart.getBinding("columns");
      } else if (oMicroChart instanceof LineMicroChart) {
        const aLines = oMicroChart.getLines();
        oBinding = aLines && aLines.length && aLines[0].getBinding("points");
      } else if (oMicroChart instanceof ComparisonMicroChart) {
        oBinding = oMicroChart.getBinding("data");
      }
      return oBinding instanceof ODataV4ListBinding ? oBinding : false;
    };
    _proto._setRuntimeChartLabelsAndUnitOfMeasure = function _setRuntimeChartLabelsAndUnitOfMeasure() {
      const oListBinding = this._olistBinding,
        aContexts = oListBinding === null || oListBinding === void 0 ? void 0 : oListBinding.getContexts(),
        aMeasures = this.measures || [],
        sDimension = this.dimension,
        sUnitOfMeasurePath = this.uomPath,
        oMicroChart = this.microChart,
        oUnitOfMeasureLabel = this._uomLabel;
      if (oUnitOfMeasureLabel && sUnitOfMeasurePath && aContexts && aContexts.length && !this.showOnlyChart) {
        oUnitOfMeasureLabel.setText(aContexts[0].getObject(sUnitOfMeasurePath));
      } else if (oUnitOfMeasureLabel) {
        oUnitOfMeasureLabel.setText("");
      }
      if (!this._checkForChartLabelAggregations()) {
        return;
      }
      if (!aContexts || !aContexts.length) {
        this._setChartLabels();
        return;
      }
      const oFirstContext = aContexts[0],
        oLastContext = aContexts[aContexts.length - 1],
        aLinesPomises = [],
        bLineChart = oMicroChart instanceof LineMicroChart,
        iCurrentMinX = oFirstContext.getObject(sDimension),
        iCurrentMaxX = oLastContext.getObject(sDimension);
      let iCurrentMinY,
        iCurrentMaxY,
        oMinX = {
          value: Infinity
        },
        oMaxX = {
          value: -Infinity
        },
        oMinY = {
          value: Infinity
        },
        oMaxY = {
          value: -Infinity
        };
      oMinX = iCurrentMinX == undefined ? oMinX : {
        context: oFirstContext,
        value: iCurrentMinX
      };
      oMaxX = iCurrentMaxX == undefined ? oMaxX : {
        context: oLastContext,
        value: iCurrentMaxX
      };
      aMeasures.forEach((sMeasure, i) => {
        iCurrentMinY = oFirstContext.getObject(sMeasure);
        iCurrentMaxY = oLastContext.getObject(sMeasure);
        oMaxY = iCurrentMaxY > oMaxY.value ? {
          context: oLastContext,
          value: iCurrentMaxY,
          index: bLineChart ? i : 0
        } : oMaxY;
        oMinY = iCurrentMinY < oMinY.value ? {
          context: oFirstContext,
          value: iCurrentMinY,
          index: bLineChart ? i : 0
        } : oMinY;
        if (bLineChart) {
          aLinesPomises.push(this._getCriticalityFromPoint({
            context: oLastContext,
            value: iCurrentMaxY,
            index: i
          }));
        }
      });
      this._setChartLabels(oMinY.value, oMaxY.value, oMinX.value, oMaxX.value);
      if (bLineChart) {
        return Promise.all(aLinesPomises).then(function (aColors) {
          const aLines = oMicroChart.getLines();
          aLines.forEach(function (oLine, i) {
            oLine.setColor(aColors[i]);
          });
        });
      } else {
        return this._setChartLabelsColors(oMaxY, oMinY);
      }
    };
    _proto._setChartLabelsColors = function _setChartLabelsColors(oMaxY, oMinY) {
      const oMicroChart = this.microChart;
      return Promise.all([this._getCriticalityFromPoint(oMinY), this._getCriticalityFromPoint(oMaxY)]).then(function (aCriticality) {
        if (oMicroChart instanceof AreaMicroChart) {
          oMicroChart.getAggregation("firstYLabel").setProperty("color", aCriticality[0], true);
          oMicroChart.getAggregation("lastYLabel").setProperty("color", aCriticality[1], true);
        } else if (oMicroChart instanceof ColumnMicroChart) {
          oMicroChart.getAggregation("leftTopLabel").setProperty("color", aCriticality[0], true);
          oMicroChart.getAggregation("rightTopLabel").setProperty("color", aCriticality[1], true);
        }
      });
    };
    _proto._setChartLabels = function _setChartLabels(leftTop, rightTop, leftBottom, rightBottom) {
      const oMicroChart = this.microChart;
      leftTop = this._formatDateAndNumberValue(leftTop, this.measurePrecision, this.measureScale);
      rightTop = this._formatDateAndNumberValue(rightTop, this.measurePrecision, this.measureScale);
      leftBottom = this._formatDateAndNumberValue(leftBottom, this.dimensionPrecision, undefined, this.calendarPattern);
      rightBottom = this._formatDateAndNumberValue(rightBottom, this.dimensionPrecision, undefined, this.calendarPattern);
      if (oMicroChart instanceof AreaMicroChart) {
        oMicroChart.getAggregation("firstYLabel").setProperty("label", leftTop, false);
        oMicroChart.getAggregation("lastYLabel").setProperty("label", rightTop, false);
        oMicroChart.getAggregation("firstXLabel").setProperty("label", leftBottom, false);
        oMicroChart.getAggregation("lastXLabel").setProperty("label", rightBottom, false);
      } else if (oMicroChart instanceof ColumnMicroChart) {
        oMicroChart.getAggregation("leftTopLabel").setProperty("label", leftTop, false);
        oMicroChart.getAggregation("rightTopLabel").setProperty("label", rightTop, false);
        oMicroChart.getAggregation("leftBottomLabel").setProperty("label", leftBottom, false);
        oMicroChart.getAggregation("rightBottomLabel").setProperty("label", rightBottom, false);
      } else if (oMicroChart instanceof LineMicroChart) {
        oMicroChart.setProperty("leftTopLabel", leftTop, false);
        oMicroChart.setProperty("rightTopLabel", rightTop, false);
        oMicroChart.setProperty("leftBottomLabel", leftBottom, false);
        oMicroChart.setProperty("rightBottomLabel", rightBottom, false);
      }
    };
    _proto._getCriticalityFromPoint = function _getCriticalityFromPoint(oPoint) {
      let oReturn = Promise.resolve(ValueColor.Neutral);
      const oMetaModel = this.getModel() && this.getModel().getMetaModel(),
        aDataPointQualifiers = this.dataPointQualifiers,
        sMetaPath = oMetaModel instanceof ODataMetaModel && oPoint && oPoint.context && oPoint.context.getPath() && oMetaModel.getMetaPath(oPoint.context.getPath());
      if (typeof sMetaPath === "string") {
        oReturn = oMetaModel.requestObject(`${sMetaPath}/@com.sap.vocabularies.UI.v1.DataPoint${aDataPointQualifiers[oPoint.index] ? `#${aDataPointQualifiers[oPoint.index]}` : ""}`).then(oDataPoint => {
          let sCriticality = ValueColor.Neutral;
          const oContext = oPoint.context;
          if (oDataPoint.Criticality) {
            sCriticality = this._criticality(oDataPoint.Criticality, oContext);
          } else if (oDataPoint.CriticalityCalculation) {
            const oCriticalityCalculation = oDataPoint.CriticalityCalculation,
              oCC = {},
              fnGetValue = function (oProperty) {
                let sReturn;
                if (oProperty.$Path) {
                  sReturn = oContext.getObject(oProperty.$Path);
                } else if (oProperty.hasOwnProperty("$Decimal")) {
                  sReturn = oProperty.$Decimal;
                }
                return sReturn;
              };
            oCC.sAcceptanceHigh = oCriticalityCalculation.AcceptanceRangeHighValue ? fnGetValue(oCriticalityCalculation.AcceptanceRangeHighValue) : undefined;
            oCC.sAcceptanceLow = oCriticalityCalculation.AcceptanceRangeLowValue ? fnGetValue(oCriticalityCalculation.AcceptanceRangeLowValue) : undefined;
            oCC.sDeviationHigh = oCriticalityCalculation.DeviationRangeHighValue ? fnGetValue(oCriticalityCalculation.DeviationRangeHighValue) : undefined;
            oCC.sDeviationLow = oCriticalityCalculation.DeviationRangeLowValue ? fnGetValue(oCriticalityCalculation.DeviationRangeLowValue) : undefined;
            oCC.sToleranceHigh = oCriticalityCalculation.ToleranceRangeHighValue ? fnGetValue(oCriticalityCalculation.ToleranceRangeHighValue) : undefined;
            oCC.sToleranceLow = oCriticalityCalculation.ToleranceRangeLowValue ? fnGetValue(oCriticalityCalculation.ToleranceRangeLowValue) : undefined;
            oCC.sImprovementDirection = oCriticalityCalculation.ImprovementDirection.$EnumMember;
            sCriticality = this._criticalityCalculation(oCC.sImprovementDirection, oPoint.value, oCC.sDeviationLow, oCC.sToleranceLow, oCC.sAcceptanceLow, oCC.sAcceptanceHigh, oCC.sToleranceHigh, oCC.sDeviationHigh);
          }
          return sCriticality;
        });
      }
      return oReturn;
    };
    _proto._criticality = function _criticality(oCriticality, oContext) {
      let iCriticality,
        sCriticality = ValueColor.Neutral;
      if (oCriticality.$Path) {
        const sCriticalityPath = oCriticality.$Path;
        iCriticality = oContext.getObject(sCriticalityPath);
        if (iCriticality === "Negative" || iCriticality === "1" || iCriticality === 1) {
          sCriticality = ValueColor.Error;
        } else if (iCriticality === "Critical" || iCriticality === "2" || iCriticality === 2) {
          sCriticality = ValueColor.Critical;
        } else if (iCriticality === "Positive" || iCriticality === "3" || iCriticality === 3) {
          sCriticality = ValueColor.Good;
        }
      } else if (oCriticality.$EnumMember) {
        iCriticality = oCriticality.$EnumMember;
        if (iCriticality.indexOf("com.sap.vocabularies.UI.v1.CriticalityType/Negative") > -1) {
          sCriticality = ValueColor.Error;
        } else if (iCriticality.indexOf("com.sap.vocabularies.UI.v1.CriticalityType/Positive") > -1) {
          sCriticality = ValueColor.Good;
        } else if (iCriticality.indexOf("com.sap.vocabularies.UI.v1.CriticalityType/Critical") > -1) {
          sCriticality = ValueColor.Critical;
        }
      } else {
        Log.warning("Case not supported, returning the default Value Neutral");
      }
      return sCriticality;
    };
    _proto._criticalityCalculation = function _criticalityCalculation(sImprovementDirection, sValue, sDeviationLow, sToleranceLow, sAcceptanceLow, sAcceptanceHigh, sToleranceHigh, sDeviationHigh) {
      let sCriticalityExpression = ValueColor.Neutral; // Default Criticality State

      // Dealing with Decimal and Path based bingdings
      sDeviationLow = sDeviationLow == undefined ? -Infinity : sDeviationLow;
      sToleranceLow = sToleranceLow == undefined ? sDeviationLow : sToleranceLow;
      sAcceptanceLow = sAcceptanceLow == undefined ? sToleranceLow : sAcceptanceLow;
      sDeviationHigh = sDeviationHigh == undefined ? Infinity : sDeviationHigh;
      sToleranceHigh = sToleranceHigh == undefined ? sDeviationHigh : sToleranceHigh;
      sAcceptanceHigh = sAcceptanceHigh == undefined ? sToleranceHigh : sAcceptanceHigh;

      // Creating runtime expression binding from criticality calculation for Criticality State
      if (sImprovementDirection.indexOf("Minimize") > -1) {
        if (sValue <= sAcceptanceHigh) {
          sCriticalityExpression = ValueColor.Good;
        } else if (sValue <= sToleranceHigh) {
          sCriticalityExpression = ValueColor.Neutral;
        } else if (sDeviationHigh && sValue <= sDeviationHigh) {
          sCriticalityExpression = ValueColor.Critical;
        } else {
          sCriticalityExpression = ValueColor.Error;
        }
      } else if (sImprovementDirection.indexOf("Maximize") > -1) {
        if (sValue >= sAcceptanceLow) {
          sCriticalityExpression = ValueColor.Good;
        } else if (sValue >= sToleranceLow) {
          sCriticalityExpression = ValueColor.Neutral;
        } else if (sDeviationHigh && sValue >= sDeviationLow) {
          sCriticalityExpression = ValueColor.Critical;
        } else {
          sCriticalityExpression = ValueColor.Error;
        }
      } else if (sImprovementDirection.indexOf("Target") > -1) {
        if (sValue <= sAcceptanceHigh && sValue >= sAcceptanceLow) {
          sCriticalityExpression = ValueColor.Good;
        } else if (sValue >= sToleranceLow && sValue < sAcceptanceLow || sValue > sAcceptanceHigh && sValue <= sToleranceHigh) {
          sCriticalityExpression = ValueColor.Neutral;
        } else if (sDeviationLow && sValue >= sDeviationLow && sValue < sToleranceLow || sValue > sToleranceHigh && sDeviationHigh && sValue <= sDeviationHigh) {
          sCriticalityExpression = ValueColor.Critical;
        } else {
          sCriticalityExpression = ValueColor.Error;
        }
      } else {
        Log.warning("Case not supported, returning the default Value Neutral");
      }
      return sCriticalityExpression;
    };
    _proto._formatDateAndNumberValue = function _formatDateAndNumberValue(value, iPrecision, iScale, sPattern) {
      if (sPattern) {
        return this._getSemanticsValueFormatter(sPattern).formatValue(value, "string");
      } else if (!isNaN(value)) {
        return this._getLabelNumberFormatter(iPrecision, iScale).format(value);
      }
      return value;
    };
    _proto._getSemanticsValueFormatter = function _getSemanticsValueFormatter(sPattern) {
      if (!this._oDateType) {
        this._oDateType = new DateType({
          style: "short",
          source: {
            pattern: sPattern
          }
        });
      }
      return this._oDateType;
    };
    _proto._getLabelNumberFormatter = function _getLabelNumberFormatter(iPrecision, iScale) {
      return NumberFormat.getFloatInstance({
        style: "short",
        showScale: true,
        precision: typeof iPrecision === "number" ? iPrecision : null,
        decimals: typeof iScale === "number" ? iScale : null
      });
    };
    return MicroChartContainer;
  }(Control), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "showOnlyChart", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "uomPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "measures", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "dimension", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "dataPointQualifiers", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "measurePrecision", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "measureScale", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "dimensionPrecision", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "chartTitle", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "chartDescription", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "navigationType", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "calendarPattern", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "onTitlePressed", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "microChart", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "_uomLabel", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "microChartTitle", [_dec17], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  return MicroChartContainer;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/microchart/MicroChartContainer", ["sap/base/Log","sap/fe/core/helpers/ClassSupport","sap/fe/macros/library","sap/m/FlexBox","sap/m/Label","sap/m/library","sap/suite/ui/microchart/AreaMicroChart","sap/suite/ui/microchart/ColumnMicroChart","sap/suite/ui/microchart/ComparisonMicroChart","sap/suite/ui/microchart/LineMicroChart","sap/ui/core/Control","sap/ui/core/format/NumberFormat","sap/ui/model/odata/v4/ODataListBinding","sap/ui/model/odata/v4/ODataMetaModel","sap/ui/model/type/Date"],function(e,t,i,r,a,n,o,l,s,u,c,f,g,h,p){"use strict";var d,b,m,y,C,v,L,P,w,_,A,T,O,V,D,x,R,z,N,B,M,E,I,F,j,S,H,$,U,k,Y,G,q,X,Q;var J=t.property;var K=t.event;var W=t.defineUI5Class;var Z=t.aggregation;function ee(e,t,i,r){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(r):void 0})}function te(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function ie(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;re(e,t)}function re(e,t){re=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return re(e,t)}function ae(e,t,i,r,a){var n={};Object.keys(r).forEach(function(e){n[e]=r[e]});n.enumerable=!!n.enumerable;n.configurable=!!n.configurable;if("value"in n||n.initializer){n.writable=true}n=i.slice().reverse().reduce(function(i,r){return r(e,t,i)||i},n);if(a&&n.initializer!==void 0){n.value=n.initializer?n.initializer.call(a):void 0;n.initializer=undefined}if(n.initializer===void 0){Object.defineProperty(e,t,n);n=null}return n}function ne(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}const oe=i.NavigationType;const le=n.ValueColor;let se=(d=W("sap.fe.macros.microchart.MicroChartContainer"),b=J({type:"boolean",defaultValue:false}),m=J({type:"string",defaultValue:undefined}),y=J({type:"string[]",defaultValue:[]}),C=J({type:"string",defaultValue:undefined}),v=J({type:"string[]",defaultValue:[]}),L=J({type:"int",defaultValue:undefined}),P=J({type:"int",defaultValue:1}),w=J({type:"int",defaultValue:undefined}),_=J({type:"string",defaultValue:""}),A=J({type:"string",defaultValue:""}),T=J({type:"sap.fe.macros.NavigationType",defaultValue:"None"}),O=J({type:"string",defaultValue:""}),V=K(),D=Z({type:"sap.ui.core.Control",multiple:false,isDefault:true}),x=Z({type:"sap.m.Label",multiple:false}),R=Z({type:"sap.ui.core.Control",multiple:true}),d(z=(N=function(t){ie(i,t);function i(){var e;for(var i=arguments.length,r=new Array(i),a=0;a<i;a++){r[a]=arguments[a]}e=t.call(this,...r)||this;ee(e,"showOnlyChart",B,te(e));ee(e,"uomPath",M,te(e));ee(e,"measures",E,te(e));ee(e,"dimension",I,te(e));ee(e,"dataPointQualifiers",F,te(e));ee(e,"measurePrecision",j,te(e));ee(e,"measureScale",S,te(e));ee(e,"dimensionPrecision",H,te(e));ee(e,"chartTitle",$,te(e));ee(e,"chartDescription",U,te(e));ee(e,"navigationType",k,te(e));ee(e,"calendarPattern",Y,te(e));ee(e,"onTitlePressed",G,te(e));ee(e,"microChart",q,te(e));ee(e,"_uomLabel",X,te(e));ee(e,"microChartTitle",Q,te(e));return e}i.render=function e(t,i){t.openStart("div",i);t.openEnd();if(!i.showOnlyChart){const e=i.microChartTitle;if(e){e.forEach(function(e){t.openStart("div");t.openEnd();t.renderControl(e);t.close("div")})}t.openStart("div");t.openEnd();const r=new a({text:i.chartDescription});t.renderControl(r);t.close("div")}const n=i.microChart;if(n){n.addStyleClass("sapUiTinyMarginTopBottom");t.renderControl(n);if(!i.showOnlyChart&&i.uomPath){const e=i._checkIfChartRequiresRuntimeLabels()?undefined:{text:{path:i.uomPath}},n=new a(e),o=new r({alignItems:"Start",justifyContent:"End",items:[n]});t.renderControl(o);i.setAggregation("_uomLabel",n)}}t.close("div")};var n=i.prototype;n.onBeforeRendering=function e(){const t=this._getListBindingForRuntimeLabels();if(t){t.detachEvent("change",this._setRuntimeChartLabelsAndUnitOfMeasure,this);this._olistBinding=undefined}};n.onAfterRendering=function e(){const t=this._getListBindingForRuntimeLabels();if(!this._checkIfChartRequiresRuntimeLabels()){return}if(t){t.attachEvent("change",this._setRuntimeChartLabelsAndUnitOfMeasure,this);this._olistBinding=t}};n.setShowOnlyChart=function e(t){if(!t&&this._olistBinding){this._setChartLabels()}this.setProperty("showOnlyChart",t,false)};n._checkIfChartRequiresRuntimeLabels=function e(){const t=this.microChart;return Boolean(t instanceof o||t instanceof l||t instanceof u||t instanceof s)};n._checkForChartLabelAggregations=function e(){const t=this.microChart;return Boolean(t instanceof o&&t.getAggregation("firstYLabel")&&t.getAggregation("lastYLabel")&&t.getAggregation("firstXLabel")&&t.getAggregation("lastXLabel")||t instanceof l&&t.getAggregation("leftTopLabel")&&t.getAggregation("rightTopLabel")&&t.getAggregation("leftBottomLabel")&&t.getAggregation("rightBottomLabel")||t instanceof u)};n._getListBindingForRuntimeLabels=function e(){const t=this.microChart;let i;if(t instanceof o){const e=t.getChart();i=e&&t.getChart().getBinding("points")}else if(t instanceof l){i=t.getBinding("columns")}else if(t instanceof u){const e=t.getLines();i=e&&e.length&&e[0].getBinding("points")}else if(t instanceof s){i=t.getBinding("data")}return i instanceof g?i:false};n._setRuntimeChartLabelsAndUnitOfMeasure=function e(){const t=this._olistBinding,i=t===null||t===void 0?void 0:t.getContexts(),r=this.measures||[],a=this.dimension,n=this.uomPath,o=this.microChart,l=this._uomLabel;if(l&&n&&i&&i.length&&!this.showOnlyChart){l.setText(i[0].getObject(n))}else if(l){l.setText("")}if(!this._checkForChartLabelAggregations()){return}if(!i||!i.length){this._setChartLabels();return}const s=i[0],c=i[i.length-1],f=[],g=o instanceof u,h=s.getObject(a),p=c.getObject(a);let d,b,m={value:Infinity},y={value:-Infinity},C={value:Infinity},v={value:-Infinity};m=h==undefined?m:{context:s,value:h};y=p==undefined?y:{context:c,value:p};r.forEach((e,t)=>{d=s.getObject(e);b=c.getObject(e);v=b>v.value?{context:c,value:b,index:g?t:0}:v;C=d<C.value?{context:s,value:d,index:g?t:0}:C;if(g){f.push(this._getCriticalityFromPoint({context:c,value:b,index:t}))}});this._setChartLabels(C.value,v.value,m.value,y.value);if(g){return Promise.all(f).then(function(e){const t=o.getLines();t.forEach(function(t,i){t.setColor(e[i])})})}else{return this._setChartLabelsColors(v,C)}};n._setChartLabelsColors=function e(t,i){const r=this.microChart;return Promise.all([this._getCriticalityFromPoint(i),this._getCriticalityFromPoint(t)]).then(function(e){if(r instanceof o){r.getAggregation("firstYLabel").setProperty("color",e[0],true);r.getAggregation("lastYLabel").setProperty("color",e[1],true)}else if(r instanceof l){r.getAggregation("leftTopLabel").setProperty("color",e[0],true);r.getAggregation("rightTopLabel").setProperty("color",e[1],true)}})};n._setChartLabels=function e(t,i,r,a){const n=this.microChart;t=this._formatDateAndNumberValue(t,this.measurePrecision,this.measureScale);i=this._formatDateAndNumberValue(i,this.measurePrecision,this.measureScale);r=this._formatDateAndNumberValue(r,this.dimensionPrecision,undefined,this.calendarPattern);a=this._formatDateAndNumberValue(a,this.dimensionPrecision,undefined,this.calendarPattern);if(n instanceof o){n.getAggregation("firstYLabel").setProperty("label",t,false);n.getAggregation("lastYLabel").setProperty("label",i,false);n.getAggregation("firstXLabel").setProperty("label",r,false);n.getAggregation("lastXLabel").setProperty("label",a,false)}else if(n instanceof l){n.getAggregation("leftTopLabel").setProperty("label",t,false);n.getAggregation("rightTopLabel").setProperty("label",i,false);n.getAggregation("leftBottomLabel").setProperty("label",r,false);n.getAggregation("rightBottomLabel").setProperty("label",a,false)}else if(n instanceof u){n.setProperty("leftTopLabel",t,false);n.setProperty("rightTopLabel",i,false);n.setProperty("leftBottomLabel",r,false);n.setProperty("rightBottomLabel",a,false)}};n._getCriticalityFromPoint=function e(t){let i=Promise.resolve(le.Neutral);const r=this.getModel()&&this.getModel().getMetaModel(),a=this.dataPointQualifiers,n=r instanceof h&&t&&t.context&&t.context.getPath()&&r.getMetaPath(t.context.getPath());if(typeof n==="string"){i=r.requestObject(`${n}/@com.sap.vocabularies.UI.v1.DataPoint${a[t.index]?`#${a[t.index]}`:""}`).then(e=>{let i=le.Neutral;const r=t.context;if(e.Criticality){i=this._criticality(e.Criticality,r)}else if(e.CriticalityCalculation){const a=e.CriticalityCalculation,n={},o=function(e){let t;if(e.$Path){t=r.getObject(e.$Path)}else if(e.hasOwnProperty("$Decimal")){t=e.$Decimal}return t};n.sAcceptanceHigh=a.AcceptanceRangeHighValue?o(a.AcceptanceRangeHighValue):undefined;n.sAcceptanceLow=a.AcceptanceRangeLowValue?o(a.AcceptanceRangeLowValue):undefined;n.sDeviationHigh=a.DeviationRangeHighValue?o(a.DeviationRangeHighValue):undefined;n.sDeviationLow=a.DeviationRangeLowValue?o(a.DeviationRangeLowValue):undefined;n.sToleranceHigh=a.ToleranceRangeHighValue?o(a.ToleranceRangeHighValue):undefined;n.sToleranceLow=a.ToleranceRangeLowValue?o(a.ToleranceRangeLowValue):undefined;n.sImprovementDirection=a.ImprovementDirection.$EnumMember;i=this._criticalityCalculation(n.sImprovementDirection,t.value,n.sDeviationLow,n.sToleranceLow,n.sAcceptanceLow,n.sAcceptanceHigh,n.sToleranceHigh,n.sDeviationHigh)}return i})}return i};n._criticality=function t(i,r){let a,n=le.Neutral;if(i.$Path){const e=i.$Path;a=r.getObject(e);if(a==="Negative"||a==="1"||a===1){n=le.Error}else if(a==="Critical"||a==="2"||a===2){n=le.Critical}else if(a==="Positive"||a==="3"||a===3){n=le.Good}}else if(i.$EnumMember){a=i.$EnumMember;if(a.indexOf("com.sap.vocabularies.UI.v1.CriticalityType/Negative")>-1){n=le.Error}else if(a.indexOf("com.sap.vocabularies.UI.v1.CriticalityType/Positive")>-1){n=le.Good}else if(a.indexOf("com.sap.vocabularies.UI.v1.CriticalityType/Critical")>-1){n=le.Critical}}else{e.warning("Case not supported, returning the default Value Neutral")}return n};n._criticalityCalculation=function t(i,r,a,n,o,l,s,u){let c=le.Neutral;a=a==undefined?-Infinity:a;n=n==undefined?a:n;o=o==undefined?n:o;u=u==undefined?Infinity:u;s=s==undefined?u:s;l=l==undefined?s:l;if(i.indexOf("Minimize")>-1){if(r<=l){c=le.Good}else if(r<=s){c=le.Neutral}else if(u&&r<=u){c=le.Critical}else{c=le.Error}}else if(i.indexOf("Maximize")>-1){if(r>=o){c=le.Good}else if(r>=n){c=le.Neutral}else if(u&&r>=a){c=le.Critical}else{c=le.Error}}else if(i.indexOf("Target")>-1){if(r<=l&&r>=o){c=le.Good}else if(r>=n&&r<o||r>l&&r<=s){c=le.Neutral}else if(a&&r>=a&&r<n||r>s&&u&&r<=u){c=le.Critical}else{c=le.Error}}else{e.warning("Case not supported, returning the default Value Neutral")}return c};n._formatDateAndNumberValue=function e(t,i,r,a){if(a){return this._getSemanticsValueFormatter(a).formatValue(t,"string")}else if(!isNaN(t)){return this._getLabelNumberFormatter(i,r).format(t)}return t};n._getSemanticsValueFormatter=function e(t){if(!this._oDateType){this._oDateType=new p({style:"short",source:{pattern:t}})}return this._oDateType};n._getLabelNumberFormatter=function e(t,i){return f.getFloatInstance({style:"short",showScale:true,precision:typeof t==="number"?t:null,decimals:typeof i==="number"?i:null})};return i}(c),B=ae(N.prototype,"showOnlyChart",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),M=ae(N.prototype,"uomPath",[m],{configurable:true,enumerable:true,writable:true,initializer:null}),E=ae(N.prototype,"measures",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),I=ae(N.prototype,"dimension",[C],{configurable:true,enumerable:true,writable:true,initializer:null}),F=ae(N.prototype,"dataPointQualifiers",[v],{configurable:true,enumerable:true,writable:true,initializer:null}),j=ae(N.prototype,"measurePrecision",[L],{configurable:true,enumerable:true,writable:true,initializer:null}),S=ae(N.prototype,"measureScale",[P],{configurable:true,enumerable:true,writable:true,initializer:null}),H=ae(N.prototype,"dimensionPrecision",[w],{configurable:true,enumerable:true,writable:true,initializer:null}),$=ae(N.prototype,"chartTitle",[_],{configurable:true,enumerable:true,writable:true,initializer:null}),U=ae(N.prototype,"chartDescription",[A],{configurable:true,enumerable:true,writable:true,initializer:null}),k=ae(N.prototype,"navigationType",[T],{configurable:true,enumerable:true,writable:true,initializer:null}),Y=ae(N.prototype,"calendarPattern",[O],{configurable:true,enumerable:true,writable:true,initializer:null}),G=ae(N.prototype,"onTitlePressed",[V],{configurable:true,enumerable:true,writable:true,initializer:null}),q=ae(N.prototype,"microChart",[D],{configurable:true,enumerable:true,writable:true,initializer:null}),X=ae(N.prototype,"_uomLabel",[x],{configurable:true,enumerable:true,writable:true,initializer:null}),Q=ae(N.prototype,"microChartTitle",[R],{configurable:true,enumerable:true,writable:true,initializer:null}),N))||z);return se},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/microchart/MicroChartHelper-dbg", ["sap/base/Log", "sap/fe/macros/CommonHelper", "sap/m/library", "sap/ui/core/format/DateFormat"], function (Log, CommonHelper, mobilelibrary, DateFormat) {
  "use strict";

  const ValueColor = mobilelibrary.ValueColor;
  const calendarPatternMap = {
    yyyy: new RegExp("[1-9][0-9]{3,}|0[0-9]{3}"),
    Q: new RegExp("[1-4]"),
    MM: new RegExp("0[1-9]|1[0-2]"),
    ww: new RegExp("0[1-9]|[1-4][0-9]|5[0-3]"),
    yyyyMMdd: new RegExp("([1-9][0-9]{3,}|0[0-9]{3})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])"),
    yyyyMM: new RegExp("([1-9][0-9]{3,}|0[0-9]{3})(0[1-9]|1[0-2])")
  };
  /**
   * Helper class used by MDC_Controls to handle SAP Fiori elements for OData V4
   *
   * @private
   * @experimental This module is only for internal/experimental use!
   */
  const MicroChartHelper = {
    /**
     * This function returns the Threshold Color for bullet micro chart.
     *
     * @param sValue Threshold value provided in the annotations
     * @param iContext InterfaceContext with path to the threshold
     * @returns The indicator for Threshold Color
     */
    getThresholdColor: function (sValue, iContext) {
      const oContext = iContext.context;
      const sPath = oContext.getPath();
      let sThresholdColor = ValueColor.Neutral;
      if (sPath.indexOf("DeviationRange") > -1) {
        sThresholdColor = ValueColor.Error;
      } else if (sPath.indexOf("ToleranceRange") > -1) {
        sThresholdColor = ValueColor.Critical;
      }
      return sThresholdColor;
    },
    /**
     * To fetch measures from DataPoints.
     *
     * @param oChartAnnotations Chart Annotations
     * @param oEntityTypeAnnotations EntityType Annotations
     * @param sChartType Chart Type used
     * @returns Containing all measures.
     * @private
     */
    getMeasurePropertyPaths: function (oChartAnnotations, oEntityTypeAnnotations, sChartType) {
      const aPropertyPath = [];
      if (!oEntityTypeAnnotations) {
        Log.warning("FE:Macro:MicroChart : Couldn't find annotations for the DataPoint.");
        return undefined;
      }
      oChartAnnotations.Measures.forEach(function (sMeasure, iMeasure) {
        const iMeasureAttribute = CommonHelper.getMeasureAttributeIndex(iMeasure, oChartAnnotations),
          oMeasureAttribute = iMeasureAttribute > -1 && oChartAnnotations.MeasureAttributes && oChartAnnotations.MeasureAttributes[iMeasureAttribute],
          oDataPoint = oMeasureAttribute && oEntityTypeAnnotations && oEntityTypeAnnotations[oMeasureAttribute.DataPoint.$AnnotationPath];
        if (oDataPoint && oDataPoint.Value && oDataPoint.Value.$Path) {
          aPropertyPath.push(oDataPoint.Value.$Path);
        } else {
          Log.warning(`FE:Macro:MicroChart : Couldn't find DataPoint(Value) measure for the measureAttribute ${sChartType} MicroChart.`);
        }
      });
      return aPropertyPath.join(",");
    },
    /**
     * This function returns the visible expression path.
     *
     * @param args
     * @returns Expression Binding for the visible.
     */
    getHiddenPathExpression: function () {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      if (!args[0] && !args[1]) {
        return true;
      } else if (args[0] === true || args[1] === true) {
        return false;
      } else {
        const hiddenPaths = [];
        [].forEach.call(args, function (hiddenProperty) {
          if (hiddenProperty && hiddenProperty.$Path) {
            hiddenPaths.push("%{" + hiddenProperty.$Path + "}");
          }
        });
        return "{= " + hiddenPaths.join(" || ") + " === true ? false : true }";
      }
    },
    /**
     * This function returns the true/false to display chart.
     *
     * @param chartType The chart type
     * @param sValue Datapoint value of Value
     * @param sMaxValue Datapoint value of MaximumValue
     * @param sValueHidden Hidden path object/boolean value for the referrenced property of value
     * @param sMaxValueHidden Hidden path object/boolean value for the referrenced property of MaxValue
     * @returns `true` or `false` to hide/show chart
     */
    isNotAlwaysHidden: function (chartType, sValue, sMaxValue, sValueHidden, sMaxValueHidden) {
      if (sValueHidden === true) {
        this.logError(chartType, sValue);
      }
      if (sMaxValueHidden === true) {
        this.logError(chartType, sMaxValue);
      }
      if (sValueHidden === undefined && sMaxValueHidden === undefined) {
        return true;
      } else {
        return (!sValueHidden || sValueHidden.$Path) && sValueHidden !== undefined || (!sMaxValueHidden || sMaxValueHidden.$Path) && sMaxValueHidden !== undefined ? true : false;
      }
    },
    /**
     * This function is to log errors for missing datapoint properties.
     *
     * @param chartType The chart type.
     * @param sValue Dynamic hidden property name.
     */
    logError: function (chartType, sValue) {
      Log.error(`Measure Property ${sValue.$Path} is hidden for the ${chartType} Micro Chart`);
    },
    /**
     * This function returns the formatted value with scale factor for the value displayed.
     *
     * @param sPath Propertypath for the value
     * @param oProperty The Property for constraints
     * @param iFractionDigits No. of fraction digits specified from annotations
     * @returns Expression Binding for the value with scale.
     */
    formatDecimal: function (sPath, oProperty, iFractionDigits) {
      const aConstraints = [],
        aFormatOptions = ["style: 'short'"];
      let sScale;
      if (typeof iFractionDigits === "number") {
        sScale = iFractionDigits;
      } else {
        sScale = oProperty && oProperty.$Scale || 1;
      }
      let sBinding;
      if (sPath) {
        if (oProperty.$Nullable != undefined) {
          aConstraints.push("nullable: " + oProperty.$Nullable);
        }
        if (oProperty.$Precision != undefined) {
          aFormatOptions.push("precision: " + (oProperty.$Precision ? oProperty.$Precision : "1"));
        }
        aConstraints.push("scale: " + (sScale === "variable" ? "'" + sScale + "'" : sScale));
        sBinding = "{ path: '" + sPath + "'" + ", type: 'sap.ui.model.odata.type.Decimal', constraints: { " + aConstraints.join(",") + " }, formatOptions: { " + aFormatOptions.join(",") + " } }";
      }
      return sBinding;
    },
    /**
     * To fetch select parameters from annotations that need to be added to the list binding.
     *
     * @param args The select parameter
     * param {string} sGroupId groupId to be used(optional)
     * param {string} sUoMPath unit of measure path
     * param {string} oCriticality criticality for the chart
     * param {object} oCC criticality calculation object conatining the paths.
     * @returns String containing all the propertypaths needed to be added to the $select query of the listbinding.
     * @private
     */
    getSelectParameters: function () {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      const aPropertyPath = [],
        oCC = args[1],
        aParameters = [];
      if (args[0]) {
        aParameters.push("$$groupId : '" + args[0] + "'");
      }
      if (args[2]) {
        aPropertyPath.push(args[2]);
      } else if (oCC) {
        for (const k in oCC) {
          if (!oCC[k].$EnumMember && oCC[k].$Path) {
            aPropertyPath.push(oCC[k].$Path);
          }
        }
      }
      for (let i = 3; i < args.length; i++) {
        if (args[i]) {
          aPropertyPath.push(args[i]);
        }
      }
      if (aPropertyPath.length) {
        aParameters.push("$select : '" + aPropertyPath.join(",") + "'");
      }
      return aParameters.join(",");
    },
    /**
     * To fetch DataPoint Qualifiers of measures.
     *
     * @param oChartAnnotations Chart Annotations
     * @param oEntityTypeAnnotations EntityType Annotations
     * @param sChartType Chart Type used
     * @returns Containing all Datapoint Qualifiers.
     * @private
     */
    getDataPointQualifiersForMeasures: function (oChartAnnotations, oEntityTypeAnnotations, sChartType) {
      const aQualifers = [],
        aMeasureAttributes = oChartAnnotations.MeasureAttributes,
        fnAddDataPointQualifier = function (oMeasure) {
          const sMeasure = oMeasure.$PropertyPath;
          let sQualifer;
          aMeasureAttributes.forEach(function (oMeasureAttribute) {
            if (oEntityTypeAnnotations && (oMeasureAttribute && oMeasureAttribute.Measure && oMeasureAttribute.Measure.$PropertyPath) === sMeasure && oMeasureAttribute.DataPoint && oMeasureAttribute.DataPoint.$AnnotationPath) {
              const sAnnotationPath = oMeasureAttribute.DataPoint.$AnnotationPath;
              if (oEntityTypeAnnotations[sAnnotationPath]) {
                sQualifer = sAnnotationPath.indexOf("#") ? sAnnotationPath.split("#")[1] : "";
                aQualifers.push(sQualifer);
              }
            }
          });
          if (sQualifer === undefined) {
            Log.warning(`FE:Macro:MicroChart : Couldn't find DataPoint(Value) measure for the measureAttribute for ${sChartType} MicroChart.`);
          }
        };
      if (!oEntityTypeAnnotations) {
        Log.warning(`FE:Macro:MicroChart : Couldn't find annotations for the DataPoint ${sChartType} MicroChart.`);
      }
      oChartAnnotations.Measures.forEach(fnAddDataPointQualifier);
      return aQualifers.join(",");
    },
    /**
     * This function is to log warnings for missing datapoint properties.
     *
     * @param sChart The Chart type.
     * @param oError Object with properties from DataPoint.
     */
    logWarning: function (sChart, oError) {
      for (const sKey in oError) {
        const sValue = oError[sKey];
        if (!sValue) {
          Log.warning(`${sKey} parameter is missing for the ${sChart} Micro Chart`);
        }
      }
    },
    /**
     * This function is used to get DisplayValue for comparison micro chart data aggregation.
     *
     * @param oDataPoint Data point object.
     * @param oPathText Object after evaluating @com.sap.vocabularies.Common.v1.Text annotation
     * @param oValueTextPath Evaluation of @com.sap.vocabularies.Common.v1.Text/$Path/$ value of the annotation
     * @param oValueDataPointPath DataPoint>Value/$Path/$ value after evaluating annotation
     * @returns Expression binding for Display Value for comparison micro chart's aggregation data.
     */
    getDisplayValueForMicroChart: function (oDataPoint, oPathText, oValueTextPath, oValueDataPointPath) {
      const sValueFormat = oDataPoint.ValueFormat && oDataPoint.ValueFormat.NumberOfFractionalDigits;
      let sResult;
      if (oPathText) {
        sResult = MicroChartHelper.formatDecimal(oPathText["$Path"], oValueTextPath, sValueFormat);
      } else {
        sResult = MicroChartHelper.formatDecimal(oDataPoint.Value["$Path"], oValueDataPointPath, sValueFormat);
      }
      return sResult;
    },
    /**
     * This function is used to check whether micro chart is enabled or not by checking properties, chart annotations, hidden properties.
     *
     * @param sChartType MicroChart Type eg:- Bullet.
     * @param oDataPoint Data point object.
     * @param oDataPointValue Object with $Path annotation to get hidden value path
     * @param oChartAnnotations ChartAnnotation object
     * @param oDatapointMaxValue Object with $Path annotation to get hidden max value path
     * @returns `true` if the chart has all values and properties and also it is not always hidden sFinalDataPointValue && bMicrochartVisible.
     */
    shouldMicroChartRender: function (sChartType, oDataPoint, oDataPointValue, oChartAnnotations, oDatapointMaxValue) {
      const aChartTypes = ["Area", "Column", "Comparison"],
        sDataPointValue = oDataPoint && oDataPoint.Value,
        sHiddenPath = oDataPointValue && oDataPointValue["com.sap.vocabularies.UI.v1.Hidden"],
        sChartAnnotationDimension = oChartAnnotations && oChartAnnotations.Dimensions && oChartAnnotations.Dimensions[0],
        oFinalDataPointValue = aChartTypes.indexOf(sChartType) > -1 ? sDataPointValue && sChartAnnotationDimension : sDataPointValue; // only for three charts in array
      if (sChartType === "Harvey") {
        const oDataPointMaximumValue = oDataPoint && oDataPoint.MaximumValue,
          sMaxValueHiddenPath = oDatapointMaxValue && oDatapointMaxValue["com.sap.vocabularies.UI.v1.Hidden"];
        return sDataPointValue && oDataPointMaximumValue && MicroChartHelper.isNotAlwaysHidden("Bullet", sDataPointValue, oDataPointMaximumValue, sHiddenPath, sMaxValueHiddenPath);
      }
      return oFinalDataPointValue && MicroChartHelper.isNotAlwaysHidden(sChartType, sDataPointValue, undefined, sHiddenPath);
    },
    /**
     * This function is used to get dataPointQualifiers for Column, Comparison and StackedBar micro charts.
     *
     * @param sUiName
     * @returns Result string or undefined.
     */
    getdataPointQualifiersForMicroChart: function (sUiName) {
      if (sUiName.indexOf("com.sap.vocabularies.UI.v1.DataPoint") === -1) {
        return undefined;
      }
      if (sUiName.indexOf("#") > -1) {
        return sUiName.split("#")[1];
      }
      return "";
    },
    /**
     * This function is used to get colorPalette for comparison and HarveyBall Microcharts.
     *
     * @param oDataPoint Data point object.
     * @returns Result string for colorPalette or undefined.
     */
    getcolorPaletteForMicroChart: function (oDataPoint) {
      return oDataPoint.Criticality ? undefined : "sapUiChartPaletteQualitativeHue1, sapUiChartPaletteQualitativeHue2, sapUiChartPaletteQualitativeHue3,          sapUiChartPaletteQualitativeHue4, sapUiChartPaletteQualitativeHue5, sapUiChartPaletteQualitativeHue6, sapUiChartPaletteQualitativeHue7,          sapUiChartPaletteQualitativeHue8, sapUiChartPaletteQualitativeHue9, sapUiChartPaletteQualitativeHue10, sapUiChartPaletteQualitativeHue11";
    },
    /**
     * This function is used to get MeasureScale for Area, Column and Line micro charts.
     *
     * @param oDataPoint Data point object.
     * @returns Datapoint valueformat or datapoint scale or 1.
     */
    getMeasureScaleForMicroChart: function (oDataPoint) {
      if (oDataPoint.ValueFormat && oDataPoint.ValueFormat.NumberOfFractionalDigits) {
        return oDataPoint.ValueFormat.NumberOfFractionalDigits;
      }
      if (oDataPoint.Value && oDataPoint.Value["$Path"] && oDataPoint.Value["$Path"]["$Scale"]) {
        return oDataPoint.Value["$Path"]["$Scale"];
      }
      return 1;
    },
    /**
     * This function is to return the binding expression of microchart.
     *
     * @param sChartType The type of micro chart (Bullet, Radial etc.)
     * @param oMeasure Measure value for micro chart.
     * @param oThis `this`/current model for micro chart.
     * @param oCollection Collection object.
     * @param sUiName The @sapui.name in collection model is not accessible here from model hence need to pass it.
     * @param oDataPoint Data point object used in case of Harvey Ball micro chart
     * @returns The binding expression for micro chart.
     * @private
     */
    getBindingExpressionForMicrochart: function (sChartType, oMeasure, oThis, oCollection, sUiName, oDataPoint) {
      const bCondition = oCollection["$isCollection"] || oCollection["$kind"] === "EntitySet";
      const sPath = bCondition ? "" : sUiName;
      let sCurrencyOrUnit = MicroChartHelper.getUOMPathForMicrochart(oMeasure);
      let sDataPointCriticallity = "";
      switch (sChartType) {
        case "Radial":
          sCurrencyOrUnit = "";
          break;
        case "Harvey":
          sDataPointCriticallity = oDataPoint.Criticality ? oDataPoint.Criticality["$Path"] : "";
          break;
      }
      const sFunctionValue = MicroChartHelper.getSelectParameters(oThis.batchGroupId, "", sDataPointCriticallity, sCurrencyOrUnit),
        sBinding = `{ path: '${sPath}'` + `, parameters : {${sFunctionValue}} }`;
      return sBinding;
    },
    /**
     * This function is to return the UOMPath expression of the micro chart.
     *
     * @param bShowOnlyChart Whether only chart should be rendered or not.
     * @param oMeasure Measures for the micro chart.
     * @returns UOMPath String for the micro chart.
     * @private
     */
    getUOMPathForMicrochart: function (bShowOnlyChart, oMeasure) {
      let bResult;
      if (oMeasure && !bShowOnlyChart) {
        bResult = oMeasure["@Org.OData.Measures.V1.ISOCurrency"] && oMeasure["@Org.OData.Measures.V1.ISOCurrency"].$Path || oMeasure["@Org.OData.Measures.V1.Unit"] && oMeasure["@Org.OData.Measures.V1.Unit"].$Path;
      }
      return bResult ? bResult : undefined;
    },
    /**
     * This function is to return the aggregation binding expression of micro chart.
     *
     * @param sAggregationType Aggregation type of chart (eg:- Point for AreaMicrochart)
     * @param oCollection Collection object.
     * @param oDataPoint Data point info for micro chart.
     * @param sUiName The @sapui.name in collection model is not accessible here from model hence need to pass it.
     * @param oDimension Micro chart Dimensions.
     * @param oMeasure Measure value for micro chart.
     * @param sMeasureOrDimensionBar The measure or dimension passed specifically in case of bar chart
     * @returns Aggregation binding expression for micro chart.
     * @private
     */
    getAggregationForMicrochart: function (sAggregationType, oCollection, oDataPoint, sUiName, oDimension, oMeasure, sMeasureOrDimensionBar) {
      let sPath = oCollection["$kind"] === "EntitySet" ? "/" : "";
      sPath = sPath + sUiName;
      const sGroupId = "";
      let sDataPointCriticallityCalc = "";
      let sDataPointCriticallity = oDataPoint.Criticality ? oDataPoint.Criticality["$Path"] : "";
      const sCurrencyOrUnit = MicroChartHelper.getUOMPathForMicrochart(false, oMeasure);
      let sTargetValuePath = "";
      let sDimensionPropertyPath = "";
      if (oDimension && oDimension.$PropertyPath && oDimension.$PropertyPath["@com.sap.vocabularies.Common.v1.Text"]) {
        sDimensionPropertyPath = oDimension.$PropertyPath["@com.sap.vocabularies.Common.v1.Text"].$Path;
      } else {
        sDimensionPropertyPath = oDimension.$PropertyPath;
      }
      switch (sAggregationType) {
        case "Points":
          sDataPointCriticallityCalc = oDataPoint && oDataPoint.CriticalityCalculation;
          sTargetValuePath = oDataPoint && oDataPoint.TargetValue && oDataPoint.TargetValue["$Path"];
          sDataPointCriticallity = "";
          break;
        case "Columns":
          sDataPointCriticallityCalc = oDataPoint && oDataPoint.CriticalityCalculation;
          break;
        case "LinePoints":
          sDataPointCriticallity = "";
          break;
        case "Bars":
          sDimensionPropertyPath = "";
          break;
      }
      const sFunctionValue = MicroChartHelper.getSelectParameters(sGroupId, sDataPointCriticallityCalc, sDataPointCriticallity, sCurrencyOrUnit, sTargetValuePath, sDimensionPropertyPath, sMeasureOrDimensionBar),
        sAggregationExpression = `{path:'${sPath}'` + `, parameters : {${sFunctionValue}} }`;
      return sAggregationExpression;
    },
    getCurrencyOrUnit: function (oMeasure) {
      if (oMeasure["@Org.OData.Measures.V1.ISOCurrency"]) {
        return oMeasure["@Org.OData.Measures.V1.ISOCurrency"].$Path || oMeasure["@Org.OData.Measures.V1.ISOCurrency"];
      } else if (oMeasure["@Org.OData.Measures.V1.Unit"]) {
        return oMeasure["@Org.OData.Measures.V1.Unit"].$Path || oMeasure["@Org.OData.Measures.V1.Unit"];
      } else {
        return "";
      }
    },
    getCalendarPattern: function (oAnnotations) {
      return oAnnotations["@com.sap.vocabularies.Common.v1.IsCalendarYear"] && "yyyy" || oAnnotations["@com.sap.vocabularies.Common.v1.IsCalendarQuarter"] && "Q" || oAnnotations["@com.sap.vocabularies.Common.v1.IsCalendarMonth"] && "MM" || oAnnotations["@com.sap.vocabularies.Common.v1.IsCalendarWeek"] && "ww" || oAnnotations["@com.sap.vocabularies.Common.v1.IsCalendarDate"] && "yyyyMMdd" || oAnnotations["@com.sap.vocabularies.Common.v1.IsCalendarYearMonth"] && "yyyyMM";
    },
    formatDimension: function (sDate, sPattern, sPropertyPath) {
      const fValue = DateFormat.getDateInstance({
        pattern: sPattern
      }).parse(sDate, false, true);
      if (fValue instanceof Date) {
        return parseFloat(fValue.getTime());
      } else {
        Log.warning("Date value could not be determined for " + sPropertyPath);
      }
      return 0;
    },
    formatDateDimension: function (sDate) {
      return MicroChartHelper.formatDimension(sDate, "yyyy-MM-dd", "");
    },
    formatStringDimension: function (sValue, sPattern, sPropertyPath) {
      const sMatchedValue = sValue && sValue.toString().match(calendarPatternMap[sPattern]);
      if (sMatchedValue && sMatchedValue.length) {
        return MicroChartHelper.formatDimension(sMatchedValue[0], sPattern, sPropertyPath);
      } else {
        Log.warning("Pattern not supported for " + sPropertyPath);
      }
      return 0;
    },
    getX: function (sPropertyPath, sType, oAnnotations) {
      if (sType === "Edm.Date") {
        //TODO: Check why formatter is not getting called
        return "{parts: [{path: '" + sPropertyPath + "', type: 'sap.ui.model.odata.type.String'}, {value: '" + sPropertyPath + "'}], formatter: 'MICROCHARTR.formatStringDimension'}";
      } else if (sType === "Edm.String") {
        const sPattern = oAnnotations && MicroChartHelper.getCalendarPattern(oAnnotations);
        if (sPattern) {
          return "{parts: [{path: '" + sPropertyPath + "', type: 'sap.ui.model.odata.type.String'}, {value: '" + sPattern + "'}, {value: '" + sPropertyPath + "'}], formatter: 'MICROCHARTR.formatStringDimension'}";
        }
      }
    }
  };
  return MicroChartHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/microchart/MicroChartHelper", ["sap/base/Log","sap/fe/macros/CommonHelper","sap/m/library","sap/ui/core/format/DateFormat"],function(t,e,a,r){"use strict";const n=a.ValueColor;const i={yyyy:new RegExp("[1-9][0-9]{3,}|0[0-9]{3}"),Q:new RegExp("[1-4]"),MM:new RegExp("0[1-9]|1[0-2]"),ww:new RegExp("0[1-9]|[1-4][0-9]|5[0-3]"),yyyyMMdd:new RegExp("([1-9][0-9]{3,}|0[0-9]{3})(0[1-9]|1[0-2])(0[1-9]|[12][0-9]|3[01])"),yyyyMM:new RegExp("([1-9][0-9]{3,}|0[0-9]{3})(0[1-9]|1[0-2])")};const o={getThresholdColor:function(t,e){const a=e.context;const r=a.getPath();let i=n.Neutral;if(r.indexOf("DeviationRange")>-1){i=n.Error}else if(r.indexOf("ToleranceRange")>-1){i=n.Critical}return i},getMeasurePropertyPaths:function(a,r,n){const i=[];if(!r){t.warning("FE:Macro:MicroChart : Couldn't find annotations for the DataPoint.");return undefined}a.Measures.forEach(function(o,s){const u=e.getMeasureAttributeIndex(s,a),l=u>-1&&a.MeasureAttributes&&a.MeasureAttributes[u],c=l&&r&&r[l.DataPoint.$AnnotationPath];if(c&&c.Value&&c.Value.$Path){i.push(c.Value.$Path)}else{t.warning(`FE:Macro:MicroChart : Couldn't find DataPoint(Value) measure for the measureAttribute ${n} MicroChart.`)}});return i.join(",")},getHiddenPathExpression:function(){for(var t=arguments.length,e=new Array(t),a=0;a<t;a++){e[a]=arguments[a]}if(!e[0]&&!e[1]){return true}else if(e[0]===true||e[1]===true){return false}else{const t=[];[].forEach.call(e,function(e){if(e&&e.$Path){t.push("%{"+e.$Path+"}")}});return"{= "+t.join(" || ")+" === true ? false : true }"}},isNotAlwaysHidden:function(t,e,a,r,n){if(r===true){this.logError(t,e)}if(n===true){this.logError(t,a)}if(r===undefined&&n===undefined){return true}else{return(!r||r.$Path)&&r!==undefined||(!n||n.$Path)&&n!==undefined?true:false}},logError:function(e,a){t.error(`Measure Property ${a.$Path} is hidden for the ${e} Micro Chart`)},formatDecimal:function(t,e,a){const r=[],n=["style: 'short'"];let i;if(typeof a==="number"){i=a}else{i=e&&e.$Scale||1}let o;if(t){if(e.$Nullable!=undefined){r.push("nullable: "+e.$Nullable)}if(e.$Precision!=undefined){n.push("precision: "+(e.$Precision?e.$Precision:"1"))}r.push("scale: "+(i==="variable"?"'"+i+"'":i));o="{ path: '"+t+"'"+", type: 'sap.ui.model.odata.type.Decimal', constraints: { "+r.join(",")+" }, formatOptions: { "+n.join(",")+" } }"}return o},getSelectParameters:function(){for(var t=arguments.length,e=new Array(t),a=0;a<t;a++){e[a]=arguments[a]}const r=[],n=e[1],i=[];if(e[0]){i.push("$$groupId : '"+e[0]+"'")}if(e[2]){r.push(e[2])}else if(n){for(const t in n){if(!n[t].$EnumMember&&n[t].$Path){r.push(n[t].$Path)}}}for(let t=3;t<e.length;t++){if(e[t]){r.push(e[t])}}if(r.length){i.push("$select : '"+r.join(",")+"'")}return i.join(",")},getDataPointQualifiersForMeasures:function(e,a,r){const n=[],i=e.MeasureAttributes,o=function(e){const o=e.$PropertyPath;let s;i.forEach(function(t){if(a&&(t&&t.Measure&&t.Measure.$PropertyPath)===o&&t.DataPoint&&t.DataPoint.$AnnotationPath){const e=t.DataPoint.$AnnotationPath;if(a[e]){s=e.indexOf("#")?e.split("#")[1]:"";n.push(s)}}});if(s===undefined){t.warning(`FE:Macro:MicroChart : Couldn't find DataPoint(Value) measure for the measureAttribute for ${r} MicroChart.`)}};if(!a){t.warning(`FE:Macro:MicroChart : Couldn't find annotations for the DataPoint ${r} MicroChart.`)}e.Measures.forEach(o);return n.join(",")},logWarning:function(e,a){for(const r in a){const n=a[r];if(!n){t.warning(`${r} parameter is missing for the ${e} Micro Chart`)}}},getDisplayValueForMicroChart:function(t,e,a,r){const n=t.ValueFormat&&t.ValueFormat.NumberOfFractionalDigits;let i;if(e){i=o.formatDecimal(e["$Path"],a,n)}else{i=o.formatDecimal(t.Value["$Path"],r,n)}return i},shouldMicroChartRender:function(t,e,a,r,n){const i=["Area","Column","Comparison"],s=e&&e.Value,u=a&&a["com.sap.vocabularies.UI.v1.Hidden"],l=r&&r.Dimensions&&r.Dimensions[0],c=i.indexOf(t)>-1?s&&l:s;if(t==="Harvey"){const t=e&&e.MaximumValue,a=n&&n["com.sap.vocabularies.UI.v1.Hidden"];return s&&t&&o.isNotAlwaysHidden("Bullet",s,t,u,a)}return c&&o.isNotAlwaysHidden(t,s,undefined,u)},getdataPointQualifiersForMicroChart:function(t){if(t.indexOf("com.sap.vocabularies.UI.v1.DataPoint")===-1){return undefined}if(t.indexOf("#")>-1){return t.split("#")[1]}return""},getcolorPaletteForMicroChart:function(t){return t.Criticality?undefined:"sapUiChartPaletteQualitativeHue1, sapUiChartPaletteQualitativeHue2, sapUiChartPaletteQualitativeHue3,          sapUiChartPaletteQualitativeHue4, sapUiChartPaletteQualitativeHue5, sapUiChartPaletteQualitativeHue6, sapUiChartPaletteQualitativeHue7,          sapUiChartPaletteQualitativeHue8, sapUiChartPaletteQualitativeHue9, sapUiChartPaletteQualitativeHue10, sapUiChartPaletteQualitativeHue11"},getMeasureScaleForMicroChart:function(t){if(t.ValueFormat&&t.ValueFormat.NumberOfFractionalDigits){return t.ValueFormat.NumberOfFractionalDigits}if(t.Value&&t.Value["$Path"]&&t.Value["$Path"]["$Scale"]){return t.Value["$Path"]["$Scale"]}return 1},getBindingExpressionForMicrochart:function(t,e,a,r,n,i){const s=r["$isCollection"]||r["$kind"]==="EntitySet";const u=s?"":n;let l=o.getUOMPathForMicrochart(e);let c="";switch(t){case"Radial":l="";break;case"Harvey":c=i.Criticality?i.Criticality["$Path"]:"";break}const f=o.getSelectParameters(a.batchGroupId,"",c,l),h=`{ path: '${u}'`+`, parameters : {${f}} }`;return h},getUOMPathForMicrochart:function(t,e){let a;if(e&&!t){a=e["@Org.OData.Measures.V1.ISOCurrency"]&&e["@Org.OData.Measures.V1.ISOCurrency"].$Path||e["@Org.OData.Measures.V1.Unit"]&&e["@Org.OData.Measures.V1.Unit"].$Path}return a?a:undefined},getAggregationForMicrochart:function(t,e,a,r,n,i,s){let u=e["$kind"]==="EntitySet"?"/":"";u=u+r;const l="";let c="";let f=a.Criticality?a.Criticality["$Path"]:"";const h=o.getUOMPathForMicrochart(false,i);let m="";let d="";if(n&&n.$PropertyPath&&n.$PropertyPath["@com.sap.vocabularies.Common.v1.Text"]){d=n.$PropertyPath["@com.sap.vocabularies.Common.v1.Text"].$Path}else{d=n.$PropertyPath}switch(t){case"Points":c=a&&a.CriticalityCalculation;m=a&&a.TargetValue&&a.TargetValue["$Path"];f="";break;case"Columns":c=a&&a.CriticalityCalculation;break;case"LinePoints":f="";break;case"Bars":d="";break}const p=o.getSelectParameters(l,c,f,h,m,d,s),P=`{path:'${u}'`+`, parameters : {${p}} }`;return P},getCurrencyOrUnit:function(t){if(t["@Org.OData.Measures.V1.ISOCurrency"]){return t["@Org.OData.Measures.V1.ISOCurrency"].$Path||t["@Org.OData.Measures.V1.ISOCurrency"]}else if(t["@Org.OData.Measures.V1.Unit"]){return t["@Org.OData.Measures.V1.Unit"].$Path||t["@Org.OData.Measures.V1.Unit"]}else{return""}},getCalendarPattern:function(t){return t["@com.sap.vocabularies.Common.v1.IsCalendarYear"]&&"yyyy"||t["@com.sap.vocabularies.Common.v1.IsCalendarQuarter"]&&"Q"||t["@com.sap.vocabularies.Common.v1.IsCalendarMonth"]&&"MM"||t["@com.sap.vocabularies.Common.v1.IsCalendarWeek"]&&"ww"||t["@com.sap.vocabularies.Common.v1.IsCalendarDate"]&&"yyyyMMdd"||t["@com.sap.vocabularies.Common.v1.IsCalendarYearMonth"]&&"yyyyMM"},formatDimension:function(e,a,n){const i=r.getDateInstance({pattern:a}).parse(e,false,true);if(i instanceof Date){return parseFloat(i.getTime())}else{t.warning("Date value could not be determined for "+n)}return 0},formatDateDimension:function(t){return o.formatDimension(t,"yyyy-MM-dd","")},formatStringDimension:function(e,a,r){const n=e&&e.toString().match(i[a]);if(n&&n.length){return o.formatDimension(n[0],a,r)}else{t.warning("Pattern not supported for "+r)}return 0},getX:function(t,e,a){if(e==="Edm.Date"){return"{parts: [{path: '"+t+"', type: 'sap.ui.model.odata.type.String'}, {value: '"+t+"'}], formatter: 'MICROCHARTR.formatStringDimension'}"}else if(e==="Edm.String"){const e=a&&o.getCalendarPattern(a);if(e){return"{parts: [{path: '"+t+"', type: 'sap.ui.model.odata.type.String'}, {value: '"+e+"'}, {value: '"+t+"'}], formatter: 'MICROCHARTR.formatStringDimension'}"}}}};return o},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/multiValueField/MultiValueField.block-dbg", ["sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/converters/helpers/BindingHelper", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/core/templating/PropertyFormatters", "sap/fe/core/templating/UIFormatters", "sap/fe/macros/field/FieldHelper", "sap/fe/macros/field/FieldTemplating", "sap/fe/macros/internal/valuehelp/ValueHelpTemplating"], function (BuildingBlock, BuildingBlockRuntime, BindingHelper, MetaModelConverter, BindingToolkit, ID, DataModelPathHelper, PropertyFormatters, UIFormatters, FieldHelper, FieldTemplating, ValueHelpTemplating) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7;
  var _exports = {};
  var getVisibleExpression = FieldTemplating.getVisibleExpression;
  var getValueBinding = FieldTemplating.getValueBinding;
  var getDisplayMode = UIFormatters.getDisplayMode;
  var isPathInsertable = DataModelPathHelper.isPathInsertable;
  var isPathDeletable = DataModelPathHelper.isPathDeletable;
  var getRelativePaths = DataModelPathHelper.getRelativePaths;
  var getContextRelativeTargetObjectPath = DataModelPathHelper.getContextRelativeTargetObjectPath;
  var enhanceDataModelPath = DataModelPathHelper.enhanceDataModelPath;
  var or = BindingToolkit.or;
  var not = BindingToolkit.not;
  var isConstant = BindingToolkit.isConstant;
  var ifElse = BindingToolkit.ifElse;
  var getExpressionFromAnnotation = BindingToolkit.getExpressionFromAnnotation;
  var constant = BindingToolkit.constant;
  var compileExpression = BindingToolkit.compileExpression;
  var and = BindingToolkit.and;
  var UI = BindingHelper.UI;
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let MultiValueField = (
  /**
   * Building block for creating a MultiValueField based on the metadata provided by OData V4.
   * <br>
   * Usually, a DataField annotation is expected
   *
   * Usage example:
   * <pre>
   * <internalMacro:MultiValueField
   *   idPrefix="SomePrefix"
   *   contextPath="{entitySet>}"
   *   metaPath="{dataField>}"
   * />
   * </pre>
   *
   * @hideconstructor
   * @private
   * @experimental
   * @since 1.94.0
   */
  _dec = defineBuildingBlock({
    name: "MultiValueField",
    namespace: "sap.fe.macros.internal"
  }), _dec2 = blockAttribute({
    type: "string"
  }), _dec3 = blockAttribute({
    type: "string",
    defaultValue: "FieldValueHelp"
  }), _dec4 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true,
    $kind: ["Property"]
  }), _dec5 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true,
    $kind: ["EntitySet", "NavigationProperty", "EntityType", "Singleton"]
  }), _dec6 = blockAttribute({
    type: "string"
  }), _dec7 = blockAttribute({
    type: "string"
  }), _dec8 = blockAttribute({
    type: "object",
    validate: function (formatOptionsInput) {
      if (formatOptionsInput.displayMode && !["Value", "Description", "ValueDescription", "DescriptionValue"].includes(formatOptionsInput.displayMode)) {
        throw new Error(`Allowed value ${formatOptionsInput.displayMode} for displayMode does not match`);
      }
      return formatOptionsInput;
    }
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(MultiValueField, _BuildingBlockBase);
    /**
     * Prefix added to the generated ID of the field
     */
    /**
     * Prefix added to the generated ID of the value help used for the field
     */
    /**
     * Metadata path to the MultiValueField.
     * This property is usually a metadataContext pointing to a DataField having a Value that uses a 1:n navigation
     */
    /**
     * Mandatory context to the MultiValueField
     */
    /**
     * Property added to associate the label with the MultiValueField
     */
    /**
     * The format options
     */
    /**
     * Function to get the correct settings for the multi input.
     *
     * @param propertyDataModelObjectPath The corresponding datamodelobjectpath.
     * @param formatOptions The format options to calculate the result
     * @returns MultiInputSettings
     */
    MultiValueField._getMultiInputSettings = function _getMultiInputSettings(propertyDataModelObjectPath, formatOptions) {
      var _propertyDefinition$a;
      const {
        collectionPath,
        itemDataModelObjectPath
      } = MultiValueField._getPathStructure(propertyDataModelObjectPath);
      const collectionBindingDisplay = `{path:'${collectionPath}', templateShareable: false}`;
      const collectionBindingEdit = `{path:'${collectionPath}', parameters: {$$ownRequest : true}, templateShareable: false}`;
      const propertyDefinition = propertyDataModelObjectPath.targetObject.type === "PropertyPath" ? propertyDataModelObjectPath.targetObject.$target : propertyDataModelObjectPath.targetObject;
      const commonText = (_propertyDefinition$a = propertyDefinition.annotations.Common) === null || _propertyDefinition$a === void 0 ? void 0 : _propertyDefinition$a.Text;
      const relativeLocation = getRelativePaths(propertyDataModelObjectPath);
      const textExpression = commonText ? compileExpression(getExpressionFromAnnotation(commonText, relativeLocation)) : getValueBinding(itemDataModelObjectPath, formatOptions, true);
      return {
        text: textExpression,
        collectionBindingDisplay: collectionBindingDisplay,
        collectionBindingEdit: collectionBindingEdit,
        key: getValueBinding(itemDataModelObjectPath, formatOptions, true)
      };
    }

    // Process the dataModelPath to find the collection and the relative DataModelPath for the item.
    ;
    MultiValueField._getPathStructure = function _getPathStructure(dataModelObjectPath) {
      var _dataModelObjectPath$, _dataModelObjectPath$2;
      let firstCollectionPath = "";
      const currentEntitySet = (_dataModelObjectPath$ = dataModelObjectPath.contextLocation) !== null && _dataModelObjectPath$ !== void 0 && _dataModelObjectPath$.targetEntitySet ? dataModelObjectPath.contextLocation.targetEntitySet : dataModelObjectPath.startingEntitySet;
      const navigatedPaths = [];
      const contextNavsForItem = ((_dataModelObjectPath$2 = dataModelObjectPath.contextLocation) === null || _dataModelObjectPath$2 === void 0 ? void 0 : _dataModelObjectPath$2.navigationProperties) || [];
      for (const navProp of dataModelObjectPath.navigationProperties) {
        if (!dataModelObjectPath.contextLocation || !dataModelObjectPath.contextLocation.navigationProperties.some(contextNavProp => contextNavProp.fullyQualifiedName === navProp.fullyQualifiedName)) {
          // in case of relative entitySetPath we don't consider navigationPath that are already in the context
          navigatedPaths.push(navProp.name);
          contextNavsForItem.push(navProp);
        }
        if (currentEntitySet.navigationPropertyBinding.hasOwnProperty(navProp.name)) {
          if (navProp._type === "NavigationProperty" && navProp.isCollection) {
            break;
          }
        }
      }
      firstCollectionPath = `${navigatedPaths.join("/")}`;
      const itemDataModelObjectPath = Object.assign({}, dataModelObjectPath);
      if (itemDataModelObjectPath.contextLocation) {
        itemDataModelObjectPath.contextLocation.navigationProperties = contextNavsForItem;
      }
      return {
        collectionPath: firstCollectionPath,
        itemDataModelObjectPath: itemDataModelObjectPath
      };
    };
    function MultiValueField(props) {
      var _this;
      _this = _BuildingBlockBase.call(this, props) || this;
      _initializerDefineProperty(_this, "idPrefix", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "vhIdPrefix", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "ariaLabelledBy", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "key", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "formatOptions", _descriptor7, _assertThisInitialized(_this));
      let dataModelPath = MetaModelConverter.getInvolvedDataModelObjects(_this.metaPath, props.contextPath);
      const dataFieldConverted = MetaModelConverter.convertMetaModelContext(_this.metaPath);
      const extraPath = dataFieldConverted.Value.path;
      _this.visible = getVisibleExpression(dataModelPath, props.formatOptions);
      if (extraPath && extraPath.length > 0) {
        dataModelPath = enhanceDataModelPath(dataModelPath, extraPath);
      }
      const insertable = isPathInsertable(dataModelPath);
      const deleteNavigationRestriction = isPathDeletable(dataModelPath, {
        ignoreTargetCollection: true,
        authorizeUnresolvable: true
      });
      const deletePath = isPathDeletable(dataModelPath);
      // deletable:
      //		if restrictions come from Navigation we apply it
      //		otherwise we apply restrictions defined on target collection only if it's a constant
      //      otherwise it's true!
      const deletable = ifElse(deleteNavigationRestriction._type === "Unresolvable", or(not(isConstant(deletePath)), deletePath), deletePath);
      _this.editMode = _this.formatOptions.displayOnly === "true" ? "Display" : compileExpression(ifElse(and(insertable, deletable, UI.IsEditable), constant("Editable"), constant("Display")));
      _this.displayMode = getDisplayMode(dataModelPath);
      const multiInputSettings = MultiValueField._getMultiInputSettings(dataModelPath, _this.formatOptions);
      _this.text = multiInputSettings.text;
      _this.collection = _this.editMode === "Display" ? multiInputSettings.collectionBindingDisplay : multiInputSettings.collectionBindingEdit;
      _this.key = multiInputSettings.key;
      return _this;
    }

    /**
     * The building block template function.
     *
     * @returns An XML-based string with the definition of the field control
     */
    _exports = MultiValueField;
    var _proto = MultiValueField.prototype;
    _proto.getTemplate = function getTemplate() {
      //prepare settings for further processing
      const internalDataModelPath = MetaModelConverter.getInvolvedDataModelObjects(this.metaPath, this.contextPath);
      const internalDataPointConverted = MetaModelConverter.convertMetaModelContext(this.metaPath);
      const enhancedDataModelPath = enhanceDataModelPath(internalDataModelPath, internalDataPointConverted.Value.path);
      //calculate the id settings for this block
      const id = this.idPrefix ? ID.generate([this.idPrefix, "MultiValueField"]) : undefined;
      //create a new binding context for the value help
      const valueHelpProperty = FieldHelper.valueHelpProperty(this.metaPath);
      const valueHelpPropertyContext = this.metaPath.getModel().createBindingContext(valueHelpProperty, this.metaPath);
      //calculate fieldHelp
      const fieldHelp = ValueHelpTemplating.generateID(undefined, this.vhIdPrefix, PropertyFormatters.getRelativePropertyPath(valueHelpPropertyContext, {
        context: this.contextPath
      }), getContextRelativeTargetObjectPath(enhancedDataModelPath));
      //compute the correct label
      const label = FieldHelper.computeLabelText(internalDataModelPath.targetObject.Value, {
        context: this.metaPath
      });
      return xml`
		<mdc:MultiValueField
				xmlns:mdc="sap.ui.mdc"
				delegate="{name: 'sap/fe/macros/multiValueField/MultiValueFieldDelegate'}"
				id="${id}"
				items="${this.collection}"
				display="${this.displayMode}"
				width="100%"
				editMode="${this.editMode}"
				fieldHelp="${fieldHelp}"
				ariaLabelledBy = "${this.ariaLabelledBy}"
				showEmptyIndicator = "${this.formatOptions.showEmptyIndicator}"
				label = "${label}"
		>
		<mdcField:MultiValueFieldItem xmlns:mdcField="sap.ui.mdc.field" key="${this.key}" description="${this.text}" />
		</mdc:MultiValueField>
			`;
    };
    return MultiValueField;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "idPrefix", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "vhIdPrefix", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "ariaLabelledBy", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "key", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "formatOptions", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = MultiValueField;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/multiValueField/MultiValueField.block", ["sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/converters/helpers/BindingHelper","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/BindingToolkit","sap/fe/core/helpers/StableIdHelper","sap/fe/core/templating/DataModelPathHelper","sap/fe/core/templating/PropertyFormatters","sap/fe/core/templating/UIFormatters","sap/fe/macros/field/FieldHelper","sap/fe/macros/field/FieldTemplating","sap/fe/macros/internal/valuehelp/ValueHelpTemplating"],function(e,t,i,a,r,n,o,l,s,c,u,p){"use strict";var d,f,h,g,m,b,y,v,P,x,M,O,B,w,k,D,E;var $={};var j=u.getVisibleExpression;var V=u.getValueBinding;var z=s.getDisplayMode;var I=o.isPathInsertable;var F=o.isPathDeletable;var L=o.getRelativePaths;var S=o.getContextRelativeTargetObjectPath;var C=o.enhanceDataModelPath;var _=r.or;var T=r.not;var H=r.isConstant;var R=r.ifElse;var N=r.getExpressionFromAnnotation;var U=r.constant;var q=r.compileExpression;var A=r.and;var Q=i.UI;var G=t.xml;var J=e.defineBuildingBlock;var K=e.BuildingBlockBase;var W=e.blockAttribute;function X(e,t,i,a){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(a):void 0})}function Y(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function Z(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;ee(e,t)}function ee(e,t){ee=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return ee(e,t)}function te(e,t,i,a,r){var n={};Object.keys(a).forEach(function(e){n[e]=a[e]});n.enumerable=!!n.enumerable;n.configurable=!!n.configurable;if("value"in n||n.initializer){n.writable=true}n=i.slice().reverse().reduce(function(i,a){return a(e,t,i)||i},n);if(r&&n.initializer!==void 0){n.value=n.initializer?n.initializer.call(r):void 0;n.initializer=undefined}if(n.initializer===void 0){Object.defineProperty(e,t,n);n=null}return n}function ie(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let ae=(d=J({name:"MultiValueField",namespace:"sap.fe.macros.internal"}),f=W({type:"string"}),h=W({type:"string",defaultValue:"FieldValueHelp"}),g=W({type:"sap.ui.model.Context",required:true,$kind:["Property"]}),m=W({type:"sap.ui.model.Context",required:true,$kind:["EntitySet","NavigationProperty","EntityType","Singleton"]}),b=W({type:"string"}),y=W({type:"string"}),v=W({type:"object",validate:function(e){if(e.displayMode&&!["Value","Description","ValueDescription","DescriptionValue"].includes(e.displayMode)){throw new Error(`Allowed value ${e.displayMode} for displayMode does not match`)}return e}}),d(P=(x=function(e){Z(t,e);t._getMultiInputSettings=function e(i,a){var r;const{collectionPath:n,itemDataModelObjectPath:o}=t._getPathStructure(i);const l=`{path:'${n}', templateShareable: false}`;const s=`{path:'${n}', parameters: {$$ownRequest : true}, templateShareable: false}`;const c=i.targetObject.type==="PropertyPath"?i.targetObject.$target:i.targetObject;const u=(r=c.annotations.Common)===null||r===void 0?void 0:r.Text;const p=L(i);const d=u?q(N(u,p)):V(o,a,true);return{text:d,collectionBindingDisplay:l,collectionBindingEdit:s,key:V(o,a,true)}};t._getPathStructure=function e(t){var i,a;let r="";const n=(i=t.contextLocation)!==null&&i!==void 0&&i.targetEntitySet?t.contextLocation.targetEntitySet:t.startingEntitySet;const o=[];const l=((a=t.contextLocation)===null||a===void 0?void 0:a.navigationProperties)||[];for(const e of t.navigationProperties){if(!t.contextLocation||!t.contextLocation.navigationProperties.some(t=>t.fullyQualifiedName===e.fullyQualifiedName)){o.push(e.name);l.push(e)}if(n.navigationPropertyBinding.hasOwnProperty(e.name)){if(e._type==="NavigationProperty"&&e.isCollection){break}}}r=`${o.join("/")}`;const s=Object.assign({},t);if(s.contextLocation){s.contextLocation.navigationProperties=l}return{collectionPath:r,itemDataModelObjectPath:s}};function t(i){var r;r=e.call(this,i)||this;X(r,"idPrefix",M,Y(r));X(r,"vhIdPrefix",O,Y(r));X(r,"metaPath",B,Y(r));X(r,"contextPath",w,Y(r));X(r,"ariaLabelledBy",k,Y(r));X(r,"key",D,Y(r));X(r,"formatOptions",E,Y(r));let n=a.getInvolvedDataModelObjects(r.metaPath,i.contextPath);const o=a.convertMetaModelContext(r.metaPath);const l=o.Value.path;r.visible=j(n,i.formatOptions);if(l&&l.length>0){n=C(n,l)}const s=I(n);const c=F(n,{ignoreTargetCollection:true,authorizeUnresolvable:true});const u=F(n);const p=R(c._type==="Unresolvable",_(T(H(u)),u),u);r.editMode=r.formatOptions.displayOnly==="true"?"Display":q(R(A(s,p,Q.IsEditable),U("Editable"),U("Display")));r.displayMode=z(n);const d=t._getMultiInputSettings(n,r.formatOptions);r.text=d.text;r.collection=r.editMode==="Display"?d.collectionBindingDisplay:d.collectionBindingEdit;r.key=d.key;return r}$=t;var i=t.prototype;i.getTemplate=function e(){const t=a.getInvolvedDataModelObjects(this.metaPath,this.contextPath);const i=a.convertMetaModelContext(this.metaPath);const r=C(t,i.Value.path);const o=this.idPrefix?n.generate([this.idPrefix,"MultiValueField"]):undefined;const s=c.valueHelpProperty(this.metaPath);const u=this.metaPath.getModel().createBindingContext(s,this.metaPath);const d=p.generateID(undefined,this.vhIdPrefix,l.getRelativePropertyPath(u,{context:this.contextPath}),S(r));const f=c.computeLabelText(t.targetObject.Value,{context:this.metaPath});return G`
		<mdc:MultiValueField
				xmlns:mdc="sap.ui.mdc"
				delegate="{name: 'sap/fe/macros/multiValueField/MultiValueFieldDelegate'}"
				id="${o}"
				items="${this.collection}"
				display="${this.displayMode}"
				width="100%"
				editMode="${this.editMode}"
				fieldHelp="${d}"
				ariaLabelledBy = "${this.ariaLabelledBy}"
				showEmptyIndicator = "${this.formatOptions.showEmptyIndicator}"
				label = "${f}"
		>
		<mdcField:MultiValueFieldItem xmlns:mdcField="sap.ui.mdc.field" key="${this.key}" description="${this.text}" />
		</mdc:MultiValueField>
			`};return t}(K),M=te(x.prototype,"idPrefix",[f],{configurable:true,enumerable:true,writable:true,initializer:null}),O=te(x.prototype,"vhIdPrefix",[h],{configurable:true,enumerable:true,writable:true,initializer:null}),B=te(x.prototype,"metaPath",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),w=te(x.prototype,"contextPath",[m],{configurable:true,enumerable:true,writable:true,initializer:null}),k=te(x.prototype,"ariaLabelledBy",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),D=te(x.prototype,"key",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),E=te(x.prototype,"formatOptions",[v],{configurable:true,enumerable:true,writable:true,initializer:null}),x))||P);$=ae;return $},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/multiValueField/MultiValueFieldDelegate-dbg", ["sap/fe/core/CommonUtils", "sap/ui/mdc/field/MultiValueFieldDelegate"], function (CommonUtils, MdcMultiValueFieldDelegate) {
  "use strict";

  const MultiValueFieldDelegate = Object.assign({}, MdcMultiValueFieldDelegate);
  MultiValueFieldDelegate.updateItems = function (oPayload, aConditions, oControl) {
    const oListBinding = oControl.getBinding("items");
    if (oListBinding.isA("sap.ui.model.odata.v4.ODataListBinding")) {
      const oBindingInfo = oControl.getBindingInfo("items");
      // check if conditions are added, removed or changed
      const oTemplate = oBindingInfo.template;
      const oKeyBindingInfo = oTemplate.getBindingInfo("key");
      const oDescriptionBindingInfo = oTemplate.getBindingInfo("description");
      const sKeyPath = oKeyBindingInfo && oKeyBindingInfo.parts[0].path;
      const sDescriptionPath = oDescriptionBindingInfo && oDescriptionBindingInfo.parts && oDescriptionBindingInfo.parts[0] && oDescriptionBindingInfo.parts[0].path;
      const aContexts = oListBinding.getCurrentContexts();
      const aDataToAdd = [];
      const oController = CommonUtils.getTargetView(oControl).getController();

      // Contexts to delete
      const aNewKeys = aConditions.map(function (oCondition) {
        return oCondition.values[0];
      });
      const aOldKeys = aContexts.map(function (oContext) {
        return oContext.getProperty(sKeyPath);
      });
      const aModificationPromises = [];
      for (let i = 0; i < aContexts.length; i++) {
        const oDeleteContext = aContexts[i];
        if (!aNewKeys.includes(oDeleteContext.getProperty(sKeyPath))) {
          aModificationPromises.push(oController.editFlow.deleteMultipleDocuments([oDeleteContext], {
            controlId: oControl.getId(),
            noDialog: true
          }));
        }
      }
      // data to add
      aConditions.forEach(oCondition => {
        if (!aOldKeys.includes(oCondition.values[0])) {
          const oItem = {};
          if (sKeyPath && sKeyPath.indexOf("/") === -1) {
            // we do not manage to create on a sub entity of the 1:n navigation
            oItem[sKeyPath] = oCondition.values[0];
            if (sDescriptionPath && sDescriptionPath.indexOf("/") === -1 && sDescriptionPath !== sKeyPath) {
              oItem[sDescriptionPath] = oCondition.values[1];
            }
            aDataToAdd.push(oItem);
          }
        }
      });
      if (aDataToAdd.length) {
        aModificationPromises.push(oController._editFlow.createMultipleDocuments(oListBinding, aDataToAdd, true, false, undefined));
      }
      return Promise.all(aModificationPromises);
    }
  };
  return MultiValueFieldDelegate;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/multiValueField/MultiValueFieldDelegate", ["sap/fe/core/CommonUtils","sap/ui/mdc/field/MultiValueFieldDelegate"],function(t,e){"use strict";const n=Object.assign({},e);n.updateItems=function(e,n,s){const i=s.getBinding("items");if(i.isA("sap.ui.model.odata.v4.ODataListBinding")){const e=s.getBindingInfo("items");const o=e.template;const a=o.getBindingInfo("key");const c=o.getBindingInfo("description");const l=a&&a.parts[0].path;const u=c&&c.parts&&c.parts[0]&&c.parts[0].path;const r=i.getCurrentContexts();const d=[];const f=t.getTargetView(s).getController();const p=n.map(function(t){return t.values[0]});const g=r.map(function(t){return t.getProperty(l)});const m=[];for(let t=0;t<r.length;t++){const e=r[t];if(!p.includes(e.getProperty(l))){m.push(f.editFlow.deleteMultipleDocuments([e],{controlId:s.getId(),noDialog:true}))}}n.forEach(t=>{if(!g.includes(t.values[0])){const e={};if(l&&l.indexOf("/")===-1){e[l]=t.values[0];if(u&&u.indexOf("/")===-1&&u!==l){e[u]=t.values[1]}d.push(e)}}});if(d.length){m.push(f._editFlow.createMultipleDocuments(i,d,true,false,undefined))}return Promise.all(m)}};return n},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/paginator/Paginator.metadata-dbg", ["sap/fe/macros/MacroMetadata"], function (MacroMetadata) {
  "use strict";

  /**
   * @classdesc
   * Building block used to create a paginator control.
   *
   * Usage example:
   * <pre>
   * &lt;macro:Paginator /&gt;
   * </pre>
   * @class sap.fe.macros.Paginator
   * @hideconstructor
   * @public
   * @since 1.94.0
   */
  const Paginator = MacroMetadata.extend("sap.fe.macros.paginator.Paginator", {
    /**
     * Name of the building block control.
     */
    name: "Paginator",
    /**
     * Namespace of the building block control
     */
    namespace: "sap.fe.macros.internal",
    publicNamespace: "sap.fe.macros",
    /**
     * Fragment source of the macro (optional) - if not set, fragment is generated from namespace and name
     */
    fragment: "sap.fe.macros.paginator.Paginator",
    /**
     * The metadata describing the macro control.
     */
    metadata: {
      /**
       * Defines the macro stereotype used in documentation.
       */
      stereotype: "xmlmacro",
      /**
       * Properties.
       */
      properties: {
        /**
         * The identifier of the Paginator control.
         */
        id: {
          type: "string",
          isPublic: true
        }
      }
    }
  });
  return Paginator;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/paginator/Paginator.metadata", ["sap/fe/macros/MacroMetadata"],function(a){"use strict";const e=a.extend("sap.fe.macros.paginator.Paginator",{name:"Paginator",namespace:"sap.fe.macros.internal",publicNamespace:"sap.fe.macros",fragment:"sap.fe.macros.paginator.Paginator",metadata:{stereotype:"xmlmacro",properties:{id:{type:"string",isPublic:true}}}});return e},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/quickView/QuickView.metadata-dbg", ["sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/SemanticObjectHelper", "sap/fe/macros/field/FieldTemplating", "sap/fe/macros/MacroMetadata"], function (MetaModelConverter, BindingToolkit, PropertyHelper, SemanticObjectHelper, FieldTemplating, MacroMetadata) {
  "use strict";

  var getDataModelObjectPathForValue = FieldTemplating.getDataModelObjectPathForValue;
  var hasSemanticObject = SemanticObjectHelper.hasSemanticObject;
  var getSemanticObjectUnavailableActions = SemanticObjectHelper.getSemanticObjectUnavailableActions;
  var getSemanticObjects = SemanticObjectHelper.getSemanticObjects;
  var getSemanticObjectMappings = SemanticObjectHelper.getSemanticObjectMappings;
  var getDynamicPathFromSemanticObject = SemanticObjectHelper.getDynamicPathFromSemanticObject;
  var isProperty = PropertyHelper.isProperty;
  var pathInModel = BindingToolkit.pathInModel;
  var getExpressionFromAnnotation = BindingToolkit.getExpressionFromAnnotation;
  var compileExpression = BindingToolkit.compileExpression;
  const QuickView = MacroMetadata.extend("sap.fe.macros.quickView.QuickView", {
    /**
     * Name of the building block control.
     */
    name: "QuickView",
    /**
     *
     * Namespace of the building block control
     */
    namespace: "sap.fe.macros",
    /**
     * Fragment source of the building block (optional) - if not set, fragment is generated from namespace and name
     */
    fragment: "sap.fe.macros.quickView.QuickView",
    /**
     * The metadata describing the building block control.
     */
    metadata: {
      /**
       * Define building block stereotype for documentation
       */
      stereotype: "xmlmacro",
      /**
       * Location of the designtime info
       */
      designtime: "sap/fe/macros/quickView/QuickView.designtime",
      /**
       * Properties.
       */
      properties: {
        dataField: {
          type: "sap.ui.model.Context",
          required: true,
          $kind: "Property",
          $Type: ["com.sap.vocabularies.UI.v1.DataField", "com.sap.vocabularies.UI.v1.DataFieldWithUrl", "com.sap.vocabularies.UI.v1.DataFieldForAnnotation", "com.sap.vocabularies.UI.v1.DataPointType"]
        },
        semanticObject: {
          type: "string"
        },
        /**
         * Metadata path to the entity set
         */
        contextPath: {
          type: "sap.ui.model.Context",
          required: false
        },
        /**
         * Context pointing to an array of key value that is used for custom data generation
         */
        semanticObjectsToResolve: {
          type: "sap.ui.model.Context",
          required: false,
          computed: true
        }
      },
      events: {}
    },
    create: function (oProps) {
      var _valueProperty$annota, _oDataModelPath$conte, _oDataModelPath$conte2, _oDataModelPath$conte3, _oDataModelPath$conte4, _valueProperty$annota2, _valueProperty$annota3, _valueProperty$annota4;
      let oDataModelPath = MetaModelConverter.getInvolvedDataModelObjects(oProps.dataField, oProps.contextPath);
      const valueDataModelPath = getDataModelObjectPathForValue(oDataModelPath);
      oDataModelPath = valueDataModelPath || oDataModelPath;
      const valueProperty = oDataModelPath.targetObject;
      const hasQuickViewFacets = valueProperty ? FieldTemplating.isUsedInNavigationWithQuickViewFacets(oDataModelPath, valueProperty) + "" : "false";
      const commonAnnotations = valueProperty === null || valueProperty === void 0 ? void 0 : (_valueProperty$annota = valueProperty.annotations) === null || _valueProperty$annota === void 0 ? void 0 : _valueProperty$annota.Common;
      //we will need to pass the relativeLocation=getRelativePaths(oDataModelPath); to fieldTemplating#getSemanticObjectExpressionToResolve

      const aSemObjExprToResolve = commonAnnotations ? FieldTemplating.getSemanticObjectExpressionToResolve(commonAnnotations, true) : [];
      const pathOfDynamicSemanticObject = getDynamicPathFromSemanticObject(oProps.semanticObject);
      if (pathOfDynamicSemanticObject) {
        aSemObjExprToResolve.push({
          key: pathOfDynamicSemanticObject,
          value: oProps.semanticObject
        });
      }
      oProps.semanticObjectsToResolve = FieldTemplating.getSemanticObjects(aSemObjExprToResolve); // this is used via semanticObjectsToResolve>
      const relativePathToQuickViewEntity = this._getRelativePathToQuickViewEntity(oDataModelPath);
      // it can be that there is no targetEntityset for the context location so we use the targetObjectFullyQualifiedName
      const quickViewEntity = relativePathToQuickViewEntity ? `/${((_oDataModelPath$conte = oDataModelPath.contextLocation) === null || _oDataModelPath$conte === void 0 ? void 0 : (_oDataModelPath$conte2 = _oDataModelPath$conte.targetEntitySet) === null || _oDataModelPath$conte2 === void 0 ? void 0 : _oDataModelPath$conte2.name) || ((_oDataModelPath$conte3 = oDataModelPath.contextLocation) === null || _oDataModelPath$conte3 === void 0 ? void 0 : (_oDataModelPath$conte4 = _oDataModelPath$conte3.targetObject) === null || _oDataModelPath$conte4 === void 0 ? void 0 : _oDataModelPath$conte4.fullyQualifiedName)}/${relativePathToQuickViewEntity}` : undefined;
      const navigationPath = relativePathToQuickViewEntity ? compileExpression(pathInModel(relativePathToQuickViewEntity)) : undefined;
      const propertyWithSemanticObject = this._getPropertyWithSemanticObject(oDataModelPath);
      let mainSemanticObject;
      const {
        semanticObjectsList,
        qualifierMap
      } = this._getSemanticObjectsForPayloadAndQualifierMap(propertyWithSemanticObject);
      const semanticObjectMappings = this._getSemanticObjectMappingsForPayload(propertyWithSemanticObject, qualifierMap);
      const semanticObjectUnavailableActions = this._getSemanticObjectUnavailableActionsForPayload(propertyWithSemanticObject, qualifierMap);
      if (isProperty(propertyWithSemanticObject)) {
        // TODO why should this be different for navigation: when we add this some links disappear
        mainSemanticObject = qualifierMap["main"] || qualifierMap[""];
      }
      this._addCustomSemanticObjectToSemanticObjectListForPayload(semanticObjectsList, oProps.semanticObject);
      const propertyPathLabel = ((_valueProperty$annota2 = valueProperty.annotations) === null || _valueProperty$annota2 === void 0 ? void 0 : (_valueProperty$annota3 = _valueProperty$annota2.Common) === null || _valueProperty$annota3 === void 0 ? void 0 : (_valueProperty$annota4 = _valueProperty$annota3.Label) === null || _valueProperty$annota4 === void 0 ? void 0 : _valueProperty$annota4.valueOf()) || "";
      const payload = {
        semanticObjects: semanticObjectsList,
        entityType: quickViewEntity,
        semanticObjectUnavailableActions: semanticObjectUnavailableActions,
        semanticObjectMappings: semanticObjectMappings,
        mainSemanticObject: mainSemanticObject,
        propertyPathLabel: propertyPathLabel,
        dataField: quickViewEntity === undefined ? oProps.dataField.getPath() : undefined,
        contact: undefined,
        navigationPath: navigationPath,
        hasQuickViewFacets: hasQuickViewFacets
      };
      oProps.delegateConfiguration = JSON.stringify({
        name: "sap/fe/macros/quickView/QuickViewDelegate",
        payload: payload
      });
      return oProps;
    },
    /**
     * Get the relative path to the entity which quick view Facets we want to display.
     *
     * @param propertyDataModelPath
     * @returns A path if it exists.
     */
    _getRelativePathToQuickViewEntity: function (propertyDataModelPath) {
      let relativePathToQuickViewEntity;
      const quickViewNavProp = this._getNavPropToQuickViewEntity(propertyDataModelPath);
      if (quickViewNavProp) {
        relativePathToQuickViewEntity = propertyDataModelPath.navigationProperties.reduce((relativPath, navProp) => {
          var _propertyDataModelPat;
          if (navProp.name !== quickViewNavProp.name && !((_propertyDataModelPat = propertyDataModelPath.contextLocation) !== null && _propertyDataModelPat !== void 0 && _propertyDataModelPat.navigationProperties.find(contextNavProp => contextNavProp.name === navProp.name))) {
            // we keep only navProperties that are part of the relativePath and not the one for quickViewNavProp
            return `${relativPath}${navProp.name}/`;
          }
          return relativPath;
        }, "");
        relativePathToQuickViewEntity = `${relativePathToQuickViewEntity}${quickViewNavProp.name}`;
      }
      return relativePathToQuickViewEntity;
    },
    /**
     * Get the property or the navigation property in  its relative path that holds semanticObject annotation if it exists.
     *
     * @param dataModelObjectPath
     * @returns A property or a NavProperty or undefined
     */
    _getPropertyWithSemanticObject: function (dataModelObjectPath) {
      let propertyWithSemanticObject;
      if (hasSemanticObject(dataModelObjectPath.targetObject)) {
        propertyWithSemanticObject = dataModelObjectPath.targetObject;
      } else if (dataModelObjectPath.navigationProperties.length > 0) {
        // there are no semantic objects on the property itself so we look for some on nav properties
        for (const navProperty of dataModelObjectPath.navigationProperties) {
          var _dataModelObjectPath$;
          if (!((_dataModelObjectPath$ = dataModelObjectPath.contextLocation) !== null && _dataModelObjectPath$ !== void 0 && _dataModelObjectPath$.navigationProperties.find(contextNavProp => contextNavProp.fullyQualifiedName === navProperty.fullyQualifiedName)) && !propertyWithSemanticObject && hasSemanticObject(navProperty)) {
            propertyWithSemanticObject = navProperty;
          }
        }
      }
      return propertyWithSemanticObject;
    },
    /**
     * Get the semanticObject compile biding from metadata and a map to the qualifiers.
     *
     * @param propertyWithSemanticObject The property that holds semanticObject annotataions if it exists
     * @returns An object containing semanticObjectList and qualifierMap
     */
    _getSemanticObjectsForPayloadAndQualifierMap: function (propertyWithSemanticObject) {
      const qualifierMap = {};
      const semanticObjectsList = [];
      if (propertyWithSemanticObject !== undefined) {
        for (const semanticObject of getSemanticObjects(propertyWithSemanticObject)) {
          const compiledSemanticObject = compileExpression(getExpressionFromAnnotation(semanticObject));
          // this should not happen, but we make sure not to add twice the semanticObject otherwise the mdcLink crashes
          if (compiledSemanticObject && !semanticObjectsList.includes(compiledSemanticObject)) {
            qualifierMap[semanticObject.qualifier || ""] = compiledSemanticObject;
            semanticObjectsList.push(compiledSemanticObject);
          }
        }
      }
      return {
        semanticObjectsList,
        qualifierMap
      };
    },
    /**
     * Get the semanticObjectMappings from metadata in the payload expected structure.
     *
     * @param propertyWithSemanticObject
     * @param qualifierMap
     * @returns A payload structure for semanticObjectMappings
     */
    _getSemanticObjectMappingsForPayload: function (propertyWithSemanticObject, qualifierMap) {
      const semanticObjectMappings = [];
      if (propertyWithSemanticObject !== undefined) {
        for (const semanticObjectMapping of getSemanticObjectMappings(propertyWithSemanticObject)) {
          const correspondingSemanticObject = qualifierMap[semanticObjectMapping.qualifier || ""];
          if (correspondingSemanticObject) {
            semanticObjectMappings.push({
              semanticObject: correspondingSemanticObject,
              items: semanticObjectMapping.map(semanticObjectMappingType => {
                return {
                  key: semanticObjectMappingType.LocalProperty.value,
                  value: semanticObjectMappingType.SemanticObjectProperty.valueOf()
                };
              })
            });
          }
        }
      }
      return semanticObjectMappings;
    },
    /**
     * Get the semanticObjectUnavailableActions from metadata in the payload expected structure.
     *
     * @param propertyWithSemanticObject
     * @param qualifierMap
     * @returns A payload structure for semanticObjectUnavailableActions
     */
    _getSemanticObjectUnavailableActionsForPayload: function (propertyWithSemanticObject, qualifierMap) {
      const semanticObjectUnavailableActions = [];
      if (propertyWithSemanticObject !== undefined) {
        for (const unavailableActionAnnotation of getSemanticObjectUnavailableActions(propertyWithSemanticObject)) {
          const correspondingSemanticObject = qualifierMap[unavailableActionAnnotation.qualifier || ""];
          if (correspondingSemanticObject) {
            semanticObjectUnavailableActions.push({
              semanticObject: correspondingSemanticObject,
              actions: unavailableActionAnnotation.map(unavailableAction => unavailableAction)
            });
          }
        }
      }
      return semanticObjectUnavailableActions;
    },
    /**
     * Add customObject(s) to the semanticObject list for the payload if it exists.
     *
     * @param semanticObjectsList
     * @param customSemanticObject
     */
    _addCustomSemanticObjectToSemanticObjectListForPayload: function (semanticObjectsList, customSemanticObject) {
      if (customSemanticObject) {
        // the custom semantic objects are either a single string/key to custom data or a stringified array
        if (customSemanticObject[0] !== "[") {
          // customSemanticObject = "semanticObject" | "{pathInModel}"
          if (semanticObjectsList.indexOf(customSemanticObject) === -1) {
            semanticObjectsList.push(customSemanticObject);
          }
        } else {
          // customSemanticObject = '["semanticObject1","semanticObject2"]'
          for (const semanticObject of JSON.parse(customSemanticObject)) {
            if (semanticObjectsList.indexOf(semanticObject) === -1) {
              semanticObjectsList.push(semanticObject);
            }
          }
        }
      }
    },
    /**
     * Get the navigationProperty to an entity with QuickViewFacets that can be linked to the property.
     *
     * @param propertyDataModelPath
     * @returns A navigation property if it exists.
     */
    _getNavPropToQuickViewEntity: function (propertyDataModelPath) {
      var _propertyDataModelPat2;
      //TODO we should investigate to put this code as common with FieldTemplating.isUsedInNavigationWithQuickViewFacets
      const property = propertyDataModelPath.targetObject;
      const navigationProperties = propertyDataModelPath.targetEntityType.navigationProperties;
      let quickViewNavProp = navigationProperties.find(navProp => {
        var _navProp$referentialC;
        return (_navProp$referentialC = navProp.referentialConstraint) === null || _navProp$referentialC === void 0 ? void 0 : _navProp$referentialC.some(referentialConstraint => {
          var _navProp$targetType, _navProp$targetType$a, _navProp$targetType$a2;
          return (referentialConstraint === null || referentialConstraint === void 0 ? void 0 : referentialConstraint.sourceProperty) === property.name && (navProp === null || navProp === void 0 ? void 0 : (_navProp$targetType = navProp.targetType) === null || _navProp$targetType === void 0 ? void 0 : (_navProp$targetType$a = _navProp$targetType.annotations) === null || _navProp$targetType$a === void 0 ? void 0 : (_navProp$targetType$a2 = _navProp$targetType$a.UI) === null || _navProp$targetType$a2 === void 0 ? void 0 : _navProp$targetType$a2.QuickViewFacets);
        });
      });
      if (!quickViewNavProp && ((_propertyDataModelPat2 = propertyDataModelPath.contextLocation) === null || _propertyDataModelPat2 === void 0 ? void 0 : _propertyDataModelPat2.targetEntitySet) !== propertyDataModelPath.targetEntitySet) {
        var _propertyDataModelPat3, _propertyDataModelPat4, _propertyDataModelPat5, _propertyDataModelPat6, _propertyDataModelPat7, _propertyDataModelPat8;
        const semanticKeys = (propertyDataModelPath === null || propertyDataModelPath === void 0 ? void 0 : (_propertyDataModelPat3 = propertyDataModelPath.targetEntityType) === null || _propertyDataModelPat3 === void 0 ? void 0 : (_propertyDataModelPat4 = _propertyDataModelPat3.annotations) === null || _propertyDataModelPat4 === void 0 ? void 0 : (_propertyDataModelPat5 = _propertyDataModelPat4.Common) === null || _propertyDataModelPat5 === void 0 ? void 0 : _propertyDataModelPat5.SemanticKey) || [];
        const isPropertySemanticKey = semanticKeys.some(function (semanticKey) {
          var _semanticKey$$target;
          return (semanticKey === null || semanticKey === void 0 ? void 0 : (_semanticKey$$target = semanticKey.$target) === null || _semanticKey$$target === void 0 ? void 0 : _semanticKey$$target.name) === property.name;
        });
        const lastNavProp = propertyDataModelPath.navigationProperties[propertyDataModelPath.navigationProperties.length - 1];
        if ((isPropertySemanticKey || property.isKey) && propertyDataModelPath !== null && propertyDataModelPath !== void 0 && (_propertyDataModelPat6 = propertyDataModelPath.targetEntityType) !== null && _propertyDataModelPat6 !== void 0 && (_propertyDataModelPat7 = _propertyDataModelPat6.annotations) !== null && _propertyDataModelPat7 !== void 0 && (_propertyDataModelPat8 = _propertyDataModelPat7.UI) !== null && _propertyDataModelPat8 !== void 0 && _propertyDataModelPat8.QuickViewFacets) {
          quickViewNavProp = lastNavProp;
        }
      }
      return quickViewNavProp;
    }
  });
  return QuickView;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/quickView/QuickView.metadata", ["sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/BindingToolkit","sap/fe/core/templating/PropertyHelper","sap/fe/core/templating/SemanticObjectHelper","sap/fe/macros/field/FieldTemplating","sap/fe/macros/MacroMetadata"],function(e,t,i,a,n,o){"use strict";var c=n.getDataModelObjectPathForValue;var s=a.hasSemanticObject;var r=a.getSemanticObjectUnavailableActions;var l=a.getSemanticObjects;var d=a.getSemanticObjectMappings;var u=a.getDynamicPathFromSemanticObject;var v=i.isProperty;var m=t.pathInModel;var f=t.getExpressionFromAnnotation;var p=t.compileExpression;const g=o.extend("sap.fe.macros.quickView.QuickView",{name:"QuickView",namespace:"sap.fe.macros",fragment:"sap.fe.macros.quickView.QuickView",metadata:{stereotype:"xmlmacro",designtime:"sap/fe/macros/quickView/QuickView.designtime",properties:{dataField:{type:"sap.ui.model.Context",required:true,$kind:"Property",$Type:["com.sap.vocabularies.UI.v1.DataField","com.sap.vocabularies.UI.v1.DataFieldWithUrl","com.sap.vocabularies.UI.v1.DataFieldForAnnotation","com.sap.vocabularies.UI.v1.DataPointType"]},semanticObject:{type:"string"},contextPath:{type:"sap.ui.model.Context",required:false},semanticObjectsToResolve:{type:"sap.ui.model.Context",required:false,computed:true}},events:{}},create:function(t){var i,a,o,s,r,l,d,f;let g=e.getInvolvedDataModelObjects(t.dataField,t.contextPath);const b=c(g);g=b||g;const y=g.targetObject;const O=y?n.isUsedInNavigationWithQuickViewFacets(g,y)+"":"false";const j=y===null||y===void 0?void 0:(i=y.annotations)===null||i===void 0?void 0:i.Common;const P=j?n.getSemanticObjectExpressionToResolve(j,true):[];const h=u(t.semanticObject);if(h){P.push({key:h,value:t.semanticObject})}t.semanticObjectsToResolve=n.getSemanticObjects(P);const S=this._getRelativePathToQuickViewEntity(g);const F=S?`/${((a=g.contextLocation)===null||a===void 0?void 0:(o=a.targetEntitySet)===null||o===void 0?void 0:o.name)||((s=g.contextLocation)===null||s===void 0?void 0:(r=s.targetObject)===null||r===void 0?void 0:r.fullyQualifiedName)}/${S}`:undefined;const k=S?p(m(S)):undefined;const Q=this._getPropertyWithSemanticObject(g);let T;const{semanticObjectsList:V,qualifierMap:w}=this._getSemanticObjectsForPayloadAndQualifierMap(Q);const x=this._getSemanticObjectMappingsForPayload(Q,w);const M=this._getSemanticObjectUnavailableActionsForPayload(Q,w);if(v(Q)){T=w["main"]||w[""]}this._addCustomSemanticObjectToSemanticObjectListForPayload(V,t.semanticObject);const _=((l=y.annotations)===null||l===void 0?void 0:(d=l.Common)===null||d===void 0?void 0:(f=d.Label)===null||f===void 0?void 0:f.valueOf())||"";const E={semanticObjects:V,entityType:F,semanticObjectUnavailableActions:M,semanticObjectMappings:x,mainSemanticObject:T,propertyPathLabel:_,dataField:F===undefined?t.dataField.getPath():undefined,contact:undefined,navigationPath:k,hasQuickViewFacets:O};t.delegateConfiguration=JSON.stringify({name:"sap/fe/macros/quickView/QuickViewDelegate",payload:E});return t},_getRelativePathToQuickViewEntity:function(e){let t;const i=this._getNavPropToQuickViewEntity(e);if(i){t=e.navigationProperties.reduce((t,a)=>{var n;if(a.name!==i.name&&!((n=e.contextLocation)!==null&&n!==void 0&&n.navigationProperties.find(e=>e.name===a.name))){return`${t}${a.name}/`}return t},"");t=`${t}${i.name}`}return t},_getPropertyWithSemanticObject:function(e){let t;if(s(e.targetObject)){t=e.targetObject}else if(e.navigationProperties.length>0){for(const a of e.navigationProperties){var i;if(!((i=e.contextLocation)!==null&&i!==void 0&&i.navigationProperties.find(e=>e.fullyQualifiedName===a.fullyQualifiedName))&&!t&&s(a)){t=a}}}return t},_getSemanticObjectsForPayloadAndQualifierMap:function(e){const t={};const i=[];if(e!==undefined){for(const a of l(e)){const e=p(f(a));if(e&&!i.includes(e)){t[a.qualifier||""]=e;i.push(e)}}}return{semanticObjectsList:i,qualifierMap:t}},_getSemanticObjectMappingsForPayload:function(e,t){const i=[];if(e!==undefined){for(const a of d(e)){const e=t[a.qualifier||""];if(e){i.push({semanticObject:e,items:a.map(e=>({key:e.LocalProperty.value,value:e.SemanticObjectProperty.valueOf()}))})}}}return i},_getSemanticObjectUnavailableActionsForPayload:function(e,t){const i=[];if(e!==undefined){for(const a of r(e)){const e=t[a.qualifier||""];if(e){i.push({semanticObject:e,actions:a.map(e=>e)})}}}return i},_addCustomSemanticObjectToSemanticObjectListForPayload:function(e,t){if(t){if(t[0]!=="["){if(e.indexOf(t)===-1){e.push(t)}}else{for(const i of JSON.parse(t)){if(e.indexOf(i)===-1){e.push(i)}}}}},_getNavPropToQuickViewEntity:function(e){var t;const i=e.targetObject;const a=e.targetEntityType.navigationProperties;let n=a.find(e=>{var t;return(t=e.referentialConstraint)===null||t===void 0?void 0:t.some(t=>{var a,n,o;return(t===null||t===void 0?void 0:t.sourceProperty)===i.name&&(e===null||e===void 0?void 0:(a=e.targetType)===null||a===void 0?void 0:(n=a.annotations)===null||n===void 0?void 0:(o=n.UI)===null||o===void 0?void 0:o.QuickViewFacets)})});if(!n&&((t=e.contextLocation)===null||t===void 0?void 0:t.targetEntitySet)!==e.targetEntitySet){var o,c,s,r,l,d;const t=(e===null||e===void 0?void 0:(o=e.targetEntityType)===null||o===void 0?void 0:(c=o.annotations)===null||c===void 0?void 0:(s=c.Common)===null||s===void 0?void 0:s.SemanticKey)||[];const a=t.some(function(e){var t;return(e===null||e===void 0?void 0:(t=e.$target)===null||t===void 0?void 0:t.name)===i.name});const u=e.navigationProperties[e.navigationProperties.length-1];if((a||i.isKey)&&e!==null&&e!==void 0&&(r=e.targetEntityType)!==null&&r!==void 0&&(l=r.annotations)!==null&&l!==void 0&&(d=l.UI)!==null&&d!==void 0&&d.QuickViewFacets){n=u}}return n}});return g},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/quickView/QuickViewDelegate-dbg", ["sap/base/Log", "sap/base/util/deepClone", "sap/base/util/deepEqual", "sap/base/util/isPlainObject", "sap/fe/core/CommonUtils", "sap/fe/core/helpers/KeepAliveHelper", "sap/fe/core/helpers/ToES6Promise", "sap/fe/core/templating/SemanticObjectHelper", "sap/fe/macros/field/FieldHelper", "sap/fe/macros/field/FieldRuntime", "sap/fe/navigation/SelectionVariant", "sap/ui/core/Core", "sap/ui/core/Fragment", "sap/ui/core/util/XMLPreprocessor", "sap/ui/core/XMLTemplateProcessor", "sap/ui/mdc/link/Factory", "sap/ui/mdc/link/LinkItem", "sap/ui/mdc/link/SemanticObjectMapping", "sap/ui/mdc/link/SemanticObjectMappingItem", "sap/ui/mdc/link/SemanticObjectUnavailableAction", "sap/ui/mdc/LinkDelegate", "sap/ui/model/json/JSONModel"], function (Log, deepClone, deepEqual, isPlainObject, CommonUtils, KeepAliveHelper, toES6Promise, SemanticObjectHelper, FieldHelper, FieldRuntime, SelectionVariant, Core, Fragment, XMLPreprocessor, XMLTemplateProcessor, Factory, LinkItem, SemanticObjectMapping, SemanticObjectMappingItem, SemanticObjectUnavailableAction, LinkDelegate, JSONModel) {
  "use strict";

  var getDynamicPathFromSemanticObject = SemanticObjectHelper.getDynamicPathFromSemanticObject;
  const SimpleLinkDelegate = Object.assign({}, LinkDelegate);
  const CONSTANTS = {
    iLinksShownInPopup: 3,
    sapmLink: "sap.m.Link",
    sapuimdcLink: "sap.ui.mdc.Link",
    sapuimdclinkLinkItem: "sap.ui.mdc.link.LinkItem",
    sapmObjectIdentifier: "sap.m.ObjectIdentifier",
    sapmObjectStatus: "sap.m.ObjectStatus"
  };
  SimpleLinkDelegate.getConstants = function () {
    return CONSTANTS;
  };
  /**
   * This will return an array of the SemanticObjects as strings given by the payload.
   *
   * @private
   * @param oPayload The payload defined by the application
   * @param oMetaModel The ODataMetaModel received from the Link
   * @returns The context pointing to the current EntityType.
   */
  SimpleLinkDelegate._getEntityType = function (oPayload, oMetaModel) {
    if (oMetaModel) {
      return oMetaModel.createBindingContext(oPayload.entityType);
    } else {
      return undefined;
    }
  };
  /**
   * This will return an array of the SemanticObjects as strings given by the payload.
   *
   * @private
   * @param oPayload The payload defined by the application
   * @param oMetaModel The ODataMetaModel received from the Link
   * @returns A model containing the payload information
   */
  SimpleLinkDelegate._getSemanticsModel = function (oPayload, oMetaModel) {
    if (oMetaModel) {
      return new JSONModel(oPayload);
    } else {
      return undefined;
    }
  };
  /**
   * This will return an array of the SemanticObjects as strings given by the payload.
   *
   * @private
   * @param oPayload The payload defined by the application
   * @param oMetaModel The ODataMetaModel received from the Link
   * @returns An array containing SemanticObjects based of the payload
   */
  SimpleLinkDelegate._getDataField = function (oPayload, oMetaModel) {
    return oMetaModel.createBindingContext(oPayload.dataField);
  };
  /**
   * This will return an array of the SemanticObjects as strings given by the payload.
   *
   * @private
   * @param oPayload The payload defined by the application
   * @param oMetaModel The ODataMetaModel received from the Link
   * @returns Ancontaining SemanticObjects based of the payload
   */
  SimpleLinkDelegate._getContact = function (oPayload, oMetaModel) {
    return oMetaModel.createBindingContext(oPayload.contact);
  };
  SimpleLinkDelegate.fnTemplateFragment = function () {
    let sFragmentName, titleLinkHref;
    const oFragmentModel = {};
    let oPayloadToUse;

    // payload has been modified by fetching Semantic Objects names with path
    if (this.resolvedpayload) {
      oPayloadToUse = this.resolvedpayload;
    } else {
      oPayloadToUse = this.payload;
    }
    if (oPayloadToUse && !oPayloadToUse.LinkId) {
      oPayloadToUse.LinkId = this.oControl && this.oControl.isA(CONSTANTS.sapuimdcLink) ? this.oControl.getId() : undefined;
    }
    if (oPayloadToUse.LinkId) {
      titleLinkHref = this.oControl.getModel("$sapuimdcLink").getProperty("/titleLinkHref");
      oPayloadToUse.titlelink = titleLinkHref;
    }
    const oSemanticsModel = this._getSemanticsModel(oPayloadToUse, this.oMetaModel);
    this.semanticModel = oSemanticsModel;
    if (oPayloadToUse.entityType && this._getEntityType(oPayloadToUse, this.oMetaModel)) {
      sFragmentName = "sap.fe.macros.quickView.fragments.EntityQuickView";
      oFragmentModel.bindingContexts = {
        entityType: this._getEntityType(oPayloadToUse, this.oMetaModel),
        semantic: oSemanticsModel.createBindingContext("/")
      };
      oFragmentModel.models = {
        entityType: this.oMetaModel,
        semantic: oSemanticsModel
      };
    } else if (oPayloadToUse.dataField && this._getDataField(oPayloadToUse, this.oMetaModel)) {
      sFragmentName = "sap.fe.macros.quickView.fragments.DataFieldQuickView";
      oFragmentModel.bindingContexts = {
        dataField: this._getDataField(oPayloadToUse, this.oMetaModel),
        semantic: oSemanticsModel.createBindingContext("/")
      };
      oFragmentModel.models = {
        dataField: this.oMetaModel,
        semantic: oSemanticsModel
      };
    }
    oFragmentModel.models.entitySet = this.oMetaModel;
    oFragmentModel.models.metaModel = this.oMetaModel;
    if (this.oControl && this.oControl.getModel("viewData")) {
      oFragmentModel.models.viewData = this.oControl.getModel("viewData");
      oFragmentModel.bindingContexts.viewData = this.oControl.getModel("viewData").createBindingContext("/");
    }
    const oFragment = XMLTemplateProcessor.loadTemplate(sFragmentName, "fragment");
    return Promise.resolve(XMLPreprocessor.process(oFragment, {
      name: sFragmentName
    }, oFragmentModel)).then(_internalFragment => {
      return Fragment.load({
        definition: _internalFragment,
        controller: this
      });
    }).then(oPopoverContent => {
      if (oPopoverContent) {
        if (oFragmentModel.models && oFragmentModel.models.semantic) {
          oPopoverContent.setModel(oFragmentModel.models.semantic, "semantic");
          oPopoverContent.setBindingContext(oFragmentModel.bindingContexts.semantic, "semantic");
        }
        if (oFragmentModel.bindingContexts && oFragmentModel.bindingContexts.entityType) {
          oPopoverContent.setModel(oFragmentModel.models.entityType, "entityType");
          oPopoverContent.setBindingContext(oFragmentModel.bindingContexts.entityType, "entityType");
        }
      }
      this.resolvedpayload = undefined;
      return oPopoverContent;
    });
  };
  SimpleLinkDelegate.fetchAdditionalContent = function (oPayLoad, oMdcLinkControl) {
    var _oPayLoad$navigationP;
    this.oControl = oMdcLinkControl;
    const aNavigateRegexpMatch = oPayLoad === null || oPayLoad === void 0 ? void 0 : (_oPayLoad$navigationP = oPayLoad.navigationPath) === null || _oPayLoad$navigationP === void 0 ? void 0 : _oPayLoad$navigationP.match(/{(.*?)}/);
    const oBindingContext = aNavigateRegexpMatch && aNavigateRegexpMatch.length > 1 && aNavigateRegexpMatch[1] ? oMdcLinkControl.getModel().bindContext(aNavigateRegexpMatch[1], oMdcLinkControl.getBindingContext(), {
      $$ownRequest: true
    }) : null;
    this.payload = oPayLoad;
    if (oMdcLinkControl && oMdcLinkControl.isA(CONSTANTS.sapuimdcLink)) {
      this.oMetaModel = oMdcLinkControl.getModel().getMetaModel();
      return this.fnTemplateFragment().then(function (oPopoverContent) {
        if (oBindingContext) {
          oPopoverContent.setBindingContext(oBindingContext.getBoundContext());
        }
        return [oPopoverContent];
      });
    }
    return Promise.resolve([]);
  };
  SimpleLinkDelegate._fetchLinkCustomData = function (_oLink) {
    if (_oLink.getParent() && _oLink.isA(CONSTANTS.sapuimdcLink) && (_oLink.getParent().isA(CONSTANTS.sapmLink) || _oLink.getParent().isA(CONSTANTS.sapmObjectIdentifier) || _oLink.getParent().isA(CONSTANTS.sapmObjectStatus))) {
      return _oLink.getCustomData();
    } else {
      return undefined;
    }
  };
  /**
   * Fetches the relevant {@link sap.ui.mdc.link.LinkItem} for the Link and returns them.
   *
   * @public
   * @param oPayload The Payload of the Link given by the application
   * @param oBindingContext The ContextObject of the Link
   * @param oInfoLog The InfoLog of the Link
   * @returns Once resolved an array of {@link sap.ui.mdc.link.LinkItem} is returned
   */
  SimpleLinkDelegate.fetchLinkItems = function (oPayload, oBindingContext, oInfoLog) {
    if (oBindingContext && SimpleLinkDelegate._getSemanticObjects(oPayload)) {
      const oContextObject = oBindingContext.getObject();
      if (oInfoLog) {
        oInfoLog.initialize(SimpleLinkDelegate._getSemanticObjects(oPayload));
      }
      const _oLinkCustomData = this._link && this._fetchLinkCustomData(this._link);
      this.aLinkCustomData = _oLinkCustomData && this._fetchLinkCustomData(this._link).map(function (linkItem) {
        return linkItem.mProperties.value;
      });
      const oSemanticAttributesResolved = SimpleLinkDelegate._calculateSemanticAttributes(oContextObject, oPayload, oInfoLog, this._link);
      const oSemanticAttributes = oSemanticAttributesResolved.results;
      const oPayloadResolved = oSemanticAttributesResolved.payload;
      return SimpleLinkDelegate._retrieveNavigationTargets("", oSemanticAttributes, oPayloadResolved, oInfoLog, this._link).then(function (aLinks) {
        return aLinks.length === 0 ? null : aLinks;
      });
    } else {
      return Promise.resolve(null);
    }
  };

  /**
   * Find the type of the link.
   *
   * @param payload The payload of the mdc link.
   * @param aLinkItems Links returned by call to mdc _retrieveUnmodifiedLinkItems.
   * @returns The type of the link as defined by mdc.
   */
  SimpleLinkDelegate._findLinkType = function (payload, aLinkItems) {
    let nLinkType, oLinkItem;
    if ((aLinkItems === null || aLinkItems === void 0 ? void 0 : aLinkItems.length) === 1) {
      oLinkItem = new LinkItem({
        text: aLinkItems[0].getText(),
        href: aLinkItems[0].getHref()
      });
      nLinkType = payload.hasQuickViewFacets === "false" ? 1 : 2;
    } else if (payload.hasQuickViewFacets === "false" && (aLinkItems === null || aLinkItems === void 0 ? void 0 : aLinkItems.length) === 0) {
      nLinkType = 0;
    } else {
      nLinkType = 2;
    }
    return {
      linkType: nLinkType,
      linkItem: oLinkItem
    };
  };
  SimpleLinkDelegate.fetchLinkType = async function (oPayload, oLink) {
    const _oCurrentLink = oLink;
    const _oPayload = Object.assign({}, oPayload);
    const oDefaultInitialType = {
      initialType: {
        type: 2,
        directLink: undefined
      },
      runtimeType: undefined
    };
    // clean appStateKeyMap storage
    if (!this.appStateKeyMap) {
      this.appStateKeyMap = {};
    }
    try {
      var _oPayload$contact;
      if (_oPayload !== null && _oPayload !== void 0 && _oPayload.semanticObjects) {
        this._link = oLink;
        const aLinkItems = await _oCurrentLink._retrieveUnmodifiedLinkItems();
        const _LinkType = SimpleLinkDelegate._findLinkType(_oPayload, aLinkItems);
        return {
          initialType: {
            type: _LinkType.linkType,
            directLink: _LinkType.linkItem ? _LinkType.linkItem : undefined
          },
          runtimeType: undefined
        };
      } else if ((_oPayload === null || _oPayload === void 0 ? void 0 : (_oPayload$contact = _oPayload.contact) === null || _oPayload$contact === void 0 ? void 0 : _oPayload$contact.length) > 0) {
        return oDefaultInitialType;
      } else if (_oPayload !== null && _oPayload !== void 0 && _oPayload.entityType && _oPayload !== null && _oPayload !== void 0 && _oPayload.navigationPath) {
        return oDefaultInitialType;
      }
      throw new Error("no payload or semanticObjects found");
    } catch (oError) {
      Log.error("Error in SimpleLinkDelegate.fetchLinkType: ", oError);
    }
  };
  SimpleLinkDelegate._RemoveTitleLinkFromTargets = function (_aLinkItems, _bTitleHasLink, _aTitleLink) {
    let _sTitleLinkHref, _oMDCLink;
    let bResult = false;
    if (_bTitleHasLink && _aTitleLink && _aTitleLink[0]) {
      let linkIsPrimaryAction, _sLinkIntentWithoutParameters;
      const _sTitleIntent = _aTitleLink[0].intent.split("?")[0];
      if (_aLinkItems && _aLinkItems[0]) {
        _sLinkIntentWithoutParameters = `#${_aLinkItems[0].getProperty("key")}`;
        linkIsPrimaryAction = _sTitleIntent === _sLinkIntentWithoutParameters;
        if (linkIsPrimaryAction) {
          _sTitleLinkHref = _aLinkItems[0].getProperty("href");
          this.payload.titlelinkhref = _sTitleLinkHref;
          if (_aLinkItems[0].isA(CONSTANTS.sapuimdclinkLinkItem)) {
            _oMDCLink = _aLinkItems[0].getParent();
            _oMDCLink.getModel("$sapuimdcLink").setProperty("/titleLinkHref", _sTitleLinkHref);
            const aMLinkItems = _oMDCLink.getModel("$sapuimdcLink").getProperty("/linkItems").filter(function (oLinkItem) {
              if (`#${oLinkItem.key}` !== _sLinkIntentWithoutParameters) {
                return oLinkItem;
              }
            });
            if (aMLinkItems && aMLinkItems.length > 0) {
              _oMDCLink.getModel("$sapuimdcLink").setProperty("/linkItems/", aMLinkItems);
            }
            bResult = true;
          }
        }
      }
    }
    return bResult;
  };
  SimpleLinkDelegate._IsSemanticObjectDynamic = function (aNewLinkCustomData, oThis) {
    if (aNewLinkCustomData && oThis.aLinkCustomData) {
      return oThis.aLinkCustomData.filter(function (link) {
        return aNewLinkCustomData.filter(function (otherLink) {
          return otherLink !== link;
        }).length > 0;
      }).length > 0;
    } else {
      return false;
    }
  };
  SimpleLinkDelegate._getLineContext = function (oView, mLineContext) {
    if (!mLineContext) {
      if (oView.getAggregation("content")[0] && oView.getAggregation("content")[0].getBindingContext()) {
        return oView.getAggregation("content")[0].getBindingContext();
      }
    }
    return mLineContext;
  };
  SimpleLinkDelegate._setFilterContextUrlForSelectionVariant = function (oView, oSelectionVariant, oNavigationService) {
    if (oView.getViewData().entitySet && oSelectionVariant) {
      const sContextUrl = oNavigationService.constructContextUrl(oView.getViewData().entitySet, oView.getModel());
      oSelectionVariant.setFilterContextUrl(sContextUrl);
    }
    return oSelectionVariant;
  };
  SimpleLinkDelegate._setObjectMappings = function (sSemanticObject, oParams, aSemanticObjectMappings, oSelectionVariant) {
    let hasChanged = false;
    const modifiedSelectionVariant = new SelectionVariant(oSelectionVariant.toJSONObject());
    // if semanticObjectMappings has items with dynamic semanticObjects we need to resolve them using oParams
    aSemanticObjectMappings.forEach(function (mapping) {
      let mappingSemanticObject = mapping.semanticObject;
      const mappingSemanticObjectPath = getDynamicPathFromSemanticObject(mapping.semanticObject);
      if (mappingSemanticObjectPath && oParams[mappingSemanticObjectPath]) {
        mappingSemanticObject = oParams[mappingSemanticObjectPath];
      }
      if (sSemanticObject === mappingSemanticObject) {
        const oMappings = mapping.items;
        for (const i in oMappings) {
          const sLocalProperty = oMappings[i].key;
          const sSemanticObjectProperty = oMappings[i].value;
          if (sLocalProperty !== sSemanticObjectProperty) {
            if (oParams[sLocalProperty]) {
              modifiedSelectionVariant.removeParameter(sSemanticObjectProperty);
              modifiedSelectionVariant.removeSelectOption(sSemanticObjectProperty);
              modifiedSelectionVariant.renameParameter(sLocalProperty, sSemanticObjectProperty);
              modifiedSelectionVariant.renameSelectOption(sLocalProperty, sSemanticObjectProperty);
              oParams[sSemanticObjectProperty] = oParams[sLocalProperty];
              delete oParams[sLocalProperty];
              hasChanged = true;
            }
            // We remove the parameter as there is no value

            // The local property comes from a navigation property
            else if (sLocalProperty.split("/").length > 1) {
              // find the property to be removed
              const propertyToBeRemoved = sLocalProperty.split("/").slice(-1)[0];
              // The navigation property has no value
              if (!oParams[propertyToBeRemoved]) {
                delete oParams[propertyToBeRemoved];
                modifiedSelectionVariant.removeParameter(propertyToBeRemoved);
                modifiedSelectionVariant.removeSelectOption(propertyToBeRemoved);
              } else if (propertyToBeRemoved !== sSemanticObjectProperty) {
                // The navigation property has a value and properties names are different
                modifiedSelectionVariant.renameParameter(propertyToBeRemoved, sSemanticObjectProperty);
                modifiedSelectionVariant.renameSelectOption(propertyToBeRemoved, sSemanticObjectProperty);
                oParams[sSemanticObjectProperty] = oParams[propertyToBeRemoved];
                delete oParams[propertyToBeRemoved];
              }
            } else {
              delete oParams[sLocalProperty];
              modifiedSelectionVariant.removeParameter(sSemanticObjectProperty);
              modifiedSelectionVariant.removeSelectOption(sSemanticObjectProperty);
            }
          }
        }
      }
    });
    return {
      params: oParams,
      hasChanged,
      selectionVariant: modifiedSelectionVariant
    };
  };

  /**
   * Call getAppStateKeyAndUrlParameters in navigation service and cache its results.
   *
   * @param _this The instance of quickviewdelegate.
   * @param navigationService The navigation service.
   * @param selectionVariant The current selection variant.
   * @param semanticObject The current semanticObject.
   */
  SimpleLinkDelegate._getAppStateKeyAndUrlParameters = async function (_this, navigationService, selectionVariant, semanticObject) {
    var _this$appStateKeyMap$;
    let aValues = [];

    // check if default cache contains already the unmodified selectionVariant
    if (deepEqual(selectionVariant, (_this$appStateKeyMap$ = _this.appStateKeyMap[""]) === null || _this$appStateKeyMap$ === void 0 ? void 0 : _this$appStateKeyMap$.selectionVariant)) {
      const defaultCache = _this.appStateKeyMap[""];
      return [defaultCache.semanticAttributes, defaultCache.appstatekey];
    }
    // update url parameters because there is a change in selection variant
    if (_this.appStateKeyMap[`${semanticObject}`] === undefined || !deepEqual(_this.appStateKeyMap[`${semanticObject}`].selectionVariant, selectionVariant)) {
      aValues = await toES6Promise(navigationService.getAppStateKeyAndUrlParameters(selectionVariant.toJSONString()));
      _this.appStateKeyMap[`${semanticObject}`] = {
        semanticAttributes: aValues[0],
        appstatekey: aValues[1],
        selectionVariant: selectionVariant
      };
    } else {
      const cache = _this.appStateKeyMap[`${semanticObject}`];
      aValues = [cache.semanticAttributes, cache.appstatekey];
    }
    return aValues;
  };
  SimpleLinkDelegate._getLinkItemWithNewParameter = async function (_that, _bTitleHasLink, _aTitleLink, _oLinkItem, _oShellServices, _oPayload, _oParams, _sAppStateKey, _oSelectionVariant, _oNavigationService) {
    return _oShellServices.expandCompactHash(_oLinkItem.getHref()).then(async function (sHash) {
      const oShellHash = _oShellServices.parseShellHash(sHash);
      const params = Object.assign({}, _oParams);
      const {
        params: oNewParams,
        hasChanged,
        selectionVariant: newSelectionVariant
      } = SimpleLinkDelegate._setObjectMappings(oShellHash.semanticObject, params, _oPayload.semanticObjectMappings, _oSelectionVariant);
      if (hasChanged) {
        const aValues = await SimpleLinkDelegate._getAppStateKeyAndUrlParameters(_that, _oNavigationService, newSelectionVariant, oShellHash.semanticObject);
        _sAppStateKey = aValues[1];
      }
      const oNewShellHash = {
        target: {
          semanticObject: oShellHash.semanticObject,
          action: oShellHash.action
        },
        params: oNewParams,
        appStateKey: _sAppStateKey
      };
      delete oNewShellHash.params["sap-xapp-state"];
      _oLinkItem.setHref(`#${_oShellServices.constructShellHash(oNewShellHash)}`);
      _oPayload.aSemanticLinks.push(_oLinkItem.getHref());
      // The link is removed from the target list because the title link has same target.
      return SimpleLinkDelegate._RemoveTitleLinkFromTargets.bind(_that)([_oLinkItem], _bTitleHasLink, _aTitleLink);
    });
  };
  SimpleLinkDelegate._removeEmptyLinkItem = function (aLinkItems) {
    return aLinkItems.filter(linkItem => {
      return linkItem !== undefined;
    });
  };
  /**
   * Enables the modification of LinkItems before the popover opens. This enables additional parameters
   * to be added to the link.
   *
   * @param oPayload The payload of the Link given by the application
   * @param oBindingContext The binding context of the Link
   * @param aLinkItems The LinkItems of the Link that can be modified
   * @returns Once resolved an array of {@link sap.ui.mdc.link.LinkItem} is returned
   */
  SimpleLinkDelegate.modifyLinkItems = async function (oPayload, oBindingContext, aLinkItems) {
    const primaryActionIsActive = await FieldHelper.checkPrimaryActions(oPayload, true);
    const aTitleLink = primaryActionIsActive.titleLink;
    const bTitleHasLink = primaryActionIsActive.hasTitleLink;
    if (aLinkItems.length !== 0) {
      this.payload = oPayload;
      const oLink = aLinkItems[0].getParent();
      const oView = CommonUtils.getTargetView(oLink);
      const oAppComponent = CommonUtils.getAppComponent(oView);
      const oShellServices = oAppComponent.getShellServices();
      if (!oShellServices.hasUShell()) {
        Log.error("QuickViewDelegate: Cannot retrieve the shell services");
        return Promise.reject();
      }
      const oMetaModel = oView.getModel().getMetaModel();
      let mLineContext = oLink.getBindingContext();
      const oTargetInfo = {
        semanticObject: oPayload.mainSemanticObject,
        action: ""
      };
      try {
        const aNewLinkCustomData = oLink && this._fetchLinkCustomData(oLink).map(function (linkItem) {
          return linkItem.mProperties.value;
        });
        // check if all link items in this.aLinkCustomData are also present in aNewLinkCustomData
        if (SimpleLinkDelegate._IsSemanticObjectDynamic(aNewLinkCustomData, this)) {
          // if the customData changed there are different LinkItems to display
          const oSemanticAttributesResolved = SimpleLinkDelegate._calculateSemanticAttributes(oBindingContext.getObject(), oPayload, undefined, this._link);
          const oSemanticAttributes = oSemanticAttributesResolved.results;
          const oPayloadResolved = oSemanticAttributesResolved.payload;
          aLinkItems = await SimpleLinkDelegate._retrieveNavigationTargets("", oSemanticAttributes, oPayloadResolved, undefined, this._link);
        }
        const oNavigationService = oAppComponent.getNavigationService();
        const oController = oView.getController();
        let oSelectionVariant;
        let mLineContextData;
        mLineContext = SimpleLinkDelegate._getLineContext(oView, mLineContext);
        const sMetaPath = oMetaModel.getMetaPath(mLineContext.getPath());
        mLineContextData = oController._intentBasedNavigation.removeSensitiveData(mLineContext.getObject(), sMetaPath);
        mLineContextData = oController._intentBasedNavigation.prepareContextForExternalNavigation(mLineContextData, mLineContext);
        oSelectionVariant = oNavigationService.mixAttributesAndSelectionVariant(mLineContextData.semanticAttributes, {});
        oTargetInfo.propertiesWithoutConflict = mLineContextData.propertiesWithoutConflict;
        //TO modify the selection variant from the Extension API
        oController.intentBasedNavigation.adaptNavigationContext(oSelectionVariant, oTargetInfo);
        SimpleLinkDelegate._removeTechnicalParameters(oSelectionVariant);
        oSelectionVariant = SimpleLinkDelegate._setFilterContextUrlForSelectionVariant(oView, oSelectionVariant, oNavigationService);
        const aValues = await SimpleLinkDelegate._getAppStateKeyAndUrlParameters(this, oNavigationService, oSelectionVariant, "");
        const oParams = aValues[0];
        const appStateKey = aValues[1];
        let titleLinktoBeRemove;
        oPayload.aSemanticLinks = [];
        aLinkItems = SimpleLinkDelegate._removeEmptyLinkItem(aLinkItems);
        for (const index in aLinkItems) {
          titleLinktoBeRemove = await SimpleLinkDelegate._getLinkItemWithNewParameter(this, bTitleHasLink, aTitleLink, aLinkItems[index], oShellServices, oPayload, oParams, appStateKey, oSelectionVariant, oNavigationService);
          if (titleLinktoBeRemove === true) {
            aLinkItems[index] = undefined;
          }
        }
        return SimpleLinkDelegate._removeEmptyLinkItem(aLinkItems);
      } catch (oError) {
        Log.error("Error while getting the navigation service", oError);
        return undefined;
      }
    } else {
      return aLinkItems;
    }
  };
  SimpleLinkDelegate.beforeNavigationCallback = function (oPayload, oEvent) {
    const oSource = oEvent.getSource(),
      sHref = oEvent.getParameter("href"),
      oURLParsing = Factory.getService("URLParsing"),
      oHash = sHref && oURLParsing.parseShellHash(sHref);
    KeepAliveHelper.storeControlRefreshStrategyForHash(oSource, oHash);
    return Promise.resolve(true);
  };
  SimpleLinkDelegate._removeTechnicalParameters = function (oSelectionVariant) {
    oSelectionVariant.removeSelectOption("@odata.context");
    oSelectionVariant.removeSelectOption("@odata.metadataEtag");
    oSelectionVariant.removeSelectOption("SAP__Messages");
  };
  SimpleLinkDelegate._getSemanticObjectCustomDataValue = function (aLinkCustomData, oSemanticObjectsResolved) {
    let sPropertyName, sCustomDataValue;
    for (let iCustomDataCount = 0; iCustomDataCount < aLinkCustomData.length; iCustomDataCount++) {
      sPropertyName = aLinkCustomData[iCustomDataCount].getKey();
      sCustomDataValue = aLinkCustomData[iCustomDataCount].getValue();
      oSemanticObjectsResolved[sPropertyName] = {
        value: sCustomDataValue
      };
    }
  };

  /**
   * Check the semantic object name if it is dynamic or not.
   *
   * @private
   * @param pathOrValue The semantic object path or name
   * @returns True if semantic object is dynamic
   */
  SimpleLinkDelegate._isDynamicPath = function (pathOrValue) {
    if (pathOrValue && pathOrValue.indexOf("{") === 0 && pathOrValue.indexOf("}") === pathOrValue.length - 1) {
      return true;
    } else {
      return false;
    }
  };

  /**
   * Update the payload with semantic object values from custom data of Link.
   *
   * @private
   * @param payload The payload of the mdc link.
   * @param newPayload The new updated payload.
   * @param semanticObjectName The semantic object name resolved.
   */
  SimpleLinkDelegate._updatePayloadWithResolvedSemanticObjectValue = function (payload, newPayload, semanticObjectName) {
    var _newPayload$semanticO;
    if (SimpleLinkDelegate._isDynamicPath(payload.mainSemanticObject)) {
      if (semanticObjectName) {
        newPayload.mainSemanticObject = semanticObjectName;
      } else {
        // no value from Custom Data, so removing mainSemanticObject
        newPayload.mainSemanticObject = undefined;
      }
    }
    switch (typeof semanticObjectName) {
      case "string":
        (_newPayload$semanticO = newPayload.semanticObjectsResolved) === null || _newPayload$semanticO === void 0 ? void 0 : _newPayload$semanticO.push(semanticObjectName);
        newPayload.semanticObjects.push(semanticObjectName);
        break;
      case "object":
        for (const j in semanticObjectName) {
          var _newPayload$semanticO2;
          (_newPayload$semanticO2 = newPayload.semanticObjectsResolved) === null || _newPayload$semanticO2 === void 0 ? void 0 : _newPayload$semanticO2.push(semanticObjectName[j]);
          newPayload.semanticObjects.push(semanticObjectName[j]);
        }
        break;
      default:
    }
  };
  SimpleLinkDelegate._createNewPayloadWithDynamicSemanticObjectsResolved = function (payload, semanticObjectsResolved, newPayload) {
    let semanticObjectName, tmpPropertyName;
    for (const i in payload.semanticObjects) {
      semanticObjectName = payload.semanticObjects[i];
      if (SimpleLinkDelegate._isDynamicPath(semanticObjectName)) {
        tmpPropertyName = semanticObjectName.substr(1, semanticObjectName.indexOf("}") - 1);
        semanticObjectName = semanticObjectsResolved[tmpPropertyName].value;
        SimpleLinkDelegate._updatePayloadWithResolvedSemanticObjectValue(payload, newPayload, semanticObjectName);
      } else {
        newPayload.semanticObjects.push(semanticObjectName);
      }
    }
  };

  /**
   * Update the semantic object name from the resolved value for the mappings attributes.
   *
   * @private
   * @param mdcPayload The payload given by the application.
   * @param mdcPayloadWithDynamicSemanticObjectsResolved The payload with the resolved value for the semantic object name.
   * @param newPayload The new updated payload.
   */
  SimpleLinkDelegate._updateSemanticObjectsForMappings = function (mdcPayload, mdcPayloadWithDynamicSemanticObjectsResolved, newPayload) {
    // update the semantic object name from the resolved ones in the semantic object mappings.
    mdcPayloadWithDynamicSemanticObjectsResolved.semanticObjectMappings.forEach(function (semanticObjectMapping) {
      if (semanticObjectMapping.semanticObject && SimpleLinkDelegate._isDynamicPath(semanticObjectMapping.semanticObject)) {
        semanticObjectMapping.semanticObject = newPayload.semanticObjects[mdcPayload.semanticObjects.indexOf(semanticObjectMapping.semanticObject)];
      }
    });
  };

  /**
   * Update the semantic object name from the resolved value for the unavailable actions.
   *
   * @private
   * @param mdcPayload The payload given by the application.
   * @param mdcPayloadSemanticObjectUnavailableActions The unavailable actions given by the application.
   * @param mdcPayloadWithDynamicSemanticObjectsResolved The updated payload with the resolved value for the semantic object name for the unavailable actions.
   */
  SimpleLinkDelegate._updateSemanticObjectsUnavailableActions = function (mdcPayload, mdcPayloadSemanticObjectUnavailableActions, mdcPayloadWithDynamicSemanticObjectsResolved) {
    let _Index;
    mdcPayloadSemanticObjectUnavailableActions.forEach(function (semanticObjectUnavailableAction) {
      // Dynamic SemanticObject has an unavailable action
      if (semanticObjectUnavailableAction !== null && semanticObjectUnavailableAction !== void 0 && semanticObjectUnavailableAction.semanticObject && SimpleLinkDelegate._isDynamicPath(semanticObjectUnavailableAction.semanticObject)) {
        _Index = mdcPayload.semanticObjects.findIndex(function (semanticObject) {
          return semanticObject === semanticObjectUnavailableAction.semanticObject;
        });
        if (_Index !== undefined) {
          // Get the SemanticObject name resolved to a value
          semanticObjectUnavailableAction.semanticObject = mdcPayloadWithDynamicSemanticObjectsResolved.semanticObjects[_Index];
        }
      }
    });
  };

  /**
   * Update the semantic object name from the resolved value for the unavailable actions.
   *
   * @private
   * @param mdcPayload The updated payload with the information from custom data provided in the link.
   * @param mdcPayloadWithDynamicSemanticObjectsResolved The payload updated with resolved semantic objects names.
   */
  SimpleLinkDelegate._updateSemanticObjectsWithResolvedValue = function (mdcPayload, mdcPayloadWithDynamicSemanticObjectsResolved) {
    for (let newSemanticObjectsCount = 0; newSemanticObjectsCount < mdcPayload.semanticObjects.length; newSemanticObjectsCount++) {
      if (mdcPayloadWithDynamicSemanticObjectsResolved.mainSemanticObject === (mdcPayload.semanticObjectsResolved && mdcPayload.semanticObjectsResolved[newSemanticObjectsCount])) {
        mdcPayloadWithDynamicSemanticObjectsResolved.mainSemanticObject = mdcPayload.semanticObjects[newSemanticObjectsCount];
      }
      if (mdcPayloadWithDynamicSemanticObjectsResolved.semanticObjects[newSemanticObjectsCount]) {
        mdcPayloadWithDynamicSemanticObjectsResolved.semanticObjects[newSemanticObjectsCount] = mdcPayload.semanticObjects[newSemanticObjectsCount];
      } else {
        // no Custom Data value for a Semantic Object name with path
        mdcPayloadWithDynamicSemanticObjectsResolved.semanticObjects.splice(newSemanticObjectsCount, 1);
      }
    }
  };

  /**
   * Remove empty semantic object mappings and if there is no semantic object name, link to it.
   *
   * @private
   * @param mdcPayloadWithDynamicSemanticObjectsResolved The payload used to check the mappings of the semantic objects.
   */
  SimpleLinkDelegate._removeEmptySemanticObjectsMappings = function (mdcPayloadWithDynamicSemanticObjectsResolved) {
    // remove undefined Semantic Object Mapping
    for (let mappingsCount = 0; mappingsCount < mdcPayloadWithDynamicSemanticObjectsResolved.semanticObjectMappings.length; mappingsCount++) {
      if (mdcPayloadWithDynamicSemanticObjectsResolved.semanticObjectMappings[mappingsCount] && mdcPayloadWithDynamicSemanticObjectsResolved.semanticObjectMappings[mappingsCount].semanticObject === undefined) {
        mdcPayloadWithDynamicSemanticObjectsResolved.semanticObjectMappings.splice(mappingsCount, 1);
      }
    }
  };
  SimpleLinkDelegate._setPayloadWithDynamicSemanticObjectsResolved = function (payload, newPayload) {
    let oPayloadWithDynamicSemanticObjectsResolved;
    if (newPayload.semanticObjectsResolved && newPayload.semanticObjectsResolved.length > 0) {
      oPayloadWithDynamicSemanticObjectsResolved = {
        entityType: payload.entityType,
        dataField: payload.dataField,
        contact: payload.contact,
        mainSemanticObject: payload.mainSemanticObject,
        navigationPath: payload.navigationPath,
        propertyPathLabel: payload.propertyPathLabel,
        semanticObjectMappings: deepClone(payload.semanticObjectMappings),
        semanticObjects: newPayload.semanticObjects
      };
      SimpleLinkDelegate._updateSemanticObjectsForMappings(payload, oPayloadWithDynamicSemanticObjectsResolved, newPayload);
      const _SemanticObjectUnavailableActions = deepClone(payload.semanticObjectUnavailableActions);
      SimpleLinkDelegate._updateSemanticObjectsUnavailableActions(payload, _SemanticObjectUnavailableActions, oPayloadWithDynamicSemanticObjectsResolved);
      oPayloadWithDynamicSemanticObjectsResolved.semanticObjectUnavailableActions = _SemanticObjectUnavailableActions;
      if (newPayload.mainSemanticObject) {
        oPayloadWithDynamicSemanticObjectsResolved.mainSemanticObject = newPayload.mainSemanticObject;
      } else {
        oPayloadWithDynamicSemanticObjectsResolved.mainSemanticObject = undefined;
      }
      SimpleLinkDelegate._updateSemanticObjectsWithResolvedValue(newPayload, oPayloadWithDynamicSemanticObjectsResolved);
      SimpleLinkDelegate._removeEmptySemanticObjectsMappings(oPayloadWithDynamicSemanticObjectsResolved);
      return oPayloadWithDynamicSemanticObjectsResolved;
    } else {
      return {};
    }
  };
  SimpleLinkDelegate._getPayloadWithDynamicSemanticObjectsResolved = function (payload, linkCustomData) {
    let oPayloadWithDynamicSemanticObjectsResolved;
    const oSemanticObjectsResolved = {};
    const newPayload = {
      semanticObjects: [],
      semanticObjectsResolved: [],
      semanticObjectMappings: []
    };
    if (payload.semanticObjects) {
      // sap.m.Link has custom data with Semantic Objects names resolved
      if (linkCustomData && linkCustomData.length > 0) {
        SimpleLinkDelegate._getSemanticObjectCustomDataValue(linkCustomData, oSemanticObjectsResolved);
        SimpleLinkDelegate._createNewPayloadWithDynamicSemanticObjectsResolved(payload, oSemanticObjectsResolved, newPayload);
        oPayloadWithDynamicSemanticObjectsResolved = SimpleLinkDelegate._setPayloadWithDynamicSemanticObjectsResolved(payload, newPayload);
        return oPayloadWithDynamicSemanticObjectsResolved;
      }
    } else {
      return undefined;
    }
  };
  SimpleLinkDelegate._updatePayloadWithSemanticAttributes = function (aSemanticObjects, oInfoLog, oContextObject, oResults, mSemanticObjectMappings) {
    aSemanticObjects.forEach(function (sSemanticObject) {
      if (oInfoLog) {
        oInfoLog.addContextObject(sSemanticObject, oContextObject);
      }
      oResults[sSemanticObject] = {};
      for (const sAttributeName in oContextObject) {
        let oAttribute = null,
          oTransformationAdditional = null;
        if (oInfoLog) {
          oAttribute = oInfoLog.getSemanticObjectAttribute(sSemanticObject, sAttributeName);
          if (!oAttribute) {
            oAttribute = oInfoLog.createAttributeStructure();
            oInfoLog.addSemanticObjectAttribute(sSemanticObject, sAttributeName, oAttribute);
          }
        }
        // Ignore undefined and null values
        if (oContextObject[sAttributeName] === undefined || oContextObject[sAttributeName] === null) {
          if (oAttribute) {
            oAttribute.transformations.push({
              value: undefined,
              description: "\u2139 Undefined and null values have been removed in SimpleLinkDelegate."
            });
          }
          continue;
        }
        // Ignore plain objects (BCP 1770496639)
        if (isPlainObject(oContextObject[sAttributeName])) {
          if (mSemanticObjectMappings && mSemanticObjectMappings[sSemanticObject]) {
            const aKeys = Object.keys(mSemanticObjectMappings[sSemanticObject]);
            let sNewAttributeNameMapped, sNewAttributeName, sValue, sKey;
            for (let index = 0; index < aKeys.length; index++) {
              sKey = aKeys[index];
              if (sKey.indexOf(sAttributeName) === 0) {
                sNewAttributeNameMapped = mSemanticObjectMappings[sSemanticObject][sKey];
                sNewAttributeName = sKey.split("/")[sKey.split("/").length - 1];
                sValue = oContextObject[sAttributeName][sNewAttributeName];
                if (sNewAttributeNameMapped && sNewAttributeName && sValue) {
                  oResults[sSemanticObject][sNewAttributeNameMapped] = sValue;
                }
              }
            }
          }
          if (oAttribute) {
            oAttribute.transformations.push({
              value: undefined,
              description: "\u2139 Plain objects has been removed in SimpleLinkDelegate."
            });
          }
          continue;
        }

        // Map the attribute name only if 'semanticObjectMapping' is defined.
        // Note: under defined 'semanticObjectMapping' we also mean an empty annotation or an annotation with empty record
        const sAttributeNameMapped = mSemanticObjectMappings && mSemanticObjectMappings[sSemanticObject] && mSemanticObjectMappings[sSemanticObject][sAttributeName] ? mSemanticObjectMappings[sSemanticObject][sAttributeName] : sAttributeName;
        if (oAttribute && sAttributeName !== sAttributeNameMapped) {
          oTransformationAdditional = {
            value: undefined,
            description: `\u2139 The attribute ${sAttributeName} has been renamed to ${sAttributeNameMapped} in SimpleLinkDelegate.`,
            reason: `\ud83d\udd34 A com.sap.vocabularies.Common.v1.SemanticObjectMapping annotation is defined for semantic object ${sSemanticObject} with source attribute ${sAttributeName} and target attribute ${sAttributeNameMapped}. You can modify the annotation if the mapping result is not what you expected.`
          };
        }

        // If more then one local property maps to the same target property (clash situation)
        // we take the value of the last property and write an error log
        if (oResults[sSemanticObject][sAttributeNameMapped]) {
          Log.error(`SimpleLinkDelegate: The attribute ${sAttributeName} can not be renamed to the attribute ${sAttributeNameMapped} due to a clash situation. This can lead to wrong navigation later on.`);
        }

        // Copy the value replacing the attribute name by semantic object name
        oResults[sSemanticObject][sAttributeNameMapped] = oContextObject[sAttributeName];
        if (oAttribute) {
          if (oTransformationAdditional) {
            oAttribute.transformations.push(oTransformationAdditional);
            const aAttributeNew = oInfoLog.createAttributeStructure();
            aAttributeNew.transformations.push({
              value: oContextObject[sAttributeName],
              description: `\u2139 The attribute ${sAttributeNameMapped} with the value ${oContextObject[sAttributeName]} has been added due to a mapping rule regarding the attribute ${sAttributeName} in SimpleLinkDelegate.`
            });
            oInfoLog.addSemanticObjectAttribute(sSemanticObject, sAttributeNameMapped, aAttributeNew);
          }
        }
      }
    });
  };

  /**
   * Checks which attributes of the ContextObject belong to which SemanticObject and maps them into a two dimensional array.
   *
   * @private
   * @param oContextObject The BindingContext of the SourceControl of the Link / of the Link itself if not set
   * @param oPayload The payload given by the application
   * @param oInfoLog The corresponding InfoLog of the Link
   * @param oLink The corresponding Link
   * @returns A two dimensional array which maps a given SemanticObject name together with a given attribute name to the value of that given attribute
   */
  SimpleLinkDelegate._calculateSemanticAttributes = function (oContextObject, oPayload, oInfoLog, oLink) {
    const aLinkCustomData = oLink && this._fetchLinkCustomData(oLink);
    const oPayloadWithDynamicSemanticObjectsResolved = SimpleLinkDelegate._getPayloadWithDynamicSemanticObjectsResolved(oPayload, aLinkCustomData);
    const oPayloadResolved = oPayloadWithDynamicSemanticObjectsResolved ? oPayloadWithDynamicSemanticObjectsResolved : oPayload;
    this.resolvedpayload = oPayloadWithDynamicSemanticObjectsResolved;
    const aSemanticObjects = SimpleLinkDelegate._getSemanticObjects(oPayloadResolved);
    const mSemanticObjectMappings = SimpleLinkDelegate._convertSemanticObjectMapping(SimpleLinkDelegate._getSemanticObjectMappings(oPayloadResolved));
    if (!aSemanticObjects.length) {
      return {
        payload: oPayloadResolved,
        results: {}
      };
    }
    const oResults = {};
    SimpleLinkDelegate._updatePayloadWithSemanticAttributes(aSemanticObjects, oInfoLog, oContextObject, oResults, mSemanticObjectMappings);
    return {
      payload: oPayloadResolved,
      results: oResults
    };
  };
  /**
   * Retrieves the actual targets for the navigation of the link. This uses the UShell loaded by the {@link sap.ui.mdc.link.Factory} to retrieve
   * the navigation targets from the FLP service.
   *
   * @private
   * @param sAppStateKey Key of the appstate (not used yet)
   * @param oSemanticAttributes The calculated by _calculateSemanticAttributes
   * @param oPayload The payload given by the application
   * @param oInfoLog The corresponding InfoLog of the Link
   * @param oLink The corresponding Link
   * @returns Resolving into availableAtions and ownNavigation containing an array of {@link sap.ui.mdc.link.LinkItem}
   */
  SimpleLinkDelegate._retrieveNavigationTargets = function (sAppStateKey, oSemanticAttributes, oPayload, oInfoLog, oLink) {
    if (!oPayload.semanticObjects) {
      return Promise.resolve([]);
    }
    const aSemanticObjects = oPayload.semanticObjects;
    const oNavigationTargets = {
      ownNavigation: undefined,
      availableActions: []
    };
    let iSuperiorActionLinksFound = 0;
    return Core.loadLibrary("sap.ui.fl", {
      async: true
    }).then(() => {
      return new Promise(resolve => {
        sap.ui.require(["sap/ui/fl/Utils"], async Utils => {
          const oAppComponent = Utils.getAppComponentForControl(oLink === undefined ? this.oControl : oLink);
          const oShellServices = oAppComponent ? oAppComponent.getShellServices() : null;
          if (!oShellServices) {
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            resolve(oNavigationTargets.availableActions, oNavigationTargets.ownNavigation);
          }
          if (!oShellServices.hasUShell()) {
            Log.error("SimpleLinkDelegate: Service 'CrossApplicationNavigation' or 'URLParsing' could not be obtained");
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            resolve(oNavigationTargets.availableActions, oNavigationTargets.ownNavigation);
          }
          const aParams = aSemanticObjects.map(function (sSemanticObject) {
            return [{
              semanticObject: sSemanticObject,
              params: oSemanticAttributes ? oSemanticAttributes[sSemanticObject] : undefined,
              appStateKey: sAppStateKey,
              sortResultsBy: "text"
            }];
          });
          try {
            const aLinks = await oShellServices.getLinks(aParams);
            let bHasLinks = false;
            for (let i = 0; i < aLinks.length; i++) {
              for (let j = 0; j < aLinks[i].length; j++) {
                if (aLinks[i][j].length > 0) {
                  bHasLinks = true;
                  break;
                }
                if (bHasLinks) {
                  break;
                }
              }
            }
            if (!aLinks || !aLinks.length || !bHasLinks) {
              // eslint-disable-next-line @typescript-eslint/ban-ts-comment
              // @ts-ignore
              resolve(oNavigationTargets.availableActions, oNavigationTargets.ownNavigation);
            }
            const aSemanticObjectUnavailableActions = SimpleLinkDelegate._getSemanticObjectUnavailableActions(oPayload);
            const oUnavailableActions = SimpleLinkDelegate._convertSemanticObjectUnavailableAction(aSemanticObjectUnavailableActions);
            let sCurrentHash = FieldRuntime._fnFixHashQueryString(CommonUtils.getHash());
            if (sCurrentHash) {
              // BCP 1770315035: we have to set the end-point '?' of action in order to avoid matching of "#SalesOrder-manage" in "#SalesOrder-manageFulfillment"
              sCurrentHash += "?";
            }
            const fnIsUnavailableAction = function (sSemanticObject, sAction) {
              return !!oUnavailableActions && !!oUnavailableActions[sSemanticObject] && oUnavailableActions[sSemanticObject].indexOf(sAction) > -1;
            };
            const fnAddLink = function (_oLink) {
              const oShellHash = oShellServices.parseShellHash(_oLink.intent);
              if (fnIsUnavailableAction(oShellHash.semanticObject, oShellHash.action)) {
                return;
              }
              const sHref = `#${oShellServices.constructShellHash({
                target: {
                  shellHash: _oLink.intent
                }
              })}`;
              if (_oLink.intent && _oLink.intent.indexOf(sCurrentHash) === 0) {
                // Prevent current app from being listed
                // NOTE: If the navigation target exists in
                // multiple contexts (~XXXX in hash) they will all be skipped
                oNavigationTargets.ownNavigation = new LinkItem({
                  href: sHref,
                  text: _oLink.text
                });
                return;
              }
              const oLinkItem = new LinkItem({
                // As the retrieveNavigationTargets method can be called several time we can not create the LinkItem instance with the same id
                key: oShellHash.semanticObject && oShellHash.action ? `${oShellHash.semanticObject}-${oShellHash.action}` : undefined,
                text: _oLink.text,
                description: undefined,
                href: sHref,
                // target: not supported yet
                icon: undefined,
                //_oLink.icon,
                initiallyVisible: _oLink.tags && _oLink.tags.indexOf("superiorAction") > -1
              });
              if (oLinkItem.getProperty("initiallyVisible")) {
                iSuperiorActionLinksFound++;
              }
              oNavigationTargets.availableActions.push(oLinkItem);
              if (oInfoLog) {
                oInfoLog.addSemanticObjectIntent(oShellHash.semanticObject, {
                  intent: oLinkItem.getHref(),
                  text: oLinkItem.getText()
                });
              }
            };
            for (let n = 0; n < aSemanticObjects.length; n++) {
              aLinks[n][0].forEach(fnAddLink);
            }
            if (iSuperiorActionLinksFound === 0) {
              for (let iLinkItemIndex = 0; iLinkItemIndex < oNavigationTargets.availableActions.length; iLinkItemIndex++) {
                if (iLinkItemIndex < this.getConstants().iLinksShownInPopup) {
                  oNavigationTargets.availableActions[iLinkItemIndex].setProperty("initiallyVisible", true);
                } else {
                  break;
                }
              }
            }
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            resolve(oNavigationTargets.availableActions, oNavigationTargets.ownNavigation);
          } catch (oError) {
            Log.error("SimpleLinkDelegate: '_retrieveNavigationTargets' failed executing getLinks method");
            // eslint-disable-next-line @typescript-eslint/ban-ts-comment
            // @ts-ignore
            resolve(oNavigationTargets.availableActions, oNavigationTargets.ownNavigation);
          }
        });
      });
    });
  };
  SimpleLinkDelegate._getSemanticObjects = function (oPayload) {
    return oPayload.semanticObjects ? oPayload.semanticObjects : [];
  };
  SimpleLinkDelegate._getSemanticObjectUnavailableActions = function (oPayload) {
    const aSemanticObjectUnavailableActions = [];
    if (oPayload.semanticObjectUnavailableActions) {
      oPayload.semanticObjectUnavailableActions.forEach(function (oSemanticObjectUnavailableAction) {
        aSemanticObjectUnavailableActions.push(new SemanticObjectUnavailableAction({
          semanticObject: oSemanticObjectUnavailableAction.semanticObject,
          actions: oSemanticObjectUnavailableAction.actions
        }));
      });
    }
    return aSemanticObjectUnavailableActions;
  };

  /**
   * This will return an array of {@link sap.ui.mdc.link.SemanticObjectMapping} depending on the given payload.
   *
   * @private
   * @param oPayload The payload defined by the application
   * @returns An array of semantic object mappings.
   */
  SimpleLinkDelegate._getSemanticObjectMappings = function (oPayload) {
    const aSemanticObjectMappings = [];
    let aSemanticObjectMappingItems = [];
    if (oPayload.semanticObjectMappings) {
      oPayload.semanticObjectMappings.forEach(function (oSemanticObjectMapping) {
        aSemanticObjectMappingItems = [];
        if (oSemanticObjectMapping.items) {
          oSemanticObjectMapping.items.forEach(function (oSemanticObjectMappingItem) {
            aSemanticObjectMappingItems.push(new SemanticObjectMappingItem({
              key: oSemanticObjectMappingItem.key,
              value: oSemanticObjectMappingItem.value
            }));
          });
        }
        aSemanticObjectMappings.push(new SemanticObjectMapping({
          semanticObject: oSemanticObjectMapping.semanticObject,
          items: aSemanticObjectMappingItems
        }));
      });
    }
    return aSemanticObjectMappings;
  };
  /**
   * Converts a given array of SemanticObjectMapping into a Map containing SemanticObjects as Keys and a Map of it's corresponding SemanticObjectMappings as values.
   *
   * @private
   * @param aSemanticObjectMappings An array of SemanticObjectMappings.
   * @returns The converterd SemanticObjectMappings
   */
  SimpleLinkDelegate._convertSemanticObjectMapping = function (aSemanticObjectMappings) {
    if (!aSemanticObjectMappings.length) {
      return undefined;
    }
    const mSemanticObjectMappings = {};
    aSemanticObjectMappings.forEach(function (oSemanticObjectMapping) {
      if (!oSemanticObjectMapping.getSemanticObject()) {
        throw Error(`SimpleLinkDelegate: 'semanticObject' property with value '${oSemanticObjectMapping.getSemanticObject()}' is not valid`);
      }
      mSemanticObjectMappings[oSemanticObjectMapping.getSemanticObject()] = oSemanticObjectMapping.getItems().reduce(function (oMap, oItem) {
        oMap[oItem.getKey()] = oItem.getValue();
        return oMap;
      }, {});
    });
    return mSemanticObjectMappings;
  };
  /**
   * Converts a given array of SemanticObjectUnavailableActions into a map containing SemanticObjects as keys and a map of its corresponding SemanticObjectUnavailableActions as values.
   *
   * @private
   * @param aSemanticObjectUnavailableActions The SemanticObjectUnavailableActions converted
   * @returns The map containing the converted SemanticObjectUnavailableActions
   */
  SimpleLinkDelegate._convertSemanticObjectUnavailableAction = function (aSemanticObjectUnavailableActions) {
    let _SemanticObjectName;
    let _SemanticObjectHasAlreadyUnavailableActions;
    let _UnavailableActions = [];
    if (!aSemanticObjectUnavailableActions.length) {
      return undefined;
    }
    const mSemanticObjectUnavailableActions = {};
    aSemanticObjectUnavailableActions.forEach(function (oSemanticObjectUnavailableActions) {
      _SemanticObjectName = oSemanticObjectUnavailableActions.getSemanticObject();
      if (!_SemanticObjectName) {
        throw Error(`SimpleLinkDelegate: 'semanticObject' property with value '${_SemanticObjectName}' is not valid`);
      }
      _UnavailableActions = oSemanticObjectUnavailableActions.getActions();
      if (mSemanticObjectUnavailableActions[_SemanticObjectName] === undefined) {
        mSemanticObjectUnavailableActions[_SemanticObjectName] = _UnavailableActions;
      } else {
        _SemanticObjectHasAlreadyUnavailableActions = mSemanticObjectUnavailableActions[_SemanticObjectName];
        _UnavailableActions.forEach(function (UnavailableAction) {
          _SemanticObjectHasAlreadyUnavailableActions.push(UnavailableAction);
        });
        mSemanticObjectUnavailableActions[_SemanticObjectName] = _SemanticObjectHasAlreadyUnavailableActions;
      }
    });
    return mSemanticObjectUnavailableActions;
  };
  return SimpleLinkDelegate;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/quickView/QuickViewDelegate", ["sap/base/Log","sap/base/util/deepClone","sap/base/util/deepEqual","sap/base/util/isPlainObject","sap/fe/core/CommonUtils","sap/fe/core/helpers/KeepAliveHelper","sap/fe/core/helpers/ToES6Promise","sap/fe/core/templating/SemanticObjectHelper","sap/fe/macros/field/FieldHelper","sap/fe/macros/field/FieldRuntime","sap/fe/navigation/SelectionVariant","sap/ui/core/Core","sap/ui/core/Fragment","sap/ui/core/util/XMLPreprocessor","sap/ui/core/XMLTemplateProcessor","sap/ui/mdc/link/Factory","sap/ui/mdc/link/LinkItem","sap/ui/mdc/link/SemanticObjectMapping","sap/ui/mdc/link/SemanticObjectMappingItem","sap/ui/mdc/link/SemanticObjectUnavailableAction","sap/ui/mdc/LinkDelegate","sap/ui/model/json/JSONModel"],function(e,t,n,i,a,s,c,o,r,l,m,u,d,p,f,g,b,h,O,v,j,y){"use strict";var S=o.getDynamicPathFromSemanticObject;const k=Object.assign({},j);const _={iLinksShownInPopup:3,sapmLink:"sap.m.Link",sapuimdcLink:"sap.ui.mdc.Link",sapuimdclinkLinkItem:"sap.ui.mdc.link.LinkItem",sapmObjectIdentifier:"sap.m.ObjectIdentifier",sapmObjectStatus:"sap.m.ObjectStatus"};k.getConstants=function(){return _};k._getEntityType=function(e,t){if(t){return t.createBindingContext(e.entityType)}else{return undefined}};k._getSemanticsModel=function(e,t){if(t){return new y(e)}else{return undefined}};k._getDataField=function(e,t){return t.createBindingContext(e.dataField)};k._getContact=function(e,t){return t.createBindingContext(e.contact)};k.fnTemplateFragment=function(){let e,t;const n={};let i;if(this.resolvedpayload){i=this.resolvedpayload}else{i=this.payload}if(i&&!i.LinkId){i.LinkId=this.oControl&&this.oControl.isA(_.sapuimdcLink)?this.oControl.getId():undefined}if(i.LinkId){t=this.oControl.getModel("$sapuimdcLink").getProperty("/titleLinkHref");i.titlelink=t}const a=this._getSemanticsModel(i,this.oMetaModel);this.semanticModel=a;if(i.entityType&&this._getEntityType(i,this.oMetaModel)){e="sap.fe.macros.quickView.fragments.EntityQuickView";n.bindingContexts={entityType:this._getEntityType(i,this.oMetaModel),semantic:a.createBindingContext("/")};n.models={entityType:this.oMetaModel,semantic:a}}else if(i.dataField&&this._getDataField(i,this.oMetaModel)){e="sap.fe.macros.quickView.fragments.DataFieldQuickView";n.bindingContexts={dataField:this._getDataField(i,this.oMetaModel),semantic:a.createBindingContext("/")};n.models={dataField:this.oMetaModel,semantic:a}}n.models.entitySet=this.oMetaModel;n.models.metaModel=this.oMetaModel;if(this.oControl&&this.oControl.getModel("viewData")){n.models.viewData=this.oControl.getModel("viewData");n.bindingContexts.viewData=this.oControl.getModel("viewData").createBindingContext("/")}const s=f.loadTemplate(e,"fragment");return Promise.resolve(p.process(s,{name:e},n)).then(e=>d.load({definition:e,controller:this})).then(e=>{if(e){if(n.models&&n.models.semantic){e.setModel(n.models.semantic,"semantic");e.setBindingContext(n.bindingContexts.semantic,"semantic")}if(n.bindingContexts&&n.bindingContexts.entityType){e.setModel(n.models.entityType,"entityType");e.setBindingContext(n.bindingContexts.entityType,"entityType")}}this.resolvedpayload=undefined;return e})};k.fetchAdditionalContent=function(e,t){var n;this.oControl=t;const i=e===null||e===void 0?void 0:(n=e.navigationPath)===null||n===void 0?void 0:n.match(/{(.*?)}/);const a=i&&i.length>1&&i[1]?t.getModel().bindContext(i[1],t.getBindingContext(),{$$ownRequest:true}):null;this.payload=e;if(t&&t.isA(_.sapuimdcLink)){this.oMetaModel=t.getModel().getMetaModel();return this.fnTemplateFragment().then(function(e){if(a){e.setBindingContext(a.getBoundContext())}return[e]})}return Promise.resolve([])};k._fetchLinkCustomData=function(e){if(e.getParent()&&e.isA(_.sapuimdcLink)&&(e.getParent().isA(_.sapmLink)||e.getParent().isA(_.sapmObjectIdentifier)||e.getParent().isA(_.sapmObjectStatus))){return e.getCustomData()}else{return undefined}};k.fetchLinkItems=function(e,t,n){if(t&&k._getSemanticObjects(e)){const i=t.getObject();if(n){n.initialize(k._getSemanticObjects(e))}const a=this._link&&this._fetchLinkCustomData(this._link);this.aLinkCustomData=a&&this._fetchLinkCustomData(this._link).map(function(e){return e.mProperties.value});const s=k._calculateSemanticAttributes(i,e,n,this._link);const c=s.results;const o=s.payload;return k._retrieveNavigationTargets("",c,o,n,this._link).then(function(e){return e.length===0?null:e})}else{return Promise.resolve(null)}};k._findLinkType=function(e,t){let n,i;if((t===null||t===void 0?void 0:t.length)===1){i=new b({text:t[0].getText(),href:t[0].getHref()});n=e.hasQuickViewFacets==="false"?1:2}else if(e.hasQuickViewFacets==="false"&&(t===null||t===void 0?void 0:t.length)===0){n=0}else{n=2}return{linkType:n,linkItem:i}};k.fetchLinkType=async function(t,n){const i=n;const a=Object.assign({},t);const s={initialType:{type:2,directLink:undefined},runtimeType:undefined};if(!this.appStateKeyMap){this.appStateKeyMap={}}try{var c;if(a!==null&&a!==void 0&&a.semanticObjects){this._link=n;const e=await i._retrieveUnmodifiedLinkItems();const t=k._findLinkType(a,e);return{initialType:{type:t.linkType,directLink:t.linkItem?t.linkItem:undefined},runtimeType:undefined}}else if((a===null||a===void 0?void 0:(c=a.contact)===null||c===void 0?void 0:c.length)>0){return s}else if(a!==null&&a!==void 0&&a.entityType&&a!==null&&a!==void 0&&a.navigationPath){return s}throw new Error("no payload or semanticObjects found")}catch(t){e.error("Error in SimpleLinkDelegate.fetchLinkType: ",t)}};k._RemoveTitleLinkFromTargets=function(e,t,n){let i,a;let s=false;if(t&&n&&n[0]){let t,c;const o=n[0].intent.split("?")[0];if(e&&e[0]){c=`#${e[0].getProperty("key")}`;t=o===c;if(t){i=e[0].getProperty("href");this.payload.titlelinkhref=i;if(e[0].isA(_.sapuimdclinkLinkItem)){a=e[0].getParent();a.getModel("$sapuimdcLink").setProperty("/titleLinkHref",i);const t=a.getModel("$sapuimdcLink").getProperty("/linkItems").filter(function(e){if(`#${e.key}`!==c){return e}});if(t&&t.length>0){a.getModel("$sapuimdcLink").setProperty("/linkItems/",t)}s=true}}}}return s};k._IsSemanticObjectDynamic=function(e,t){if(e&&t.aLinkCustomData){return t.aLinkCustomData.filter(function(t){return e.filter(function(e){return e!==t}).length>0}).length>0}else{return false}};k._getLineContext=function(e,t){if(!t){if(e.getAggregation("content")[0]&&e.getAggregation("content")[0].getBindingContext()){return e.getAggregation("content")[0].getBindingContext()}}return t};k._setFilterContextUrlForSelectionVariant=function(e,t,n){if(e.getViewData().entitySet&&t){const i=n.constructContextUrl(e.getViewData().entitySet,e.getModel());t.setFilterContextUrl(i)}return t};k._setObjectMappings=function(e,t,n,i){let a=false;const s=new m(i.toJSONObject());n.forEach(function(n){let i=n.semanticObject;const c=S(n.semanticObject);if(c&&t[c]){i=t[c]}if(e===i){const e=n.items;for(const n in e){const i=e[n].key;const c=e[n].value;if(i!==c){if(t[i]){s.removeParameter(c);s.removeSelectOption(c);s.renameParameter(i,c);s.renameSelectOption(i,c);t[c]=t[i];delete t[i];a=true}else if(i.split("/").length>1){const e=i.split("/").slice(-1)[0];if(!t[e]){delete t[e];s.removeParameter(e);s.removeSelectOption(e)}else if(e!==c){s.renameParameter(e,c);s.renameSelectOption(e,c);t[c]=t[e];delete t[e]}}else{delete t[i];s.removeParameter(c);s.removeSelectOption(c)}}}}});return{params:t,hasChanged:a,selectionVariant:s}};k._getAppStateKeyAndUrlParameters=async function(e,t,i,a){var s;let o=[];if(n(i,(s=e.appStateKeyMap[""])===null||s===void 0?void 0:s.selectionVariant)){const t=e.appStateKeyMap[""];return[t.semanticAttributes,t.appstatekey]}if(e.appStateKeyMap[`${a}`]===undefined||!n(e.appStateKeyMap[`${a}`].selectionVariant,i)){o=await c(t.getAppStateKeyAndUrlParameters(i.toJSONString()));e.appStateKeyMap[`${a}`]={semanticAttributes:o[0],appstatekey:o[1],selectionVariant:i}}else{const t=e.appStateKeyMap[`${a}`];o=[t.semanticAttributes,t.appstatekey]}return o};k._getLinkItemWithNewParameter=async function(e,t,n,i,a,s,c,o,r,l){return a.expandCompactHash(i.getHref()).then(async function(m){const u=a.parseShellHash(m);const d=Object.assign({},c);const{params:p,hasChanged:f,selectionVariant:g}=k._setObjectMappings(u.semanticObject,d,s.semanticObjectMappings,r);if(f){const t=await k._getAppStateKeyAndUrlParameters(e,l,g,u.semanticObject);o=t[1]}const b={target:{semanticObject:u.semanticObject,action:u.action},params:p,appStateKey:o};delete b.params["sap-xapp-state"];i.setHref(`#${a.constructShellHash(b)}`);s.aSemanticLinks.push(i.getHref());return k._RemoveTitleLinkFromTargets.bind(e)([i],t,n)})};k._removeEmptyLinkItem=function(e){return e.filter(e=>e!==undefined)};k.modifyLinkItems=async function(t,n,i){const s=await r.checkPrimaryActions(t,true);const c=s.titleLink;const o=s.hasTitleLink;if(i.length!==0){this.payload=t;const s=i[0].getParent();const r=a.getTargetView(s);const l=a.getAppComponent(r);const m=l.getShellServices();if(!m.hasUShell()){e.error("QuickViewDelegate: Cannot retrieve the shell services");return Promise.reject()}const u=r.getModel().getMetaModel();let d=s.getBindingContext();const p={semanticObject:t.mainSemanticObject,action:""};try{const e=s&&this._fetchLinkCustomData(s).map(function(e){return e.mProperties.value});if(k._IsSemanticObjectDynamic(e,this)){const e=k._calculateSemanticAttributes(n.getObject(),t,undefined,this._link);const a=e.results;const s=e.payload;i=await k._retrieveNavigationTargets("",a,s,undefined,this._link)}const a=l.getNavigationService();const f=r.getController();let g;let b;d=k._getLineContext(r,d);const h=u.getMetaPath(d.getPath());b=f._intentBasedNavigation.removeSensitiveData(d.getObject(),h);b=f._intentBasedNavigation.prepareContextForExternalNavigation(b,d);g=a.mixAttributesAndSelectionVariant(b.semanticAttributes,{});p.propertiesWithoutConflict=b.propertiesWithoutConflict;f.intentBasedNavigation.adaptNavigationContext(g,p);k._removeTechnicalParameters(g);g=k._setFilterContextUrlForSelectionVariant(r,g,a);const O=await k._getAppStateKeyAndUrlParameters(this,a,g,"");const v=O[0];const j=O[1];let y;t.aSemanticLinks=[];i=k._removeEmptyLinkItem(i);for(const e in i){y=await k._getLinkItemWithNewParameter(this,o,c,i[e],m,t,v,j,g,a);if(y===true){i[e]=undefined}}return k._removeEmptyLinkItem(i)}catch(t){e.error("Error while getting the navigation service",t);return undefined}}else{return i}};k.beforeNavigationCallback=function(e,t){const n=t.getSource(),i=t.getParameter("href"),a=g.getService("URLParsing"),c=i&&a.parseShellHash(i);s.storeControlRefreshStrategyForHash(n,c);return Promise.resolve(true)};k._removeTechnicalParameters=function(e){e.removeSelectOption("@odata.context");e.removeSelectOption("@odata.metadataEtag");e.removeSelectOption("SAP__Messages")};k._getSemanticObjectCustomDataValue=function(e,t){let n,i;for(let a=0;a<e.length;a++){n=e[a].getKey();i=e[a].getValue();t[n]={value:i}}};k._isDynamicPath=function(e){if(e&&e.indexOf("{")===0&&e.indexOf("}")===e.length-1){return true}else{return false}};k._updatePayloadWithResolvedSemanticObjectValue=function(e,t,n){var i;if(k._isDynamicPath(e.mainSemanticObject)){if(n){t.mainSemanticObject=n}else{t.mainSemanticObject=undefined}}switch(typeof n){case"string":(i=t.semanticObjectsResolved)===null||i===void 0?void 0:i.push(n);t.semanticObjects.push(n);break;case"object":for(const e in n){var a;(a=t.semanticObjectsResolved)===null||a===void 0?void 0:a.push(n[e]);t.semanticObjects.push(n[e])}break;default:}};k._createNewPayloadWithDynamicSemanticObjectsResolved=function(e,t,n){let i,a;for(const s in e.semanticObjects){i=e.semanticObjects[s];if(k._isDynamicPath(i)){a=i.substr(1,i.indexOf("}")-1);i=t[a].value;k._updatePayloadWithResolvedSemanticObjectValue(e,n,i)}else{n.semanticObjects.push(i)}}};k._updateSemanticObjectsForMappings=function(e,t,n){t.semanticObjectMappings.forEach(function(t){if(t.semanticObject&&k._isDynamicPath(t.semanticObject)){t.semanticObject=n.semanticObjects[e.semanticObjects.indexOf(t.semanticObject)]}})};k._updateSemanticObjectsUnavailableActions=function(e,t,n){let i;t.forEach(function(t){if(t!==null&&t!==void 0&&t.semanticObject&&k._isDynamicPath(t.semanticObject)){i=e.semanticObjects.findIndex(function(e){return e===t.semanticObject});if(i!==undefined){t.semanticObject=n.semanticObjects[i]}}})};k._updateSemanticObjectsWithResolvedValue=function(e,t){for(let n=0;n<e.semanticObjects.length;n++){if(t.mainSemanticObject===(e.semanticObjectsResolved&&e.semanticObjectsResolved[n])){t.mainSemanticObject=e.semanticObjects[n]}if(t.semanticObjects[n]){t.semanticObjects[n]=e.semanticObjects[n]}else{t.semanticObjects.splice(n,1)}}};k._removeEmptySemanticObjectsMappings=function(e){for(let t=0;t<e.semanticObjectMappings.length;t++){if(e.semanticObjectMappings[t]&&e.semanticObjectMappings[t].semanticObject===undefined){e.semanticObjectMappings.splice(t,1)}}};k._setPayloadWithDynamicSemanticObjectsResolved=function(e,n){let i;if(n.semanticObjectsResolved&&n.semanticObjectsResolved.length>0){i={entityType:e.entityType,dataField:e.dataField,contact:e.contact,mainSemanticObject:e.mainSemanticObject,navigationPath:e.navigationPath,propertyPathLabel:e.propertyPathLabel,semanticObjectMappings:t(e.semanticObjectMappings),semanticObjects:n.semanticObjects};k._updateSemanticObjectsForMappings(e,i,n);const a=t(e.semanticObjectUnavailableActions);k._updateSemanticObjectsUnavailableActions(e,a,i);i.semanticObjectUnavailableActions=a;if(n.mainSemanticObject){i.mainSemanticObject=n.mainSemanticObject}else{i.mainSemanticObject=undefined}k._updateSemanticObjectsWithResolvedValue(n,i);k._removeEmptySemanticObjectsMappings(i);return i}else{return{}}};k._getPayloadWithDynamicSemanticObjectsResolved=function(e,t){let n;const i={};const a={semanticObjects:[],semanticObjectsResolved:[],semanticObjectMappings:[]};if(e.semanticObjects){if(t&&t.length>0){k._getSemanticObjectCustomDataValue(t,i);k._createNewPayloadWithDynamicSemanticObjectsResolved(e,i,a);n=k._setPayloadWithDynamicSemanticObjectsResolved(e,a);return n}}else{return undefined}};k._updatePayloadWithSemanticAttributes=function(t,n,a,s,c){t.forEach(function(t){if(n){n.addContextObject(t,a)}s[t]={};for(const o in a){let r=null,l=null;if(n){r=n.getSemanticObjectAttribute(t,o);if(!r){r=n.createAttributeStructure();n.addSemanticObjectAttribute(t,o,r)}}if(a[o]===undefined||a[o]===null){if(r){r.transformations.push({value:undefined,description:"ℹ Undefined and null values have been removed in SimpleLinkDelegate."})}continue}if(i(a[o])){if(c&&c[t]){const e=Object.keys(c[t]);let n,i,r,l;for(let m=0;m<e.length;m++){l=e[m];if(l.indexOf(o)===0){n=c[t][l];i=l.split("/")[l.split("/").length-1];r=a[o][i];if(n&&i&&r){s[t][n]=r}}}}if(r){r.transformations.push({value:undefined,description:"ℹ Plain objects has been removed in SimpleLinkDelegate."})}continue}const m=c&&c[t]&&c[t][o]?c[t][o]:o;if(r&&o!==m){l={value:undefined,description:`ℹ The attribute ${o} has been renamed to ${m} in SimpleLinkDelegate.`,reason:`🔴 A com.sap.vocabularies.Common.v1.SemanticObjectMapping annotation is defined for semantic object ${t} with source attribute ${o} and target attribute ${m}. You can modify the annotation if the mapping result is not what you expected.`}}if(s[t][m]){e.error(`SimpleLinkDelegate: The attribute ${o} can not be renamed to the attribute ${m} due to a clash situation. This can lead to wrong navigation later on.`)}s[t][m]=a[o];if(r){if(l){r.transformations.push(l);const e=n.createAttributeStructure();e.transformations.push({value:a[o],description:`ℹ The attribute ${m} with the value ${a[o]} has been added due to a mapping rule regarding the attribute ${o} in SimpleLinkDelegate.`});n.addSemanticObjectAttribute(t,m,e)}}}})};k._calculateSemanticAttributes=function(e,t,n,i){const a=i&&this._fetchLinkCustomData(i);const s=k._getPayloadWithDynamicSemanticObjectsResolved(t,a);const c=s?s:t;this.resolvedpayload=s;const o=k._getSemanticObjects(c);const r=k._convertSemanticObjectMapping(k._getSemanticObjectMappings(c));if(!o.length){return{payload:c,results:{}}}const l={};k._updatePayloadWithSemanticAttributes(o,n,e,l,r);return{payload:c,results:l}};k._retrieveNavigationTargets=function(t,n,i,s,c){if(!i.semanticObjects){return Promise.resolve([])}const o=i.semanticObjects;const r={ownNavigation:undefined,availableActions:[]};let m=0;return u.loadLibrary("sap.ui.fl",{async:true}).then(()=>new Promise(u=>{sap.ui.require(["sap/ui/fl/Utils"],async d=>{const p=d.getAppComponentForControl(c===undefined?this.oControl:c);const f=p?p.getShellServices():null;if(!f){u(r.availableActions,r.ownNavigation)}if(!f.hasUShell()){e.error("SimpleLinkDelegate: Service 'CrossApplicationNavigation' or 'URLParsing' could not be obtained");u(r.availableActions,r.ownNavigation)}const g=o.map(function(e){return[{semanticObject:e,params:n?n[e]:undefined,appStateKey:t,sortResultsBy:"text"}]});try{const e=await f.getLinks(g);let t=false;for(let n=0;n<e.length;n++){for(let i=0;i<e[n].length;i++){if(e[n][i].length>0){t=true;break}if(t){break}}}if(!e||!e.length||!t){u(r.availableActions,r.ownNavigation)}const n=k._getSemanticObjectUnavailableActions(i);const c=k._convertSemanticObjectUnavailableAction(n);let d=l._fnFixHashQueryString(a.getHash());if(d){d+="?"}const p=function(e,t){return!!c&&!!c[e]&&c[e].indexOf(t)>-1};const h=function(e){const t=f.parseShellHash(e.intent);if(p(t.semanticObject,t.action)){return}const n=`#${f.constructShellHash({target:{shellHash:e.intent}})}`;if(e.intent&&e.intent.indexOf(d)===0){r.ownNavigation=new b({href:n,text:e.text});return}const i=new b({key:t.semanticObject&&t.action?`${t.semanticObject}-${t.action}`:undefined,text:e.text,description:undefined,href:n,icon:undefined,initiallyVisible:e.tags&&e.tags.indexOf("superiorAction")>-1});if(i.getProperty("initiallyVisible")){m++}r.availableActions.push(i);if(s){s.addSemanticObjectIntent(t.semanticObject,{intent:i.getHref(),text:i.getText()})}};for(let t=0;t<o.length;t++){e[t][0].forEach(h)}if(m===0){for(let e=0;e<r.availableActions.length;e++){if(e<this.getConstants().iLinksShownInPopup){r.availableActions[e].setProperty("initiallyVisible",true)}else{break}}}u(r.availableActions,r.ownNavigation)}catch(t){e.error("SimpleLinkDelegate: '_retrieveNavigationTargets' failed executing getLinks method");u(r.availableActions,r.ownNavigation)}})}))};k._getSemanticObjects=function(e){return e.semanticObjects?e.semanticObjects:[]};k._getSemanticObjectUnavailableActions=function(e){const t=[];if(e.semanticObjectUnavailableActions){e.semanticObjectUnavailableActions.forEach(function(e){t.push(new v({semanticObject:e.semanticObject,actions:e.actions}))})}return t};k._getSemanticObjectMappings=function(e){const t=[];let n=[];if(e.semanticObjectMappings){e.semanticObjectMappings.forEach(function(e){n=[];if(e.items){e.items.forEach(function(e){n.push(new O({key:e.key,value:e.value}))})}t.push(new h({semanticObject:e.semanticObject,items:n}))})}return t};k._convertSemanticObjectMapping=function(e){if(!e.length){return undefined}const t={};e.forEach(function(e){if(!e.getSemanticObject()){throw Error(`SimpleLinkDelegate: 'semanticObject' property with value '${e.getSemanticObject()}' is not valid`)}t[e.getSemanticObject()]=e.getItems().reduce(function(e,t){e[t.getKey()]=t.getValue();return e},{})});return t};k._convertSemanticObjectUnavailableAction=function(e){let t;let n;let i=[];if(!e.length){return undefined}const a={};e.forEach(function(e){t=e.getSemanticObject();if(!t){throw Error(`SimpleLinkDelegate: 'semanticObject' property with value '${t}' is not valid`)}i=e.getActions();if(a[t]===undefined){a[t]=i}else{n=a[t];i.forEach(function(e){n.push(e)});a[t]=n}});return a};return k},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/share/Share.block-dbg", ["sap/base/Log", "sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/CommonUtils", "sap/fe/core/controls/CommandExecution", "sap/fe/core/helpers/ClassSupport", "sap/m/Menu", "sap/m/MenuButton", "sap/m/MenuItem", "sap/suite/ui/commons/collaboration/CollaborationHelper", "sap/suite/ui/commons/collaboration/ServiceContainer", "sap/ui/core/Core", "sap/ui/core/CustomData", "sap/ui/performance/trace/FESRHelper", "sap/ushell/ui/footerbar/AddBookmarkButton", "./ShareAPI", "sap/fe/core/jsx-runtime/jsx"], function (Log, BuildingBlock, CommonUtils, CommandExecution, ClassSupport, Menu, MenuButton, MenuItem, CollaborationHelper, ServiceContainer, Core, CustomData, FESRHelper, AddBookmarkButton, ShareAPI, _jsx) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;
  var _exports = {};
  var defineReference = ClassSupport.defineReference;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let ShareBuildingBlock = (
  /**
   * @classdesc
   * Building block used to create the ‘Share’ functionality.
   * <br>
   * Please note that the 'Share in SAP Jam' option is only available on platforms that are integrated with SAP Jam.
   * <br>
   * If you are consuming this macro in an environment where the SAP Fiori launchpad is not available, then the 'Save as Tile' option is not visible.
   *
   *
   * Usage example:
   * <pre>
   * &lt;macro:Share
   * 	id="someID"
   *	visible="true"
   * /&gt;
   * </pre>
   * @class sap.fe.macros.Share
   * @hideconstructor
   * @since 1.93.0
   */
  _dec = defineBuildingBlock({
    name: "Share",
    namespace: "sap.fe.macros.internal",
    publicNamespace: "sap.fe.macros",
    isRuntime: true
  }), _dec2 = blockAttribute({
    type: "string",
    required: true,
    isPublic: true
  }), _dec3 = blockAttribute({
    type: "boolean",
    defaultValue: true,
    isPublic: true,
    bindable: true
  }), _dec4 = defineReference(), _dec5 = defineReference(), _dec6 = defineReference(), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(ShareBuildingBlock, _BuildingBlockBase);
    function ShareBuildingBlock() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _BuildingBlockBase.call(this, ...args) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visible", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "menuButton", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "menu", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "saveAsTileMenuItem", _descriptor5, _assertThisInitialized(_this));
      return _this;
    }
    _exports = ShareBuildingBlock;
    var _proto = ShareBuildingBlock.prototype;
    /**
     * Retrieves the share option from the shell configuration asynchronously and prepare the content of the menu button.
     * Options order are:
     * - Send as Email
     * - Share as Jam (if available)
     * - Teams options (if available)
     * - Save as tile.
     *
     * @param view The view this building block is used in
     * @param appComponent The AppComponent instance
     */
    _proto._initializeMenuItems = async function _initializeMenuItems(view, appComponent) {
      const isTeamsModeActive = await CollaborationHelper.isTeamsModeActive();
      if (isTeamsModeActive) {
        var _this$menuButton$curr, _this$menuButton$curr2;
        //need to clear the visible property bindings otherwise when the binding value changes then it will set back the visible to the resolved value
        (_this$menuButton$curr = this.menuButton.current) === null || _this$menuButton$curr === void 0 ? void 0 : _this$menuButton$curr.unbindProperty("visible", true);
        (_this$menuButton$curr2 = this.menuButton.current) === null || _this$menuButton$curr2 === void 0 ? void 0 : _this$menuButton$curr2.setVisible(false);
        return;
      }
      const controller = view.getController();
      const coreResource = Core.getLibraryResourceBundle("sap.fe.core");
      const shellServices = appComponent.getShellServices();
      const isPluginInfoStable = await shellServices.waitForPluginsLoad();
      if (!isPluginInfoStable) {
        var _this$menuButton$curr3;
        // In case the plugin info is not yet available we need to do this computation again on the next button click
        const internalButton = (_this$menuButton$curr3 = this.menuButton.current) === null || _this$menuButton$curr3 === void 0 ? void 0 : _this$menuButton$curr3.getAggregation("_control");
        internalButton === null || internalButton === void 0 ? void 0 : internalButton.attachEventOnce("press", {}, () => this._initializeMenuItems, this);
      }
      if (this.menu.current) {
        this.menu.current.addItem(_jsx(MenuItem, {
          text: coreResource.getText("T_SEMANTIC_CONTROL_SEND_EMAIL"),
          icon: "sap-icon://email",
          press: () => controller.share._triggerEmail()
        }));
        this._addShellBasedMenuItems(controller, shellServices, coreResource);
      }
    };
    _proto._addShellBasedMenuItems = async function _addShellBasedMenuItems(controller, shellServices, coreResource) {
      var _shellServices$getUse, _shellServices$getUse2;
      const hasUshell = shellServices.hasUShell();
      const hasJam = !!((_shellServices$getUse = (_shellServices$getUse2 = shellServices.getUser()).isJamActive) !== null && _shellServices$getUse !== void 0 && _shellServices$getUse.call(_shellServices$getUse2));
      const collaborationTeamsHelper = await ServiceContainer.getServiceAsync();
      const shareCollaborationOptions = collaborationTeamsHelper.getOptions();
      if (hasUshell) {
        if (hasJam) {
          var _this$menu, _this$menu$current;
          this === null || this === void 0 ? void 0 : (_this$menu = this.menu) === null || _this$menu === void 0 ? void 0 : (_this$menu$current = _this$menu.current) === null || _this$menu$current === void 0 ? void 0 : _this$menu$current.addItem(_jsx(MenuItem, {
            text: coreResource.getText("T_COMMON_SAPFE_SHARE_JAM"),
            icon: "sap-icon://share-2",
            press: () => controller.share._triggerShareToJam()
          }));
        }
        // prepare teams menu items
        for (const collaborationOption of shareCollaborationOptions) {
          var _collaborationOption$, _this$menu2, _this$menu2$current;
          const menuItemSettings = {
            text: collaborationOption.text,
            icon: collaborationOption.icon,
            items: []
          };
          if (collaborationOption !== null && collaborationOption !== void 0 && collaborationOption.subOptions && (collaborationOption === null || collaborationOption === void 0 ? void 0 : (_collaborationOption$ = collaborationOption.subOptions) === null || _collaborationOption$ === void 0 ? void 0 : _collaborationOption$.length) > 0) {
            menuItemSettings.items = [];
            collaborationOption.subOptions.forEach(subOption => {
              const subMenuItem = new MenuItem({
                text: subOption.text,
                icon: subOption.icon,
                press: this.collaborationMenuItemPress,
                customData: new CustomData({
                  key: "collaborationData",
                  value: subOption
                })
              });
              if (subOption.fesrStepName) {
                FESRHelper.setSemanticStepname(subMenuItem, "press", subOption.fesrStepName);
              }
              menuItemSettings.items.push(subMenuItem);
            });
          } else {
            // if there are no sub option then the main option should be clickable
            // so add a press handler.
            menuItemSettings.press = this.collaborationMenuItemPress;
            menuItemSettings["customData"] = new CustomData({
              key: "collaborationData",
              value: collaborationOption
            });
          }
          const menuItem = new MenuItem(menuItemSettings);
          if (menuItemSettings.press && collaborationOption.fesrStepName) {
            FESRHelper.setSemanticStepname(menuItem, "press", collaborationOption.fesrStepName);
          }
          this === null || this === void 0 ? void 0 : (_this$menu2 = this.menu) === null || _this$menu2 === void 0 ? void 0 : (_this$menu2$current = _this$menu2.current) === null || _this$menu2$current === void 0 ? void 0 : _this$menu2$current.addItem(menuItem);
        }
        // set save as tile
        // for now we need to create addBookmarkButton to use the save as tile feature.
        // In the future save as tile should be available as an API or a MenuItem so that it can be added to the Menu button.
        // This needs to be discussed with AddBookmarkButton team.
        const addBookmarkButton = new AddBookmarkButton();
        if (addBookmarkButton.getEnabled()) {
          var _this$menu3, _this$menu3$current;
          this === null || this === void 0 ? void 0 : (_this$menu3 = this.menu) === null || _this$menu3 === void 0 ? void 0 : (_this$menu3$current = _this$menu3.current) === null || _this$menu3$current === void 0 ? void 0 : _this$menu3$current.addItem(_jsx(MenuItem, {
            ref: this.saveAsTileMenuItem,
            text: addBookmarkButton.getText(),
            icon: addBookmarkButton.getIcon(),
            press: () => controller.share._saveAsTile(this.saveAsTileMenuItem.current),
            children: {
              dependents: [addBookmarkButton]
            }
          }));
        } else {
          addBookmarkButton.destroy();
        }
      }
    };
    _proto.collaborationMenuItemPress = async function collaborationMenuItemPress(event) {
      const clickedMenuItem = event.getSource();
      const collaborationTeamsHelper = await ServiceContainer.getServiceAsync();
      const view = CommonUtils.getTargetView(clickedMenuItem);
      const controller = view.getController();
      // call adapt share metadata so that the collaboration info model is updated with the required info
      await controller.share._adaptShareMetadata();
      const collaborationInfo = view.getModel("collaborationInfo").getData();
      collaborationTeamsHelper.share(clickedMenuItem.data("collaborationData"), collaborationInfo);
    };
    _proto.getContent = function getContent(view, appComponent) {
      // Ctrl+Shift+S is needed for the time being but this needs to be removed after backlog from menu button
      const menuButton = _jsx(ShareAPI, {
        id: this.id,
        children: _jsx(MenuButton, {
          ref: this.menuButton,
          icon: "sap-icon://action",
          visible: this.visible,
          tooltip: "{sap.fe.i18n>M_COMMON_SAPFE_ACTION_SHARE} (Ctrl+Shift+S)",
          children: _jsx(Menu, {
            ref: this.menu
          })
        })
      });
      view.addDependent(_jsx(CommandExecution, {
        visible: this.visible,
        enabled: this.visible,
        command: "Share",
        execute: () => {
          var _this$menuButton$curr4;
          return (_this$menuButton$curr4 = this.menuButton.current) === null || _this$menuButton$curr4 === void 0 ? void 0 : _this$menuButton$curr4.getMenu().openBy(this.menuButton.current, true);
        }
      }));
      // The initialization is asynchronous, so we just trigger it and hope for the best :D
      this.isInitialized = this._initializeMenuItems(view, appComponent).catch(error => {
        Log.error(error);
      });
      return menuButton;
    };
    return ShareBuildingBlock;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "menuButton", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "menu", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "saveAsTileMenuItem", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = ShareBuildingBlock;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/share/Share.block", ["sap/base/Log","sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/CommonUtils","sap/fe/core/controls/CommandExecution","sap/fe/core/helpers/ClassSupport","sap/m/Menu","sap/m/MenuButton","sap/m/MenuItem","sap/suite/ui/commons/collaboration/CollaborationHelper","sap/suite/ui/commons/collaboration/ServiceContainer","sap/ui/core/Core","sap/ui/core/CustomData","sap/ui/performance/trace/FESRHelper","sap/ushell/ui/footerbar/AddBookmarkButton","./ShareAPI","sap/fe/core/jsx-runtime/jsx"],function(e,t,i,n,r,o,a,s,l,u,c,d,p,m,v,f){"use strict";var b,h,g,S,y,M,_,w,I,B,A,O,z;var C={};var E=r.defineReference;var T=t.defineBuildingBlock;var P=t.BuildingBlockBase;var x=t.blockAttribute;function N(e,t,i,n){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(n):void 0})}function k(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function D(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;j(e,t)}function j(e,t){j=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return j(e,t)}function R(e,t,i,n,r){var o={};Object.keys(n).forEach(function(e){o[e]=n[e]});o.enumerable=!!o.enumerable;o.configurable=!!o.configurable;if("value"in o||o.initializer){o.writable=true}o=i.slice().reverse().reduce(function(i,n){return n(e,t,i)||i},o);if(r&&o.initializer!==void 0){o.value=o.initializer?o.initializer.call(r):void 0;o.initializer=undefined}if(o.initializer===void 0){Object.defineProperty(e,t,o);o=null}return o}function L(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let F=(b=T({name:"Share",namespace:"sap.fe.macros.internal",publicNamespace:"sap.fe.macros",isRuntime:true}),h=x({type:"string",required:true,isPublic:true}),g=x({type:"boolean",defaultValue:true,isPublic:true,bindable:true}),S=E(),y=E(),M=E(),b(_=(w=function(t){D(r,t);function r(){var e;for(var i=arguments.length,n=new Array(i),r=0;r<i;r++){n[r]=arguments[r]}e=t.call(this,...n)||this;N(e,"id",I,k(e));N(e,"visible",B,k(e));N(e,"menuButton",A,k(e));N(e,"menu",O,k(e));N(e,"saveAsTileMenuItem",z,k(e));return e}C=r;var b=r.prototype;b._initializeMenuItems=async function e(t,i){const n=await l.isTeamsModeActive();if(n){var r,o;(r=this.menuButton.current)===null||r===void 0?void 0:r.unbindProperty("visible",true);(o=this.menuButton.current)===null||o===void 0?void 0:o.setVisible(false);return}const a=t.getController();const u=c.getLibraryResourceBundle("sap.fe.core");const d=i.getShellServices();const p=await d.waitForPluginsLoad();if(!p){var m;const e=(m=this.menuButton.current)===null||m===void 0?void 0:m.getAggregation("_control");e===null||e===void 0?void 0:e.attachEventOnce("press",{},()=>this._initializeMenuItems,this)}if(this.menu.current){this.menu.current.addItem(f(s,{text:u.getText("T_SEMANTIC_CONTROL_SEND_EMAIL"),icon:"sap-icon://email",press:()=>a.share._triggerEmail()}));this._addShellBasedMenuItems(a,d,u)}};b._addShellBasedMenuItems=async function e(t,i,n){var r,o;const a=i.hasUShell();const l=!!((r=(o=i.getUser()).isJamActive)!==null&&r!==void 0&&r.call(o));const c=await u.getServiceAsync();const v=c.getOptions();if(a){if(l){var b,h;this===null||this===void 0?void 0:(b=this.menu)===null||b===void 0?void 0:(h=b.current)===null||h===void 0?void 0:h.addItem(f(s,{text:n.getText("T_COMMON_SAPFE_SHARE_JAM"),icon:"sap-icon://share-2",press:()=>t.share._triggerShareToJam()}))}for(const e of v){var g,S,y;const t={text:e.text,icon:e.icon,items:[]};if(e!==null&&e!==void 0&&e.subOptions&&(e===null||e===void 0?void 0:(g=e.subOptions)===null||g===void 0?void 0:g.length)>0){t.items=[];e.subOptions.forEach(e=>{const i=new s({text:e.text,icon:e.icon,press:this.collaborationMenuItemPress,customData:new d({key:"collaborationData",value:e})});if(e.fesrStepName){p.setSemanticStepname(i,"press",e.fesrStepName)}t.items.push(i)})}else{t.press=this.collaborationMenuItemPress;t["customData"]=new d({key:"collaborationData",value:e})}const i=new s(t);if(t.press&&e.fesrStepName){p.setSemanticStepname(i,"press",e.fesrStepName)}this===null||this===void 0?void 0:(S=this.menu)===null||S===void 0?void 0:(y=S.current)===null||y===void 0?void 0:y.addItem(i)}const e=new m;if(e.getEnabled()){var M,_;this===null||this===void 0?void 0:(M=this.menu)===null||M===void 0?void 0:(_=M.current)===null||_===void 0?void 0:_.addItem(f(s,{ref:this.saveAsTileMenuItem,text:e.getText(),icon:e.getIcon(),press:()=>t.share._saveAsTile(this.saveAsTileMenuItem.current),children:{dependents:[e]}}))}else{e.destroy()}}};b.collaborationMenuItemPress=async function e(t){const n=t.getSource();const r=await u.getServiceAsync();const o=i.getTargetView(n);const a=o.getController();await a.share._adaptShareMetadata();const s=o.getModel("collaborationInfo").getData();r.share(n.data("collaborationData"),s)};b.getContent=function t(i,r){const s=f(v,{id:this.id,children:f(a,{ref:this.menuButton,icon:"sap-icon://action",visible:this.visible,tooltip:"{sap.fe.i18n>M_COMMON_SAPFE_ACTION_SHARE} (Ctrl+Shift+S)",children:f(o,{ref:this.menu})})});i.addDependent(f(n,{visible:this.visible,enabled:this.visible,command:"Share",execute:()=>{var e;return(e=this.menuButton.current)===null||e===void 0?void 0:e.getMenu().openBy(this.menuButton.current,true)}}));this.isInitialized=this._initializeMenuItems(i,r).catch(t=>{e.error(t)});return s};return r}(P),I=R(w.prototype,"id",[h],{configurable:true,enumerable:true,writable:true,initializer:null}),B=R(w.prototype,"visible",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),A=R(w.prototype,"menuButton",[S],{configurable:true,enumerable:true,writable:true,initializer:null}),O=R(w.prototype,"menu",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),z=R(w.prototype,"saveAsTileMenuItem",[M],{configurable:true,enumerable:true,writable:true,initializer:null}),w))||_);C=F;return C},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/share/ShareAPI-dbg", ["sap/base/Log", "sap/fe/core/helpers/ClassSupport", "sap/suite/ui/commons/collaboration/CollaborationHelper", "../MacroAPI"], function (Log, ClassSupport, CollaborationHelper, MacroAPI) {
  "use strict";

  var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;
  var property = ClassSupport.property;
  var defineUI5Class = ClassSupport.defineUI5Class;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  /**
   * Building block used to create the ‘Share’ functionality.
   * <br>
   * Please note that the 'Share in SAP Jam' option is only available on platforms that are integrated with SAP Jam.
   * <br>
   * If you are consuming this building block in an environment where the SAP Fiori launchpad is not available, then the 'Save as Tile' option is not visible.
   *
   *
   * Usage example:
   * <pre>
   * &lt;macro:Share
   * 	id="someID"
   *	visible="true"
   * /&gt;
   * </pre>
   *
   * @alias sap.fe.macros.ShareAPI
   * @private
   * @since 1.108.0
   */
  let ShareAPI = (_dec = defineUI5Class("sap.fe.macros.share.ShareAPI", {
    interfaces: ["sap.m.IOverflowToolbarContent"]
  }), _dec2 = property({
    type: "string"
  }), _dec3 = property({
    type: "boolean",
    defaultValue: true
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_MacroAPI) {
    _inheritsLoose(ShareAPI, _MacroAPI);
    function ShareAPI() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _MacroAPI.call(this, ...args) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "visible", _descriptor2, _assertThisInitialized(_this));
      return _this;
    }
    var _proto = ShareAPI.prototype;
    /**
     * Returns properties for the interface IOverflowToolbarContent.
     *
     * @returns {object} Returns the configuration of IOverflowToolbarContent
     */
    _proto.getOverflowToolbarConfig = function getOverflowToolbarConfig() {
      return {
        canOverflow: true
      };
    }
    /**
     * Sets the visibility of the 'Share' building block based on the value.
     * If the 'Share' building block is used in an application that's running in Microsoft Teams,
     * this function does not have any effect,
     * since the 'Share' building block handles the visibility on it's own in that case.
     *
     * @param visibility The desired visibility to be set
     * @returns Promise which resolves with the instance of ShareAPI
     * @private
     */;
    _proto.setVisibility = async function setVisibility(visibility) {
      const isTeamsModeActive = await CollaborationHelper.isTeamsModeActive();
      // In case of teams mode share should not be visible
      // so we do not do anything
      if (!isTeamsModeActive) {
        this.content.setVisible(visibility);
        this.visible = visibility;
      } else {
        Log.info("Share Building Block: visibility not changed since application is running in teams mode!");
      }
      return Promise.resolve(this);
    };
    return ShareAPI;
  }(MacroAPI), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "visible", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  return ShareAPI;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/share/ShareAPI", ["sap/base/Log","sap/fe/core/helpers/ClassSupport","sap/suite/ui/commons/collaboration/CollaborationHelper","../MacroAPI"],function(e,i,r,t){"use strict";var n,o,a,l,s,u,c;var f=i.property;var p=i.defineUI5Class;function b(e,i,r,t){if(!r)return;Object.defineProperty(e,i,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(t):void 0})}function d(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function v(e,i){e.prototype=Object.create(i.prototype);e.prototype.constructor=e;h(e,i)}function h(e,i){h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(i,r){i.__proto__=r;return i};return h(e,i)}function y(e,i,r,t,n){var o={};Object.keys(t).forEach(function(e){o[e]=t[e]});o.enumerable=!!o.enumerable;o.configurable=!!o.configurable;if("value"in o||o.initializer){o.writable=true}o=r.slice().reverse().reduce(function(r,t){return t(e,i,r)||r},o);if(n&&o.initializer!==void 0){o.value=o.initializer?o.initializer.call(n):void 0;o.initializer=undefined}if(o.initializer===void 0){Object.defineProperty(e,i,o);o=null}return o}function g(e,i){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let m=(n=p("sap.fe.macros.share.ShareAPI",{interfaces:["sap.m.IOverflowToolbarContent"]}),o=f({type:"string"}),a=f({type:"boolean",defaultValue:true}),n(l=(s=function(i){v(t,i);function t(){var e;for(var r=arguments.length,t=new Array(r),n=0;n<r;n++){t[n]=arguments[n]}e=i.call(this,...t)||this;b(e,"id",u,d(e));b(e,"visible",c,d(e));return e}var n=t.prototype;n.getOverflowToolbarConfig=function e(){return{canOverflow:true}};n.setVisibility=async function i(t){const n=await r.isTeamsModeActive();if(!n){this.content.setVisible(t);this.visible=t}else{e.info("Share Building Block: visibility not changed since application is running in teams mode!")}return Promise.resolve(this)};return t}(t),u=y(s.prototype,"id",[o],{configurable:true,enumerable:true,writable:true,initializer:null}),c=y(s.prototype,"visible",[a],{configurable:true,enumerable:true,writable:true,initializer:null}),s))||l);return m},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/situations/SituationsIndicator-dbg.fragment", ["sap/base/Log", "sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/BindingToolkit", "sap/fe/macros/ResourceModel", "sap/fe/macros/situations/SituationsPopover"], function (Log, BuildingBlock, BuildingBlockRuntime, MetaModelConverter, BindingToolkit, ResourceModel, SituationsPopover) {
  "use strict";

  var _dec, _dec2, _dec3, _class, _class2, _descriptor, _descriptor2;
  var _exports = {};
  var showPopover = SituationsPopover.showPopover;
  var ref = BindingToolkit.ref;
  var pathInModel = BindingToolkit.pathInModel;
  var ifElse = BindingToolkit.ifElse;
  var greaterThan = BindingToolkit.greaterThan;
  var fn = BindingToolkit.fn;
  var equal = BindingToolkit.equal;
  var and = BindingToolkit.and;
  var convertMetaModelContext = MetaModelConverter.convertMetaModelContext;
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let SituationsIndicator = (_dec = defineBuildingBlock({
    name: "SituationsIndicator",
    namespace: "sap.fe.macros.internal.situations"
  }), _dec2 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true
  }), _dec3 = blockAttribute({
    type: "string",
    required: false
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(SituationsIndicator, _BuildingBlockBase);
    function SituationsIndicator() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _BuildingBlockBase.call(this, ...args) || this;
      _initializerDefineProperty(_this, "entitySet", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "propertyPath", _descriptor2, _assertThisInitialized(_this));
      return _this;
    }
    _exports = SituationsIndicator;
    SituationsIndicator.getSituationsNavigationProperty = function getSituationsNavigationProperty(context) {
      let navigationProperties;
      switch (context._type) {
        case "NavigationProperty":
          navigationProperties = context.targetType.navigationProperties;
          break;
        case "EntityType":
          navigationProperties = context.navigationProperties;
          break;
        default:
          navigationProperties = context.entityType.navigationProperties;
      }
      const situationsNavProps = navigationProperties.filter(navigationProperty => {
        var _navigationProperty$t, _navigationProperty$t2;
        return !navigationProperty.isCollection && ((_navigationProperty$t = navigationProperty.targetType.annotations.Common) === null || _navigationProperty$t === void 0 ? void 0 : (_navigationProperty$t2 = _navigationProperty$t.SAPObjectNodeType) === null || _navigationProperty$t2 === void 0 ? void 0 : _navigationProperty$t2.Name) === "BusinessSituation";
      });
      const situationsNavProp = situationsNavProps.length >= 1 ? situationsNavProps[0] : undefined;

      // only one navigation property may lead to an entity tagged as "BusinessSituation"
      if (situationsNavProps.length > 1) {
        const navPropNames = situationsNavProps.map(prop => `'${prop.name}'`).join(", ");
        let name;
        switch (context._type) {
          case "NavigationProperty":
            name = context.targetType.name;
            break;
          case "EntityType":
            name = context.name;
            break;
          default:
            name = context.entityType.name;
        }
        Log.error(`Entity type '${name}' has multiple paths to SAP Situations (${navPropNames}). Using '${situationsNavProp === null || situationsNavProp === void 0 ? void 0 : situationsNavProp.name}'.
Hint: Make sure there is at most one navigation property whose target entity type is annotated with
<Annotation Term="com.sap.vocabularies.Common.v1.SAPObjectNodeType">
  <Record>
    <PropertyValue Property="Name" String="BusinessSituation" />
  </Record>
</Annotation>.`);
      }
      return situationsNavProp;
    };
    var _proto = SituationsIndicator.prototype;
    _proto.getTemplate = function getTemplate() {
      const context = convertMetaModelContext(this.entitySet);
      const situationsNavProp = SituationsIndicator.getSituationsNavigationProperty(context);
      if (!situationsNavProp) {
        // No path to SAP Situations. That is, the entity type is not situation-enabled. Ignore this fragment.
        return undefined;
      }
      const numberOfSituations = pathInModel(`${situationsNavProp.name}/SitnNumberOfInstances`);

      // Indicator visibility
      let visible;
      if (!this.propertyPath) {
        // no propertyPath --> visibility depends on the number of situations only
        visible = greaterThan(numberOfSituations, 0);
      } else {
        // propertyPath --> visibility depends on the number of situations and on the semantic key used for showing indicators
        visible = and(greaterThan(numberOfSituations, 0), equal(pathInModel("semanticKeyHasDraftIndicator", "internal"), this.propertyPath));
      }

      // Button text: the number of situations if there are multiple, the empty string otherwise
      const text = ifElse(greaterThan(numberOfSituations, 1), numberOfSituations, "");

      // Button tooltip: "There is one situation" / "There are <n> situations"
      const tooltip = ifElse(equal(numberOfSituations, 1), ResourceModel.getText("situationsTooltipSingular"), fn("formatMessage", [ResourceModel.getText("situationsTooltipPlural"), numberOfSituations]));

      // 'press' handler
      const onPress = fn(showPopover, [ref("$controller"), ref("$event"), situationsNavProp.name]);
      return xml`
			<m:Button core:require="{rt: 'sap/fe/macros/situations/SituationsPopover', formatMessage: 'sap/base/strings/formatMessage'}"
				type="Attention"
				icon="sap-icon://alert"
				text="${text}"
				tooltip="${tooltip}"
				visible="${visible}"
				press="${onPress}"
			/>`;
    };
    return SituationsIndicator;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "entitySet", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "propertyPath", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = SituationsIndicator;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/situations/SituationsIndicator.fragment", ["sap/base/Log","sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/BindingToolkit","sap/fe/macros/ResourceModel","sap/fe/macros/situations/SituationsPopover"],function(e,t,i,r,n,a,o){"use strict";var s,l,u,c,p,f,d;var v={};var y=o.showPopover;var g=n.ref;var b=n.pathInModel;var m=n.ifElse;var h=n.greaterThan;var P=n.fn;var S=n.equal;var T=n.and;var w=r.convertMetaModelContext;var B=i.xml;var k=t.defineBuildingBlock;var O=t.BuildingBlockBase;var $=t.blockAttribute;function z(e,t,i,r){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(r):void 0})}function M(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function j(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;N(e,t)}function N(e,t){N=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return N(e,t)}function A(e,t,i,r,n){var a={};Object.keys(r).forEach(function(e){a[e]=r[e]});a.enumerable=!!a.enumerable;a.configurable=!!a.configurable;if("value"in a||a.initializer){a.writable=true}a=i.slice().reverse().reduce(function(i,r){return r(e,t,i)||i},a);if(n&&a.initializer!==void 0){a.value=a.initializer?a.initializer.call(n):void 0;a.initializer=undefined}if(a.initializer===void 0){Object.defineProperty(e,t,a);a=null}return a}function E(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let x=(s=k({name:"SituationsIndicator",namespace:"sap.fe.macros.internal.situations"}),l=$({type:"sap.ui.model.Context",required:true}),u=$({type:"string",required:false}),s(c=(p=function(t){j(i,t);function i(){var e;for(var i=arguments.length,r=new Array(i),n=0;n<i;n++){r[n]=arguments[n]}e=t.call(this,...r)||this;z(e,"entitySet",f,M(e));z(e,"propertyPath",d,M(e));return e}v=i;i.getSituationsNavigationProperty=function t(i){let r;switch(i._type){case"NavigationProperty":r=i.targetType.navigationProperties;break;case"EntityType":r=i.navigationProperties;break;default:r=i.entityType.navigationProperties}const n=r.filter(e=>{var t,i;return!e.isCollection&&((t=e.targetType.annotations.Common)===null||t===void 0?void 0:(i=t.SAPObjectNodeType)===null||i===void 0?void 0:i.Name)==="BusinessSituation"});const a=n.length>=1?n[0]:undefined;if(n.length>1){const t=n.map(e=>`'${e.name}'`).join(", ");let r;switch(i._type){case"NavigationProperty":r=i.targetType.name;break;case"EntityType":r=i.name;break;default:r=i.entityType.name}e.error(`Entity type '${r}' has multiple paths to SAP Situations (${t}). Using '${a===null||a===void 0?void 0:a.name}'.\nHint: Make sure there is at most one navigation property whose target entity type is annotated with\n<Annotation Term="com.sap.vocabularies.Common.v1.SAPObjectNodeType">\n  <Record>\n    <PropertyValue Property="Name" String="BusinessSituation" />\n  </Record>\n</Annotation>.`)}return a};var r=i.prototype;r.getTemplate=function e(){const t=w(this.entitySet);const r=i.getSituationsNavigationProperty(t);if(!r){return undefined}const n=b(`${r.name}/SitnNumberOfInstances`);let o;if(!this.propertyPath){o=h(n,0)}else{o=T(h(n,0),S(b("semanticKeyHasDraftIndicator","internal"),this.propertyPath))}const s=m(h(n,1),n,"");const l=m(S(n,1),a.getText("situationsTooltipSingular"),P("formatMessage",[a.getText("situationsTooltipPlural"),n]));const u=P(y,[g("$controller"),g("$event"),r.name]);return B`
			<m:Button core:require="{rt: 'sap/fe/macros/situations/SituationsPopover', formatMessage: 'sap/base/strings/formatMessage'}"
				type="Attention"
				icon="sap-icon://alert"
				text="${s}"
				tooltip="${l}"
				visible="${o}"
				press="${u}"
			/>`};return i}(O),f=A(p.prototype,"entitySet",[l],{configurable:true,enumerable:true,writable:true,initializer:null}),d=A(p.prototype,"propertyPath",[u],{configurable:true,enumerable:true,writable:true,initializer:null}),p))||c);v=x;return v},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/situations/SituationsPopover-dbg", ["sap/fe/core/CommonUtils", "sap/fe/core/controllerextensions/BusyLocker", "sap/fe/macros/ResourceModel", "sap/fe/macros/situations/SituationsText", "sap/m/Button", "sap/m/CustomListItem", "sap/m/HBox", "sap/m/Label", "sap/m/List", "sap/m/ObjectIdentifier", "sap/m/ObjectStatus", "sap/m/ResponsivePopover", "sap/m/Text", "sap/m/Toolbar", "sap/m/VBox"], function (CommonUtils, BusyLocker, ResourceModel, SituationsText, Button, CustomListItem, HBox, Label, List, ObjectIdentifier, ObjectStatus, ResponsivePopover, Text, Toolbar, VBox) {
  "use strict";

  var _exports = {};
  var bindText = SituationsText.bindText;
  function bindTimestamp(timestampPropertyPath) {
    return {
      path: timestampPropertyPath,
      type: "sap.ui.model.odata.type.DateTimeOffset",
      constraints: {
        precision: 7
      },
      formatOptions: {
        relative: true
      }
    };
  }
  let currentSituationIndicator;
  function createListPopover(controller, expectedNumberOfSituations) {
    let listDetailsPopover = null;
    const listPopover = new ResponsivePopover({
      showHeader: false,
      contentHeight: `${expectedNumberOfSituations * 4.5}em`,
      contentWidth: "25em",
      busyIndicatorDelay: 200,
      placement: "Horizontal",
      content: [new List({
        items: {
          path: "_Instance",
          events: {
            dataReceived: () => {
              listPopover.setContentHeight();
            }
          },
          parameters: {
            $orderby: "SitnInstceLastChgdAtDateTime desc",
            $expand: "_InstanceAttribute($expand=_InstanceAttributeValue)" // required for formatting the texts
          },

          template: new CustomListItem({
            type: "Navigation",
            press: goToDetails,
            content: [new HBox({
              items: [new ObjectStatus({
                icon: "sap-icon://alert",
                state: "Warning",
                tooltip: ResourceModel.getText("situation")
              }).addStyleClass("sapUiTinyMarginEnd"), new ObjectIdentifier({
                title: bindText("SituationTitle"),
                text: bindTimestamp("SitnInstceLastChgdAtDateTime")
              })]
            }).addStyleClass("sapUiSmallMarginBeginEnd").addStyleClass("sapUiSmallMarginTopBottom")]
          }),
          templateShareable: false
        },
        showNoData: false
      })]
    });
    function goToList() {
      if (listDetailsPopover) {
        listDetailsPopover.unbindObject();
        listDetailsPopover.close();
      }
      if (currentSituationIndicator) {
        listPopover.openBy(currentSituationIndicator);
      }
    }
    async function goToDetails(event) {
      const pressedItem = event.getSource();
      const context = pressedItem.getBindingContext();
      if (context && currentSituationIndicator) {
        if (listDetailsPopover === null) {
          listDetailsPopover = await createPreviewPopover(controller, goToList);
          controller.getView().addDependent(listDetailsPopover);
        }
        listDetailsPopover.bindElement({
          path: context.getPath(),
          parameters: {
            $expand: "_InstanceAttribute($expand=_InstanceAttributeValue)"
          },
          events: {
            dataReceived: () => {
              BusyLocker.unlock(listDetailsPopover);
            }
          }
        });
        listPopover.close();
        BusyLocker.lock(listDetailsPopover);
        listDetailsPopover.openBy(currentSituationIndicator);
      }
    }
    return listPopover;
  }
  async function createPreviewPopover(controller, back) {
    const toolBarContent = [];
    if (back) {
      toolBarContent.push(new Button({
        type: "Back",
        tooltip: ResourceModel.getText("back"),
        press: back
      }).addStyleClass("sapUiNoMarginEnd"));
    }
    toolBarContent.push(new ObjectStatus({
      state: "Warning",
      icon: "sap-icon://alert",
      tooltip: ResourceModel.getText("situationIconTooltip")
    }).addStyleClass("sapUiSmallMarginBegin"));
    toolBarContent.push(new ObjectIdentifier({
      titleActive: false,
      title: bindText("SituationTitle")
    }).addStyleClass("sapUiSmallMarginEnd"));
    const popoverSettings = {
      contentWidth: "25em",
      contentHeight: "7em",
      placement: "Horizontal",
      customHeader: new Toolbar({
        content: toolBarContent
      }),
      busyIndicatorDelay: 100,
      content: [new VBox({
        items: [new Label({
          text: bindTimestamp("SitnInstceLastChgdAtDateTime")
        }), new Text({
          text: bindText("SituationText")
        }).addStyleClass("sapUiTinyMarginTop")]
      })]
    };
    const shellServices = CommonUtils.getShellServices(controller.getView());
    const navigationArguments = {
      target: {
        action: "displayExtended",
        semanticObject: "SituationInstance"
      }
    };
    const isNavigationSupported = await shellServices.isNavigationSupported([navigationArguments]);
    if (isNavigationSupported[0].supported) {
      popoverSettings.endButton = new Button({
        text: ResourceModel.getText("showDetails"),
        press: event => {
          var _getBindingContext;
          const situationKey = (_getBindingContext = event.getSource().getBindingContext()) === null || _getBindingContext === void 0 ? void 0 : _getBindingContext.getObject(`SitnInstceKey`);
          if (situationKey !== undefined && situationKey !== null && shellServices.crossAppNavService) {
            navigationArguments.params = {
              SitnInstceKey: situationKey
            };
            shellServices.crossAppNavService.toExternal(navigationArguments);
          }
        }
      });
    }
    return new ResponsivePopover(popoverSettings).addStyleClass("sapUiPopupWithPadding").addStyleClass("sapUiResponsivePadding--header");
  }
  async function showPopover(controller, event, situationsNavigationProperty) {
    currentSituationIndicator = event.getSource();
    const bindingContext = currentSituationIndicator.getBindingContext(),
      numberOfSituations = bindingContext.getObject(`${situationsNavigationProperty}/SitnNumberOfInstances`);
    let popover;
    const context = bindingContext.getModel().bindContext(situationsNavigationProperty, bindingContext, {
      $expand: "_Instance($expand=_InstanceAttribute($expand=_InstanceAttributeValue))"
    }).getBoundContext();
    if (numberOfSituations <= 1) {
      popover = await createPreviewPopover(controller);
      popover.setBindingContext(context);
      popover.bindElement({
        path: "_Instance/0"
      });
    } else {
      popover = createListPopover(controller, numberOfSituations);
      popover.setBindingContext(context);
    }
    controller.getView().addDependent(popover);
    popover.openBy(currentSituationIndicator);
  }
  _exports.showPopover = showPopover;
  showPopover.__functionName = "rt.showPopover";
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/situations/SituationsPopover", ["sap/fe/core/CommonUtils","sap/fe/core/controllerextensions/BusyLocker","sap/fe/macros/ResourceModel","sap/fe/macros/situations/SituationsText","sap/m/Button","sap/m/CustomListItem","sap/m/HBox","sap/m/Label","sap/m/List","sap/m/ObjectIdentifier","sap/m/ObjectStatus","sap/m/ResponsivePopover","sap/m/Text","sap/m/Toolbar","sap/m/VBox"],function(t,e,n,a,s,i,o,c,l,p,d,r,u,m,g){"use strict";var S={};var f=a.bindText;function x(t){return{path:t,type:"sap.ui.model.odata.type.DateTimeOffset",constraints:{precision:7},formatOptions:{relative:true}}}let y;function w(t,a){let s=null;const c=new r({showHeader:false,contentHeight:`${a*4.5}em`,contentWidth:"25em",busyIndicatorDelay:200,placement:"Horizontal",content:[new l({items:{path:"_Instance",events:{dataReceived:()=>{c.setContentHeight()}},parameters:{$orderby:"SitnInstceLastChgdAtDateTime desc",$expand:"_InstanceAttribute($expand=_InstanceAttributeValue)"},template:new i({type:"Navigation",press:m,content:[new o({items:[new d({icon:"sap-icon://alert",state:"Warning",tooltip:n.getText("situation")}).addStyleClass("sapUiTinyMarginEnd"),new p({title:f("SituationTitle"),text:x("SitnInstceLastChgdAtDateTime")})]}).addStyleClass("sapUiSmallMarginBeginEnd").addStyleClass("sapUiSmallMarginTopBottom")]}),templateShareable:false},showNoData:false})]});function u(){if(s){s.unbindObject();s.close()}if(y){c.openBy(y)}}async function m(n){const a=n.getSource();const i=a.getBindingContext();if(i&&y){if(s===null){s=await b(t,u);t.getView().addDependent(s)}s.bindElement({path:i.getPath(),parameters:{$expand:"_InstanceAttribute($expand=_InstanceAttributeValue)"},events:{dataReceived:()=>{e.unlock(s)}}});c.close();e.lock(s);s.openBy(y)}}return c}async function b(e,a){const i=[];if(a){i.push(new s({type:"Back",tooltip:n.getText("back"),press:a}).addStyleClass("sapUiNoMarginEnd"))}i.push(new d({state:"Warning",icon:"sap-icon://alert",tooltip:n.getText("situationIconTooltip")}).addStyleClass("sapUiSmallMarginBegin"));i.push(new p({titleActive:false,title:f("SituationTitle")}).addStyleClass("sapUiSmallMarginEnd"));const o={contentWidth:"25em",contentHeight:"7em",placement:"Horizontal",customHeader:new m({content:i}),busyIndicatorDelay:100,content:[new g({items:[new c({text:x("SitnInstceLastChgdAtDateTime")}),new u({text:f("SituationText")}).addStyleClass("sapUiTinyMarginTop")]})]};const l=t.getShellServices(e.getView());const S={target:{action:"displayExtended",semanticObject:"SituationInstance"}};const y=await l.isNavigationSupported([S]);if(y[0].supported){o.endButton=new s({text:n.getText("showDetails"),press:t=>{var e;const n=(e=t.getSource().getBindingContext())===null||e===void 0?void 0:e.getObject(`SitnInstceKey`);if(n!==undefined&&n!==null&&l.crossAppNavService){S.params={SitnInstceKey:n};l.crossAppNavService.toExternal(S)}}})}return new r(o).addStyleClass("sapUiPopupWithPadding").addStyleClass("sapUiResponsivePadding--header")}async function h(t,e,n){y=e.getSource();const a=y.getBindingContext(),s=a.getObject(`${n}/SitnNumberOfInstances`);let i;const o=a.getModel().bindContext(n,a,{$expand:"_Instance($expand=_InstanceAttribute($expand=_InstanceAttributeValue))"}).getBoundContext();if(s<=1){i=await b(t);i.setBindingContext(o);i.bindElement({path:"_Instance/0"})}else{i=w(t,s);i.setBindingContext(o)}t.getView().addDependent(i);i.openBy(y)}S.showPopover=h;h.__functionName="rt.showPopover";return S},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/situations/SituationsText-dbg", ["sap/base/Log", "sap/ui/model/odata/type/Boolean", "sap/ui/model/odata/type/Date", "sap/ui/model/odata/type/DateTimeOffset", "sap/ui/model/odata/type/Decimal", "sap/ui/model/odata/type/Guid", "sap/ui/model/odata/type/Int32", "sap/ui/model/odata/type/String"], function (Log, EdmBoolean, EdmDate, DateTimeOffset, Decimal, Guid, Int32, EdmString) {
  "use strict";

  var _exports = {};
  const types = {};
  function createEdmType(attributeEDMType) {
    switch (attributeEDMType) {
      case "EDM.BOOLEAN":
        return new EdmBoolean();
      case "EDM.DATE":
      case "EDM.DATETIME":
        return new EdmDate();
      case "EDM.DATETIMEOFFSET":
        return new DateTimeOffset();
      case "EDM.DECIMAL":
        return new Decimal();
      case "EDM.GUID":
        return new Guid();
      case "EDM.INT32":
        return new Int32();
      case "EDM.STRING":
        return new EdmString();
      default:
        return createEdmType("EDM.STRING");
    }
  }
  function parseAttributeValue(type, value, oDataType) {
    switch (type) {
      case "EDM.STRING":
        return value;
      case "EDM.DATE":
      case "EDM.DATETIME":
      case "EDM.DATETIMEOFFSET":
        return oDataType.parseValue(value, "string");
      case "EDM.INT32":
        return parseInt(value, 10);
      case "EDM.DECIMAL":
        return parseFloat(value);
      case "EDM.GUID":
        return value;
      case "EDM.BOOLEAN":
        // ABAP style: 'X' = true, '' = false
        return value === "X";
      default:
        return value;
    }
  }
  function getType(attributeEDMType) {
    let type = types[attributeEDMType];
    if (!type) {
      type = createEdmType(attributeEDMType);
      types[attributeEDMType] = type;
    }
    return type;
  }
  function formatter(key, template) {
    const context = this.getBindingContext();
    if (key === undefined || key === null || template === undefined || template === null || !context) {
      return "";
    }
    const attributes = context.getObject("_InstanceAttribute");
    if (attributes === undefined || attributes === null || attributes.length === 0) {
      return template;
    }
    const placeholderReplacer = (match, attributeSource, attributeName) => {
      const source = parseInt(attributeSource, 10).toString(); // remove leading zeros from the attribute source

      const resolvedAttribute = attributes.find(attribute => attribute.SitnInstceAttribSource === source && attribute.SitnInstceAttribName === attributeName);
      if (resolvedAttribute === undefined) {
        Log.error(`Failed to resolve attribute ${attributeSource}.${attributeName}`);
        return "";
      }
      if (!resolvedAttribute._InstanceAttributeValue) {
        Log.error(`Failed to resolve a value for attribute ${attributeSource}.${attributeName}`);
        return "";
      }
      const resolvedAttributeType = getType(resolvedAttribute.SitnInstceAttribEntityType);

      // Format the value(s) - if there are multiple, concatenate them
      return resolvedAttribute._InstanceAttributeValue.map(value => {
        const parsedValue = parseAttributeValue(resolvedAttribute.SitnInstceAttribEntityType, value.SitnInstceAttribValue, resolvedAttributeType);
        return resolvedAttributeType.formatValue(parsedValue, "string");
      }).join(", ");
    };

    // Replace placeholders for attribute values.
    // Their format is {<digitsequence>.<something>} - e.g. {01.PURCHASECONTRACT}
    return template.replace(/\{(\d+)\.([^}]+)}/g, placeholderReplacer);
  }
  _exports.formatter = formatter;
  function bindText(textTemplatePropertyPath) {
    return {
      parts: [{
        path: "SitnInstceKey"
      }, {
        path: `_InstanceText/${textTemplatePropertyPath}`
      }],
      formatter: formatter
    };
  }
  _exports.bindText = bindText;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/situations/SituationsText", ["sap/base/Log","sap/ui/model/odata/type/Boolean","sap/ui/model/odata/type/Date","sap/ui/model/odata/type/DateTimeOffset","sap/ui/model/odata/type/Decimal","sap/ui/model/odata/type/Guid","sap/ui/model/odata/type/Int32","sap/ui/model/odata/type/String"],function(t,e,n,r,a,u,i,s){"use strict";var c={};const o={};function E(t){switch(t){case"EDM.BOOLEAN":return new e;case"EDM.DATE":case"EDM.DATETIME":return new n;case"EDM.DATETIMEOFFSET":return new r;case"EDM.DECIMAL":return new a;case"EDM.GUID":return new u;case"EDM.INT32":return new i;case"EDM.STRING":return new s;default:return E("EDM.STRING")}}function d(t,e,n){switch(t){case"EDM.STRING":return e;case"EDM.DATE":case"EDM.DATETIME":case"EDM.DATETIMEOFFSET":return n.parseValue(e,"string");case"EDM.INT32":return parseInt(e,10);case"EDM.DECIMAL":return parseFloat(e);case"EDM.GUID":return e;case"EDM.BOOLEAN":return e==="X";default:return e}}function l(t){let e=o[t];if(!e){e=E(t);o[t]=e}return e}function D(e,n){const r=this.getBindingContext();if(e===undefined||e===null||n===undefined||n===null||!r){return""}const a=r.getObject("_InstanceAttribute");if(a===undefined||a===null||a.length===0){return n}const u=(e,n,r)=>{const u=parseInt(n,10).toString();const i=a.find(t=>t.SitnInstceAttribSource===u&&t.SitnInstceAttribName===r);if(i===undefined){t.error(`Failed to resolve attribute ${n}.${r}`);return""}if(!i._InstanceAttributeValue){t.error(`Failed to resolve a value for attribute ${n}.${r}`);return""}const s=l(i.SitnInstceAttribEntityType);return i._InstanceAttributeValue.map(t=>{const e=d(i.SitnInstceAttribEntityType,t.SitnInstceAttribValue,s);return s.formatValue(e,"string")}).join(", ")};return n.replace(/\{(\d+)\.([^}]+)}/g,u)}c.formatter=D;function p(t){return{parts:[{path:"SitnInstceKey"},{path:`_InstanceText/${t}`}],formatter:D}}c.bindText=p;return c},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/BasicSearch-dbg", ["sap/fe/core/helpers/ClassSupport", "sap/m/SearchField", "sap/ui/core/Control"], function (ClassSupport, SearchField, Control) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4;
  var implementInterface = ClassSupport.implementInterface;
  var event = ClassSupport.event;
  var defineUI5Class = ClassSupport.defineUI5Class;
  var aggregation = ClassSupport.aggregation;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let BasicSearch = (_dec = defineUI5Class("sap.fe.macros.table.BasicSearch"), _dec2 = implementInterface("sap.ui.mdc.IFilter"), _dec3 = event( /*{ conditionsBased: {
                                                                                                                                                type: "boolean"
                                                                                                                                                }}*/), _dec4 = event( /*{
                                                                                                                                                                      conditions: {
                                                                                                                                                                      type: "object"
                                                                                                                                                                      }
                                                                                                                                                                      }*/), _dec5 = aggregation({
    type: "sap.ui.core.Control",
    multiple: false
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_Control) {
    _inheritsLoose(BasicSearch, _Control);
    function BasicSearch() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _Control.call(this, ...args) || this;
      _initializerDefineProperty(_this, "__implements__sap_ui_mdc_IFilter", _descriptor, _assertThisInitialized(_this));
      _this.__implements__sap_ui_mdc_IFilterSource = true;
      _initializerDefineProperty(_this, "filterChanged", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "search", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "filter", _descriptor4, _assertThisInitialized(_this));
      return _this;
    }
    var _proto = BasicSearch.prototype;
    _proto.init = function init() {
      this.setAggregation("filter", new SearchField({
        placeholder: "{sap.fe.i18n>M_FILTERBAR_SEARCH}",
        search: () => {
          this.fireEvent("search");
        }
      }));
    };
    _proto.getConditions = function getConditions() {
      return undefined;
    };
    _proto.getSearch = function getSearch() {
      return this.filter.getValue();
    };
    _proto.validate = function validate() {
      return Promise.resolve();
    };
    BasicSearch.render = function render(oRm, oControl) {
      oRm.openStart("div", oControl);
      oRm.openEnd();
      oRm.renderControl(oControl.filter);
      oRm.close("div");
    };
    return BasicSearch;
  }(Control), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "__implements__sap_ui_mdc_IFilter", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: function () {
      return true;
    }
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "filterChanged", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "search", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "filter", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  return BasicSearch;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/BasicSearch", ["sap/fe/core/helpers/ClassSupport","sap/m/SearchField","sap/ui/core/Control"],function(e,r,t){"use strict";var i,n,a,l,o,u,c,s,f,p,d;var b=e.implementInterface;var _=e.event;var h=e.defineUI5Class;var m=e.aggregation;function v(e,r,t,i){if(!t)return;Object.defineProperty(e,r,{enumerable:t.enumerable,configurable:t.configurable,writable:t.writable,value:t.initializer?t.initializer.call(i):void 0})}function g(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function y(e,r){e.prototype=Object.create(r.prototype);e.prototype.constructor=e;w(e,r)}function w(e,r){w=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(r,t){r.__proto__=t;return r};return w(e,r)}function z(e,r,t,i,n){var a={};Object.keys(i).forEach(function(e){a[e]=i[e]});a.enumerable=!!a.enumerable;a.configurable=!!a.configurable;if("value"in a||a.initializer){a.writable=true}a=t.slice().reverse().reduce(function(t,i){return i(e,r,t)||t},a);if(n&&a.initializer!==void 0){a.value=a.initializer?a.initializer.call(n):void 0;a.initializer=undefined}if(a.initializer===void 0){Object.defineProperty(e,r,a);a=null}return a}function C(e,r){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let O=(i=h("sap.fe.macros.table.BasicSearch"),n=b("sap.ui.mdc.IFilter"),a=_(),l=_(),o=m({type:"sap.ui.core.Control",multiple:false}),i(u=(c=function(e){y(t,e);function t(){var r;for(var t=arguments.length,i=new Array(t),n=0;n<t;n++){i[n]=arguments[n]}r=e.call(this,...i)||this;v(r,"__implements__sap_ui_mdc_IFilter",s,g(r));r.__implements__sap_ui_mdc_IFilterSource=true;v(r,"filterChanged",f,g(r));v(r,"search",p,g(r));v(r,"filter",d,g(r));return r}var i=t.prototype;i.init=function e(){this.setAggregation("filter",new r({placeholder:"{sap.fe.i18n>M_FILTERBAR_SEARCH}",search:()=>{this.fireEvent("search")}}))};i.getConditions=function e(){return undefined};i.getSearch=function e(){return this.filter.getValue()};i.validate=function e(){return Promise.resolve()};t.render=function e(r,t){r.openStart("div",t);r.openEnd();r.renderControl(t.filter);r.close("div")};return t}(t),s=z(c.prototype,"__implements__sap_ui_mdc_IFilter",[n],{configurable:true,enumerable:true,writable:true,initializer:function(){return true}}),f=z(c.prototype,"filterChanged",[a],{configurable:true,enumerable:true,writable:true,initializer:null}),p=z(c.prototype,"search",[l],{configurable:true,enumerable:true,writable:true,initializer:null}),d=z(c.prototype,"filter",[o],{configurable:true,enumerable:true,writable:true,initializer:null}),c))||u);return O},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/QuickFilterContainer-dbg", ["sap/base/Log", "sap/fe/core/CommonUtils", "sap/fe/core/helpers/ClassSupport", "sap/fe/core/helpers/StableIdHelper", "sap/fe/macros/chart/ChartUtils", "sap/fe/macros/DelegateUtil", "sap/fe/macros/table/Utils", "sap/m/SegmentedButton", "sap/m/SegmentedButtonItem", "sap/m/Select", "sap/ui/core/Control", "sap/ui/core/Core", "sap/ui/core/Item", "sap/ui/model/json/JSONModel"], function (Log, CommonUtils, ClassSupport, StableIdHelper, ChartUtils, DelegateUtil, TableUtils, SegmentedButton, SegmentedButtonItem, Select, Control, Core, Item, JSONModel) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5;
  var generate = StableIdHelper.generate;
  var property = ClassSupport.property;
  var defineUI5Class = ClassSupport.defineUI5Class;
  var aggregation = ClassSupport.aggregation;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  const PROPERTY_QUICKFILTER_KEY = "quickFilterKey";
  const FILTER_MODEL = "filters";
  /**
   *  Container Control for Table QuickFilters
   *
   * @private
   * @experimental This module is only for internal/experimental use!
   */
  let QuickFilterContainer = (_dec = defineUI5Class("sap.fe.macros.table.QuickFilterContainer", {
    interfaces: ["sap.m.IOverflowToolbarContent"]
  }), _dec2 = property({
    type: "boolean"
  }), _dec3 = property({
    type: "string"
  }), _dec4 = property({
    type: "string"
  }), _dec5 = property({
    type: "string",
    defaultValue: "$auto"
  }), _dec6 = aggregation({
    type: "sap.ui.core.Control",
    multiple: false,
    isDefault: true
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_Control) {
    _inheritsLoose(QuickFilterContainer, _Control);
    function QuickFilterContainer() {
      var _this;
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      _this = _Control.call(this, ...args) || this;
      _initializerDefineProperty(_this, "showCounts", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "entitySet", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "parentEntityType", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "batchGroupId", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "selector", _descriptor5, _assertThisInitialized(_this));
      _this._attachedToView = false;
      return _this;
    }
    QuickFilterContainer.render = function render(oRm, oControl) {
      const macroBundle = Core.getLibraryResourceBundle("sap.fe.macros");
      oRm.renderControl(oControl.selector);
      oRm.attr("aria-label", macroBundle.getText("M_TABLE_QUICKFILTER_ARIA"));
    };
    var _proto = QuickFilterContainer.prototype;
    _proto.init = function init() {
      _Control.prototype.init.call(this);
      this._attachedToView = false;
      this.attachEvent("modelContextChange", this._initControl);
      const oDelegateOnBeforeRendering = {
        onBeforeRendering: () => {
          // Need to wait for Control rendering to get parent view (.i.e into OP the highest parent is the Object Section)
          this._createControlSideEffects();
          this._attachedToView = true;
          this.removeEventDelegate(oDelegateOnBeforeRendering);
        }
      };
      this.addEventDelegate(oDelegateOnBeforeRendering, this);
    };
    _proto._initControl = function _initControl(oEvent) {
      // Need to wait for the OData Model to be propagated (models are propagated one by one when we come from FLP)
      if (this.getModel()) {
        this.detachEvent(oEvent.getId(), this._initControl);
        this._manageTable();
        this._createContent();
      }
    };
    _proto._manageTable = function _manageTable() {
      var _this$_oTable, _this$_oTable$getPare;
      let oControl = this.getParent();
      const oModel = this._getFilterModel(),
        aFilters = oModel.getObject("/paths"),
        sDefaultFilter = Array.isArray(aFilters) && aFilters.length > 0 ? aFilters[0].annotationPath : undefined;
      while (oControl && !oControl.isA("sap.ui.mdc.Table")) {
        oControl = oControl.getParent();
      }
      this._oTable = oControl;
      const FilterControl = Core.byId(this._oTable.getFilter());
      if (FilterControl && FilterControl.isA("sap.ui.mdc.FilterBar")) {
        FilterControl.attachFiltersChanged(this._onFiltersChanged.bind(this));
      }
      (_this$_oTable = this._oTable) === null || _this$_oTable === void 0 ? void 0 : (_this$_oTable$getPare = _this$_oTable.getParent()) === null || _this$_oTable$getPare === void 0 ? void 0 : _this$_oTable$getPare.attachEvent("internalDataRequested", this._onTableDataRequested.bind(this));
      DelegateUtil.setCustomData(oControl, PROPERTY_QUICKFILTER_KEY, sDefaultFilter);
    };
    _proto._onFiltersChanged = function _onFiltersChanged(event) {
      if (event.getParameter("conditionsBased")) {
        this.selector.setProperty("enabled", false);
      }
    };
    _proto._onTableDataRequested = function _onTableDataRequested() {
      this.selector.setProperty("enabled", true);
      if (this.showCounts) {
        this._updateCounts();
      }
    };
    _proto.setSelectorKey = function setSelectorKey(sKey) {
      const oSelector = this.selector;
      if (oSelector && oSelector.getSelectedKey() !== sKey) {
        oSelector.setSelectedKey(sKey);
        DelegateUtil.setCustomData(this._oTable, PROPERTY_QUICKFILTER_KEY, sKey);

        // Rebind the table to reflect the change in quick filter key.
        // We don't rebind the table if the filterbar for the table is suspended
        // as rebind will be done when the filterbar is resumed
        const sFilterBarID = this._oTable.getFilter && this._oTable.getFilter();
        const oFilterBar = sFilterBarID && Core.byId(sFilterBarID);
        const bSkipRebind = oFilterBar && oFilterBar.getSuspendSelection && oFilterBar.getSuspendSelection();
        if (!bSkipRebind) {
          this._oTable.rebind();
        }
      }
    };
    _proto.getSelectorKey = function getSelectorKey() {
      const oSelector = this.selector;
      return oSelector ? oSelector.getSelectedKey() : null;
    };
    _proto.getDomRef = function getDomRef(sSuffix) {
      const oSelector = this.selector;
      return oSelector ? oSelector.getDomRef(sSuffix) : null;
    };
    _proto._getFilterModel = function _getFilterModel() {
      let oModel = this.getModel(FILTER_MODEL);
      if (!oModel) {
        const mFilters = DelegateUtil.getCustomData(this, FILTER_MODEL);
        oModel = new JSONModel(mFilters);
        this.setModel(oModel, FILTER_MODEL);
      }
      return oModel;
    }
    /**
     * Create QuickFilter Selector (Select or SegmentedButton).
     */;
    _proto._createContent = function _createContent() {
      const oModel = this._getFilterModel(),
        aFilters = oModel.getObject("/paths"),
        bIsSelect = aFilters.length > 3,
        mSelectorOptions = {
          id: generate([this._oTable.getId(), "QuickFilter"]),
          enabled: oModel.getObject("/enabled"),
          items: {
            path: `${FILTER_MODEL}>/paths`,
            factory: (sId, oBindingContext) => {
              const mItemOptions = {
                key: oBindingContext.getObject().annotationPath,
                text: this._getSelectorItemText(oBindingContext)
              };
              return bIsSelect ? new Item(mItemOptions) : new SegmentedButtonItem(mItemOptions);
            }
          }
        };
      if (bIsSelect) {
        mSelectorOptions.autoAdjustWidth = true;
      }
      mSelectorOptions[bIsSelect ? "change" : "selectionChange"] = this._onSelectionChange.bind(this);
      this.selector = bIsSelect ? new Select(mSelectorOptions) : new SegmentedButton(mSelectorOptions);
    }

    /**
     * Returns properties for the interface IOverflowToolbarContent.
     *
     * @returns {object} Returns the configuration of IOverflowToolbarContent
     */;
    _proto.getOverflowToolbarConfig = function getOverflowToolbarConfig() {
      return {
        canOverflow: true
      };
    }

    /**
     * Creates SideEffects control that must be executed when table cells that are related to configured filter(s) change.
     *
     */;
    _proto._createControlSideEffects = function _createControlSideEffects() {
      const oSvControl = this.selector,
        oSvItems = oSvControl.getItems(),
        sTableNavigationPath = DelegateUtil.getCustomData(this._oTable, "navigationPath");
      /**
       * Cannot execute SideEffects with targetEntity = current Table collection
       */

      if (sTableNavigationPath) {
        var _this$_getSideEffectC;
        const aSourceProperties = [];
        for (const k in oSvItems) {
          const sItemKey = oSvItems[k].getKey(),
            oFilterInfos = TableUtils.getFiltersInfoForSV(this._oTable, sItemKey);
          oFilterInfos.properties.forEach(function (sProperty) {
            const sPropertyPath = `${sTableNavigationPath}/${sProperty}`;
            if (!aSourceProperties.includes(sPropertyPath)) {
              aSourceProperties.push(sPropertyPath);
            }
          });
        }
        (_this$_getSideEffectC = this._getSideEffectController()) === null || _this$_getSideEffectC === void 0 ? void 0 : _this$_getSideEffectC.addControlSideEffects(this.parentEntityType, {
          SourceProperties: aSourceProperties,
          TargetEntities: [{
            $NavigationPropertyPath: sTableNavigationPath
          }],
          sourceControlId: this.getId()
        });
      }
    };
    _proto._getSelectorItemText = function _getSelectorItemText(oItemContext) {
      const annotationPath = oItemContext.getObject().annotationPath,
        itemPath = oItemContext.getPath(),
        oMetaModel = this.getModel().getMetaModel(),
        oQuickFilter = oMetaModel.getObject(`${this.entitySet}/${annotationPath}`);
      return oQuickFilter.Text + (this.showCounts ? ` ({${FILTER_MODEL}>${itemPath}/count})` : "");
    };
    _proto._getSideEffectController = function _getSideEffectController() {
      const oController = this._getViewController();
      return oController ? oController._sideEffects : undefined;
    };
    _proto._getViewController = function _getViewController() {
      const oView = CommonUtils.getTargetView(this);
      return oView && oView.getController();
    }
    /**
     * Manage List Binding request related to Counts on QuickFilter control and update text
     * in line with batch result.
     *
     */;
    _proto._updateCounts = function _updateCounts() {
      const oTable = this._oTable,
        oController = this._getViewController(),
        oSvControl = this.selector,
        oSvItems = oSvControl.getItems(),
        oModel = this._getFilterModel(),
        aBindingPromises = [],
        aInitialItemTexts = [];
      let aAdditionalFilters = [];
      let aChartFilters = [];
      const sCurrentFilterKey = DelegateUtil.getCustomData(oTable, PROPERTY_QUICKFILTER_KEY);

      // Add filters related to the chart for ALP
      if (oController && oController.getChartControl) {
        const oChart = oController.getChartControl();
        if (oChart) {
          const oChartFilterInfo = ChartUtils.getAllFilterInfo(oChart);
          if (oChartFilterInfo && oChartFilterInfo.filters.length) {
            aChartFilters = oChartFilterInfo.filters;
          }
        }
      }
      aAdditionalFilters = aAdditionalFilters.concat(TableUtils.getHiddenFilters(oTable)).concat(aChartFilters);
      for (const k in oSvItems) {
        const sItemKey = oSvItems[k].getKey(),
          oFilterInfos = TableUtils.getFiltersInfoForSV(oTable, sItemKey);
        aInitialItemTexts.push(oFilterInfos.text);
        oModel.setProperty(`/paths/${k}/count`, "...");
        aBindingPromises.push(TableUtils.getListBindingForCount(oTable, oTable.getBindingContext(), {
          batchGroupId: sItemKey === sCurrentFilterKey ? this.batchGroupId : "$auto",
          additionalFilters: aAdditionalFilters.concat(oFilterInfos.filters)
        }));
      }
      Promise.all(aBindingPromises).then(function (aCounts) {
        for (const k in aCounts) {
          oModel.setProperty(`/paths/${k}/count`, TableUtils.getCountFormatted(aCounts[k]));
        }
      }).catch(function (oError) {
        Log.error("Error while retrieving the binding promises", oError);
      });
    };
    _proto._onSelectionChange = function _onSelectionChange(oEvent) {
      const oControl = oEvent.getSource();
      DelegateUtil.setCustomData(this._oTable, PROPERTY_QUICKFILTER_KEY, oControl.getSelectedKey());
      this._oTable.rebind();
      const oController = this._getViewController();
      if (oController && oController.getExtensionAPI && oController.getExtensionAPI().updateAppState) {
        oController.getExtensionAPI().updateAppState();
      }
    };
    _proto.destroy = function destroy(bSuppressInvalidate) {
      if (this._attachedToView) {
        const oSideEffects = this._getSideEffectController();
        if (oSideEffects) {
          // if "destroy" signal comes when view is destroyed there is not anymore reference to Controller Extension
          oSideEffects.removeControlSideEffects(this);
        }
      }
      delete this._oTable;
      _Control.prototype.destroy.call(this, bSuppressInvalidate);
    };
    return QuickFilterContainer;
  }(Control), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "showCounts", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "entitySet", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "parentEntityType", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "batchGroupId", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "selector", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  return QuickFilterContainer;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/QuickFilterContainer", ["sap/base/Log","sap/fe/core/CommonUtils","sap/fe/core/helpers/ClassSupport","sap/fe/core/helpers/StableIdHelper","sap/fe/macros/chart/ChartUtils","sap/fe/macros/DelegateUtil","sap/fe/macros/table/Utils","sap/m/SegmentedButton","sap/m/SegmentedButtonItem","sap/m/Select","sap/ui/core/Control","sap/ui/core/Core","sap/ui/core/Item","sap/ui/model/json/JSONModel"],function(e,t,i,n,o,r,a,s,l,c,u,h,f,d){"use strict";var g,p,b,C,y,_,m,v,w,S,T,I,E;var P=n.generate;var F=i.property;var O=i.defineUI5Class;var D=i.aggregation;function A(e,t,i,n){if(!i)return;Object.defineProperty(e,t,{enumerable:i.enumerable,configurable:i.configurable,writable:i.writable,value:i.initializer?i.initializer.call(n):void 0})}function j(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function z(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;M(e,t)}function M(e,t){M=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,i){t.__proto__=i;return t};return M(e,t)}function V(e,t,i,n,o){var r={};Object.keys(n).forEach(function(e){r[e]=n[e]});r.enumerable=!!r.enumerable;r.configurable=!!r.configurable;if("value"in r||r.initializer){r.writable=true}r=i.slice().reverse().reduce(function(i,n){return n(e,t,i)||i},r);if(o&&r.initializer!==void 0){r.value=r.initializer?r.initializer.call(o):void 0;r.initializer=undefined}if(r.initializer===void 0){Object.defineProperty(e,t,r);r=null}return r}function $(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}const x="quickFilterKey";const K="filters";let R=(g=O("sap.fe.macros.table.QuickFilterContainer",{interfaces:["sap.m.IOverflowToolbarContent"]}),p=F({type:"boolean"}),b=F({type:"string"}),C=F({type:"string"}),y=F({type:"string",defaultValue:"$auto"}),_=D({type:"sap.ui.core.Control",multiple:false,isDefault:true}),g(m=(v=function(i){z(n,i);function n(){var e;for(var t=arguments.length,n=new Array(t),o=0;o<t;o++){n[o]=arguments[o]}e=i.call(this,...n)||this;A(e,"showCounts",w,j(e));A(e,"entitySet",S,j(e));A(e,"parentEntityType",T,j(e));A(e,"batchGroupId",I,j(e));A(e,"selector",E,j(e));e._attachedToView=false;return e}n.render=function e(t,i){const n=h.getLibraryResourceBundle("sap.fe.macros");t.renderControl(i.selector);t.attr("aria-label",n.getText("M_TABLE_QUICKFILTER_ARIA"))};var u=n.prototype;u.init=function e(){i.prototype.init.call(this);this._attachedToView=false;this.attachEvent("modelContextChange",this._initControl);const t={onBeforeRendering:()=>{this._createControlSideEffects();this._attachedToView=true;this.removeEventDelegate(t)}};this.addEventDelegate(t,this)};u._initControl=function e(t){if(this.getModel()){this.detachEvent(t.getId(),this._initControl);this._manageTable();this._createContent()}};u._manageTable=function e(){var t,i;let n=this.getParent();const o=this._getFilterModel(),a=o.getObject("/paths"),s=Array.isArray(a)&&a.length>0?a[0].annotationPath:undefined;while(n&&!n.isA("sap.ui.mdc.Table")){n=n.getParent()}this._oTable=n;const l=h.byId(this._oTable.getFilter());if(l&&l.isA("sap.ui.mdc.FilterBar")){l.attachFiltersChanged(this._onFiltersChanged.bind(this))}(t=this._oTable)===null||t===void 0?void 0:(i=t.getParent())===null||i===void 0?void 0:i.attachEvent("internalDataRequested",this._onTableDataRequested.bind(this));r.setCustomData(n,x,s)};u._onFiltersChanged=function e(t){if(t.getParameter("conditionsBased")){this.selector.setProperty("enabled",false)}};u._onTableDataRequested=function e(){this.selector.setProperty("enabled",true);if(this.showCounts){this._updateCounts()}};u.setSelectorKey=function e(t){const i=this.selector;if(i&&i.getSelectedKey()!==t){i.setSelectedKey(t);r.setCustomData(this._oTable,x,t);const e=this._oTable.getFilter&&this._oTable.getFilter();const n=e&&h.byId(e);const o=n&&n.getSuspendSelection&&n.getSuspendSelection();if(!o){this._oTable.rebind()}}};u.getSelectorKey=function e(){const t=this.selector;return t?t.getSelectedKey():null};u.getDomRef=function e(t){const i=this.selector;return i?i.getDomRef(t):null};u._getFilterModel=function e(){let t=this.getModel(K);if(!t){const e=r.getCustomData(this,K);t=new d(e);this.setModel(t,K)}return t};u._createContent=function e(){const t=this._getFilterModel(),i=t.getObject("/paths"),n=i.length>3,o={id:P([this._oTable.getId(),"QuickFilter"]),enabled:t.getObject("/enabled"),items:{path:`${K}>/paths`,factory:(e,t)=>{const i={key:t.getObject().annotationPath,text:this._getSelectorItemText(t)};return n?new f(i):new l(i)}}};if(n){o.autoAdjustWidth=true}o[n?"change":"selectionChange"]=this._onSelectionChange.bind(this);this.selector=n?new c(o):new s(o)};u.getOverflowToolbarConfig=function e(){return{canOverflow:true}};u._createControlSideEffects=function e(){const t=this.selector,i=t.getItems(),n=r.getCustomData(this._oTable,"navigationPath");if(n){var o;const e=[];for(const t in i){const o=i[t].getKey(),r=a.getFiltersInfoForSV(this._oTable,o);r.properties.forEach(function(t){const i=`${n}/${t}`;if(!e.includes(i)){e.push(i)}})}(o=this._getSideEffectController())===null||o===void 0?void 0:o.addControlSideEffects(this.parentEntityType,{SourceProperties:e,TargetEntities:[{$NavigationPropertyPath:n}],sourceControlId:this.getId()})}};u._getSelectorItemText=function e(t){const i=t.getObject().annotationPath,n=t.getPath(),o=this.getModel().getMetaModel(),r=o.getObject(`${this.entitySet}/${i}`);return r.Text+(this.showCounts?` ({${K}>${n}/count})`:"")};u._getSideEffectController=function e(){const t=this._getViewController();return t?t._sideEffects:undefined};u._getViewController=function e(){const i=t.getTargetView(this);return i&&i.getController()};u._updateCounts=function t(){const i=this._oTable,n=this._getViewController(),s=this.selector,l=s.getItems(),c=this._getFilterModel(),u=[],h=[];let f=[];let d=[];const g=r.getCustomData(i,x);if(n&&n.getChartControl){const e=n.getChartControl();if(e){const t=o.getAllFilterInfo(e);if(t&&t.filters.length){d=t.filters}}}f=f.concat(a.getHiddenFilters(i)).concat(d);for(const e in l){const t=l[e].getKey(),n=a.getFiltersInfoForSV(i,t);h.push(n.text);c.setProperty(`/paths/${e}/count`,"...");u.push(a.getListBindingForCount(i,i.getBindingContext(),{batchGroupId:t===g?this.batchGroupId:"$auto",additionalFilters:f.concat(n.filters)}))}Promise.all(u).then(function(e){for(const t in e){c.setProperty(`/paths/${t}/count`,a.getCountFormatted(e[t]))}}).catch(function(t){e.error("Error while retrieving the binding promises",t)})};u._onSelectionChange=function e(t){const i=t.getSource();r.setCustomData(this._oTable,x,i.getSelectedKey());this._oTable.rebind();const n=this._getViewController();if(n&&n.getExtensionAPI&&n.getExtensionAPI().updateAppState){n.getExtensionAPI().updateAppState()}};u.destroy=function e(t){if(this._attachedToView){const e=this._getSideEffectController();if(e){e.removeControlSideEffects(this)}}delete this._oTable;i.prototype.destroy.call(this,t)};return n}(u),w=V(v.prototype,"showCounts",[p],{configurable:true,enumerable:true,writable:true,initializer:null}),S=V(v.prototype,"entitySet",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),T=V(v.prototype,"parentEntityType",[C],{configurable:true,enumerable:true,writable:true,initializer:null}),I=V(v.prototype,"batchGroupId",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),E=V(v.prototype,"selector",[_],{configurable:true,enumerable:true,writable:true,initializer:null}),v))||m);return R},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/Table.metadata-dbg", ["sap/base/Log", "sap/fe/core/CommonUtils", "sap/fe/core/converters/controls/Common/DataVisualization", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/macros/internal/helpers/TableTemplating", "sap/fe/macros/MacroMetadata"], function (Log, CommonUtils, DataVisualization, MetaModelConverter, StableIdHelper, DataModelPathHelper, TableTemplating, MacroMetadata) {
  "use strict";

  var buildExpressionForHeaderVisible = TableTemplating.buildExpressionForHeaderVisible;
  var getContextRelativeTargetObjectPath = DataModelPathHelper.getContextRelativeTargetObjectPath;
  var generate = StableIdHelper.generate;
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  var getVisualizationsFromPresentationVariant = DataVisualization.getVisualizationsFromPresentationVariant;
  var getDataVisualizationConfiguration = DataVisualization.getDataVisualizationConfiguration;
  /**
   * @classdesc
   * Building block used to create a table based on the metadata provided by OData V4.
   *
   * Usage example:
   * <pre>
   * &lt;macro:Table
   *   id="someID"
   *   type="ResponsiveTable"
   *   collection="collection",
   *   presentation="presentation"
   *   selectionMode="Multi"
   *   requestGroupId="$auto.test"
   *   displayMode="false"
   *   personalization="Column,Sort"
   * /&gt;
   * </pre>
   * @class sap.fe.macros.Table
   * @hideconstructor
   * @private
   * @experimental
   */
  const Table = MacroMetadata.extend("sap.fe.macros.table.Table", {
    /**
     * Name of the macro control.
     */
    name: "Table",
    /**
     * Namespace of the macro control
     */
    namespace: "sap.fe.macros.internal",
    publicNamespace: "sap.fe.macros",
    /**
     * Fragment source of the macro (optional) - if not set, fragment is generated from namespace and name
     */
    fragment: "sap.fe.macros.table.Table",
    /**
     * The metadata describing the macro control.
     */
    metadata: {
      /**
       * Define macro stereotype for documentation
       */
      stereotype: "xmlmacro",
      /**
       * Properties.
       */
      properties: {
        tableDefinition: {
          type: "sap.ui.model.Context"
        },
        metaPath: {
          type: "sap.ui.model.Context",
          isPublic: true
        },
        contextPath: {
          type: "sap.ui.model.Context",
          isPublic: true
        },
        /**
         * metadataContext:collection Mandatory context to a collection (entitySet or 1:n navigation)
         */
        collection: {
          type: "sap.ui.model.Context",
          required: true,
          $kind: ["EntitySet", "NavigationProperty", "Singleton"]
        },
        /**
         * Parent EntitySet for the present collection
         */
        parentEntitySet: {
          type: "sap.ui.model.Context"
        },
        /**
         * ID of the table
         */
        id: {
          type: "string",
          isPublic: true
        },
        _apiId: {
          type: "string"
        },
        /**
         * Used for binding the table to a navigation path. Only the path is used for binding rows.
         */
        navigationPath: {
          type: "string"
        },
        /**
         * Specifies whether the table should be read-only or not.
         */
        readOnly: {
          type: "boolean",
          isPublic: true
        },
        fieldMode: {
          type: "string",
          defaultValue: "",
          allowedValues: ["", "nowrapper"]
        },
        /**
         * Specifies whether the button is hidden when no data has been entered yet in the row (true/false). The default setting is `false`.
         */
        disableAddRowButtonForEmptyData: {
          type: "boolean"
        },
        /**
         * Specifies the full path and function name of a custom validation function.
         */
        customValidationFunction: {
          type: "string"
        },
        /**
         * Specifies whether the table is displayed with condensed layout (true/false). The default setting is `false`.
         */
        useCondensedTableLayout: {
          type: "boolean"
        },
        /**
         * Specifies the possible actions available on the table row (Navigation,null). The default setting is `undefined`
         */
        rowAction: {
          type: "string",
          defaultValue: undefined
        },
        /**
         * Specifies the selection mode (None,Single,Multi,Auto)
         */
        selectionMode: {
          type: "string",
          isPublic: true
        },
        /**
         * The `busy` mode of table
         */
        busy: {
          type: "boolean",
          isPublic: true
        },
        /**
         * Parameter used to show the fullScreen button on the table.
         */
        enableFullScreen: {
          type: "boolean",
          isPublic: true
        },
        /**
         * Specifies header text that is shown in table.
         */
        header: {
          type: "string",
          isPublic: true
        },
        /**
         * Controls if the header text should be shown or not
         */
        headerVisible: {
          type: "boolean",
          isPublic: true
        },
        /**
         * Defines the "aria-level" of the table header
         */
        headerLevel: {
          type: "sap.ui.core.TitleLevel",
          defaultValue: "Auto",
          isPublic: true
        },
        /**
         * Parameter which sets the noDataText for the mdc table
         */
        noDataText: {
          type: "string"
        },
        /**
         * Creation Mode to be passed to the onCreate hanlder. Values: ["Inline", "NewPage"]
         */
        creationMode: {
          type: "string"
        },
        /**
         * Setting to determine if the new row should be created at the end or beginning
         */
        createAtEnd: {
          type: "boolean"
        },
        createOutbound: {
          type: "string"
        },
        createOutboundDetail: {
          type: "string"
        },
        createNewAction: {
          type: "string"
        },
        /**
         * Personalization Mode
         */
        personalization: {
          type: "string|boolean",
          isPublic: true
        },
        isSearchable: {
          type: "boolean",
          isPublic: true
        },
        /**
         * Allows to choose the Table type. Allowed values are `ResponsiveTable` or `GridTable`.
         */
        type: {
          type: "string",
          isPublic: true
        },
        tableType: {
          type: "string"
        },
        /**
         * Enable export to file
         */
        enableExport: {
          type: "boolean",
          isPublic: true
        },
        /**
         * Enable export to file
         */
        enablePaste: {
          type: "boolean",
          isPublic: true
        },
        /**
         * ONLY FOR GRID TABLE: Number of indices which can be selected in a range. If set to 0, the selection limit is disabled, and the Select All checkbox appears instead of the Deselect All button.
         */
        selectionLimit: {
          type: "string"
        },
        /**
         * ONLY FOR RESPONSIVE TABLE: Setting to define the checkbox in the column header: Allowed values are `Default` or `ClearAll`. If set to `Default`, the sap.m.Table control renders the Select All checkbox, otherwise the Deselect All button is rendered.
         */
        multiSelectMode: {
          type: "string"
        },
        /**
         * The control ID of the FilterBar that is used to filter the rows of the table.
         */
        filterBar: {
          type: "string",
          isPublic: true
        },
        /**
         * The control ID of the FilterBar that is used internally to filter the rows of the table.
         */
        filterBarId: {
          type: "string"
        },
        tableDelegate: {
          type: "string"
        },
        enableAutoScroll: {
          type: "boolean"
        },
        visible: {
          type: "string"
        },
        isAlp: {
          type: "boolean",
          defaultValue: false
        },
        variantManagement: {
          type: "string",
          isPublic: true
        },
        columnEditMode: {
          type: "string",
          computed: true
        },
        tabTitle: {
          type: "string",
          defaultValue: ""
        },
        isOptimizedForSmallDevice: {
          type: "boolean"
        },
        enableAutoColumnWidth: {
          type: "boolean"
        },
        dataStateIndicatorFilter: {
          type: "string"
        },
        isCompactType: {
          type: "boolean"
        }
      },
      events: {
        variantSaved: {
          type: "function"
        },
        variantSelected: {
          type: "function"
        },
        /**
         * Event handler for change event
         */
        onChange: {
          type: "function"
        },
        /**
         * Event handler to react when the user chooses a row
         */
        rowPress: {
          type: "function",
          isPublic: true
        },
        /**
         * Event handler to react to the contextChange event of the table.
         */
        onContextChange: {
          type: "function"
        },
        /**
         * Event handler called when the user chooses an option of the segmented button in the ALP View
         */
        onSegmentedButtonPressed: {
          type: "function"
        },
        /**
         * Event handler to react to the stateChange event of the table.
         */
        stateChange: {
          type: "function"
        },
        /**
         * Event handler to react when the table selection changes
         */
        selectionChange: {
          type: "function",
          isPublic: true
        }
      },
      aggregations: {
        actions: {
          type: "sap.fe.macros.internal.table.Action | sap.fe.macros.internal.table.ActionGroup",
          isPublic: true
        },
        columns: {
          type: "sap.fe.macros.internal.table.Column",
          isPublic: true
        }
      }
    },
    create: function (oProps, oControlConfiguration, mSettings, oAggregations) {
      let oTableDefinition;
      const oContextObjectPath = getInvolvedDataModelObjects(oProps.metaPath, oProps.contextPath);
      if (!oProps.tableDefinition) {
        const initialConverterContext = this.getConverterContext(oContextObjectPath, oProps.contextPath, mSettings);
        const sVisualizationPath = this._getVisualizationPath(oContextObjectPath, initialConverterContext);
        const sPresentationPath = this._getPresentationPath(oContextObjectPath);

        //Check if we have ActionGroup and add nested actions
        const oExtraActions = this._buildActions(oAggregations.actions);
        const oExtraColumns = this.parseAggregation(oAggregations.columns, function (childColumn, columnChildIdx) {
          var _childColumn$children;
          const columnKey = childColumn.getAttribute("key") || "InlineXMLColumn_" + columnChildIdx;
          oAggregations[columnKey] = childColumn;
          return {
            // Defaults are to be defined in Table.ts
            key: columnKey,
            type: "Slot",
            width: childColumn.getAttribute("width"),
            importance: childColumn.getAttribute("importance"),
            horizontalAlign: childColumn.getAttribute("horizontalAlign"),
            availability: childColumn.getAttribute("availability"),
            header: childColumn.getAttribute("header"),
            template: ((_childColumn$children = childColumn.children[0]) === null || _childColumn$children === void 0 ? void 0 : _childColumn$children.outerHTML) || "",
            properties: childColumn.getAttribute("properties") ? childColumn.getAttribute("properties").split(",") : undefined,
            position: {
              placement: childColumn.getAttribute("positionPlacement"),
              anchor: childColumn.getAttribute("positionAnchor")
            }
          };
        });
        const oExtraParams = {};
        let mTableSettings = {
          enableExport: oProps.enableExport,
          enableFullScreen: oProps.enableFullScreen,
          enablePaste: oProps.enablePaste,
          selectionMode: oProps.selectionMode,
          type: oProps.type
        };
        //removes undefined values from mTableSettings
        mTableSettings = JSON.parse(JSON.stringify(mTableSettings));
        oExtraParams[sVisualizationPath] = {
          actions: oExtraActions,
          columns: oExtraColumns,
          tableSettings: mTableSettings
        };
        const oConverterContext = this.getConverterContext(oContextObjectPath, oProps.contextPath, mSettings, oExtraParams);
        const oVisualizationDefinition = getDataVisualizationConfiguration(sVisualizationPath, oProps.useCondensedLayout, oConverterContext, undefined, undefined, sPresentationPath, true);
        oTableDefinition = oVisualizationDefinition.visualizations[0];
        oProps.tableDefinition = this.createBindingContext(oTableDefinition, mSettings);
      } else {
        oTableDefinition = oProps.tableDefinition.getObject();
      }
      oTableDefinition.path = "{_pageModel>" + oProps.tableDefinition.getPath() + "}";
      // public properties processed by converter context
      this.setDefaultValue(oProps, "selectionMode", oTableDefinition.annotation.selectionMode, true);
      this.setDefaultValue(oProps, "enableFullScreen", oTableDefinition.control.enableFullScreen, true);
      this.setDefaultValue(oProps, "enableExport", oTableDefinition.control.enableExport, true);
      this.setDefaultValue(oProps, "enablePaste", oTableDefinition.annotation.standardActions.actions.paste.enabled, true);
      this.setDefaultValue(oProps, "updatablePropertyPath", oTableDefinition.annotation.standardActions.updatablePropertyPath, true);
      this.setDefaultValue(oProps, "type", oTableDefinition.control.type, true);
      this.setDefaultValue(oProps, "useCondensedTableLayout", oTableDefinition.control.useCondensedTableLayout);
      this.setDefaultValue(oProps, "disableAddRowButtonForEmptyData", oTableDefinition.control.disableAddRowButtonForEmptyData);
      this.setDefaultValue(oProps, "customValidationFunction", oTableDefinition.control.customValidationFunction);
      this.setDefaultValue(oProps, "headerVisible", oTableDefinition.control.headerVisible);
      this.setDefaultValue(oProps, "searchable", oTableDefinition.annotation.searchable);
      this.setDefaultValue(oProps, "showRowCount", oTableDefinition.control.showRowCount);
      this.setDefaultValue(oProps, "inlineCreationRowCount", oTableDefinition.control.inlineCreationRowCount);
      this.setDefaultValue(oProps, "header", oTableDefinition.annotation.title);
      this.setDefaultValue(oProps, "selectionLimit", oTableDefinition.control.selectionLimit);
      this.setDefaultValue(oProps, "isCompactType", oTableDefinition.control.isCompactType);
      this.setDefaultValue(oProps, "inlineCreationRowsHiddenInEditMode", oTableDefinition.annotation.inlineCreationRowsHiddenInEditMode);
      if (oProps.id) {
        // The given ID shall be assigned to the TableAPI and not to the MDC Table
        oProps._apiId = oProps.id;
        oProps.id = this.getContentId(oProps.id);
      } else {
        // We generate the ID. Due to compatibility reasons we keep it on the MDC Table but provide assign
        // the ID with a ::Table suffix to the TableAPI
        this.setDefaultValue(oProps, "id", oTableDefinition.annotation.id);
        oProps._apiId = oTableDefinition.annotation.id + "::Table";
      }
      this.setDefaultValue(oProps, "creationMode", oTableDefinition.annotation.create.mode);
      this.setDefaultValue(oProps, "createAtEnd", oTableDefinition.annotation.create.append);
      this.setDefaultValue(oProps, "createOutbound", oTableDefinition.annotation.create.outbound);
      this.setDefaultValue(oProps, "createNewAction", oTableDefinition.annotation.create.newAction);
      this.setDefaultValue(oProps, "createOutboundDetail", oTableDefinition.annotation.create.outboundDetail);
      this.setDefaultValue(oProps, "personalization", oTableDefinition.annotation.p13nMode);
      this.setDefaultValue(oProps, "variantManagement", oTableDefinition.annotation.variantManagement);
      this.setDefaultValue(oProps, "enableAutoColumnWidth", true);
      this.setDefaultValue(oProps, "dataStateIndicatorFilter", oTableDefinition.control.dataStateIndicatorFilter);
      this.setDefaultValue(oProps, "isOptimizedForSmallDevice", CommonUtils.isSmallDevice());
      // Special code for readOnly
      // readonly = false -> Force editable
      // readonly = true -> Force display mode
      // readonly = undefined -> Bound to edit flow

      switch (oProps.readOnly) {
        case "false":
          oProps.readOnly = false;
          break;
        case "true":
          oProps.readOnly = true;
          break;
        default:
      }
      switch (oProps.enableAutoColumnWidth) {
        case "false":
          oProps.enableAutoColumnWidth = false;
          break;
        case "true":
          oProps.enableAutoColumnWidth = true;
          break;
        default:
      }
      if (oProps.readOnly === undefined && oTableDefinition.annotation.displayMode === true) {
        oProps.readOnly = true;
      }
      if (oProps.rowPress) {
        oProps.rowAction = "Navigation";
      }
      this.setDefaultValue(oProps, "rowPress", oTableDefinition.annotation.row.press);
      this.setDefaultValue(oProps, "rowAction", oTableDefinition.annotation.row.action);
      if (oProps.personalization === "false") {
        oProps.personalization = undefined;
      } else if (oProps.personalization === "true") {
        oProps.personalization = "Sort,Column,Filter";
      }
      switch (oProps.personalization) {
        case "false":
          oProps.personalization = undefined;
          break;
        case "true":
          oProps.personalization = "Sort,Column,Filter";
          break;
        default:
      }
      if (oProps.isSearchable === "false") {
        oProps.searchable = false;
      } else {
        oProps.searchable = oTableDefinition.annotation.searchable;
      }
      let useBasicSearch = false;

      // Note for the 'filterBar' property:
      // 1. ID relative to the view of the Table.
      // 2. Absolute ID.
      // 3. ID would be considered in association to TableAPI's ID.
      if (!oProps.filterBar && !oProps.filterBarId && oProps.searchable) {
        // filterBar: Public property for building blocks
        // filterBarId: Only used as Internal private property for FE templates
        oProps.filterBarId = generate([oProps.id, "StandardAction", "BasicSearch"]);
        useBasicSearch = true;
      }
      // Internal properties
      oProps.useBasicSearch = useBasicSearch;
      oProps.tableType = oProps.type;
      oProps.showCreate = oTableDefinition.annotation.standardActions.actions.create.visible || true;
      oProps.autoBindOnInit = oTableDefinition.annotation.autoBindOnInit;

      // Internal that I want to remove in the end
      oProps.navigationPath = oTableDefinition.annotation.navigationPath; // oTableDefinition.annotation.collection; //DataModelPathHelper.getContextRelativeTargetObjectPath(oContextObjectPath); //
      if (oTableDefinition.annotation.collection.startsWith("/") && oContextObjectPath.startingEntitySet._type === "Singleton") {
        oTableDefinition.annotation.collection = oProps.navigationPath;
      }
      oProps.parentEntitySet = mSettings.models.metaModel.createBindingContext("/" + (oContextObjectPath.contextLocation.targetEntitySet ? oContextObjectPath.contextLocation.targetEntitySet.name : oContextObjectPath.startingEntitySet.name));
      oProps.collection = mSettings.models.metaModel.createBindingContext(oTableDefinition.annotation.collection);
      switch (oProps.readOnly) {
        case true:
          oProps.columnEditMode = "Display";
          break;
        case false:
          oProps.columnEditMode = "Editable";
          break;
        default:
          oProps.columnEditMode = undefined;
      }
      // Regarding the remaining ones that I think we could review
      // selectedContextsModel -> potentially hardcoded or internal only
      // onContextChange -> Autoscroll ... might need revision
      // onChange -> Just proxied down to the Field may need to see if needed or not
      // variantSelected / variantSaved -> Variant Management standard helpers ?
      // tableDelegate  -> used externally for ALP ... might need to see if relevant still
      // onSegmentedButtonPressed -> ALP specific, should be a dedicated control for the contentViewSwitcher
      // visible -> related to this ALP contentViewSwitcher... maybe an outer control would make more sense ?

      oProps.headerBindingExpression = buildExpressionForHeaderVisible(oProps);
      return oProps;
    },
    /**
     * Build actions and action groups for table visualisation.
     *
     * @param oActions XML node corresponding to actions
     * @returns Prepared actions
     */
    _buildActions: function (oActions) {
      const oExtraActions = {};
      if (oActions && oActions.children.length > 0) {
        const actions = Array.prototype.slice.apply(oActions.children);
        let actionIdx = 0;
        actions.forEach(function (act) {
          actionIdx++;
          let menuActions = [];
          if (act.children.length && act.localName === "ActionGroup" && act.namespaceURI === "sap.fe.macros") {
            const actionsToAdd = Array.prototype.slice.apply(act.children);
            actionsToAdd.forEach(function (actToAdd) {
              const actionKeyAdd = actToAdd.getAttribute("key") || "InlineXMLAction_" + actionIdx;
              const curOutObject = {
                key: actionKeyAdd,
                text: actToAdd.getAttribute("text"),
                __noWrap: true,
                press: actToAdd.getAttribute("press"),
                requiresSelection: actToAdd.getAttribute("requiresSelection") === "true",
                enabled: actToAdd.getAttribute("enabled") === null ? true : actToAdd.getAttribute("enabled")
              };
              oExtraActions[curOutObject.key] = curOutObject;
              actionIdx++;
            });
            menuActions = Object.values(oExtraActions).slice(-act.children.length).map(function (menuItem) {
              return menuItem.key;
            });
          }
          const actionKey = act.getAttribute("key") || "InlineXMLAction_" + actionIdx;
          const actObject = {
            key: actionKey,
            text: act.getAttribute("text"),
            position: {
              placement: act.getAttribute("placement"),
              anchor: act.getAttribute("anchor")
            },
            __noWrap: true,
            press: act.getAttribute("press"),
            requiresSelection: act.getAttribute("requiresSelection") === "true",
            enabled: act.getAttribute("enabled") === null ? true : act.getAttribute("enabled"),
            menu: menuActions.length ? menuActions : null
          };
          oExtraActions[actObject.key] = actObject;
        });
      }
      return oExtraActions;
    },
    /**
     * Returns the annotation path pointing to the visualization annotation (LineItem).
     *
     * @param contextObjectPath The datamodel object path for the table
     * @param converterContext The converter context
     * @returns The annotation path
     */
    _getVisualizationPath: function (contextObjectPath, converterContext) {
      const metaPath = getContextRelativeTargetObjectPath(contextObjectPath);
      if (contextObjectPath.targetObject.term === "com.sap.vocabularies.UI.v1.LineItem") {
        return metaPath; // MetaPath is already pointing to a LineItem
      }
      //Need to switch to the context related the PV or SPV
      const resolvedTarget = converterContext.getEntityTypeAnnotation(metaPath);
      let visualizations = [];
      switch (contextObjectPath.targetObject.term) {
        case "com.sap.vocabularies.UI.v1.SelectionPresentationVariant":
          if (contextObjectPath.targetObject.PresentationVariant) {
            visualizations = getVisualizationsFromPresentationVariant(contextObjectPath.targetObject.PresentationVariant, metaPath, resolvedTarget.converterContext, true);
          }
          break;
        case "com.sap.vocabularies.UI.v1.PresentationVariant":
          visualizations = getVisualizationsFromPresentationVariant(contextObjectPath.targetObject, metaPath, resolvedTarget.converterContext, true);
          break;
        default:
          Log.error(`Bad metapath parameter for table : ${contextObjectPath.targetObject.term}`);
      }
      const lineItemViz = visualizations.find(viz => {
        return viz.visualization.term === "com.sap.vocabularies.UI.v1.LineItem";
      });
      if (lineItemViz) {
        return lineItemViz.annotationPath;
      } else {
        return metaPath; // Fallback
      }
    },

    _getPresentationPath: function (oContextObjectPath) {
      let presentationPath;
      switch (oContextObjectPath.targetObject.term) {
        case "com.sap.vocabularies.UI.v1.PresentationVariant":
          presentationPath = getContextRelativeTargetObjectPath(oContextObjectPath);
          break;
        case "com.sap.vocabularies.UI.v1.SelectionPresentationVariant":
          presentationPath = getContextRelativeTargetObjectPath(oContextObjectPath) + "/PresentationVariant";
          break;
        default:
          presentationPath = null;
      }
      return presentationPath;
    }
  });
  return Table;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/Table.metadata", ["sap/base/Log","sap/fe/core/CommonUtils","sap/fe/core/converters/controls/Common/DataVisualization","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/StableIdHelper","sap/fe/core/templating/DataModelPathHelper","sap/fe/macros/internal/helpers/TableTemplating","sap/fe/macros/MacroMetadata"],function(e,t,a,n,i,o,r,l){"use strict";var s=r.buildExpressionForHeaderVisible;var u=o.getContextRelativeTargetObjectPath;var c=i.generate;var d=n.getInvolvedDataModelObjects;var p=a.getVisualizationsFromPresentationVariant;var b=a.getDataVisualizationConfiguration;const f=l.extend("sap.fe.macros.table.Table",{name:"Table",namespace:"sap.fe.macros.internal",publicNamespace:"sap.fe.macros",fragment:"sap.fe.macros.table.Table",metadata:{stereotype:"xmlmacro",properties:{tableDefinition:{type:"sap.ui.model.Context"},metaPath:{type:"sap.ui.model.Context",isPublic:true},contextPath:{type:"sap.ui.model.Context",isPublic:true},collection:{type:"sap.ui.model.Context",required:true,$kind:["EntitySet","NavigationProperty","Singleton"]},parentEntitySet:{type:"sap.ui.model.Context"},id:{type:"string",isPublic:true},_apiId:{type:"string"},navigationPath:{type:"string"},readOnly:{type:"boolean",isPublic:true},fieldMode:{type:"string",defaultValue:"",allowedValues:["","nowrapper"]},disableAddRowButtonForEmptyData:{type:"boolean"},customValidationFunction:{type:"string"},useCondensedTableLayout:{type:"boolean"},rowAction:{type:"string",defaultValue:undefined},selectionMode:{type:"string",isPublic:true},busy:{type:"boolean",isPublic:true},enableFullScreen:{type:"boolean",isPublic:true},header:{type:"string",isPublic:true},headerVisible:{type:"boolean",isPublic:true},headerLevel:{type:"sap.ui.core.TitleLevel",defaultValue:"Auto",isPublic:true},noDataText:{type:"string"},creationMode:{type:"string"},createAtEnd:{type:"boolean"},createOutbound:{type:"string"},createOutboundDetail:{type:"string"},createNewAction:{type:"string"},personalization:{type:"string|boolean",isPublic:true},isSearchable:{type:"boolean",isPublic:true},type:{type:"string",isPublic:true},tableType:{type:"string"},enableExport:{type:"boolean",isPublic:true},enablePaste:{type:"boolean",isPublic:true},selectionLimit:{type:"string"},multiSelectMode:{type:"string"},filterBar:{type:"string",isPublic:true},filterBarId:{type:"string"},tableDelegate:{type:"string"},enableAutoScroll:{type:"boolean"},visible:{type:"string"},isAlp:{type:"boolean",defaultValue:false},variantManagement:{type:"string",isPublic:true},columnEditMode:{type:"string",computed:true},tabTitle:{type:"string",defaultValue:""},isOptimizedForSmallDevice:{type:"boolean"},enableAutoColumnWidth:{type:"boolean"},dataStateIndicatorFilter:{type:"string"},isCompactType:{type:"boolean"}},events:{variantSaved:{type:"function"},variantSelected:{type:"function"},onChange:{type:"function"},rowPress:{type:"function",isPublic:true},onContextChange:{type:"function"},onSegmentedButtonPressed:{type:"function"},stateChange:{type:"function"},selectionChange:{type:"function",isPublic:true}},aggregations:{actions:{type:"sap.fe.macros.internal.table.Action | sap.fe.macros.internal.table.ActionGroup",isPublic:true},columns:{type:"sap.fe.macros.internal.table.Column",isPublic:true}}},create:function(e,a,n,i){let o;const r=d(e.metaPath,e.contextPath);if(!e.tableDefinition){const t=this.getConverterContext(r,e.contextPath,n);const a=this._getVisualizationPath(r,t);const l=this._getPresentationPath(r);const s=this._buildActions(i.actions);const u=this.parseAggregation(i.columns,function(e,t){var a;const n=e.getAttribute("key")||"InlineXMLColumn_"+t;i[n]=e;return{key:n,type:"Slot",width:e.getAttribute("width"),importance:e.getAttribute("importance"),horizontalAlign:e.getAttribute("horizontalAlign"),availability:e.getAttribute("availability"),header:e.getAttribute("header"),template:((a=e.children[0])===null||a===void 0?void 0:a.outerHTML)||"",properties:e.getAttribute("properties")?e.getAttribute("properties").split(","):undefined,position:{placement:e.getAttribute("positionPlacement"),anchor:e.getAttribute("positionAnchor")}}});const c={};let d={enableExport:e.enableExport,enableFullScreen:e.enableFullScreen,enablePaste:e.enablePaste,selectionMode:e.selectionMode,type:e.type};d=JSON.parse(JSON.stringify(d));c[a]={actions:s,columns:u,tableSettings:d};const p=this.getConverterContext(r,e.contextPath,n,c);const f=b(a,e.useCondensedLayout,p,undefined,undefined,l,true);o=f.visualizations[0];e.tableDefinition=this.createBindingContext(o,n)}else{o=e.tableDefinition.getObject()}o.path="{_pageModel>"+e.tableDefinition.getPath()+"}";this.setDefaultValue(e,"selectionMode",o.annotation.selectionMode,true);this.setDefaultValue(e,"enableFullScreen",o.control.enableFullScreen,true);this.setDefaultValue(e,"enableExport",o.control.enableExport,true);this.setDefaultValue(e,"enablePaste",o.annotation.standardActions.actions.paste.enabled,true);this.setDefaultValue(e,"updatablePropertyPath",o.annotation.standardActions.updatablePropertyPath,true);this.setDefaultValue(e,"type",o.control.type,true);this.setDefaultValue(e,"useCondensedTableLayout",o.control.useCondensedTableLayout);this.setDefaultValue(e,"disableAddRowButtonForEmptyData",o.control.disableAddRowButtonForEmptyData);this.setDefaultValue(e,"customValidationFunction",o.control.customValidationFunction);this.setDefaultValue(e,"headerVisible",o.control.headerVisible);this.setDefaultValue(e,"searchable",o.annotation.searchable);this.setDefaultValue(e,"showRowCount",o.control.showRowCount);this.setDefaultValue(e,"inlineCreationRowCount",o.control.inlineCreationRowCount);this.setDefaultValue(e,"header",o.annotation.title);this.setDefaultValue(e,"selectionLimit",o.control.selectionLimit);this.setDefaultValue(e,"isCompactType",o.control.isCompactType);this.setDefaultValue(e,"inlineCreationRowsHiddenInEditMode",o.annotation.inlineCreationRowsHiddenInEditMode);if(e.id){e._apiId=e.id;e.id=this.getContentId(e.id)}else{this.setDefaultValue(e,"id",o.annotation.id);e._apiId=o.annotation.id+"::Table"}this.setDefaultValue(e,"creationMode",o.annotation.create.mode);this.setDefaultValue(e,"createAtEnd",o.annotation.create.append);this.setDefaultValue(e,"createOutbound",o.annotation.create.outbound);this.setDefaultValue(e,"createNewAction",o.annotation.create.newAction);this.setDefaultValue(e,"createOutboundDetail",o.annotation.create.outboundDetail);this.setDefaultValue(e,"personalization",o.annotation.p13nMode);this.setDefaultValue(e,"variantManagement",o.annotation.variantManagement);this.setDefaultValue(e,"enableAutoColumnWidth",true);this.setDefaultValue(e,"dataStateIndicatorFilter",o.control.dataStateIndicatorFilter);this.setDefaultValue(e,"isOptimizedForSmallDevice",t.isSmallDevice());switch(e.readOnly){case"false":e.readOnly=false;break;case"true":e.readOnly=true;break;default:}switch(e.enableAutoColumnWidth){case"false":e.enableAutoColumnWidth=false;break;case"true":e.enableAutoColumnWidth=true;break;default:}if(e.readOnly===undefined&&o.annotation.displayMode===true){e.readOnly=true}if(e.rowPress){e.rowAction="Navigation"}this.setDefaultValue(e,"rowPress",o.annotation.row.press);this.setDefaultValue(e,"rowAction",o.annotation.row.action);if(e.personalization==="false"){e.personalization=undefined}else if(e.personalization==="true"){e.personalization="Sort,Column,Filter"}switch(e.personalization){case"false":e.personalization=undefined;break;case"true":e.personalization="Sort,Column,Filter";break;default:}if(e.isSearchable==="false"){e.searchable=false}else{e.searchable=o.annotation.searchable}let l=false;if(!e.filterBar&&!e.filterBarId&&e.searchable){e.filterBarId=c([e.id,"StandardAction","BasicSearch"]);l=true}e.useBasicSearch=l;e.tableType=e.type;e.showCreate=o.annotation.standardActions.actions.create.visible||true;e.autoBindOnInit=o.annotation.autoBindOnInit;e.navigationPath=o.annotation.navigationPath;if(o.annotation.collection.startsWith("/")&&r.startingEntitySet._type==="Singleton"){o.annotation.collection=e.navigationPath}e.parentEntitySet=n.models.metaModel.createBindingContext("/"+(r.contextLocation.targetEntitySet?r.contextLocation.targetEntitySet.name:r.startingEntitySet.name));e.collection=n.models.metaModel.createBindingContext(o.annotation.collection);switch(e.readOnly){case true:e.columnEditMode="Display";break;case false:e.columnEditMode="Editable";break;default:e.columnEditMode=undefined}e.headerBindingExpression=s(e);return e},_buildActions:function(e){const t={};if(e&&e.children.length>0){const a=Array.prototype.slice.apply(e.children);let n=0;a.forEach(function(e){n++;let a=[];if(e.children.length&&e.localName==="ActionGroup"&&e.namespaceURI==="sap.fe.macros"){const i=Array.prototype.slice.apply(e.children);i.forEach(function(e){const a=e.getAttribute("key")||"InlineXMLAction_"+n;const i={key:a,text:e.getAttribute("text"),__noWrap:true,press:e.getAttribute("press"),requiresSelection:e.getAttribute("requiresSelection")==="true",enabled:e.getAttribute("enabled")===null?true:e.getAttribute("enabled")};t[i.key]=i;n++});a=Object.values(t).slice(-e.children.length).map(function(e){return e.key})}const i=e.getAttribute("key")||"InlineXMLAction_"+n;const o={key:i,text:e.getAttribute("text"),position:{placement:e.getAttribute("placement"),anchor:e.getAttribute("anchor")},__noWrap:true,press:e.getAttribute("press"),requiresSelection:e.getAttribute("requiresSelection")==="true",enabled:e.getAttribute("enabled")===null?true:e.getAttribute("enabled"),menu:a.length?a:null};t[o.key]=o})}return t},_getVisualizationPath:function(t,a){const n=u(t);if(t.targetObject.term==="com.sap.vocabularies.UI.v1.LineItem"){return n}const i=a.getEntityTypeAnnotation(n);let o=[];switch(t.targetObject.term){case"com.sap.vocabularies.UI.v1.SelectionPresentationVariant":if(t.targetObject.PresentationVariant){o=p(t.targetObject.PresentationVariant,n,i.converterContext,true)}break;case"com.sap.vocabularies.UI.v1.PresentationVariant":o=p(t.targetObject,n,i.converterContext,true);break;default:e.error(`Bad metapath parameter for table : ${t.targetObject.term}`)}const r=o.find(e=>e.visualization.term==="com.sap.vocabularies.UI.v1.LineItem");if(r){return r.annotationPath}else{return n}},_getPresentationPath:function(e){let t;switch(e.targetObject.term){case"com.sap.vocabularies.UI.v1.PresentationVariant":t=u(e);break;case"com.sap.vocabularies.UI.v1.SelectionPresentationVariant":t=u(e)+"/PresentationVariant";break;default:t=null}return t}});return f},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/TableAPI-dbg", ["sap/base/Log", "sap/fe/core/CommonUtils", "sap/fe/core/controllerextensions/routing/NavigationReason", "sap/fe/core/converters/ManifestSettings", "sap/fe/core/helpers/ClassSupport", "sap/fe/core/helpers/PasteHelper", "sap/fe/macros/DelegateUtil", "sap/fe/macros/filter/FilterUtils", "sap/fe/macros/ResourceModel", "sap/fe/macros/table/Utils", "sap/m/MessageBox", "sap/ui/core/Core", "sap/ui/core/message/Message", "../MacroAPI"], function (Log, CommonUtils, NavigationReason, ManifestSettings, ClassSupport, PasteHelper, DelegateUtil, FilterUtils, ResourceModel, TableUtils, MessageBox, Core, Message, MacroAPI) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _dec25, _dec26, _dec27, _dec28, _dec29, _dec30, _dec31, _dec32, _dec33, _dec34, _dec35, _dec36, _dec37, _dec38, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23, _descriptor24, _descriptor25, _descriptor26, _descriptor27, _descriptor28, _descriptor29;
  var xmlEventHandler = ClassSupport.xmlEventHandler;
  var property = ClassSupport.property;
  var event = ClassSupport.event;
  var defineUI5Class = ClassSupport.defineUI5Class;
  var aggregation = ClassSupport.aggregation;
  var CreationMode = ManifestSettings.CreationMode;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  /**
   * Building block used to create a table based on the metadata provided by OData V4.
   * <br>
   * Usually, a LineItem or PresentationVariant annotation is expected, but the Table building block can also be used to display an EntitySet.
   *
   *
   * Usage example:
   * <pre>
   * &lt;macro:Table id="MyTable" metaPath="@com.sap.vocabularies.UI.v1.LineItem" /&gt;
   * </pre>
   *
   * @alias sap.fe.macros.Table
   * @public
   */
  let TableAPI = (_dec = defineUI5Class("sap.fe.macros.table.TableAPI"), _dec2 = property({
    type: "string",
    expectedTypes: ["EntitySet", "EntityType", "Singleton", "NavigationProperty"],
    expectedAnnotations: ["com.sap.vocabularies.UI.v1.LineItem", "com.sap.vocabularies.UI.v1.PresentationVariant", "com.sap.vocabularies.UI.v1.SelectionPresentationVariant"]
  }), _dec3 = property({
    type: "sap.ui.model.Context"
  }), _dec4 = property({
    type: "boolean"
  }), _dec5 = property({
    type: "string"
  }), _dec6 = property({
    type: "boolean",
    defaultValue: false
  }), _dec7 = property({
    type: "string",
    defaultValue: "ResponsiveTable"
  }), _dec8 = property({
    type: "boolean",
    defaultValue: true
  }), _dec9 = property({
    type: "boolean",
    defaultValue: false
  }), _dec10 = property({
    type: "boolean",
    defaultValue: false
  }), _dec11 = property({
    type: "string"
  }), _dec12 = property({
    type: "string"
  }), _dec13 = property({
    type: "string"
  }), _dec14 = property({
    type: "boolean",
    defaultValue: true
  }), _dec15 = property({
    type: "boolean",
    defaultValue: false
  }), _dec16 = property({
    type: "boolean",
    defaultValue: true
  }), _dec17 = aggregation({
    type: "sap.fe.macros.table.Action"
  }), _dec18 = aggregation({
    type: "sap.fe.macros.table.Column"
  }), _dec19 = property({
    type: "boolean",
    defaultValue: false
  }), _dec20 = property({
    type: "boolean",
    defaultValue: false
  }), _dec21 = property({
    type: "boolean",
    defaultValue: false
  }), _dec22 = property({
    type: "boolean",
    defaultValue: false
  }), _dec23 = event(), _dec24 = event(), _dec25 = event(), _dec26 = property({
    type: "boolean|string",
    defaultValue: true
  }), _dec27 = property({
    type: "string"
  }), _dec28 = property({
    type: "string"
  }), _dec29 = property({
    type: "boolean",
    defaultValue: true
  }), _dec30 = event(), _dec31 = xmlEventHandler(), _dec32 = xmlEventHandler(), _dec33 = xmlEventHandler(), _dec34 = xmlEventHandler(), _dec35 = xmlEventHandler(), _dec36 = xmlEventHandler(), _dec37 = xmlEventHandler(), _dec38 = xmlEventHandler(), _dec(_class = (_class2 = /*#__PURE__*/function (_MacroAPI) {
    _inheritsLoose(TableAPI, _MacroAPI);
    function TableAPI(mSettings) {
      var _this;
      for (var _len = arguments.length, others = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {
        others[_key - 1] = arguments[_key];
      }
      _this = _MacroAPI.call(this, mSettings, ...others) || this;
      _initializerDefineProperty(_this, "metaPath", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "tableDefinition", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "readOnly", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "id", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "busy", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "type", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "enableExport", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "enablePaste", _descriptor8, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "enableFullScreen", _descriptor9, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "filterBar", _descriptor10, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "selectionMode", _descriptor11, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "header", _descriptor12, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "enableAutoColumnWidth", _descriptor13, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "isOptimizedForSmallDevice", _descriptor14, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "headerVisible", _descriptor15, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "actions", _descriptor16, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "columns", _descriptor17, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "dataInitialized", _descriptor18, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "bindingSuspended", _descriptor19, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "outDatedBinding", _descriptor20, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "pendingRequest", _descriptor21, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "rowPress", _descriptor22, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "stateChange", _descriptor23, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "internalDataRequested", _descriptor24, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "personalization", _descriptor25, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "variantManagement", _descriptor26, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "menu", _descriptor27, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "isSearchable", _descriptor28, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "selectionChange", _descriptor29, _assertThisInitialized(_this));
      _this.updateFilterBar();
      if (_this.content) {
        _this.content.attachEvent("selectionChange", {}, _this.onTableSelectionChange, _assertThisInitialized(_this));
      }
      return _this;
    }

    /**
     * Defines the relative path of the property in the metamodel, based on the current contextPath.
     *
     * @public
     */
    var _proto = TableAPI.prototype;
    /**
     * Gets contexts from the table that have been selected by the user.
     *
     * @returns Contexts of the rows selected by the user
     * @public
     */
    _proto.getSelectedContexts = function getSelectedContexts() {
      return this.content.getSelectedContexts();
    }

    /**
     * Adds a message to the table.
     *
     * The message applies to the whole table and not to an individual table row.
     *
     * @param [parameters] The parameters to create the message
     * @param parameters.type Message type
     * @param parameters.message Message text
     * @param parameters.description Message description
     * @param parameters.persistent True if the message is persistent
     * @returns The ID of the message
     * @public
     */;
    _proto.addMessage = function addMessage(parameters) {
      const msgManager = this._getMessageManager();
      const oTable = this.content;
      const oMessage = new Message({
        target: oTable.getRowBinding().getResolvedPath(),
        type: parameters.type,
        message: parameters.message,
        processor: oTable.getModel(),
        description: parameters.description,
        persistent: parameters.persistent
      });
      msgManager.addMessages(oMessage);
      return oMessage.getId();
    }

    /**
     * Removes a message from the table.
     *
     * @param id The id of the message
     * @public
     */;
    _proto.removeMessage = function removeMessage(id) {
      const msgManager = this._getMessageManager();
      const messages = msgManager.getMessageModel().getData();
      const result = messages.find(e => e.id === id);
      if (result) {
        msgManager.removeMessages(result);
      }
    };
    _proto._getMessageManager = function _getMessageManager() {
      return sap.ui.getCore().getMessageManager();
    }

    /**
     * An event triggered when the selection in the table changes.
     *
     * @public
     */;
    _proto._getRowBinding = function _getRowBinding() {
      const oTable = this.getContent();
      return oTable.getRowBinding();
    };
    _proto.getCounts = function getCounts() {
      const oTable = this.getContent();
      return TableUtils.getListBindingForCount(oTable, oTable.getBindingContext(), {
        batchGroupId: !this.getProperty("bindingSuspended") ? oTable.data("batchGroupId") : "$auto",
        additionalFilters: TableUtils.getHiddenFilters(oTable)
      }).then(iValue => {
        return TableUtils.getCountFormatted(iValue);
      }).catch(() => {
        return "0";
      });
    };
    _proto.onTableRowPress = function onTableRowPress(oEvent, oController, oContext, mParameters) {
      // prevent navigation to an empty row
      if (oContext && oContext.isInactive() && oContext.isTransient()) {
        return false;
      }
      // In the case of an analytical table, if we're trying to navigate to a context corresponding to a visual group or grand total
      // --> Cancel navigation
      if (this.getTableDefinition().enableAnalytics && oContext && oContext.isA("sap.ui.model.odata.v4.Context") && typeof oContext.getProperty("@$ui5.node.isExpanded") === "boolean") {
        return false;
      } else {
        const navigationParameters = Object.assign({}, mParameters, {
          reason: NavigationReason.RowPress
        });
        oController._routing.navigateForwardToContext(oContext, navigationParameters);
      }
    };
    _proto.onInternalDataReceived = function onInternalDataReceived(oEvent) {
      if (oEvent.getParameter("error")) {
        this.getController().messageHandler.showMessageDialog();
      }
    };
    _proto.onInternalDataRequested = function onInternalDataRequested(oEvent) {
      this.setProperty("dataInitialized", true);
      this.fireEvent("internalDataRequested", oEvent.getParameters());
    };
    _proto.onPaste = function onPaste(oEvent, oController) {
      // If paste is disable or if we're not in edit mode, we can't paste anything
      if (!this.tableDefinition.control.enablePaste || !this.getModel("ui").getProperty("/isEditable")) {
        return;
      }
      const aRawPastedData = oEvent.getParameter("data"),
        oTable = oEvent.getSource();
      if (oTable.getEnablePaste() === true) {
        PasteHelper.pasteData(aRawPastedData, oTable, oController);
      } else {
        const oResourceModel = sap.ui.getCore().getLibraryResourceBundle("sap.fe.core");
        MessageBox.error(oResourceModel.getText("T_OP_CONTROLLER_SAPFE_PASTE_DISABLED_MESSAGE"), {
          title: oResourceModel.getText("C_COMMON_SAPFE_ERROR")
        });
      }
    }

    // This event will allow us to intercept the export before is triggered to cover specific cases
    // that couldn't be addressed on the propertyInfos for each column.
    // e.g. Fixed Target Value for the datapoints
    ;
    _proto.onBeforeExport = function onBeforeExport(exportEvent) {
      var _exportEvent$getParam;
      const isSplitMode = exportEvent.getParameter("userExportSettings").splitCells,
        tableController = exportEvent.getSource(),
        exportColumns = (_exportEvent$getParam = exportEvent.getParameter("exportSettings").workbook) === null || _exportEvent$getParam === void 0 ? void 0 : _exportEvent$getParam.columns,
        tableColumns = this.tableDefinition.columns;
      TableAPI.updateExportSettings(exportColumns, tableColumns, tableController, isSplitMode);
    }

    /**
     * Handles the MDC DataStateIndicator plugin to display messageStrip on a table.
     *
     * @param oMessage
     * @param oTable
     * @name dataStateFilter
     * @returns Whether to render the messageStrip visible
     */;
    TableAPI.dataStateIndicatorFilter = function dataStateIndicatorFilter(oMessage, oTable) {
      var _oTable$getBindingCon;
      const sTableContextBindingPath = (_oTable$getBindingCon = oTable.getBindingContext()) === null || _oTable$getBindingCon === void 0 ? void 0 : _oTable$getBindingCon.getPath();
      const sTableRowBinding = (sTableContextBindingPath ? `${sTableContextBindingPath}/` : "") + oTable.getRowBinding().getPath();
      return sTableRowBinding === oMessage.getTarget() ? true : false;
    }

    /**
     * This event handles the DataState of the DataStateIndicator plugin from MDC on a table.
     * It's fired when new error messages are sent from the backend to update row highlighting.
     *
     * @name onDataStateChange
     * @param oEvent Event object
     */;
    _proto.onDataStateChange = function onDataStateChange(oEvent) {
      const oDataStateIndicator = oEvent.getSource();
      const aFilteredMessages = oEvent.getParameter("filteredMessages");
      if (aFilteredMessages) {
        const oInternalModel = oDataStateIndicator.getModel("internal");
        oInternalModel.setProperty("filteredMessages", aFilteredMessages, oDataStateIndicator.getBindingContext("internal"));
      }
    }

    /**
     * Updates the columns to be exported of a table.
     *
     * @param exportColumns The columns to be exported
     * @param columns The columns from the table converter
     * @param tableController The table controller
     * @param isSplitMode Defines if the export has been launched using split mode
     * @returns The updated columns to be exported
     */;
    TableAPI.updateExportSettings = function updateExportSettings(exportColumns, columns, tableController, isSplitMode) {
      for (let index = exportColumns.length - 1; index >= 0; index--) {
        const exportColumn = exportColumns[index];
        exportColumn.label = DelegateUtil.getLocalizedText(exportColumn.label, tableController);
        //translate boolean values
        if (exportColumn.type === "Boolean") {
          exportColumn.falseValue = ResourceModel.getText("no");
          exportColumn.trueValue = ResourceModel.getText("yes");
        }
        const targetValueColumn = columns === null || columns === void 0 ? void 0 : columns.find(column => {
          if (isSplitMode) {
            return this._columnWithTargetValueToBeAdded(column, exportColumn);
          } else {
            return false;
          }
        });
        if (targetValueColumn) {
          const columnToBeAdded = {
            label: ResourceModel.getText("TargetValue"),
            property: Array.isArray(exportColumn.property) ? exportColumn.property : [exportColumn.property],
            template: targetValueColumn.exportDataPointTargetValue
          };
          exportColumns.splice(index + 1, 0, columnToBeAdded);
        }
      }
      return exportColumns;
    }

    /**
     * Defines if a column that is to be exported and contains a DataPoint with a fixed target value needs to be added.
     *
     * @param column The column from the annotations column
     * @param columnExport The column to be exported
     * @returns `true` if the referenced column has defined a targetValue for the dataPoint, false else
     */;
    TableAPI._columnWithTargetValueToBeAdded = function _columnWithTargetValueToBeAdded(column, columnExport) {
      var _column$propertyInfos;
      let columnNeedsToBeAdded = false;
      if (column.exportDataPointTargetValue && ((_column$propertyInfos = column.propertyInfos) === null || _column$propertyInfos === void 0 ? void 0 : _column$propertyInfos.length) === 1) {
        //Add TargetValue column when exporting on split mode
        if (column.relativePath === columnExport.property || columnExport.property[0] === column.propertyInfos[0] || columnExport.property.includes(column.relativePath) || columnExport.property.includes(column.name)) {
          // part of a FieldGroup or from a lineItem or from a column on the entitySet
          delete columnExport.template;
          columnNeedsToBeAdded = true;
        }
      }
      return columnNeedsToBeAdded;
    };
    _proto.resumeBinding = function resumeBinding(bRequestIfNotInitialized) {
      this.setProperty("bindingSuspended", false);
      if (bRequestIfNotInitialized && !this.getDataInitialized() || this.getProperty("outDatedBinding")) {
        var _getContent;
        this.setProperty("outDatedBinding", false);
        (_getContent = this.getContent()) === null || _getContent === void 0 ? void 0 : _getContent.rebind();
      }
    };
    _proto.refreshNotApplicableFields = function refreshNotApplicableFields(oFilterControl) {
      const oTable = this.getContent();
      return FilterUtils.getNotApplicableFilters(oFilterControl, oTable);
    };
    _proto.suspendBinding = function suspendBinding() {
      this.setProperty("bindingSuspended", true);
    };
    _proto.invalidateContent = function invalidateContent() {
      this.setProperty("dataInitialized", false);
      this.setProperty("outDatedBinding", false);
    };
    _proto.onMassEditButtonPressed = function onMassEditButtonPressed(oEvent, pageController) {
      const oTable = this.content;
      if (pageController && pageController.massEdit) {
        pageController.massEdit.openMassEditDialog(oTable);
      } else {
        Log.warning("The Controller is not enhanced with Mass Edit functionality");
      }
    };
    _proto.onTableSelectionChange = function onTableSelectionChange(oEvent) {
      this.fireEvent("selectionChange", oEvent.getParameters());
    }

    /**
     * Expose the internal table definition for external usage in delegate.
     *
     * @returns The tableDefinition
     */;
    _proto.getTableDefinition = function getTableDefinition() {
      return this.tableDefinition;
    }

    /**
     * connect the filter to the tableAPI if required
     *
     * @private
     * @alias sap.fe.macros.TableAPI
     */;
    _proto.updateFilterBar = function updateFilterBar() {
      const table = this.getContent();
      const filterBarRefId = this.getFilterBar();
      if (table && filterBarRefId && table.getFilter() !== filterBarRefId) {
        this._setFilterBar(filterBarRefId);
      }
    }

    /**
     * Sets the filter depending on the type of filterBar.
     *
     * @param filterBarRefId Id of the filter bar
     * @private
     * @alias sap.fe.macros.TableAPI
     */;
    _proto._setFilterBar = function _setFilterBar(filterBarRefId) {
      var _CommonUtils$getTarge;
      const table = this.getContent();

      // 'filterBar' property of macro:Table(passed as customData) might be
      // 1. A localId wrt View(FPM explorer example).
      // 2. Absolute Id(this was not supported in older versions).
      // 3. A localId wrt FragmentId(when an XMLComposite or Fragment is independently processed) instead of ViewId.
      //    'filterBar' was supported earlier as an 'association' to the 'mdc:Table' control inside 'macro:Table' in prior versions.
      //    In newer versions 'filterBar' is used like an association to 'macro:TableAPI'.
      //    This means that the Id is relative to 'macro:TableAPI'.
      //    This scenario happens in case of FilterBar and Table in a custom sections in OP of FEV4.

      const tableAPIId = this === null || this === void 0 ? void 0 : this.getId();
      const tableAPILocalId = this.data("tableAPILocalId");
      const potentialfilterBarId = tableAPILocalId && filterBarRefId && tableAPIId && tableAPIId.replace(new RegExp(tableAPILocalId + "$"), filterBarRefId); // 3

      const filterBar = ((_CommonUtils$getTarge = CommonUtils.getTargetView(this)) === null || _CommonUtils$getTarge === void 0 ? void 0 : _CommonUtils$getTarge.byId(filterBarRefId)) || Core.byId(filterBarRefId) || Core.byId(potentialfilterBarId);
      if (filterBar) {
        if (filterBar.isA("sap.fe.macros.filterBar.FilterBarAPI")) {
          table.setFilter(`${filterBar.getId()}-content`);
        } else if (filterBar.isA("sap.ui.mdc.FilterBar")) {
          table.setFilter(filterBar.getId());
        }
      }
    };
    _proto.checkIfColumnExists = function checkIfColumnExists(aFilteredColummns, columnName) {
      return aFilteredColummns.some(function (oColumn) {
        if ((oColumn === null || oColumn === void 0 ? void 0 : oColumn.columnName) === columnName && oColumn !== null && oColumn !== void 0 && oColumn.sColumnNameVisible || (oColumn === null || oColumn === void 0 ? void 0 : oColumn.sTextArrangement) !== undefined && (oColumn === null || oColumn === void 0 ? void 0 : oColumn.sTextArrangement) === columnName) {
          return columnName;
        }
      });
    };
    _proto.getIdentifierColumn = function getIdentifierColumn() {
      const oTable = this.getContent();
      const headerInfoTitlePath = this.getTableDefinition().headerInfoTitle;
      const oMetaModel = oTable && oTable.getModel().getMetaModel(),
        sCurrentEntitySetName = oTable.data("metaPath");
      const aTechnicalKeys = oMetaModel.getObject(`${sCurrentEntitySetName}/$Type/$Key`);
      const aFilteredTechnicalKeys = [];
      if (aTechnicalKeys && aTechnicalKeys.length > 0) {
        aTechnicalKeys.forEach(function (technicalKey) {
          if (technicalKey !== "IsActiveEntity") {
            aFilteredTechnicalKeys.push(technicalKey);
          }
        });
      }
      const semanticKeyColumns = this.getTableDefinition().semanticKeys;
      const aVisibleColumns = [];
      const aFilteredColummns = [];
      const aTableColumns = oTable.getColumns();
      aTableColumns.forEach(function (oColumn) {
        const column = oColumn === null || oColumn === void 0 ? void 0 : oColumn.getDataProperty();
        aVisibleColumns.push(column);
      });
      aVisibleColumns.forEach(function (oColumn) {
        var _oTextArrangement$Co, _oTextArrangement$Co2;
        const oTextArrangement = oMetaModel.getObject(`${sCurrentEntitySetName}/$Type/${oColumn}@`);
        const sTextArrangement = oTextArrangement && ((_oTextArrangement$Co = oTextArrangement["@com.sap.vocabularies.Common.v1.Text"]) === null || _oTextArrangement$Co === void 0 ? void 0 : _oTextArrangement$Co.$Path);
        const sTextPlacement = oTextArrangement && ((_oTextArrangement$Co2 = oTextArrangement["@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement"]) === null || _oTextArrangement$Co2 === void 0 ? void 0 : _oTextArrangement$Co2.$EnumMember);
        aFilteredColummns.push({
          columnName: oColumn,
          sTextArrangement: sTextArrangement,
          sColumnNameVisible: !(sTextPlacement === "com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly")
        });
      });
      let column;
      if (headerInfoTitlePath !== undefined && this.checkIfColumnExists(aFilteredColummns, headerInfoTitlePath)) {
        column = headerInfoTitlePath;
      } else if (semanticKeyColumns !== undefined && semanticKeyColumns.length === 1 && this.checkIfColumnExists(aFilteredColummns, semanticKeyColumns[0])) {
        column = semanticKeyColumns[0];
      } else if (aFilteredTechnicalKeys !== undefined && aFilteredTechnicalKeys.length === 1 && this.checkIfColumnExists(aFilteredColummns, aFilteredTechnicalKeys[0])) {
        column = aFilteredTechnicalKeys[0];
      }
      return column;
    };
    _proto.setUpEmptyRows = async function setUpEmptyRows(table) {
      var _this$tableDefinition, _this$tableDefinition2, _table$getBindingCont;
      let createButtonWasPressed = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      if (((_this$tableDefinition = this.tableDefinition.control) === null || _this$tableDefinition === void 0 ? void 0 : _this$tableDefinition.creationMode) !== CreationMode.InlineCreationRows) {
        return;
      }
      if ((_this$tableDefinition2 = this.tableDefinition.control) !== null && _this$tableDefinition2 !== void 0 && _this$tableDefinition2.inlineCreationRowsHiddenInEditMode && !((_table$getBindingCont = table.getBindingContext("ui")) !== null && _table$getBindingCont !== void 0 && _table$getBindingCont.getProperty("createMode")) && !createButtonWasPressed) {
        return;
      }
      const waitTableRendered = new Promise(resolve => {
        if (table.getDomRef()) {
          resolve();
        } else {
          const delegate = {
            onAfterRendering: function () {
              table.removeEventDelegate(delegate);
              resolve();
            }
          };
          table.addEventDelegate(delegate, this);
        }
      });
      await waitTableRendered;
      const uiModel = table.getModel("ui");
      if (uiModel.getProperty("/isEditablePending")) {
        // The edit mode is still being computed, so we wait until this computation is done before checking its value
        const watchBinding = uiModel.bindProperty("/isEditablePending");
        await new Promise(resolve => {
          const fnHandler = () => {
            watchBinding.detachChange(fnHandler);
            watchBinding.destroy();
            resolve();
          };
          watchBinding.attachChange(fnHandler);
        });
      }
      const isInEditMode = uiModel.getProperty("/isEditable");
      if (!isInEditMode) {
        return;
      }
      const binding = table.getRowBinding();
      if (binding.isResolved() && binding.isLengthFinal()) {
        const contextPath = binding.getContext().getPath();
        const inactiveContext = binding.getAllCurrentContexts().find(function (context) {
          return context.isInactive() && context.getPath().startsWith(contextPath);
        });
        if (!inactiveContext) {
          await this._createEmptyRow(binding, table);
        }
      }
    };
    _proto._createEmptyRow = async function _createEmptyRow(oBinding, oTable) {
      var _this$tableDefinition3;
      const iInlineCreationRowCount = ((_this$tableDefinition3 = this.tableDefinition.control) === null || _this$tableDefinition3 === void 0 ? void 0 : _this$tableDefinition3.inlineCreationRowCount) || 2;
      const aData = [];
      for (let i = 0; i < iInlineCreationRowCount; i += 1) {
        aData.push({});
      }
      const bAtEnd = oTable.data("tableType") !== "ResponsiveTable";
      const bInactive = true;
      const oView = CommonUtils.getTargetView(oTable);
      const oController = oView.getController();
      const oInternalEditFlow = oController._editFlow;
      if (!this.creatingEmptyRows) {
        this.creatingEmptyRows = true;
        try {
          const aContexts = await oInternalEditFlow.createMultipleDocuments(oBinding, aData, bAtEnd, false, oController.editFlow.onBeforeCreate, bInactive);
          aContexts === null || aContexts === void 0 ? void 0 : aContexts.forEach(function (oContext) {
            oContext.created().catch(function (oError) {
              if (!oError.canceled) {
                throw oError;
              }
            });
          });
        } catch (e) {
          Log.error(e);
        } finally {
          this.creatingEmptyRows = false;
        }
      }
    };
    return TableAPI;
  }(MacroAPI), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "tableDefinition", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "readOnly", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "busy", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "type", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "enableExport", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "enablePaste", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "enableFullScreen", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "filterBar", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "selectionMode", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "header", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "enableAutoColumnWidth", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "isOptimizedForSmallDevice", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "headerVisible", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "actions", [_dec17], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "columns", [_dec18], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "dataInitialized", [_dec19], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "bindingSuspended", [_dec20], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "outDatedBinding", [_dec21], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "pendingRequest", [_dec22], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "rowPress", [_dec23], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "stateChange", [_dec24], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor24 = _applyDecoratedDescriptor(_class2.prototype, "internalDataRequested", [_dec25], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor25 = _applyDecoratedDescriptor(_class2.prototype, "personalization", [_dec26], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor26 = _applyDecoratedDescriptor(_class2.prototype, "variantManagement", [_dec27], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor27 = _applyDecoratedDescriptor(_class2.prototype, "menu", [_dec28], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor28 = _applyDecoratedDescriptor(_class2.prototype, "isSearchable", [_dec29], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor29 = _applyDecoratedDescriptor(_class2.prototype, "selectionChange", [_dec30], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _applyDecoratedDescriptor(_class2.prototype, "onTableRowPress", [_dec31], Object.getOwnPropertyDescriptor(_class2.prototype, "onTableRowPress"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "onInternalDataReceived", [_dec32], Object.getOwnPropertyDescriptor(_class2.prototype, "onInternalDataReceived"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "onInternalDataRequested", [_dec33], Object.getOwnPropertyDescriptor(_class2.prototype, "onInternalDataRequested"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "onPaste", [_dec34], Object.getOwnPropertyDescriptor(_class2.prototype, "onPaste"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "onBeforeExport", [_dec35], Object.getOwnPropertyDescriptor(_class2.prototype, "onBeforeExport"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "onDataStateChange", [_dec36], Object.getOwnPropertyDescriptor(_class2.prototype, "onDataStateChange"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "onMassEditButtonPressed", [_dec37], Object.getOwnPropertyDescriptor(_class2.prototype, "onMassEditButtonPressed"), _class2.prototype), _applyDecoratedDescriptor(_class2.prototype, "onTableSelectionChange", [_dec38], Object.getOwnPropertyDescriptor(_class2.prototype, "onTableSelectionChange"), _class2.prototype)), _class2)) || _class);
  return TableAPI;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/TableAPI", ["sap/base/Log","sap/fe/core/CommonUtils","sap/fe/core/controllerextensions/routing/NavigationReason","sap/fe/core/converters/ManifestSettings","sap/fe/core/helpers/ClassSupport","sap/fe/core/helpers/PasteHelper","sap/fe/macros/DelegateUtil","sap/fe/macros/filter/FilterUtils","sap/fe/macros/ResourceModel","sap/fe/macros/table/Utils","sap/m/MessageBox","sap/ui/core/Core","sap/ui/core/message/Message","../MacroAPI"],function(e,t,n,r,i,o,a,l,s,u,c,p,d,g){"use strict";var f,b,y,h,m,v,w,P,C,E,D,T,x,z,I,M,R,B,S,O,A,V,F,_,j,$,U,L,N,q,k,H,W,G,K,J,Q,X,Y,Z,ee,te,ne,re,ie,oe,ae,le,se,ue,ce,pe,de,ge,fe,be,ye,he,me,ve,we,Pe,Ce,Ee,De,Te,xe,ze,Ie;var Me=i.xmlEventHandler;var Re=i.property;var Be=i.event;var Se=i.defineUI5Class;var Oe=i.aggregation;var Ae=r.CreationMode;function Ve(e,t,n,r){if(!n)return;Object.defineProperty(e,t,{enumerable:n.enumerable,configurable:n.configurable,writable:n.writable,value:n.initializer?n.initializer.call(r):void 0})}function Fe(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function _e(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;je(e,t)}function je(e,t){je=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,n){t.__proto__=n;return t};return je(e,t)}function $e(e,t,n,r,i){var o={};Object.keys(r).forEach(function(e){o[e]=r[e]});o.enumerable=!!o.enumerable;o.configurable=!!o.configurable;if("value"in o||o.initializer){o.writable=true}o=n.slice().reverse().reduce(function(n,r){return r(e,t,n)||n},o);if(i&&o.initializer!==void 0){o.value=o.initializer?o.initializer.call(i):void 0;o.initializer=undefined}if(o.initializer===void 0){Object.defineProperty(e,t,o);o=null}return o}function Ue(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let Le=(f=Se("sap.fe.macros.table.TableAPI"),b=Re({type:"string",expectedTypes:["EntitySet","EntityType","Singleton","NavigationProperty"],expectedAnnotations:["com.sap.vocabularies.UI.v1.LineItem","com.sap.vocabularies.UI.v1.PresentationVariant","com.sap.vocabularies.UI.v1.SelectionPresentationVariant"]}),y=Re({type:"sap.ui.model.Context"}),h=Re({type:"boolean"}),m=Re({type:"string"}),v=Re({type:"boolean",defaultValue:false}),w=Re({type:"string",defaultValue:"ResponsiveTable"}),P=Re({type:"boolean",defaultValue:true}),C=Re({type:"boolean",defaultValue:false}),E=Re({type:"boolean",defaultValue:false}),D=Re({type:"string"}),T=Re({type:"string"}),x=Re({type:"string"}),z=Re({type:"boolean",defaultValue:true}),I=Re({type:"boolean",defaultValue:false}),M=Re({type:"boolean",defaultValue:true}),R=Oe({type:"sap.fe.macros.table.Action"}),B=Oe({type:"sap.fe.macros.table.Column"}),S=Re({type:"boolean",defaultValue:false}),O=Re({type:"boolean",defaultValue:false}),A=Re({type:"boolean",defaultValue:false}),V=Re({type:"boolean",defaultValue:false}),F=Be(),_=Be(),j=Be(),$=Re({type:"boolean|string",defaultValue:true}),U=Re({type:"string"}),L=Re({type:"string"}),N=Re({type:"boolean",defaultValue:true}),q=Be(),k=Me(),H=Me(),W=Me(),G=Me(),K=Me(),J=Me(),Q=Me(),X=Me(),f(Y=(Z=function(r){_e(i,r);function i(e){var t;for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++){i[o-1]=arguments[o]}t=r.call(this,e,...i)||this;Ve(t,"metaPath",ee,Fe(t));Ve(t,"tableDefinition",te,Fe(t));Ve(t,"readOnly",ne,Fe(t));Ve(t,"id",re,Fe(t));Ve(t,"busy",ie,Fe(t));Ve(t,"type",oe,Fe(t));Ve(t,"enableExport",ae,Fe(t));Ve(t,"enablePaste",le,Fe(t));Ve(t,"enableFullScreen",se,Fe(t));Ve(t,"filterBar",ue,Fe(t));Ve(t,"selectionMode",ce,Fe(t));Ve(t,"header",pe,Fe(t));Ve(t,"enableAutoColumnWidth",de,Fe(t));Ve(t,"isOptimizedForSmallDevice",ge,Fe(t));Ve(t,"headerVisible",fe,Fe(t));Ve(t,"actions",be,Fe(t));Ve(t,"columns",ye,Fe(t));Ve(t,"dataInitialized",he,Fe(t));Ve(t,"bindingSuspended",me,Fe(t));Ve(t,"outDatedBinding",ve,Fe(t));Ve(t,"pendingRequest",we,Fe(t));Ve(t,"rowPress",Pe,Fe(t));Ve(t,"stateChange",Ce,Fe(t));Ve(t,"internalDataRequested",Ee,Fe(t));Ve(t,"personalization",De,Fe(t));Ve(t,"variantManagement",Te,Fe(t));Ve(t,"menu",xe,Fe(t));Ve(t,"isSearchable",ze,Fe(t));Ve(t,"selectionChange",Ie,Fe(t));t.updateFilterBar();if(t.content){t.content.attachEvent("selectionChange",{},t.onTableSelectionChange,Fe(t))}return t}var g=i.prototype;g.getSelectedContexts=function e(){return this.content.getSelectedContexts()};g.addMessage=function e(t){const n=this._getMessageManager();const r=this.content;const i=new d({target:r.getRowBinding().getResolvedPath(),type:t.type,message:t.message,processor:r.getModel(),description:t.description,persistent:t.persistent});n.addMessages(i);return i.getId()};g.removeMessage=function e(t){const n=this._getMessageManager();const r=n.getMessageModel().getData();const i=r.find(e=>e.id===t);if(i){n.removeMessages(i)}};g._getMessageManager=function e(){return sap.ui.getCore().getMessageManager()};g._getRowBinding=function e(){const t=this.getContent();return t.getRowBinding()};g.getCounts=function e(){const t=this.getContent();return u.getListBindingForCount(t,t.getBindingContext(),{batchGroupId:!this.getProperty("bindingSuspended")?t.data("batchGroupId"):"$auto",additionalFilters:u.getHiddenFilters(t)}).then(e=>u.getCountFormatted(e)).catch(()=>"0")};g.onTableRowPress=function e(t,r,i,o){if(i&&i.isInactive()&&i.isTransient()){return false}if(this.getTableDefinition().enableAnalytics&&i&&i.isA("sap.ui.model.odata.v4.Context")&&typeof i.getProperty("@$ui5.node.isExpanded")==="boolean"){return false}else{const e=Object.assign({},o,{reason:n.RowPress});r._routing.navigateForwardToContext(i,e)}};g.onInternalDataReceived=function e(t){if(t.getParameter("error")){this.getController().messageHandler.showMessageDialog()}};g.onInternalDataRequested=function e(t){this.setProperty("dataInitialized",true);this.fireEvent("internalDataRequested",t.getParameters())};g.onPaste=function e(t,n){if(!this.tableDefinition.control.enablePaste||!this.getModel("ui").getProperty("/isEditable")){return}const r=t.getParameter("data"),i=t.getSource();if(i.getEnablePaste()===true){o.pasteData(r,i,n)}else{const e=sap.ui.getCore().getLibraryResourceBundle("sap.fe.core");c.error(e.getText("T_OP_CONTROLLER_SAPFE_PASTE_DISABLED_MESSAGE"),{title:e.getText("C_COMMON_SAPFE_ERROR")})}};g.onBeforeExport=function e(t){var n;const r=t.getParameter("userExportSettings").splitCells,o=t.getSource(),a=(n=t.getParameter("exportSettings").workbook)===null||n===void 0?void 0:n.columns,l=this.tableDefinition.columns;i.updateExportSettings(a,l,o,r)};i.dataStateIndicatorFilter=function e(t,n){var r;const i=(r=n.getBindingContext())===null||r===void 0?void 0:r.getPath();const o=(i?`${i}/`:"")+n.getRowBinding().getPath();return o===t.getTarget()?true:false};g.onDataStateChange=function e(t){const n=t.getSource();const r=t.getParameter("filteredMessages");if(r){const e=n.getModel("internal");e.setProperty("filteredMessages",r,n.getBindingContext("internal"))}};i.updateExportSettings=function e(t,n,r,i){for(let e=t.length-1;e>=0;e--){const o=t[e];o.label=a.getLocalizedText(o.label,r);if(o.type==="Boolean"){o.falseValue=s.getText("no");o.trueValue=s.getText("yes")}const l=n===null||n===void 0?void 0:n.find(e=>{if(i){return this._columnWithTargetValueToBeAdded(e,o)}else{return false}});if(l){const n={label:s.getText("TargetValue"),property:Array.isArray(o.property)?o.property:[o.property],template:l.exportDataPointTargetValue};t.splice(e+1,0,n)}}return t};i._columnWithTargetValueToBeAdded=function e(t,n){var r;let i=false;if(t.exportDataPointTargetValue&&((r=t.propertyInfos)===null||r===void 0?void 0:r.length)===1){if(t.relativePath===n.property||n.property[0]===t.propertyInfos[0]||n.property.includes(t.relativePath)||n.property.includes(t.name)){delete n.template;i=true}}return i};g.resumeBinding=function e(t){this.setProperty("bindingSuspended",false);if(t&&!this.getDataInitialized()||this.getProperty("outDatedBinding")){var n;this.setProperty("outDatedBinding",false);(n=this.getContent())===null||n===void 0?void 0:n.rebind()}};g.refreshNotApplicableFields=function e(t){const n=this.getContent();return l.getNotApplicableFilters(t,n)};g.suspendBinding=function e(){this.setProperty("bindingSuspended",true)};g.invalidateContent=function e(){this.setProperty("dataInitialized",false);this.setProperty("outDatedBinding",false)};g.onMassEditButtonPressed=function t(n,r){const i=this.content;if(r&&r.massEdit){r.massEdit.openMassEditDialog(i)}else{e.warning("The Controller is not enhanced with Mass Edit functionality")}};g.onTableSelectionChange=function e(t){this.fireEvent("selectionChange",t.getParameters())};g.getTableDefinition=function e(){return this.tableDefinition};g.updateFilterBar=function e(){const t=this.getContent();const n=this.getFilterBar();if(t&&n&&t.getFilter()!==n){this._setFilterBar(n)}};g._setFilterBar=function e(n){var r;const i=this.getContent();const o=this===null||this===void 0?void 0:this.getId();const a=this.data("tableAPILocalId");const l=a&&n&&o&&o.replace(new RegExp(a+"$"),n);const s=((r=t.getTargetView(this))===null||r===void 0?void 0:r.byId(n))||p.byId(n)||p.byId(l);if(s){if(s.isA("sap.fe.macros.filterBar.FilterBarAPI")){i.setFilter(`${s.getId()}-content`)}else if(s.isA("sap.ui.mdc.FilterBar")){i.setFilter(s.getId())}}};g.checkIfColumnExists=function e(t,n){return t.some(function(e){if((e===null||e===void 0?void 0:e.columnName)===n&&e!==null&&e!==void 0&&e.sColumnNameVisible||(e===null||e===void 0?void 0:e.sTextArrangement)!==undefined&&(e===null||e===void 0?void 0:e.sTextArrangement)===n){return n}})};g.getIdentifierColumn=function e(){const t=this.getContent();const n=this.getTableDefinition().headerInfoTitle;const r=t&&t.getModel().getMetaModel(),i=t.data("metaPath");const o=r.getObject(`${i}/$Type/$Key`);const a=[];if(o&&o.length>0){o.forEach(function(e){if(e!=="IsActiveEntity"){a.push(e)}})}const l=this.getTableDefinition().semanticKeys;const s=[];const u=[];const c=t.getColumns();c.forEach(function(e){const t=e===null||e===void 0?void 0:e.getDataProperty();s.push(t)});s.forEach(function(e){var t,n;const o=r.getObject(`${i}/$Type/${e}@`);const a=o&&((t=o["@com.sap.vocabularies.Common.v1.Text"])===null||t===void 0?void 0:t.$Path);const l=o&&((n=o["@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement"])===null||n===void 0?void 0:n.$EnumMember);u.push({columnName:e,sTextArrangement:a,sColumnNameVisible:!(l==="com.sap.vocabularies.UI.v1.TextArrangementType/TextOnly")})});let p;if(n!==undefined&&this.checkIfColumnExists(u,n)){p=n}else if(l!==undefined&&l.length===1&&this.checkIfColumnExists(u,l[0])){p=l[0]}else if(a!==undefined&&a.length===1&&this.checkIfColumnExists(u,a[0])){p=a[0]}return p};g.setUpEmptyRows=async function e(t){var n,r,i;let o=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;if(((n=this.tableDefinition.control)===null||n===void 0?void 0:n.creationMode)!==Ae.InlineCreationRows){return}if((r=this.tableDefinition.control)!==null&&r!==void 0&&r.inlineCreationRowsHiddenInEditMode&&!((i=t.getBindingContext("ui"))!==null&&i!==void 0&&i.getProperty("createMode"))&&!o){return}const a=new Promise(e=>{if(t.getDomRef()){e()}else{const n={onAfterRendering:function(){t.removeEventDelegate(n);e()}};t.addEventDelegate(n,this)}});await a;const l=t.getModel("ui");if(l.getProperty("/isEditablePending")){const e=l.bindProperty("/isEditablePending");await new Promise(t=>{const n=()=>{e.detachChange(n);e.destroy();t()};e.attachChange(n)})}const s=l.getProperty("/isEditable");if(!s){return}const u=t.getRowBinding();if(u.isResolved()&&u.isLengthFinal()){const e=u.getContext().getPath();const n=u.getAllCurrentContexts().find(function(t){return t.isInactive()&&t.getPath().startsWith(e)});if(!n){await this._createEmptyRow(u,t)}}};g._createEmptyRow=async function n(r,i){var o;const a=((o=this.tableDefinition.control)===null||o===void 0?void 0:o.inlineCreationRowCount)||2;const l=[];for(let e=0;e<a;e+=1){l.push({})}const s=i.data("tableType")!=="ResponsiveTable";const u=true;const c=t.getTargetView(i);const p=c.getController();const d=p._editFlow;if(!this.creatingEmptyRows){this.creatingEmptyRows=true;try{const e=await d.createMultipleDocuments(r,l,s,false,p.editFlow.onBeforeCreate,u);e===null||e===void 0?void 0:e.forEach(function(e){e.created().catch(function(e){if(!e.canceled){throw e}})})}catch(t){e.error(t)}finally{this.creatingEmptyRows=false}}};return i}(g),ee=$e(Z.prototype,"metaPath",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),te=$e(Z.prototype,"tableDefinition",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),ne=$e(Z.prototype,"readOnly",[h],{configurable:true,enumerable:true,writable:true,initializer:null}),re=$e(Z.prototype,"id",[m],{configurable:true,enumerable:true,writable:true,initializer:null}),ie=$e(Z.prototype,"busy",[v],{configurable:true,enumerable:true,writable:true,initializer:null}),oe=$e(Z.prototype,"type",[w],{configurable:true,enumerable:true,writable:true,initializer:null}),ae=$e(Z.prototype,"enableExport",[P],{configurable:true,enumerable:true,writable:true,initializer:null}),le=$e(Z.prototype,"enablePaste",[C],{configurable:true,enumerable:true,writable:true,initializer:null}),se=$e(Z.prototype,"enableFullScreen",[E],{configurable:true,enumerable:true,writable:true,initializer:null}),ue=$e(Z.prototype,"filterBar",[D],{configurable:true,enumerable:true,writable:true,initializer:null}),ce=$e(Z.prototype,"selectionMode",[T],{configurable:true,enumerable:true,writable:true,initializer:null}),pe=$e(Z.prototype,"header",[x],{configurable:true,enumerable:true,writable:true,initializer:null}),de=$e(Z.prototype,"enableAutoColumnWidth",[z],{configurable:true,enumerable:true,writable:true,initializer:null}),ge=$e(Z.prototype,"isOptimizedForSmallDevice",[I],{configurable:true,enumerable:true,writable:true,initializer:null}),fe=$e(Z.prototype,"headerVisible",[M],{configurable:true,enumerable:true,writable:true,initializer:null}),be=$e(Z.prototype,"actions",[R],{configurable:true,enumerable:true,writable:true,initializer:null}),ye=$e(Z.prototype,"columns",[B],{configurable:true,enumerable:true,writable:true,initializer:null}),he=$e(Z.prototype,"dataInitialized",[S],{configurable:true,enumerable:true,writable:true,initializer:null}),me=$e(Z.prototype,"bindingSuspended",[O],{configurable:true,enumerable:true,writable:true,initializer:null}),ve=$e(Z.prototype,"outDatedBinding",[A],{configurable:true,enumerable:true,writable:true,initializer:null}),we=$e(Z.prototype,"pendingRequest",[V],{configurable:true,enumerable:true,writable:true,initializer:null}),Pe=$e(Z.prototype,"rowPress",[F],{configurable:true,enumerable:true,writable:true,initializer:null}),Ce=$e(Z.prototype,"stateChange",[_],{configurable:true,enumerable:true,writable:true,initializer:null}),Ee=$e(Z.prototype,"internalDataRequested",[j],{configurable:true,enumerable:true,writable:true,initializer:null}),De=$e(Z.prototype,"personalization",[$],{configurable:true,enumerable:true,writable:true,initializer:null}),Te=$e(Z.prototype,"variantManagement",[U],{configurable:true,enumerable:true,writable:true,initializer:null}),xe=$e(Z.prototype,"menu",[L],{configurable:true,enumerable:true,writable:true,initializer:null}),ze=$e(Z.prototype,"isSearchable",[N],{configurable:true,enumerable:true,writable:true,initializer:null}),Ie=$e(Z.prototype,"selectionChange",[q],{configurable:true,enumerable:true,writable:true,initializer:null}),$e(Z.prototype,"onTableRowPress",[k],Object.getOwnPropertyDescriptor(Z.prototype,"onTableRowPress"),Z.prototype),$e(Z.prototype,"onInternalDataReceived",[H],Object.getOwnPropertyDescriptor(Z.prototype,"onInternalDataReceived"),Z.prototype),$e(Z.prototype,"onInternalDataRequested",[W],Object.getOwnPropertyDescriptor(Z.prototype,"onInternalDataRequested"),Z.prototype),$e(Z.prototype,"onPaste",[G],Object.getOwnPropertyDescriptor(Z.prototype,"onPaste"),Z.prototype),$e(Z.prototype,"onBeforeExport",[K],Object.getOwnPropertyDescriptor(Z.prototype,"onBeforeExport"),Z.prototype),$e(Z.prototype,"onDataStateChange",[J],Object.getOwnPropertyDescriptor(Z.prototype,"onDataStateChange"),Z.prototype),$e(Z.prototype,"onMassEditButtonPressed",[Q],Object.getOwnPropertyDescriptor(Z.prototype,"onMassEditButtonPressed"),Z.prototype),$e(Z.prototype,"onTableSelectionChange",[X],Object.getOwnPropertyDescriptor(Z.prototype,"onTableSelectionChange"),Z.prototype),Z))||Y);return Le},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/TableFullScreenUtil-dbg", ["sap/m/Button", "sap/m/Dialog", "sap/m/library", "sap/ui/core/Component", "sap/ui/core/Core", "sap/ui/core/HTML", "sap/ui/thirdparty/jquery"], function (Button, Dialog, mLibrary, Component, Core, HTML, jQuery) {
  "use strict";

  const ButtonType = mLibrary.ButtonType;
  const TableFullScreenUtil = {
    onFullScreenToggle: function (oFullScreenButton) {
      let oTable = oFullScreenButton.getParent().getParent().getParent().getParent();
      let $oTableContent;
      oFullScreenButton._enteringFullScreen = !oFullScreenButton._enteringFullScreen;
      const fnOnFullScreenToggle = this.onFullScreenToggle.bind(this, oFullScreenButton);
      const oMessageBundle = Core.getLibraryResourceBundle("sap.fe.macros");
      if (oFullScreenButton._enteringFullScreen === true) {
        // change the button icon and text
        oFullScreenButton.setIcon("sap-icon://exit-full-screen");
        oFullScreenButton.setTooltip(oMessageBundle.getText("M_COMMON_TABLE_FULLSCREEN_MINIMIZE"));
        // if the table is a responsive table, switch to load on scroll
        // get the dom reference of the control
        $oTableContent = oTable.$();
        // add 100% height to the FlexBox container for the Control to rendering in full screen
        $oTableContent.css("height", "100%");
        // Create an HTML element to add the controls DOM content in the FullScreen dialog
        if (!oTable._oHTML) {
          oTable._oHTML = new HTML({
            preferDOM: false,
            afterRendering: function () {
              if (oTable && oTable._oHTML) {
                const $oHTMLContent = oTable._oHTML.$();
                let oChildren;
                // Get the current HTML Dom content
                if ($oHTMLContent) {
                  // remove any old child content
                  oChildren = $oHTMLContent.children();
                  oChildren.remove();
                  // stretch the content to occupy the whole space
                  $oHTMLContent.css("height", "100%");
                  // append the control dom to HTML content
                  $oHTMLContent.append(oTable.getDomRef());
                }
              }
            }
          });
        }

        // Create and set a fullscreen Dialog (without headers) on the registered control instance
        if (!oTable._oFullScreenDialog) {
          const oComponent = Component.getOwnerComponentFor(oTable);
          oComponent.runAsOwner(function () {
            oTable._oFullScreenDialog = new Dialog({
              showHeader: false,
              stretch: true,
              beforeClose: function () {
                // In case fullscreen dialog was closed due to navigation to another page/view/app, "Esc" click, etc. The dialog close
                // would be triggered externally and we need to clean up and replace the DOM content back to the original location
                if (oTable && oTable._$placeHolder) {
                  fnOnFullScreenToggle();
                }
              },
              endButton: new Button({
                text: oMessageBundle.getText("M_COMMON_TABLE_FULLSCREEN_CLOSE"),
                type: ButtonType.Transparent,
                press: function () {
                  // Just close the dialog here, all the needed processing is triggered
                  // in beforeClose.
                  // This ensures, that we only do it once event if the user presses the
                  // ESC key and the Close button simultaneously
                  oTable._oFullScreenDialog.close();
                }
              }),
              content: [oTable._oHTML]
            });
            oTable._oFullScreenDialog.data("FullScreenDialog", true);
            oComponent.getRootControl().addDependent(oTable._oFullScreenDialog);
          });

          // Set focus back on full-screen button of control
          if (oFullScreenButton) {
            oTable._oFullScreenDialog.attachAfterOpen(function () {
              oFullScreenButton.focus();
              // Hack to update scroll of sap.m.List/ResponsiveTable - 2/2
              if (oTable._oGrowingDelegate && oTable._oGrowingDelegate.onAfterRendering) {
                // Temporarily change the parent of control to Fullscreen Dialog
                oTable._oOldParent = oTable.oParent;
                oTable.oParent = oTable._oFullScreenDialog;
                // update delegate to enable scroll with new parent
                oTable._oGrowingDelegate.onAfterRendering();
                // restore parent
                oTable.oParent = oTable._oOldParent;
                // delete unnecessary props
                delete oTable._oOldParent;
              }
              // Add 100% height to scroll container
              oTable._oFullScreenDialog.$().find(".sapMDialogScroll").css("height", "100%");
            });
            oTable._oFullScreenDialog.attachAfterClose(function () {
              const oAppComponent = Component.getOwnerComponentFor(oComponent);
              oFullScreenButton.focus();
              // trigger the automatic scroll to the latest navigated row :
              oAppComponent.getRootViewController().getView().getController()._scrollTablesToLastNavigatedItems();
            });
          }
          // add the style class from control to the dialog
          oTable._oFullScreenDialog.addStyleClass($oTableContent.closest(".sapUiSizeCompact").length ? "sapUiSizeCompact" : "");
          // add style class to make the scroll container height as 100% (required to stretch UI to 100% e.g. for SmartChart)
          oTable._oFullScreenDialog.addStyleClass("sapUiCompSmartFullScreenDialog");
        }
        // create a dummy div node (place holder)
        oTable._$placeHolder = jQuery(document.createElement("div"));
        // Set the place holder before the current content
        $oTableContent.before(oTable._$placeHolder);
        // Add a dummy div as content of the HTML control
        oTable._oHTML.setContent("<div/>");
        // Hack to update scroll of sap.m.List/ResponsiveTable - 1/2
        if (!oTable._oGrowingDelegate) {
          oTable._oGrowingDelegate = oTable._oTable || oTable._oList;
          if (oTable._oGrowingDelegate && oTable._oGrowingDelegate.getGrowingScrollToLoad && oTable._oGrowingDelegate.getGrowingScrollToLoad()) {
            oTable._oGrowingDelegate = oTable._oGrowingDelegate._oGrowingDelegate;
          } else {
            oTable._oGrowingDelegate = null;
          }
        }
        // open the full screen Dialog
        oTable._oFullScreenDialog.open();
      } else {
        // change the button icon
        oFullScreenButton.setIcon("sap-icon://full-screen");
        oFullScreenButton.setTooltip(oMessageBundle.getText("M_COMMON_TABLE_FULLSCREEN_MAXIMIZE"));
        // Get reference to table
        oTable = oFullScreenButton.getParent().getParent().getParent().getParent();

        // get the HTML controls content --> as it should contain the control's current DOM ref
        $oTableContent = oTable._oHTML.$();
        // Replace the place holder with the Controls DOM ref (child of HTML)
        oTable._$placeHolder.replaceWith($oTableContent.children());
        oTable._$placeHolder = null;
        $oTableContent = null;

        // close the full screen Dialog
        if (oTable._oFullScreenDialog) {
          oTable._oFullScreenDialog.close();
        }
      }
    }
  };
  return TableFullScreenUtil;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/TableFullScreenUtil", ["sap/m/Button","sap/m/Dialog","sap/m/library","sap/ui/core/Component","sap/ui/core/Core","sap/ui/core/HTML","sap/ui/thirdparty/jquery"],function(e,o,t,l,n,r,jQuery){"use strict";const a=t.ButtonType;const i={onFullScreenToggle:function(t){let i=t.getParent().getParent().getParent().getParent();let g;t._enteringFullScreen=!t._enteringFullScreen;const c=this.onFullScreenToggle.bind(this,t);const s=n.getLibraryResourceBundle("sap.fe.macros");if(t._enteringFullScreen===true){t.setIcon("sap-icon://exit-full-screen");t.setTooltip(s.getText("M_COMMON_TABLE_FULLSCREEN_MINIMIZE"));g=i.$();g.css("height","100%");if(!i._oHTML){i._oHTML=new r({preferDOM:false,afterRendering:function(){if(i&&i._oHTML){const e=i._oHTML.$();let o;if(e){o=e.children();o.remove();e.css("height","100%");e.append(i.getDomRef())}}}})}if(!i._oFullScreenDialog){const n=l.getOwnerComponentFor(i);n.runAsOwner(function(){i._oFullScreenDialog=new o({showHeader:false,stretch:true,beforeClose:function(){if(i&&i._$placeHolder){c()}},endButton:new e({text:s.getText("M_COMMON_TABLE_FULLSCREEN_CLOSE"),type:a.Transparent,press:function(){i._oFullScreenDialog.close()}}),content:[i._oHTML]});i._oFullScreenDialog.data("FullScreenDialog",true);n.getRootControl().addDependent(i._oFullScreenDialog)});if(t){i._oFullScreenDialog.attachAfterOpen(function(){t.focus();if(i._oGrowingDelegate&&i._oGrowingDelegate.onAfterRendering){i._oOldParent=i.oParent;i.oParent=i._oFullScreenDialog;i._oGrowingDelegate.onAfterRendering();i.oParent=i._oOldParent;delete i._oOldParent}i._oFullScreenDialog.$().find(".sapMDialogScroll").css("height","100%")});i._oFullScreenDialog.attachAfterClose(function(){const e=l.getOwnerComponentFor(n);t.focus();e.getRootViewController().getView().getController()._scrollTablesToLastNavigatedItems()})}i._oFullScreenDialog.addStyleClass(g.closest(".sapUiSizeCompact").length?"sapUiSizeCompact":"");i._oFullScreenDialog.addStyleClass("sapUiCompSmartFullScreenDialog")}i._$placeHolder=jQuery(document.createElement("div"));g.before(i._$placeHolder);i._oHTML.setContent("<div/>");if(!i._oGrowingDelegate){i._oGrowingDelegate=i._oTable||i._oList;if(i._oGrowingDelegate&&i._oGrowingDelegate.getGrowingScrollToLoad&&i._oGrowingDelegate.getGrowingScrollToLoad()){i._oGrowingDelegate=i._oGrowingDelegate._oGrowingDelegate}else{i._oGrowingDelegate=null}}i._oFullScreenDialog.open()}else{t.setIcon("sap-icon://full-screen");t.setTooltip(s.getText("M_COMMON_TABLE_FULLSCREEN_MAXIMIZE"));i=t.getParent().getParent().getParent().getParent();g=i._oHTML.$();i._$placeHolder.replaceWith(g.children());i._$placeHolder=null;g=null;if(i._oFullScreenDialog){i._oFullScreenDialog.close()}}}};return i},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/TableHelper-dbg", ["sap/base/Log", "sap/fe/core/converters/controls/Common/DataVisualization", "sap/fe/core/converters/ManifestSettings", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/formatters/TableFormatter", "sap/fe/core/helpers/BindingToolkit", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/library", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/core/templating/PropertyHelper", "sap/fe/core/templating/UIFormatters", "sap/fe/macros/CommonHelper", "sap/fe/macros/field/FieldTemplating", "sap/fe/macros/internal/helpers/ActionHelper", "sap/fe/macros/table/TableSizeHelper", "sap/ui/mdc/enum/EditMode"], function (Log, DataVisualization, ManifestSettings, MetaModelConverter, TableFormatter, BindingToolkit, StableIdHelper, FELibrary, DataModelPathHelper, PropertyHelper, UIFormatters, CommonHelper, FieldTemplating, ActionHelper, TableSizeHelper, EditMode) {
  "use strict";

  var formatValueRecursively = FieldTemplating.formatValueRecursively;
  var getEditMode = UIFormatters.getEditMode;
  var isImageURL = PropertyHelper.isImageURL;
  var hasText = PropertyHelper.hasText;
  var getTargetObjectPath = DataModelPathHelper.getTargetObjectPath;
  var getContextRelativeTargetObjectPath = DataModelPathHelper.getContextRelativeTargetObjectPath;
  var generate = StableIdHelper.generate;
  var pathInModel = BindingToolkit.pathInModel;
  var isPathInModelExpression = BindingToolkit.isPathInModelExpression;
  var isConstant = BindingToolkit.isConstant;
  var ifElse = BindingToolkit.ifElse;
  var getExpressionFromAnnotation = BindingToolkit.getExpressionFromAnnotation;
  var formatResult = BindingToolkit.formatResult;
  var constant = BindingToolkit.constant;
  var compileExpression = BindingToolkit.compileExpression;
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  var TemplateType = ManifestSettings.TemplateType;
  var getUiControl = DataVisualization.getUiControl;
  const CreationMode = FELibrary.CreationMode;
  /**
   * Helper class used by the control library for OData-specific handling (OData V4)
   *
   * @private
   * @experimental This module is only for internal/experimental use!
   */
  const TableHelper = {
    /**
     * Check if a given action is static.
     *
     * @param oActionContext The instance of the action
     * @param sActionName The name of the action
     * @returns Returns 'true' if action is static, else 'false'
     * @private
     * @ui5-restricted
     */
    _isStaticAction: function (oActionContext, sActionName) {
      let oAction;
      if (oActionContext) {
        if (Array.isArray(oActionContext)) {
          const sEntityType = this._getActionOverloadEntityType(sActionName);
          if (sEntityType) {
            oAction = oActionContext.find(function (action) {
              return action.$IsBound && action.$Parameter[0].$Type === sEntityType;
            });
          } else {
            // if this is just one - OK we take it. If it's more it's actually a wrong usage by the app
            // as we used the first one all the time we keep it as it is
            oAction = oActionContext[0];
          }
        } else {
          oAction = oActionContext;
        }
      }
      return !!oAction && oAction.$IsBound && oAction.$Parameter[0].$isCollection;
    },
    /**
     * Get the entity type of an action overload.
     *
     * @param sActionName The name of the action.
     * @returns The entity type used in the action overload.
     * @private
     */
    _getActionOverloadEntityType: function (sActionName) {
      if (sActionName && sActionName.indexOf("(") > -1) {
        const aParts = sActionName.split("(");
        return aParts[aParts.length - 1].replaceAll(")", "");
      }
      return undefined;
    },
    /**
     * Checks whether the action is overloaded on a different entity type.
     *
     * @param sActionName The name of the action.
     * @param sAnnotationTargetEntityType The entity type of the annotation target.
     * @returns Returns 'true' if the action is overloaded with a different entity type, else 'false'.
     * @private
     */
    _isActionOverloadOnDifferentType: function (sActionName, sAnnotationTargetEntityType) {
      const sEntityType = this._getActionOverloadEntityType(sActionName);
      return !!sEntityType && sAnnotationTargetEntityType !== sEntityType;
    },
    getMessageForDraftValidation: function (oThis) {
      var _oCollectionAnnotatio, _oThis$tableDefinitio;
      const oCollectionAnnotations = oThis.collection.getObject("./@");
      const sMessagePath = (_oCollectionAnnotatio = oCollectionAnnotations["@com.sap.vocabularies.Common.v1.Messages"]) === null || _oCollectionAnnotatio === void 0 ? void 0 : _oCollectionAnnotatio.$Path;
      if (sMessagePath && ((_oThis$tableDefinitio = oThis.tableDefinition) === null || _oThis$tableDefinitio === void 0 ? void 0 : _oThis$tableDefinitio.getProperty("/template")) === TemplateType.ObjectPage && !!Object.keys(oCollectionAnnotations).find(sKey => {
        var _oAnnotation$TargetPr;
        const oAnnotation = oCollectionAnnotations[sKey];
        return oAnnotation && oAnnotation.$Type === "com.sap.vocabularies.Common.v1.SideEffectsType" && !oAnnotation.SourceProperties && !oAnnotation.SourceEntities && ((_oAnnotation$TargetPr = oAnnotation.TargetProperties) === null || _oAnnotation$TargetPr === void 0 ? void 0 : _oAnnotation$TargetPr.indexOf(sMessagePath)) > -1;
      })) {
        return sMessagePath;
      }
      return "";
    },
    /**
     * Returns an array of the fields listed by the property RequestAtLeast in the PresentationVariant .
     *
     * @param oPresentationVariant The annotation related to com.sap.vocabularies.UI.v1.PresentationVariant.
     * @returns The fields.
     * @private
     * @ui5-restricted
     */
    getFieldsRequestedByPresentationVariant: function (oPresentationVariant) {
      var _oPresentationVariant;
      return ((_oPresentationVariant = oPresentationVariant.RequestAtLeast) === null || _oPresentationVariant === void 0 ? void 0 : _oPresentationVariant.map(oRequested => oRequested.value)) || [];
    },
    getNavigationAvailableFieldsFromLineItem: function (aLineItemContext) {
      const aSelectedFieldsArray = [];
      (aLineItemContext.getObject() || []).forEach(function (oRecord) {
        var _oRecord$NavigationAv;
        if (oRecord.$Type === "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation" && !oRecord.Inline && !oRecord.Determining && (_oRecord$NavigationAv = oRecord.NavigationAvailable) !== null && _oRecord$NavigationAv !== void 0 && _oRecord$NavigationAv.$Path) {
          aSelectedFieldsArray.push(oRecord.NavigationAvailable.$Path);
        }
      });
      return aSelectedFieldsArray;
    },
    getNavigationAvailableMap: function (aLineItemCollection) {
      const oIBNNavigationAvailableMap = {};
      aLineItemCollection.forEach(function (oRecord) {
        const sKey = `${oRecord.SemanticObject}-${oRecord.Action}`;
        if (oRecord.$Type === "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation" && !oRecord.Inline && oRecord.RequiresContext) {
          if (oRecord.NavigationAvailable !== undefined) {
            oIBNNavigationAvailableMap[sKey] = oRecord.NavigationAvailable.$Path ? oRecord.NavigationAvailable.$Path : oRecord.NavigationAvailable;
          }
        }
      });
      return JSON.stringify(oIBNNavigationAvailableMap);
    },
    /**
     * Return the context of the UI Line Item.
     *
     * @param oPresentationContext The context of the presentation (Presentation variant or UI.LineItem)
     * @returns The context of the UI Line Item
     */
    getUiLineItem: function (oPresentationContext) {
      return getUiControl(oPresentationContext, "@com.sap.vocabularies.UI.v1.LineItem");
    },
    /**
     * Creates and returns a select query with the selected fields from the parameters that were passed.
     *
     * @param oThis The instance of the inner model of the table building block
     * @returns The 'select' query that has the selected fields from the parameters that were passed
     */
    create$Select: function (oThis) {
      const collectionContext = oThis.collection;
      const selectedFields = [];
      const lineItemContext = TableHelper.getUiLineItem(oThis.metaPath);
      const targetCollectionPath = CommonHelper.getTargetCollection(collectionContext);
      function pushField(field) {
        if (field && !selectedFields.includes(field) && field.indexOf("/") !== 0) {
          // Do not add singleton property (with absolute path) to $select
          selectedFields.push(field);
        }
      }
      function pushFieldList(fields) {
        if (fields !== null && fields !== void 0 && fields.length) {
          fields.forEach(pushField);
        }
      }
      const columns = oThis.tableDefinition.getObject("columns");
      const propertiesFromCustomColumns = this.getPropertiesFromCustomColumns(columns);
      if (propertiesFromCustomColumns !== null && propertiesFromCustomColumns !== void 0 && propertiesFromCustomColumns.length) {
        pushFieldList(propertiesFromCustomColumns);
      }
      if (lineItemContext.getPath().indexOf("@com.sap.vocabularies.UI.v1.LineItem") > -1) {
        var _collectionContext$ge, _collectionContext$ge2, _collectionContext$ge3, _collectionContext$ge4;
        // Don't process EntityType without LineItem
        const presentationAnnotation = getInvolvedDataModelObjects(oThis.metaPath).targetObject;
        const operationAvailableProperties = (oThis.tableDefinition.getObject("operationAvailableProperties") || "").split(",");
        const applicableProperties = TableHelper._filterNonApplicableProperties(operationAvailableProperties, collectionContext);
        const semanticKeys = (collectionContext.getObject(`${targetCollectionPath}/@com.sap.vocabularies.Common.v1.SemanticKey`) || []).map(semanticKey => semanticKey.$PropertyPath);
        if ((presentationAnnotation === null || presentationAnnotation === void 0 ? void 0 : presentationAnnotation.$Type) === "com.sap.vocabularies.UI.v1.PresentationVariantType") {
          pushFieldList(TableHelper.getFieldsRequestedByPresentationVariant(presentationAnnotation));
        }
        pushFieldList(TableHelper.getNavigationAvailableFieldsFromLineItem(lineItemContext));
        pushFieldList(applicableProperties);
        pushFieldList(semanticKeys);
        pushField(TableHelper.getMessageForDraftValidation(oThis));
        pushField((_collectionContext$ge = collectionContext.getObject(`${targetCollectionPath}@Org.OData.Capabilities.V1.DeleteRestrictions`)) === null || _collectionContext$ge === void 0 ? void 0 : (_collectionContext$ge2 = _collectionContext$ge.Deletable) === null || _collectionContext$ge2 === void 0 ? void 0 : _collectionContext$ge2.$Path);
        pushField((_collectionContext$ge3 = collectionContext.getObject(`${targetCollectionPath}@Org.OData.Capabilities.V1.UpdateRestrictions`)) === null || _collectionContext$ge3 === void 0 ? void 0 : (_collectionContext$ge4 = _collectionContext$ge3.Updatable) === null || _collectionContext$ge4 === void 0 ? void 0 : _collectionContext$ge4.$Path);
      }
      return selectedFields.join(",");
    },
    /**
     * Method to get column's width if defined from manifest or from customization via annotations.
     *
     * @function
     * @name getColumnWidth
     * @param oThis The instance of the inner model of the table building block
     * @param column Defined width of the column, which is taken with priority if not null, undefined or empty
     * @param dataField DataField definition object
     * @param dataFieldActionText DataField's text from button
     * @param dataModelObjectPath The object path of the data model
     * @param useRemUnit Indicates if the rem unit must be concatenated with the column width result
     * @param microChartTitle The object containing title and description of the MicroChart
     * @returns - Column width if defined, otherwise width is set to auto
     */
    getColumnWidth: function (oThis, column, dataField, dataFieldActionText, dataModelObjectPath, useRemUnit, microChartTitle) {
      if (column.width) {
        return column.width;
      }
      if (oThis.enableAutoColumnWidth === true) {
        let width;
        width = this.getColumnWidthForImage(dataModelObjectPath) || this.getColumnWidthForDataField(oThis, column, dataField, dataFieldActionText, dataModelObjectPath, microChartTitle) || undefined;
        if (width) {
          return useRemUnit ? `${width}rem` : width;
        }
        width = compileExpression(formatResult([pathInModel("/editMode", "ui"), pathInModel("tablePropertiesAvailable", "internal"), column.name, useRemUnit], TableFormatter.getColumnWidth));
        return width;
      }
      return undefined;
    },
    /**
     * Method to get the width of the column containing an image.
     *
     * @function
     * @name getColumnWidthForImage
     * @param dataModelObjectPath The data model object path
     * @returns - Column width if defined, otherwise null (the width is treated as a rem value)
     */
    getColumnWidthForImage: function (dataModelObjectPath) {
      var _dataModelObjectPath$, _dataModelObjectPath$2, _dataModelObjectPath$3, _dataModelObjectPath$4, _dataModelObjectPath$5, _dataModelObjectPath$6, _dataModelObjectPath$7, _dataModelObjectPath$8, _dataModelObjectPath$9, _dataModelObjectPath$10, _annotations$Core2, _annotations$Core2$Me;
      let width = null;
      const annotations = (_dataModelObjectPath$ = dataModelObjectPath.targetObject) === null || _dataModelObjectPath$ === void 0 ? void 0 : (_dataModelObjectPath$2 = _dataModelObjectPath$.Value) === null || _dataModelObjectPath$2 === void 0 ? void 0 : (_dataModelObjectPath$3 = _dataModelObjectPath$2.$target) === null || _dataModelObjectPath$3 === void 0 ? void 0 : _dataModelObjectPath$3.annotations;
      const dataType = (_dataModelObjectPath$4 = dataModelObjectPath.targetObject) === null || _dataModelObjectPath$4 === void 0 ? void 0 : (_dataModelObjectPath$5 = _dataModelObjectPath$4.Value) === null || _dataModelObjectPath$5 === void 0 ? void 0 : (_dataModelObjectPath$6 = _dataModelObjectPath$5.$target) === null || _dataModelObjectPath$6 === void 0 ? void 0 : _dataModelObjectPath$6.type;
      if ((_dataModelObjectPath$7 = dataModelObjectPath.targetObject) !== null && _dataModelObjectPath$7 !== void 0 && _dataModelObjectPath$7.Value && getEditMode((_dataModelObjectPath$8 = dataModelObjectPath.targetObject.Value) === null || _dataModelObjectPath$8 === void 0 ? void 0 : _dataModelObjectPath$8.$target, dataModelObjectPath, false, false, dataModelObjectPath.targetObject) === EditMode.Display) {
        var _annotations$Core, _annotations$Core$Med;
        const hasTextAnnotation = hasText(dataModelObjectPath.targetObject.Value.$target);
        if (dataType === "Edm.Stream" && !hasTextAnnotation && annotations !== null && annotations !== void 0 && (_annotations$Core = annotations.Core) !== null && _annotations$Core !== void 0 && (_annotations$Core$Med = _annotations$Core.MediaType) !== null && _annotations$Core$Med !== void 0 && _annotations$Core$Med.includes("image/")) {
          width = 6.2;
        }
      } else if (annotations && (isImageURL((_dataModelObjectPath$9 = dataModelObjectPath.targetObject) === null || _dataModelObjectPath$9 === void 0 ? void 0 : (_dataModelObjectPath$10 = _dataModelObjectPath$9.Value) === null || _dataModelObjectPath$10 === void 0 ? void 0 : _dataModelObjectPath$10.$target) || annotations !== null && annotations !== void 0 && (_annotations$Core2 = annotations.Core) !== null && _annotations$Core2 !== void 0 && (_annotations$Core2$Me = _annotations$Core2.MediaType) !== null && _annotations$Core2$Me !== void 0 && _annotations$Core2$Me.includes("image/"))) {
        width = 6.2;
      }
      return width;
    },
    /**
     * Method to get the width of the column containing the DataField.
     *
     * @function
     * @name getColumnWidthForDataField
     * @param oThis The instance of the inner model of the table building block
     * @param column Defined width of the column, which is taken with priority if not null, undefined or empty
     * @param dataField Data Field
     * @param dataFieldActionText DataField's text from button
     * @param dataModelObjectPath The data model object path
     * @param oMicroChartTitle The object containing the title and description of the MicroChart
     * @returns - Column width if defined, otherwise null ( the width is treated as a rem value)
     */
    getColumnWidthForDataField: function (oThis, column, dataField, dataFieldActionText, dataModelObjectPath, oMicroChartTitle) {
      var _dataModelObjectPath$11, _dataModelObjectPath$12;
      const annotations = (_dataModelObjectPath$11 = dataModelObjectPath.targetObject) === null || _dataModelObjectPath$11 === void 0 ? void 0 : _dataModelObjectPath$11.annotations;
      const dataType = (_dataModelObjectPath$12 = dataModelObjectPath.targetObject) === null || _dataModelObjectPath$12 === void 0 ? void 0 : _dataModelObjectPath$12.$Type;
      let width = null;
      if (dataType === "com.sap.vocabularies.UI.v1.DataFieldForAction" || dataType === "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation" || dataType === "com.sap.vocabularies.UI.v1.DataFieldForAnnotation" && dataField.Target.$AnnotationPath.indexOf(`@${"com.sap.vocabularies.UI.v1.FieldGroup"}`) === -1) {
        var _dataField$Label;
        let nTmpTextWidth;
        nTmpTextWidth = TableSizeHelper.getButtonWidth(dataFieldActionText) || TableSizeHelper.getButtonWidth(dataField === null || dataField === void 0 ? void 0 : (_dataField$Label = dataField.Label) === null || _dataField$Label === void 0 ? void 0 : _dataField$Label.toString()) || TableSizeHelper.getButtonWidth(annotations === null || annotations === void 0 ? void 0 : annotations.Label);

        // get width for rating or progress bar datafield
        const nTmpVisualizationWidth = TableSizeHelper.getWidthForDataFieldForAnnotation(dataModelObjectPath.targetObject).propertyWidth;
        if (nTmpVisualizationWidth > nTmpTextWidth) {
          width = nTmpVisualizationWidth;
        } else if (dataFieldActionText || annotations && (annotations.$Type === "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation" || annotations.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAction")) {
          // Add additional 1.8 rem to avoid showing ellipsis in some cases.
          nTmpTextWidth += 1.8;
          width = nTmpTextWidth;
        }
        width = width || this.getColumnWidthForChart(oThis, column, dataField, nTmpTextWidth, oMicroChartTitle);
      }
      return width;
    },
    /**
     * Method to get the width of the column containing the Chart.
     *
     * @function
     * @name getColumnWidthForChart
     * @param oThis The instance of the inner model of the table building block
     * @param column Defined width of the column, which is taken with priority if not null, undefined or empty
     * @param dataField Data Field
     * @param columnLabelWidth The width of the column label or button label
     * @param microChartTitle The object containing the title and the description of the MicroChart
     * @returns - Column width if defined, otherwise null (the width is treated as a rem value)
     */
    getColumnWidthForChart(oThis, column, dataField, columnLabelWidth, microChartTitle) {
      var _dataField$Target, _dataField$Target$$An;
      let chartSize,
        width = null;
      if (((_dataField$Target = dataField.Target) === null || _dataField$Target === void 0 ? void 0 : (_dataField$Target$$An = _dataField$Target.$AnnotationPath) === null || _dataField$Target$$An === void 0 ? void 0 : _dataField$Target$$An.indexOf("@com.sap.vocabularies.UI.v1.Chart")) !== -1) {
        switch (this.getChartSize(oThis, column)) {
          case "XS":
            chartSize = 4.4;
            break;
          case "S":
            chartSize = 4.6;
            break;
          case "M":
            chartSize = 5.5;
            break;
          case "L":
            chartSize = 6.9;
            break;
          default:
            chartSize = 5.3;
        }
        columnLabelWidth += 1.8;
        if (!this.getShowOnlyChart(oThis, column) && microChartTitle && (microChartTitle.Title.length || microChartTitle.Description.length)) {
          const tmpText = microChartTitle.Title.length > microChartTitle.Description.length ? microChartTitle.Title : microChartTitle.Description;
          const titleSize = TableSizeHelper.getButtonWidth(tmpText) + 7;
          const tmpWidth = titleSize > columnLabelWidth ? titleSize : columnLabelWidth;
          width = tmpWidth;
        } else if (columnLabelWidth > chartSize) {
          width = columnLabelWidth;
        } else {
          width = chartSize;
        }
      }
      return width;
    },
    /**
     * Method to add a margin class at the control.
     *
     * @function
     * @name getMarginClass
     * @param oCollection Title of the DataPoint
     * @param oDataField Value of the DataPoint
     * @param sVisualization
     * @param sFieldGroupHiddenExpressions Hidden expression contained in FieldGroup
     * @returns Adjusting the margin
     */
    getMarginClass: function (oCollection, oDataField, sVisualization, sFieldGroupHiddenExpressions) {
      let sBindingExpression,
        sClass = "";
      if (JSON.stringify(oCollection[oCollection.length - 1]) == JSON.stringify(oDataField)) {
        //If rating indicator is last element in fieldgroup, then the 0.5rem margin added by sapMRI class of interactive rating indicator on top and bottom must be nullified.
        if (sVisualization == "com.sap.vocabularies.UI.v1.VisualizationType/Rating") {
          sClass = "sapUiNoMarginBottom sapUiNoMarginTop";
        }
      } else if (sVisualization === "com.sap.vocabularies.UI.v1.VisualizationType/Rating") {
        //If rating indicator is NOT the last element in fieldgroup, then to maintain the 0.5rem spacing between cogetMarginClassntrols (as per UX spec),
        //only the top margin added by sapMRI class of interactive rating indicator must be nullified.

        sClass = "sapUiNoMarginTop";
      } else {
        sClass = "sapUiTinyMarginBottom";
      }
      if (sFieldGroupHiddenExpressions && sFieldGroupHiddenExpressions !== "true" && sFieldGroupHiddenExpressions !== "false") {
        const sHiddenExpressionResult = sFieldGroupHiddenExpressions.substring(sFieldGroupHiddenExpressions.indexOf("{=") + 2, sFieldGroupHiddenExpressions.lastIndexOf("}"));
        sBindingExpression = "{= " + sHiddenExpressionResult + " ? '" + sClass + "' : " + "''" + " }";
        return sBindingExpression;
      } else {
        return sClass;
      }
    },
    /**
     * Method to get VBox visibility.
     *
     * @param collection Collection of data fields in VBox
     * @param fieldGroupHiddenExpressions Hidden expression contained in FieldGroup
     * @param fieldGroup Data field containing the VBox
     * @returns Visibility expression
     */
    getVBoxVisibility: function (collection, fieldGroupHiddenExpressions, fieldGroup) {
      let allStatic = true;
      const hiddenPaths = [];
      if (fieldGroup["@com.sap.vocabularies.UI.v1.Hidden"]) {
        return fieldGroupHiddenExpressions;
      }
      for (const dataField of collection) {
        const hiddenAnnotationValue = dataField["@com.sap.vocabularies.UI.v1.Hidden"];
        if (hiddenAnnotationValue === undefined || hiddenAnnotationValue === false) {
          hiddenPaths.push(false);
          continue;
        }
        if (hiddenAnnotationValue === true) {
          hiddenPaths.push(true);
          continue;
        }
        if (hiddenAnnotationValue.$Path) {
          hiddenPaths.push(pathInModel(hiddenAnnotationValue.$Path));
          allStatic = false;
          continue;
        }
        if (typeof hiddenAnnotationValue === "object") {
          // Dynamic expression found in a field
          return fieldGroupHiddenExpressions;
        }
      }
      const hasAnyPathExpressions = constant(hiddenPaths.length > 0 && allStatic !== true);
      const hasAllHiddenStaticExpressions = constant(hiddenPaths.length > 0 && hiddenPaths.indexOf(false) === -1 && allStatic);
      return compileExpression(ifElse(hasAnyPathExpressions, formatResult(hiddenPaths, TableFormatter.getVBoxVisibility), ifElse(hasAllHiddenStaticExpressions, constant(false), constant(true))));
    },
    /**
     * Method to provide hidden filters to the table.
     *
     * @function
     * @name formatHiddenFilters
     * @param oHiddenFilter The hiddenFilters via context named filters (and key hiddenFilters) passed to Macro Table
     * @returns The string representation of the hidden filters
     */
    formatHiddenFilters: function (oHiddenFilter) {
      if (oHiddenFilter) {
        try {
          return JSON.stringify(oHiddenFilter);
        } catch (ex) {
          return undefined;
        }
      }
      return undefined;
    },
    /**
     * Method to get the stable ID of a table element (column or FieldGroup label).
     *
     * @function
     * @name getElementStableId
     * @param tableId Current object ID
     * @param elementId Element Id or suffix
     * @param dataModelObjectPath DataModelObjectPath of the dataField
     * @returns The stable ID for a given column
     */
    getElementStableId: function (tableId, elementId, dataModelObjectPath) {
      var _Value;
      if (!tableId) {
        return undefined;
      }
      const dataField = dataModelObjectPath.targetObject;
      let dataFieldPart;
      switch (dataField.$Type) {
        case "com.sap.vocabularies.UI.v1.DataFieldForAnnotation":
          dataFieldPart = dataField.Target.value;
          break;
        case "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation":
        case "com.sap.vocabularies.UI.v1.DataFieldForAction":
          dataFieldPart = dataField;
          break;
        default:
          dataFieldPart = ((_Value = dataField.Value) === null || _Value === void 0 ? void 0 : _Value.path) ?? "";
          break;
      }
      return generate([tableId, elementId, dataFieldPart]);
    },
    /**
     * Method to get the stable ID of the column.
     *
     * @function
     * @name getColumnStableId
     * @param id Current object ID
     * @param dataModelObjectPath DataModelObjectPath of the dataField
     * @returns The stable ID for a given column
     */
    getColumnStableId: function (id, dataModelObjectPath) {
      return TableHelper.getElementStableId(id, "C", dataModelObjectPath);
    },
    getFieldGroupLabelStableId: function (id, dataModelObjectPath) {
      return TableHelper.getElementStableId(id, "FGLabel", dataModelObjectPath);
    },
    /**
     * Method filters out properties which do not belong to the collection.
     *
     * @param aPropertyPaths The array of properties to be checked.
     * @param oCollectionContext The collection context to be used.
     * @returns The array of applicable properties.
     * @private
     */
    _filterNonApplicableProperties: function (aPropertyPaths, oCollectionContext) {
      return aPropertyPaths && aPropertyPaths.filter(function (sPropertyPath) {
        return oCollectionContext.getObject(`./${sPropertyPath}`);
      });
    },
    /**
     * Method to retreive the listed properties from the custom columns
     *
     * @param columns The table columns
     * @returns The list of available properties from the custom columns
     * @private
     */

    getPropertiesFromCustomColumns: function (columns) {
      // Add properties from the custom columns, this is required for the export of all the properties listed on a custom column
      if (!(columns !== null && columns !== void 0 && columns.length)) {
        return;
      }
      const propertiesFromCustomColumns = [];
      for (const column of columns) {
        var _column$properties;
        if ("properties" in column && (_column$properties = column.properties) !== null && _column$properties !== void 0 && _column$properties.length) {
          for (const property of column.properties) {
            if (propertiesFromCustomColumns.indexOf(property) === -1) {
              // only add property if it doesn't exist
              propertiesFromCustomColumns.push(property);
            }
          }
        }
      }
      return propertiesFromCustomColumns;
    },
    /**
     * Method to generate the binding information for a table row.
     *
     * @param oThis The instance of the inner model of the table building block
     * @returns - Returns the binding information of a table row
     */
    getRowsBindingInfo: function (oThis) {
      const dataModelPath = getInvolvedDataModelObjects(oThis.collection, oThis.contextPath);
      const path = getContextRelativeTargetObjectPath(dataModelPath) || getTargetObjectPath(dataModelPath);
      const oRowBinding = {
        ui5object: true,
        suspended: false,
        path: CommonHelper.addSingleQuotes(path),
        parameters: {
          $count: true
        },
        events: {}
      };
      if (oThis.tableDefinition.getObject("enable$select")) {
        // Don't add $select parameter in case of an analytical query, this isn't supported by the model
        const sSelect = TableHelper.create$Select(oThis);
        if (sSelect) {
          oRowBinding.parameters.$select = `'${sSelect}'`;
        }
      }
      if (oThis.tableDefinition.getObject("enable$$getKeepAliveContext")) {
        // we later ensure in the delegate only one list binding for a given targetCollectionPath has the flag $$getKeepAliveContext
        oRowBinding.parameters.$$getKeepAliveContext = true;
      }
      oRowBinding.parameters.$$groupId = CommonHelper.addSingleQuotes("$auto.Workers");
      oRowBinding.parameters.$$updateGroupId = CommonHelper.addSingleQuotes("$auto");
      oRowBinding.parameters.$$ownRequest = true;
      oRowBinding.parameters.$$patchWithoutSideEffects = true;
      oRowBinding.events.patchSent = CommonHelper.addSingleQuotes(".editFlow.handlePatchSent");
      oRowBinding.events.dataReceived = CommonHelper.addSingleQuotes("API.onInternalDataReceived");
      oRowBinding.events.dataRequested = CommonHelper.addSingleQuotes("API.onInternalDataRequested");
      // recreate an empty row when one is activated
      oRowBinding.events.createActivate = CommonHelper.addSingleQuotes(".editFlow.handleCreateActivate");
      if (oThis.onContextChange !== undefined && oThis.onContextChange !== null) {
        oRowBinding.events.change = CommonHelper.addSingleQuotes(oThis.onContextChange);
      }
      return CommonHelper.objectToString(oRowBinding);
    },
    /**
     * Method to check the validity of the fields in the creation row.
     *
     * @function
     * @name validateCreationRowFields
     * @param oFieldValidityObject Current Object holding the fields
     * @returns `true` if all the fields in the creation row are valid, `false` otherwise
     */
    validateCreationRowFields: function (oFieldValidityObject) {
      if (!oFieldValidityObject) {
        return false;
      }
      return Object.keys(oFieldValidityObject).length > 0 && Object.keys(oFieldValidityObject).every(function (key) {
        return oFieldValidityObject[key]["validity"];
      });
    },
    /**
     * Method to get the expression for the 'press' event for the DataFieldForActionButton.
     *
     * @function
     * @name pressEventDataFieldForActionButton
     * @param oThis Current object
     * @param oDataField Value of the DataPoint
     * @param sEntitySetName Name of the EntitySet
     * @param sOperationAvailableMap OperationAvailableMap as stringified JSON object
     * @param oActionContext Action object
     * @param bIsNavigable Action either triggers navigation or not
     * @param bEnableAutoScroll Action either triggers scrolling to the newly created items in the related table or not
     * @param sDefaultValuesExtensionFunction Function name to prefill dialog parameters
     * @returns The binding expression
     */
    pressEventDataFieldForActionButton: function (oThis, oDataField, sEntitySetName, sOperationAvailableMap, oActionContext, bIsNavigable, bEnableAutoScroll, sDefaultValuesExtensionFunction) {
      const sActionName = oDataField.Action,
        sAnnotationTargetEntityType = oThis && oThis.collection.getObject("$Type"),
        bStaticAction = this._isStaticAction(oActionContext, sActionName) || this._isActionOverloadOnDifferentType(sActionName, sAnnotationTargetEntityType),
        oParams = {
          contexts: !bStaticAction ? "${internal>selectedContexts}" : null,
          bStaticAction: bStaticAction ? bStaticAction : undefined,
          entitySetName: CommonHelper.addSingleQuotes(sEntitySetName),
          applicableContext: !bStaticAction ? "${internal>dynamicActions/" + oDataField.Action + "/aApplicable/}" : null,
          notApplicableContext: !bStaticAction ? "${internal>dynamicActions/" + oDataField.Action + "/aNotApplicable/}" : null,
          isNavigable: bIsNavigable,
          enableAutoScroll: bEnableAutoScroll,
          defaultValuesExtensionFunction: sDefaultValuesExtensionFunction ? "'" + sDefaultValuesExtensionFunction + "'" : undefined
        };
      return ActionHelper.getPressEventDataFieldForActionButton(oThis.id, oDataField, oParams, sOperationAvailableMap);
    },
    /**
     * Method to determine the binding expression for 'enabled' property of DataFieldForAction and DataFieldForIBN actions.
     *
     * @function
     * @name isDataFieldForActionEnabled
     * @param oThis The instance of the table control
     * @param oDataField The value of the data field
     * @param oRequiresContext RequiresContext for IBN
     * @param bIsDataFieldForIBN Flag for IBN
     * @param oActionContext The instance of the action
     * @param vActionEnabled Status of action (single or multiselect)
     * @returns A binding expression to define the 'enabled' property of the action
     */
    isDataFieldForActionEnabled: function (oThis, oDataField, oRequiresContext, bIsDataFieldForIBN, oActionContext, vActionEnabled) {
      const sActionName = oDataField.Action,
        sAnnotationTargetEntityType = oThis && oThis.collection.getObject("$Type"),
        oTableDefinition = oThis && oThis.tableDefinition && oThis.tableDefinition.getObject(),
        bStaticAction = this._isStaticAction(oActionContext, sActionName),
        isAnalyticalTable = oTableDefinition && oTableDefinition.enableAnalytics;

      // Check for action overload on a different Entity type.
      // If yes, table row selection is not required to enable this action.
      if (!bIsDataFieldForIBN && this._isActionOverloadOnDifferentType(sActionName, sAnnotationTargetEntityType)) {
        // Action overload defined on different entity type
        const oOperationAvailableMap = oTableDefinition && JSON.parse(oTableDefinition.operationAvailableMap);
        if (oOperationAvailableMap && oOperationAvailableMap.hasOwnProperty(sActionName)) {
          // Core.OperationAvailable annotation defined for the action.
          // Need to refer to internal model for enabled property of the dynamic action.
          // return compileBinding(bindingExpression("dynamicActions/" + sActionName + "/bEnabled", "internal"), true);
          return "{= ${internal>dynamicActions/" + sActionName + "/bEnabled} }";
        }
        // Consider the action just like any other static DataFieldForAction.
        return true;
      }
      if (!oRequiresContext || bStaticAction) {
        if (bIsDataFieldForIBN) {
          const sEntitySet = oThis.collection.getPath();
          const oMetaModel = oThis.collection.getModel();
          if (vActionEnabled === "false" && !isAnalyticalTable) {
            Log.warning("NavigationAvailable as false is incorrect usage");
            return false;
          } else if (!isAnalyticalTable && oDataField && oDataField.NavigationAvailable && oDataField.NavigationAvailable.$Path && oMetaModel.getObject(sEntitySet + "/$Partner") === oDataField.NavigationAvailable.$Path.split("/")[0]) {
            return "{= ${" + vActionEnabled.substr(vActionEnabled.indexOf("/") + 1, vActionEnabled.length) + "}";
          } else {
            return true;
          }
        }
        return true;
      }
      let sDataFieldForActionEnabledExpression = "",
        sNumberOfSelectedContexts,
        sAction;
      if (bIsDataFieldForIBN) {
        if (vActionEnabled === "true" || isAnalyticalTable) {
          sDataFieldForActionEnabledExpression = "%{internal>numberOfSelectedContexts} >= 1";
        } else if (vActionEnabled === "false") {
          Log.warning("NavigationAvailable as false is incorrect usage");
          return false;
        } else {
          sNumberOfSelectedContexts = "%{internal>numberOfSelectedContexts} >= 1";
          sAction = "${internal>ibn/" + oDataField.SemanticObject + "-" + oDataField.Action + "/bEnabled" + "}";
          sDataFieldForActionEnabledExpression = sNumberOfSelectedContexts + " && " + sAction;
        }
      } else {
        sNumberOfSelectedContexts = ActionHelper.getNumberOfContextsExpression(vActionEnabled);
        sAction = "${internal>dynamicActions/" + oDataField.Action + "/bEnabled" + "}";
        sDataFieldForActionEnabledExpression = sNumberOfSelectedContexts + " && " + sAction;
      }
      return "{= " + sDataFieldForActionEnabledExpression + "}";
    },
    /**
     * Method to get press event expression for CreateButton.
     *
     * @function
     * @name pressEventForCreateButton
     * @param oThis Current Object
     * @param bCmdExecutionFlag Flag to indicate that the function is called from CMD Execution
     * @returns The binding expression for the press event of the create button
     */
    pressEventForCreateButton: function (oThis, bCmdExecutionFlag) {
      const sCreationMode = oThis.creationMode;
      let oParams;
      const sMdcTable = bCmdExecutionFlag ? "${$source>}.getParent()" : "${$source>}.getParent().getParent().getParent()";
      let sRowBinding = sMdcTable + ".getRowBinding() || " + sMdcTable + ".data('rowsBindingInfo').path";
      switch (sCreationMode) {
        case CreationMode.External:
          // navigate to external target for creating new entries
          // TODO: Add required parameters
          oParams = {
            creationMode: CommonHelper.addSingleQuotes(CreationMode.External),
            outbound: CommonHelper.addSingleQuotes(oThis.createOutbound)
          };
          break;
        case CreationMode.CreationRow:
          oParams = {
            creationMode: CommonHelper.addSingleQuotes(CreationMode.CreationRow),
            creationRow: "${$source>}",
            createAtEnd: oThis.createAtEnd !== undefined ? oThis.createAtEnd : false
          };
          sRowBinding = "${$source>}.getParent()._getRowBinding()";
          break;
        case CreationMode.NewPage:
        case CreationMode.Inline:
          oParams = {
            creationMode: CommonHelper.addSingleQuotes(sCreationMode),
            createAtEnd: oThis.createAtEnd !== undefined ? oThis.createAtEnd : false,
            tableId: CommonHelper.addSingleQuotes(oThis.id)
          };
          if (oThis.createNewAction) {
            oParams.newAction = CommonHelper.addSingleQuotes(oThis.createNewAction);
          }
          break;
        case CreationMode.InlineCreationRows:
          return CommonHelper.generateFunction("._editFlow.createEmptyRowsAndFocus", sMdcTable);
        default:
          // unsupported
          return undefined;
      }
      return CommonHelper.generateFunction(".editFlow.createDocument", sRowBinding, CommonHelper.objectToString(oParams));
    },
    getIBNData: function (oThis) {
      const outboundDetail = oThis.createOutboundDetail;
      if (outboundDetail) {
        const oIBNData = {
          semanticObject: CommonHelper.addSingleQuotes(outboundDetail.semanticObject),
          action: CommonHelper.addSingleQuotes(outboundDetail.action)
        };
        return CommonHelper.objectToString(oIBNData);
      }
    },
    _getExpressionForDeleteButton: function (value, fullContextPath) {
      if (typeof value === "string") {
        return CommonHelper.addSingleQuotes(value, true);
      } else {
        const expression = getExpressionFromAnnotation(value);
        if (isConstant(expression) || isPathInModelExpression(expression)) {
          const valueExpression = formatValueRecursively(expression, fullContextPath);
          return compileExpression(valueExpression);
        }
      }
    },
    /**
     * Method to get press event expression for 'Delete' button.
     *
     * @function
     * @name pressEventForDeleteButton
     * @param oThis Current Object
     * @param sEntitySetName EntitySet name
     * @param oHeaderInfo Header Info
     * @param fullcontextPath Context Path
     * @returns The binding expression for the press event of the 'Delete' button
     */
    pressEventForDeleteButton: function (oThis, sEntitySetName, oHeaderInfo, fullcontextPath) {
      const sDeletableContexts = "${internal>deletableContexts}";
      let sTitleExpression, sDescriptionExpression;
      if (oHeaderInfo !== null && oHeaderInfo !== void 0 && oHeaderInfo.Title) {
        sTitleExpression = this._getExpressionForDeleteButton(oHeaderInfo.Title.Value, fullcontextPath);
      }
      if (oHeaderInfo !== null && oHeaderInfo !== void 0 && oHeaderInfo.Description) {
        sDescriptionExpression = this._getExpressionForDeleteButton(oHeaderInfo.Description.Value, fullcontextPath);
      }
      const oParams = {
        id: CommonHelper.addSingleQuotes(oThis.id),
        entitySetName: CommonHelper.addSingleQuotes(sEntitySetName),
        numberOfSelectedContexts: "${internal>selectedContexts}.length",
        unSavedContexts: "${internal>unSavedContexts}",
        lockedContexts: "${internal>lockedContexts}",
        createModeContexts: "${internal>createModeContexts}",
        draftsWithDeletableActive: "${internal>draftsWithDeletableActive}",
        draftsWithNonDeletableActive: "${internal>draftsWithNonDeletableActive}",
        controlId: "${internal>controlId}",
        title: sTitleExpression,
        description: sDescriptionExpression,
        selectedContexts: "${internal>selectedContexts}"
      };
      return CommonHelper.generateFunction(".editFlow.deleteMultipleDocuments", sDeletableContexts, CommonHelper.objectToString(oParams));
    },
    /**
     * Method to set the visibility of the label for the column header.
     *
     * @function
     * @name setHeaderLabelVisibility
     * @param datafield DataField
     * @param dataFieldCollection List of items inside a fieldgroup (if any)
     * @returns `true` if the header label needs to be visible else false.
     */
    setHeaderLabelVisibility: function (datafield, dataFieldCollection) {
      // If Inline button/navigation action, return false, else true;
      if (!dataFieldCollection) {
        if (datafield.$Type.indexOf("DataFieldForAction") > -1 && datafield.Inline) {
          return false;
        }
        if (datafield.$Type.indexOf("DataFieldForIntentBasedNavigation") > -1 && datafield.Inline) {
          return false;
        }
        return true;
      }

      // In Fieldgroup, If NOT all datafield/datafieldForAnnotation exists with hidden, return true;
      return dataFieldCollection.some(function (oDC) {
        if ((oDC.$Type === "com.sap.vocabularies.UI.v1.DataField" || oDC.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAnnotation") && oDC["@com.sap.vocabularies.UI.v1.Hidden"] !== true) {
          return true;
        }
      });
    },
    /**
     * Method to get Text from DataFieldForAnnotation into Column.
     *
     * @function
     * @name getTextOnActionField
     * @param oDataField DataPoint's Value
     * @param oContext Context object of the LineItem
     * @returns String from label referring to action text
     */
    getTextOnActionField: function (oDataField, oContext) {
      if (oDataField.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAction" || oDataField.$Type === "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation") {
        return oDataField.Label;
      }
      // for FieldGroup containing DataFieldForAnnotation
      if (oDataField.$Type === "com.sap.vocabularies.UI.v1.DataFieldForAnnotation" && oContext.context.getObject("Target/$AnnotationPath").indexOf("@" + "com.sap.vocabularies.UI.v1.FieldGroup") > -1) {
        const sPathDataFields = "Target/$AnnotationPath/Data/";
        const aMultipleLabels = [];
        for (const i in oContext.context.getObject(sPathDataFields)) {
          if (oContext.context.getObject(`${sPathDataFields + i}/$Type`) === "com.sap.vocabularies.UI.v1.DataFieldForAction" || oContext.context.getObject(`${sPathDataFields + i}/$Type`) === "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation") {
            aMultipleLabels.push(oContext.context.getObject(`${sPathDataFields + i}/Label`));
          }
        }
        // In case there are multiple actions inside a Field Group select the largest Action Label
        if (aMultipleLabels.length > 1) {
          return aMultipleLabels.reduce(function (a, b) {
            return a.length > b.length ? a : b;
          });
        } else {
          return aMultipleLabels.length === 0 ? undefined : aMultipleLabels.toString();
        }
      }
      return undefined;
    },
    _getResponsiveTableColumnSettings: function (oThis, oColumn) {
      if (oThis.tableType === "ResponsiveTable") {
        return oColumn.settings;
      }
      return null;
    },
    getChartSize: function (oThis, oColumn) {
      const settings = this._getResponsiveTableColumnSettings(oThis, oColumn);
      if (settings && settings.microChartSize) {
        return settings.microChartSize;
      }
      return "XS";
    },
    getShowOnlyChart: function (oThis, oColumn) {
      const settings = this._getResponsiveTableColumnSettings(oThis, oColumn);
      if (settings && settings.showMicroChartLabel) {
        return !settings.showMicroChartLabel;
      }
      return true;
    },
    getDelegate: function (table, isALP, entityName) {
      let oDelegate;
      if (isALP === "true") {
        // We don't support TreeTable in ALP
        if (table.control.type === "TreeTable") {
          throw new Error("TreeTable not supported in Analytical ListPage");
        }
        oDelegate = {
          name: "sap/fe/macros/table/delegates/ALPTableDelegate",
          payload: {
            collectionName: entityName
          }
        };
      } else if (table.control.type === "TreeTable") {
        oDelegate = {
          name: "sap/fe/macros/table/delegates/TreeTableDelegate",
          payload: {
            hierarchyQualifier: table.control.hierarchyQualifier,
            initialExpansionLevel: table.annotation.initialExpansionLevel
          }
        };
      } else {
        oDelegate = {
          name: "sap/fe/macros/table/delegates/TableDelegate"
        };
      }
      return JSON.stringify(oDelegate);
    },
    setIBNEnablement: function (oInternalModelContext, oNavigationAvailableMap, aSelectedContexts) {
      for (const sKey in oNavigationAvailableMap) {
        oInternalModelContext.setProperty(`ibn/${sKey}`, {
          bEnabled: false,
          aApplicable: [],
          aNotApplicable: []
        });
        const aApplicable = [],
          aNotApplicable = [];
        const sProperty = oNavigationAvailableMap[sKey];
        for (let i = 0; i < aSelectedContexts.length; i++) {
          const oSelectedContext = aSelectedContexts[i];
          if (oSelectedContext.getObject(sProperty)) {
            oInternalModelContext.getModel().setProperty(`${oInternalModelContext.getPath()}/ibn/${sKey}/bEnabled`, true);
            aApplicable.push(oSelectedContext);
          } else {
            aNotApplicable.push(oSelectedContext);
          }
        }
        oInternalModelContext.getModel().setProperty(`${oInternalModelContext.getPath()}/ibn/${sKey}/aApplicable`, aApplicable);
        oInternalModelContext.getModel().setProperty(`${oInternalModelContext.getPath()}/ibn/${sKey}/aNotApplicable`, aNotApplicable);
      }
    }
  };
  TableHelper.getNavigationAvailableMap.requiresIContext = true;
  TableHelper.getTextOnActionField.requiresIContext = true;
  return TableHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/TableHelper", ["sap/base/Log","sap/fe/core/converters/controls/Common/DataVisualization","sap/fe/core/converters/ManifestSettings","sap/fe/core/converters/MetaModelConverter","sap/fe/core/formatters/TableFormatter","sap/fe/core/helpers/BindingToolkit","sap/fe/core/helpers/StableIdHelper","sap/fe/core/library","sap/fe/core/templating/DataModelPathHelper","sap/fe/core/templating/PropertyHelper","sap/fe/core/templating/UIFormatters","sap/fe/macros/CommonHelper","sap/fe/macros/field/FieldTemplating","sap/fe/macros/internal/helpers/ActionHelper","sap/fe/macros/table/TableSizeHelper","sap/ui/mdc/enum/EditMode"],function(e,t,n,i,a,o,r,l,s,c,u,d,g,f,v,p){"use strict";var b=g.formatValueRecursively;var m=u.getEditMode;var h=c.isImageURL;var $=c.hasText;var A=s.getTargetObjectPath;var F=s.getContextRelativeTargetObjectPath;var y=r.generate;var O=o.pathInModel;var C=o.isPathInModelExpression;var I=o.isConstant;var T=o.ifElse;var S=o.getExpressionFromAnnotation;var D=o.formatResult;var x=o.constant;var P=o.compileExpression;var j=i.getInvolvedDataModelObjects;var N=n.TemplateType;var E=t.getUiControl;const U=l.CreationMode;const M={_isStaticAction:function(e,t){let n;if(e){if(Array.isArray(e)){const i=this._getActionOverloadEntityType(t);if(i){n=e.find(function(e){return e.$IsBound&&e.$Parameter[0].$Type===i})}else{n=e[0]}}else{n=e}}return!!n&&n.$IsBound&&n.$Parameter[0].$isCollection},_getActionOverloadEntityType:function(e){if(e&&e.indexOf("(")>-1){const t=e.split("(");return t[t.length-1].replaceAll(")","")}return undefined},_isActionOverloadOnDifferentType:function(e,t){const n=this._getActionOverloadEntityType(e);return!!n&&t!==n},getMessageForDraftValidation:function(e){var t,n;const i=e.collection.getObject("./@");const a=(t=i["@com.sap.vocabularies.Common.v1.Messages"])===null||t===void 0?void 0:t.$Path;if(a&&((n=e.tableDefinition)===null||n===void 0?void 0:n.getProperty("/template"))===N.ObjectPage&&!!Object.keys(i).find(e=>{var t;const n=i[e];return n&&n.$Type==="com.sap.vocabularies.Common.v1.SideEffectsType"&&!n.SourceProperties&&!n.SourceEntities&&((t=n.TargetProperties)===null||t===void 0?void 0:t.indexOf(a))>-1})){return a}return""},getFieldsRequestedByPresentationVariant:function(e){var t;return((t=e.RequestAtLeast)===null||t===void 0?void 0:t.map(e=>e.value))||[]},getNavigationAvailableFieldsFromLineItem:function(e){const t=[];(e.getObject()||[]).forEach(function(e){var n;if(e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation"&&!e.Inline&&!e.Determining&&(n=e.NavigationAvailable)!==null&&n!==void 0&&n.$Path){t.push(e.NavigationAvailable.$Path)}});return t},getNavigationAvailableMap:function(e){const t={};e.forEach(function(e){const n=`${e.SemanticObject}-${e.Action}`;if(e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation"&&!e.Inline&&e.RequiresContext){if(e.NavigationAvailable!==undefined){t[n]=e.NavigationAvailable.$Path?e.NavigationAvailable.$Path:e.NavigationAvailable}}});return JSON.stringify(t)},getUiLineItem:function(e){return E(e,"@com.sap.vocabularies.UI.v1.LineItem")},create$Select:function(e){const t=e.collection;const n=[];const i=M.getUiLineItem(e.metaPath);const a=d.getTargetCollection(t);function o(e){if(e&&!n.includes(e)&&e.indexOf("/")!==0){n.push(e)}}function r(e){if(e!==null&&e!==void 0&&e.length){e.forEach(o)}}const l=e.tableDefinition.getObject("columns");const s=this.getPropertiesFromCustomColumns(l);if(s!==null&&s!==void 0&&s.length){r(s)}if(i.getPath().indexOf("@com.sap.vocabularies.UI.v1.LineItem")>-1){var c,u,g,f;const n=j(e.metaPath).targetObject;const l=(e.tableDefinition.getObject("operationAvailableProperties")||"").split(",");const s=M._filterNonApplicableProperties(l,t);const d=(t.getObject(`${a}/@com.sap.vocabularies.Common.v1.SemanticKey`)||[]).map(e=>e.$PropertyPath);if((n===null||n===void 0?void 0:n.$Type)==="com.sap.vocabularies.UI.v1.PresentationVariantType"){r(M.getFieldsRequestedByPresentationVariant(n))}r(M.getNavigationAvailableFieldsFromLineItem(i));r(s);r(d);o(M.getMessageForDraftValidation(e));o((c=t.getObject(`${a}@Org.OData.Capabilities.V1.DeleteRestrictions`))===null||c===void 0?void 0:(u=c.Deletable)===null||u===void 0?void 0:u.$Path);o((g=t.getObject(`${a}@Org.OData.Capabilities.V1.UpdateRestrictions`))===null||g===void 0?void 0:(f=g.Updatable)===null||f===void 0?void 0:f.$Path)}return n.join(",")},getColumnWidth:function(e,t,n,i,o,r,l){if(t.width){return t.width}if(e.enableAutoColumnWidth===true){let s;s=this.getColumnWidthForImage(o)||this.getColumnWidthForDataField(e,t,n,i,o,l)||undefined;if(s){return r?`${s}rem`:s}s=P(D([O("/editMode","ui"),O("tablePropertiesAvailable","internal"),t.name,r],a.getColumnWidth));return s}return undefined},getColumnWidthForImage:function(e){var t,n,i,a,o,r,l,s,c,u,d,g;let f=null;const v=(t=e.targetObject)===null||t===void 0?void 0:(n=t.Value)===null||n===void 0?void 0:(i=n.$target)===null||i===void 0?void 0:i.annotations;const b=(a=e.targetObject)===null||a===void 0?void 0:(o=a.Value)===null||o===void 0?void 0:(r=o.$target)===null||r===void 0?void 0:r.type;if((l=e.targetObject)!==null&&l!==void 0&&l.Value&&m((s=e.targetObject.Value)===null||s===void 0?void 0:s.$target,e,false,false,e.targetObject)===p.Display){var A,F;const t=$(e.targetObject.Value.$target);if(b==="Edm.Stream"&&!t&&v!==null&&v!==void 0&&(A=v.Core)!==null&&A!==void 0&&(F=A.MediaType)!==null&&F!==void 0&&F.includes("image/")){f=6.2}}else if(v&&(h((c=e.targetObject)===null||c===void 0?void 0:(u=c.Value)===null||u===void 0?void 0:u.$target)||v!==null&&v!==void 0&&(d=v.Core)!==null&&d!==void 0&&(g=d.MediaType)!==null&&g!==void 0&&g.includes("image/"))){f=6.2}return f},getColumnWidthForDataField:function(e,t,n,i,a,o){var r,l;const s=(r=a.targetObject)===null||r===void 0?void 0:r.annotations;const c=(l=a.targetObject)===null||l===void 0?void 0:l.$Type;let u=null;if(c==="com.sap.vocabularies.UI.v1.DataFieldForAction"||c==="com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation"||c==="com.sap.vocabularies.UI.v1.DataFieldForAnnotation"&&n.Target.$AnnotationPath.indexOf(`@${"com.sap.vocabularies.UI.v1.FieldGroup"}`)===-1){var d;let r;r=v.getButtonWidth(i)||v.getButtonWidth(n===null||n===void 0?void 0:(d=n.Label)===null||d===void 0?void 0:d.toString())||v.getButtonWidth(s===null||s===void 0?void 0:s.Label);const l=v.getWidthForDataFieldForAnnotation(a.targetObject).propertyWidth;if(l>r){u=l}else if(i||s&&(s.$Type==="com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation"||s.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAction")){r+=1.8;u=r}u=u||this.getColumnWidthForChart(e,t,n,r,o)}return u},getColumnWidthForChart(e,t,n,i,a){var o,r;let l,s=null;if(((o=n.Target)===null||o===void 0?void 0:(r=o.$AnnotationPath)===null||r===void 0?void 0:r.indexOf("@com.sap.vocabularies.UI.v1.Chart"))!==-1){switch(this.getChartSize(e,t)){case"XS":l=4.4;break;case"S":l=4.6;break;case"M":l=5.5;break;case"L":l=6.9;break;default:l=5.3}i+=1.8;if(!this.getShowOnlyChart(e,t)&&a&&(a.Title.length||a.Description.length)){const e=a.Title.length>a.Description.length?a.Title:a.Description;const t=v.getButtonWidth(e)+7;const n=t>i?t:i;s=n}else if(i>l){s=i}else{s=l}}return s},getMarginClass:function(e,t,n,i){let a,o="";if(JSON.stringify(e[e.length-1])==JSON.stringify(t)){if(n=="com.sap.vocabularies.UI.v1.VisualizationType/Rating"){o="sapUiNoMarginBottom sapUiNoMarginTop"}}else if(n==="com.sap.vocabularies.UI.v1.VisualizationType/Rating"){o="sapUiNoMarginTop"}else{o="sapUiTinyMarginBottom"}if(i&&i!=="true"&&i!=="false"){const e=i.substring(i.indexOf("{=")+2,i.lastIndexOf("}"));a="{= "+e+" ? '"+o+"' : "+"''"+" }";return a}else{return o}},getVBoxVisibility:function(e,t,n){let i=true;const o=[];if(n["@com.sap.vocabularies.UI.v1.Hidden"]){return t}for(const n of e){const e=n["@com.sap.vocabularies.UI.v1.Hidden"];if(e===undefined||e===false){o.push(false);continue}if(e===true){o.push(true);continue}if(e.$Path){o.push(O(e.$Path));i=false;continue}if(typeof e==="object"){return t}}const r=x(o.length>0&&i!==true);const l=x(o.length>0&&o.indexOf(false)===-1&&i);return P(T(r,D(o,a.getVBoxVisibility),T(l,x(false),x(true))))},formatHiddenFilters:function(e){if(e){try{return JSON.stringify(e)}catch(e){return undefined}}return undefined},getElementStableId:function(e,t,n){var i;if(!e){return undefined}const a=n.targetObject;let o;switch(a.$Type){case"com.sap.vocabularies.UI.v1.DataFieldForAnnotation":o=a.Target.value;break;case"com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation":case"com.sap.vocabularies.UI.v1.DataFieldForAction":o=a;break;default:o=((i=a.Value)===null||i===void 0?void 0:i.path)??"";break}return y([e,t,o])},getColumnStableId:function(e,t){return M.getElementStableId(e,"C",t)},getFieldGroupLabelStableId:function(e,t){return M.getElementStableId(e,"FGLabel",t)},_filterNonApplicableProperties:function(e,t){return e&&e.filter(function(e){return t.getObject(`./${e}`)})},getPropertiesFromCustomColumns:function(e){if(!(e!==null&&e!==void 0&&e.length)){return}const t=[];for(const i of e){var n;if("properties"in i&&(n=i.properties)!==null&&n!==void 0&&n.length){for(const e of i.properties){if(t.indexOf(e)===-1){t.push(e)}}}}return t},getRowsBindingInfo:function(e){const t=j(e.collection,e.contextPath);const n=F(t)||A(t);const i={ui5object:true,suspended:false,path:d.addSingleQuotes(n),parameters:{$count:true},events:{}};if(e.tableDefinition.getObject("enable$select")){const t=M.create$Select(e);if(t){i.parameters.$select=`'${t}'`}}if(e.tableDefinition.getObject("enable$$getKeepAliveContext")){i.parameters.$$getKeepAliveContext=true}i.parameters.$$groupId=d.addSingleQuotes("$auto.Workers");i.parameters.$$updateGroupId=d.addSingleQuotes("$auto");i.parameters.$$ownRequest=true;i.parameters.$$patchWithoutSideEffects=true;i.events.patchSent=d.addSingleQuotes(".editFlow.handlePatchSent");i.events.dataReceived=d.addSingleQuotes("API.onInternalDataReceived");i.events.dataRequested=d.addSingleQuotes("API.onInternalDataRequested");i.events.createActivate=d.addSingleQuotes(".editFlow.handleCreateActivate");if(e.onContextChange!==undefined&&e.onContextChange!==null){i.events.change=d.addSingleQuotes(e.onContextChange)}return d.objectToString(i)},validateCreationRowFields:function(e){if(!e){return false}return Object.keys(e).length>0&&Object.keys(e).every(function(t){return e[t]["validity"]})},pressEventDataFieldForActionButton:function(e,t,n,i,a,o,r,l){const s=t.Action,c=e&&e.collection.getObject("$Type"),u=this._isStaticAction(a,s)||this._isActionOverloadOnDifferentType(s,c),g={contexts:!u?"${internal>selectedContexts}":null,bStaticAction:u?u:undefined,entitySetName:d.addSingleQuotes(n),applicableContext:!u?"${internal>dynamicActions/"+t.Action+"/aApplicable/}":null,notApplicableContext:!u?"${internal>dynamicActions/"+t.Action+"/aNotApplicable/}":null,isNavigable:o,enableAutoScroll:r,defaultValuesExtensionFunction:l?"'"+l+"'":undefined};return f.getPressEventDataFieldForActionButton(e.id,t,g,i)},isDataFieldForActionEnabled:function(t,n,i,a,o,r){const l=n.Action,s=t&&t.collection.getObject("$Type"),c=t&&t.tableDefinition&&t.tableDefinition.getObject(),u=this._isStaticAction(o,l),d=c&&c.enableAnalytics;if(!a&&this._isActionOverloadOnDifferentType(l,s)){const e=c&&JSON.parse(c.operationAvailableMap);if(e&&e.hasOwnProperty(l)){return"{= ${internal>dynamicActions/"+l+"/bEnabled} }"}return true}if(!i||u){if(a){const i=t.collection.getPath();const a=t.collection.getModel();if(r==="false"&&!d){e.warning("NavigationAvailable as false is incorrect usage");return false}else if(!d&&n&&n.NavigationAvailable&&n.NavigationAvailable.$Path&&a.getObject(i+"/$Partner")===n.NavigationAvailable.$Path.split("/")[0]){return"{= ${"+r.substr(r.indexOf("/")+1,r.length)+"}"}else{return true}}return true}let g="",v,p;if(a){if(r==="true"||d){g="%{internal>numberOfSelectedContexts} >= 1"}else if(r==="false"){e.warning("NavigationAvailable as false is incorrect usage");return false}else{v="%{internal>numberOfSelectedContexts} >= 1";p="${internal>ibn/"+n.SemanticObject+"-"+n.Action+"/bEnabled"+"}";g=v+" && "+p}}else{v=f.getNumberOfContextsExpression(r);p="${internal>dynamicActions/"+n.Action+"/bEnabled"+"}";g=v+" && "+p}return"{= "+g+"}"},pressEventForCreateButton:function(e,t){const n=e.creationMode;let i;const a=t?"${$source>}.getParent()":"${$source>}.getParent().getParent().getParent()";let o=a+".getRowBinding() || "+a+".data('rowsBindingInfo').path";switch(n){case U.External:i={creationMode:d.addSingleQuotes(U.External),outbound:d.addSingleQuotes(e.createOutbound)};break;case U.CreationRow:i={creationMode:d.addSingleQuotes(U.CreationRow),creationRow:"${$source>}",createAtEnd:e.createAtEnd!==undefined?e.createAtEnd:false};o="${$source>}.getParent()._getRowBinding()";break;case U.NewPage:case U.Inline:i={creationMode:d.addSingleQuotes(n),createAtEnd:e.createAtEnd!==undefined?e.createAtEnd:false,tableId:d.addSingleQuotes(e.id)};if(e.createNewAction){i.newAction=d.addSingleQuotes(e.createNewAction)}break;case U.InlineCreationRows:return d.generateFunction("._editFlow.createEmptyRowsAndFocus",a);default:return undefined}return d.generateFunction(".editFlow.createDocument",o,d.objectToString(i))},getIBNData:function(e){const t=e.createOutboundDetail;if(t){const e={semanticObject:d.addSingleQuotes(t.semanticObject),action:d.addSingleQuotes(t.action)};return d.objectToString(e)}},_getExpressionForDeleteButton:function(e,t){if(typeof e==="string"){return d.addSingleQuotes(e,true)}else{const n=S(e);if(I(n)||C(n)){const e=b(n,t);return P(e)}}},pressEventForDeleteButton:function(e,t,n,i){const a="${internal>deletableContexts}";let o,r;if(n!==null&&n!==void 0&&n.Title){o=this._getExpressionForDeleteButton(n.Title.Value,i)}if(n!==null&&n!==void 0&&n.Description){r=this._getExpressionForDeleteButton(n.Description.Value,i)}const l={id:d.addSingleQuotes(e.id),entitySetName:d.addSingleQuotes(t),numberOfSelectedContexts:"${internal>selectedContexts}.length",unSavedContexts:"${internal>unSavedContexts}",lockedContexts:"${internal>lockedContexts}",createModeContexts:"${internal>createModeContexts}",draftsWithDeletableActive:"${internal>draftsWithDeletableActive}",draftsWithNonDeletableActive:"${internal>draftsWithNonDeletableActive}",controlId:"${internal>controlId}",title:o,description:r,selectedContexts:"${internal>selectedContexts}"};return d.generateFunction(".editFlow.deleteMultipleDocuments",a,d.objectToString(l))},setHeaderLabelVisibility:function(e,t){if(!t){if(e.$Type.indexOf("DataFieldForAction")>-1&&e.Inline){return false}if(e.$Type.indexOf("DataFieldForIntentBasedNavigation")>-1&&e.Inline){return false}return true}return t.some(function(e){if((e.$Type==="com.sap.vocabularies.UI.v1.DataField"||e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAnnotation")&&e["@com.sap.vocabularies.UI.v1.Hidden"]!==true){return true}})},getTextOnActionField:function(e,t){if(e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAction"||e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation"){return e.Label}if(e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAnnotation"&&t.context.getObject("Target/$AnnotationPath").indexOf("@"+"com.sap.vocabularies.UI.v1.FieldGroup")>-1){const e="Target/$AnnotationPath/Data/";const n=[];for(const i in t.context.getObject(e)){if(t.context.getObject(`${e+i}/$Type`)==="com.sap.vocabularies.UI.v1.DataFieldForAction"||t.context.getObject(`${e+i}/$Type`)==="com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation"){n.push(t.context.getObject(`${e+i}/Label`))}}if(n.length>1){return n.reduce(function(e,t){return e.length>t.length?e:t})}else{return n.length===0?undefined:n.toString()}}return undefined},_getResponsiveTableColumnSettings:function(e,t){if(e.tableType==="ResponsiveTable"){return t.settings}return null},getChartSize:function(e,t){const n=this._getResponsiveTableColumnSettings(e,t);if(n&&n.microChartSize){return n.microChartSize}return"XS"},getShowOnlyChart:function(e,t){const n=this._getResponsiveTableColumnSettings(e,t);if(n&&n.showMicroChartLabel){return!n.showMicroChartLabel}return true},getDelegate:function(e,t,n){let i;if(t==="true"){if(e.control.type==="TreeTable"){throw new Error("TreeTable not supported in Analytical ListPage")}i={name:"sap/fe/macros/table/delegates/ALPTableDelegate",payload:{collectionName:n}}}else if(e.control.type==="TreeTable"){i={name:"sap/fe/macros/table/delegates/TreeTableDelegate",payload:{hierarchyQualifier:e.control.hierarchyQualifier,initialExpansionLevel:e.annotation.initialExpansionLevel}}}else{i={name:"sap/fe/macros/table/delegates/TableDelegate"}}return JSON.stringify(i)},setIBNEnablement:function(e,t,n){for(const i in t){e.setProperty(`ibn/${i}`,{bEnabled:false,aApplicable:[],aNotApplicable:[]});const a=[],o=[];const r=t[i];for(let t=0;t<n.length;t++){const l=n[t];if(l.getObject(r)){e.getModel().setProperty(`${e.getPath()}/ibn/${i}/bEnabled`,true);a.push(l)}else{o.push(l)}}e.getModel().setProperty(`${e.getPath()}/ibn/${i}/aApplicable`,a);e.getModel().setProperty(`${e.getPath()}/ibn/${i}/aNotApplicable`,o)}}};M.getNavigationAvailableMap.requiresIContext=true;M.getTextOnActionField.requiresIContext=true;return M},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/TableRuntime-dbg", ["sap/base/Log", "sap/fe/core/ActionRuntime", "sap/fe/core/CommonUtils", "sap/fe/core/controllerextensions/BusyLocker", "sap/fe/core/helpers/DeleteHelper", "sap/fe/core/library", "sap/fe/macros/field/FieldRuntime", "sap/fe/macros/table/TableHelper"], function (Log, ActionRuntime, CommonUtils, BusyLocker, deleteHelper, FELibrary, FieldRuntime, TableHelper) {
  "use strict";

  const CreationMode = FELibrary.CreationMode;
  /**
   * Static class used by Table building block during runtime
   *
   * @private
   * @experimental This module is only for internal/experimental use!
   */
  const TableRuntime = {
    displayTableSettings: function (oEvent) {
      /*
      		 Temporary solution
      		 Wait for mdc Table to provide public api to either get button 'Settings' or fire event on this button
      		 */
      const oParent = oEvent.getSource().getParent(),
        oSettingsButton = sap.ui.getCore().byId(`${oParent.getId()}-settings`);
      CommonUtils.fireButtonPress(oSettingsButton);
    },
    executeConditionalActionShortcut: function (sButtonMatcher, oSource) {
      // Get the button related to keyboard shortcut
      const oMdcTable = oSource.getParent();
      if (sButtonMatcher !== CreationMode.CreationRow) {
        const oButton = oMdcTable.getActions().reduce(function (aActionButtons, oActionToolbarAction) {
          return aActionButtons.concat(oActionToolbarAction.getAction());
        }, []).find(function (oActionButton) {
          return oActionButton.getId().endsWith(sButtonMatcher);
        });
        CommonUtils.fireButtonPress(oButton);
      } else {
        const oCreationRow = oMdcTable.getAggregation("creationRow");
        if (oCreationRow && oCreationRow.getApplyEnabled() && oCreationRow.getVisible()) {
          oCreationRow.fireApply();
        }
      }
    },
    setContexts: function (oTable, sDeletablePath, draft, sCollection, sNavigationAvailableMap, sActionsMultiselectDisabled, sUpdatablePath) {
      BusyLocker.lock(oTable);
      return TableRuntime.setContextsAsync(oTable, sDeletablePath, draft, sCollection, sNavigationAvailableMap, sActionsMultiselectDisabled, sUpdatablePath).then(() => {
        Log.info("Selections updated");
      }).catch(error => {
        Log.error(error);
      }).finally(() => {
        BusyLocker.unlock(oTable);
      });
    },
    setContextsAsync: async function (oTable, sDeletablePath, draft, sCollection, sNavigationAvailableMap, sActionsMultiselectDisabled, sUpdatablePath) {
      try {
        const aActionsMultiselectDisabled = sActionsMultiselectDisabled ? sActionsMultiselectDisabled.split(",") : [];
        const oActionOperationAvailableMap = JSON.parse(sCollection);
        const oNavigationAvailableMap = sNavigationAvailableMap && sNavigationAvailableMap !== "undefined" && JSON.parse(sNavigationAvailableMap);
        let aSelectedContexts = oTable.getSelectedContexts();
        const aDeletableContexts = [];
        const bReadOnlyDraftEnabled = oTable.data("displayModePropertyBinding") === "true" && draft !== "undefined";
        const aUpdatableContexts = [];
        // oDynamicActions are bound actions that are available according to some property
        // in each item
        const oDynamicActions = {};
        const oIBN = {};
        const oInternalModelContext = oTable.getBindingContext("internal");
        if (!oInternalModelContext) {
          return;
        }
        //do not consider empty rows as selected context
        aSelectedContexts = aSelectedContexts.filter(function (oContext) {
          return !oContext.isInactive();
        });
        const oModelObject = Object.assign(oInternalModelContext.getObject() || {}, {
          selectedContexts: aSelectedContexts,
          numberOfSelectedContexts: aSelectedContexts.length,
          dynamicActions: oDynamicActions,
          ibn: oIBN,
          deleteEnabled: true,
          deletableContexts: aDeletableContexts,
          unSavedContexts: [],
          lockedContexts: [],
          draftsWithNonDeletableActive: [],
          draftsWithDeletableActive: [],
          createModeContexts: [],
          controlId: "",
          updatableContexts: aUpdatableContexts,
          semanticKeyHasDraftIndicator: oInternalModelContext.getProperty("semanticKeyHasDraftIndicator") ? oInternalModelContext.getProperty("semanticKeyHasDraftIndicator") : undefined
        });
        for (const oSelectedContext of aSelectedContexts) {
          const oContextData = oSelectedContext.getObject();
          for (const key in oContextData) {
            if (key.indexOf("#") === 0) {
              let sActionPath = key;
              sActionPath = sActionPath.substring(1, sActionPath.length);
              oModelObject.dynamicActions[sActionPath] = {
                enabled: true
              };
              oInternalModelContext.setProperty("", oModelObject);
            }
          }
          // The updatable contexts with mass edit depend on the following:
          // 1. Update is dependendent on current entity property (sUpdatablePath).
          // 2. The table is read only and draft enabled(like LR), in this case only active contexts can be mass edited(not draft contexts).
          //    So, update depends on 'IsActiveEntity' value which needs to be checked.
          const bUpdatableByPath = sUpdatablePath.length === 0 || !!oSelectedContext.getProperty(sUpdatablePath);
          const bNotDraftInReadOnlyMode = !bReadOnlyDraftEnabled || oContextData.IsActiveEntity;
          if (bUpdatableByPath && bNotDraftInReadOnlyMode) {
            aUpdatableContexts.push(oSelectedContext);
          }
        }
        deleteHelper.updateDeleteInfoForSelectedContexts(oInternalModelContext, aSelectedContexts);
        if (!oTable.data("enableAnalytics")) {
          TableHelper.setIBNEnablement(oInternalModelContext, oNavigationAvailableMap, aSelectedContexts);
        }
        if (aSelectedContexts.length > 1) {
          this.disableAction(aActionsMultiselectDisabled, oDynamicActions);
        }
        if (oModelObject) {
          oModelObject["updatableContexts"] = aUpdatableContexts;
          oModelObject["controlId"] = oTable.getId();
          oInternalModelContext.setProperty("", oModelObject);
        }
        return ActionRuntime.setActionEnablement(oInternalModelContext, oActionOperationAvailableMap, aSelectedContexts, "table");
      } catch (error) {
        throw error;
      }
    },
    disableAction: function (aActionsMultiselectDisabled, oDynamicActions) {
      aActionsMultiselectDisabled.forEach(function (sAction) {
        oDynamicActions[sAction] = {
          bEnabled: false
        };
      });
    },
    onFieldChangeInCreationRow: function (oEvent, oCustomValidationFunction) {
      // CREATION ROW CASE
      const mField = FieldRuntime.getFieldStateOnChange(oEvent),
        oSourceField = mField.field,
        sFieldId = oSourceField.getId();
      const oInternalModelContext = oSourceField.getBindingContext("internal"),
        mFieldValidity = oInternalModelContext.getProperty("creationRowFieldValidity"),
        mNewFieldValidity = Object.assign({}, mFieldValidity);
      mNewFieldValidity[sFieldId] = mField.state;
      oInternalModelContext.setProperty("creationRowFieldValidity", mNewFieldValidity);

      // prepare Custom Validation
      if (oCustomValidationFunction) {
        const mCustomValidity = oInternalModelContext.getProperty("creationRowCustomValidity"),
          mNewCustomValidity = Object.assign({}, mCustomValidity);
        mNewCustomValidity[oSourceField.getBinding("value").getPath()] = {
          fieldId: oSourceField.getId()
        };
        oInternalModelContext.setProperty("creationRowCustomValidity", mNewCustomValidity);
        // Remove existing CustomValidation message
        const oMessageManager = sap.ui.getCore().getMessageManager();
        const sTarget = `${oSourceField.getBindingContext().getPath()}/${oSourceField.getBindingPath("value")}`;
        oMessageManager.getMessageModel().getData().forEach(function (oMessage) {
          if (oMessage.target === sTarget) {
            oMessageManager.removeMessages(oMessage);
          }
        });
      }
    }
  };
  return TableRuntime;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/TableRuntime", ["sap/base/Log","sap/fe/core/ActionRuntime","sap/fe/core/CommonUtils","sap/fe/core/controllerextensions/BusyLocker","sap/fe/core/helpers/DeleteHelper","sap/fe/core/library","sap/fe/macros/field/FieldRuntime","sap/fe/macros/table/TableHelper"],function(e,t,n,o,i,s,a,c){"use strict";const r=s.CreationMode;const l={displayTableSettings:function(e){const t=e.getSource().getParent(),o=sap.ui.getCore().byId(`${t.getId()}-settings`);n.fireButtonPress(o)},executeConditionalActionShortcut:function(e,t){const o=t.getParent();if(e!==r.CreationRow){const t=o.getActions().reduce(function(e,t){return e.concat(t.getAction())},[]).find(function(t){return t.getId().endsWith(e)});n.fireButtonPress(t)}else{const e=o.getAggregation("creationRow");if(e&&e.getApplyEnabled()&&e.getVisible()){e.fireApply()}}},setContexts:function(t,n,i,s,a,c,r){o.lock(t);return l.setContextsAsync(t,n,i,s,a,c,r).then(()=>{e.info("Selections updated")}).catch(t=>{e.error(t)}).finally(()=>{o.unlock(t)})},setContextsAsync:async function(e,n,o,s,a,r,l){try{const n=r?r.split(","):[];const d=JSON.parse(s);const g=a&&a!=="undefined"&&JSON.parse(a);let f=e.getSelectedContexts();const u=[];const p=e.data("displayModePropertyBinding")==="true"&&o!=="undefined";const y=[];const b={};const C={};const h=e.getBindingContext("internal");if(!h){return}f=f.filter(function(e){return!e.isInactive()});const x=Object.assign(h.getObject()||{},{selectedContexts:f,numberOfSelectedContexts:f.length,dynamicActions:b,ibn:C,deleteEnabled:true,deletableContexts:u,unSavedContexts:[],lockedContexts:[],draftsWithNonDeletableActive:[],draftsWithDeletableActive:[],createModeContexts:[],controlId:"",updatableContexts:y,semanticKeyHasDraftIndicator:h.getProperty("semanticKeyHasDraftIndicator")?h.getProperty("semanticKeyHasDraftIndicator"):undefined});for(const e of f){const t=e.getObject();for(const e in t){if(e.indexOf("#")===0){let t=e;t=t.substring(1,t.length);x.dynamicActions[t]={enabled:true};h.setProperty("",x)}}const n=l.length===0||!!e.getProperty(l);const o=!p||t.IsActiveEntity;if(n&&o){y.push(e)}}i.updateDeleteInfoForSelectedContexts(h,f);if(!e.data("enableAnalytics")){c.setIBNEnablement(h,g,f)}if(f.length>1){this.disableAction(n,b)}if(x){x["updatableContexts"]=y;x["controlId"]=e.getId();h.setProperty("",x)}return t.setActionEnablement(h,d,f,"table")}catch(e){throw e}},disableAction:function(e,t){e.forEach(function(e){t[e]={bEnabled:false}})},onFieldChangeInCreationRow:function(e,t){const n=a.getFieldStateOnChange(e),o=n.field,i=o.getId();const s=o.getBindingContext("internal"),c=s.getProperty("creationRowFieldValidity"),r=Object.assign({},c);r[i]=n.state;s.setProperty("creationRowFieldValidity",r);if(t){const e=s.getProperty("creationRowCustomValidity"),t=Object.assign({},e);t[o.getBinding("value").getPath()]={fieldId:o.getId()};s.setProperty("creationRowCustomValidity",t);const n=sap.ui.getCore().getMessageManager();const i=`${o.getBindingContext().getPath()}/${o.getBindingPath("value")}`;n.getMessageModel().getData().forEach(function(e){if(e.target===i){n.removeMessages(e)}})}}};return l},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/TableSizeHelper-dbg", ["sap/base/Log", "sap/fe/core/templating/DisplayModeFormatter", "sap/m/Button", "sap/m/table/Util", "sap/ui/dom/units/Rem"], function (Log, DisplayModeFormatter, Button, TableUtil, Rem) {
  "use strict";

  var getDisplayMode = DisplayModeFormatter.getDisplayMode;
  const TableSizeHelper = {
    nbCalls: 0,
    oBtn: undefined,
    propertyHelper: undefined,
    init: function () {
      // Create a new button in static area sap.ui.getCore().getStaticAreaRef()
      this.nbCalls = this.nbCalls ? this.nbCalls : 0;
      this.nbCalls++;
      this.oBtn = this.oBtn ? this.oBtn : new Button().placeAt(sap.ui.getCore().getStaticAreaRef());
      // Hide button from accessibility tree
      this.oBtn.setVisible(false);
    },
    /**
     * Method to calculate the width of the button from a temporarily created button placed in the static area.
     *
     * @param text The text to measure inside the Button.
     * @returns The value of the Button width.
     */
    getButtonWidth: function (text) {
      if (!text) {
        return 0;
      }
      if (this.oBtn.getVisible() === false) {
        this.oBtn.setVisible(true);
      }
      this.oBtn.setText(text);
      //adding missing styles from buttons inside a table
      // for sync rendering
      this.oBtn.rerender();
      const nButtonWidth = Rem.fromPx(this.oBtn.getDomRef().scrollWidth);
      this.oBtn.setVisible(false);
      return Math.round(nButtonWidth * 100) / 100;
    },
    /**
     * Method to calculate the width of the MDCColumn.
     *
     * @param dataField The Property or PropertyInfo Object for which the width will be calculated.
     * @param properties An array containing all property definitions (optional)
     * @param convertedMetaData
     * @param includeLabel Indicates if the label should be part of the width calculation
     * @private
     * @alias sap.fe.macros.TableSizeHelper
     * @returns The width of the column.
     */
    getMDCColumnWidthFromDataField: function (dataField, properties, convertedMetaData) {
      let includeLabel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
      const property = properties.find(prop => {
        var _convertedMetaData$re, _convertedMetaData$re2;
        return prop.metadataPath && ((_convertedMetaData$re = convertedMetaData.resolvePath(prop.metadataPath)) === null || _convertedMetaData$re === void 0 ? void 0 : (_convertedMetaData$re2 = _convertedMetaData$re.target) === null || _convertedMetaData$re2 === void 0 ? void 0 : _convertedMetaData$re2.fullyQualifiedName) === dataField.fullyQualifiedName;
      });
      return property ? this.getMDCColumnWidthFromProperty(property, properties, includeLabel) : 0;
    },
    getMDCColumnWidthFromProperty: function (property, properties) {
      var _property$visualSetti, _property$propertyInf, _property$typeConfig;
      let includeLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      const mWidthCalculation = Object.assign({
        gap: 0,
        truncateLabel: !includeLabel,
        excludeProperties: []
      }, (_property$visualSetti = property.visualSettings) === null || _property$visualSetti === void 0 ? void 0 : _property$visualSetti.widthCalculation);
      let types;
      if ((_property$propertyInf = property.propertyInfos) !== null && _property$propertyInf !== void 0 && _property$propertyInf.length) {
        types = property.propertyInfos.map(propName => {
          var _prop$typeConfig;
          const prop = properties.find(_property => _property.name === propName);
          return prop === null || prop === void 0 ? void 0 : (_prop$typeConfig = prop.typeConfig) === null || _prop$typeConfig === void 0 ? void 0 : _prop$typeConfig.typeInstance;
        }).filter(item => item);
      } else if (property !== null && property !== void 0 && (_property$typeConfig = property.typeConfig) !== null && _property$typeConfig !== void 0 && _property$typeConfig.typeInstance) {
        types = [property === null || property === void 0 ? void 0 : property.typeConfig.typeInstance];
      }
      const sSize = types ? TableUtil.calcColumnWidth(types, property.label, mWidthCalculation) : null;
      if (!sSize) {
        Log.error(`Cannot compute the column width for property: ${property.name}`);
      }
      return sSize ? parseFloat(sSize.replace("Rem", "")) : 0;
    },
    _getPropertyHelperCache: function (sTableId) {
      return this.propertyHelper && this.propertyHelper[sTableId];
    },
    _setPropertyHelperCache: function (sTableId, oPropertyHelper) {
      this.propertyHelper = Object.assign({}, this.propertyHelper);
      this.propertyHelper[sTableId] = oPropertyHelper;
    },
    /**
     * Method to calculate the  width of a DataFieldAnnotation object contained in a fieldGroup.
     *
     * @param dataField DataFieldAnnotation object.
     * @param properties Array containing all PropertyInfo objects.
     * @param convertedMetaData
     * @param showDataFieldsLabel Label is displayed inside the field
     * @private
     * @alias sap.fe.macros.TableSizeHelper
     * @returns Object containing the width of the label and the width of the property.
     */
    getWidthForDataFieldForAnnotation: function (dataField, properties, convertedMetaData) {
      var _dataField$Target;
      let showDataFieldsLabel = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
      const oTargetedProperty = dataField === null || dataField === void 0 ? void 0 : (_dataField$Target = dataField.Target) === null || _dataField$Target === void 0 ? void 0 : _dataField$Target.$target;
      let nPropertyWidth = 0,
        fLabelWidth = 0;
      if (oTargetedProperty !== null && oTargetedProperty !== void 0 && oTargetedProperty.Visualization) {
        switch (oTargetedProperty.Visualization) {
          case "UI.VisualizationType/Rating":
            const nbStars = oTargetedProperty.TargetValue;
            nPropertyWidth = parseInt(nbStars, 10) * 1.375;
            break;
          case "UI.VisualizationType/Progress":
          default:
            nPropertyWidth = 5;
        }
        const sLabel = oTargetedProperty ? oTargetedProperty.label : dataField.Label || "";
        fLabelWidth = showDataFieldsLabel && sLabel ? TableSizeHelper.getButtonWidth(sLabel) : 0;
      } else if (convertedMetaData && properties && (oTargetedProperty === null || oTargetedProperty === void 0 ? void 0 : oTargetedProperty.$Type) === "com.sap.vocabularies.Communication.v1.ContactType") {
        nPropertyWidth = this.getMDCColumnWidthFromDataField(oTargetedProperty.fn.$target, properties, convertedMetaData, false);
      }
      return {
        labelWidth: fLabelWidth,
        propertyWidth: nPropertyWidth
      };
    },
    /**
     * Method to calculate the width of a DataField object.
     *
     * @param dataField DataFieldAnnotation object.
     * @param showDataFieldsLabel Label is displayed inside the field.
     * @param properties Array containing all PropertyInfo objects.
     * @param convertedMetaData Context Object of the parent property.
     * @private
     * @alias sap.fe.macros.TableSizeHelper
     * @returns {object} Object containing the width of the label and the width of the property.
     */

    getWidthForDataField: function (dataField, showDataFieldsLabel, properties, convertedMetaData) {
      var _dataField$Value, _oTargetedProperty$an, _oTargetedProperty$an2, _dataField$Value2;
      const oTargetedProperty = (_dataField$Value = dataField.Value) === null || _dataField$Value === void 0 ? void 0 : _dataField$Value.$target,
        oTextArrangementTarget = oTargetedProperty === null || oTargetedProperty === void 0 ? void 0 : (_oTargetedProperty$an = oTargetedProperty.annotations) === null || _oTargetedProperty$an === void 0 ? void 0 : (_oTargetedProperty$an2 = _oTargetedProperty$an.Common) === null || _oTargetedProperty$an2 === void 0 ? void 0 : _oTargetedProperty$an2.Text,
        displayMode = getDisplayMode((_dataField$Value2 = dataField.Value) === null || _dataField$Value2 === void 0 ? void 0 : _dataField$Value2.$target);
      let nPropertyWidth = 0,
        fLabelWidth = 0;
      if (oTargetedProperty) {
        switch (displayMode) {
          case "Description":
            nPropertyWidth = this.getMDCColumnWidthFromDataField(oTextArrangementTarget.$target, properties, convertedMetaData, false) - 1;
            break;
          case "DescriptionValue":
          case "ValueDescription":
          case "Value":
          default:
            nPropertyWidth = this.getMDCColumnWidthFromDataField(oTargetedProperty, properties, convertedMetaData, false) - 1;
        }
        const sLabel = dataField.Label ? dataField.Label : oTargetedProperty.label;
        fLabelWidth = showDataFieldsLabel && sLabel ? TableSizeHelper.getButtonWidth(sLabel) : 0;
      } else {
        Log.error(`Cannot compute width for type object: ${dataField.$Type}`);
      }
      return {
        labelWidth: fLabelWidth,
        propertyWidth: nPropertyWidth
      };
    },
    _getPropertiesByPath: function (aProperties, sPath) {
      return aProperties.find(function (oProperty) {
        return oProperty.path === sPath;
      });
    },
    exit: function () {
      this.nbCalls--;
      if (this.nbCalls === 0) {
        this.oBtn.destroy();
        this.oBtn = null;
      }
    }
  };
  return TableSizeHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/TableSizeHelper", ["sap/base/Log","sap/fe/core/templating/DisplayModeFormatter","sap/m/Button","sap/m/table/Util","sap/ui/dom/units/Rem"],function(t,e,i,n,o){"use strict";var l=e.getDisplayMode;const a={nbCalls:0,oBtn:undefined,propertyHelper:undefined,init:function(){this.nbCalls=this.nbCalls?this.nbCalls:0;this.nbCalls++;this.oBtn=this.oBtn?this.oBtn:(new i).placeAt(sap.ui.getCore().getStaticAreaRef());this.oBtn.setVisible(false)},getButtonWidth:function(t){if(!t){return 0}if(this.oBtn.getVisible()===false){this.oBtn.setVisible(true)}this.oBtn.setText(t);this.oBtn.rerender();const e=o.fromPx(this.oBtn.getDomRef().scrollWidth);this.oBtn.setVisible(false);return Math.round(e*100)/100},getMDCColumnWidthFromDataField:function(t,e,i){let n=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;const o=e.find(e=>{var n,o;return e.metadataPath&&((n=i.resolvePath(e.metadataPath))===null||n===void 0?void 0:(o=n.target)===null||o===void 0?void 0:o.fullyQualifiedName)===t.fullyQualifiedName});return o?this.getMDCColumnWidthFromProperty(o,e,n):0},getMDCColumnWidthFromProperty:function(e,i){var o,l,a;let r=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;const s=Object.assign({gap:0,truncateLabel:!r,excludeProperties:[]},(o=e.visualSettings)===null||o===void 0?void 0:o.widthCalculation);let u;if((l=e.propertyInfos)!==null&&l!==void 0&&l.length){u=e.propertyInfos.map(t=>{var e;const n=i.find(e=>e.name===t);return n===null||n===void 0?void 0:(e=n.typeConfig)===null||e===void 0?void 0:e.typeInstance}).filter(t=>t)}else if(e!==null&&e!==void 0&&(a=e.typeConfig)!==null&&a!==void 0&&a.typeInstance){u=[e===null||e===void 0?void 0:e.typeConfig.typeInstance]}const d=u?n.calcColumnWidth(u,e.label,s):null;if(!d){t.error(`Cannot compute the column width for property: ${e.name}`)}return d?parseFloat(d.replace("Rem","")):0},_getPropertyHelperCache:function(t){return this.propertyHelper&&this.propertyHelper[t]},_setPropertyHelperCache:function(t,e){this.propertyHelper=Object.assign({},this.propertyHelper);this.propertyHelper[t]=e},getWidthForDataFieldForAnnotation:function(t,e,i){var n;let o=arguments.length>3&&arguments[3]!==undefined?arguments[3]:false;const l=t===null||t===void 0?void 0:(n=t.Target)===null||n===void 0?void 0:n.$target;let r=0,s=0;if(l!==null&&l!==void 0&&l.Visualization){switch(l.Visualization){case"UI.VisualizationType/Rating":const t=l.TargetValue;r=parseInt(t,10)*1.375;break;case"UI.VisualizationType/Progress":default:r=5}const e=l?l.label:t.Label||"";s=o&&e?a.getButtonWidth(e):0}else if(i&&e&&(l===null||l===void 0?void 0:l.$Type)==="com.sap.vocabularies.Communication.v1.ContactType"){r=this.getMDCColumnWidthFromDataField(l.fn.$target,e,i,false)}return{labelWidth:s,propertyWidth:r}},getWidthForDataField:function(e,i,n,o){var r,s,u,d;const p=(r=e.Value)===null||r===void 0?void 0:r.$target,h=p===null||p===void 0?void 0:(s=p.annotations)===null||s===void 0?void 0:(u=s.Common)===null||u===void 0?void 0:u.Text,c=l((d=e.Value)===null||d===void 0?void 0:d.$target);let f=0,v=0;if(p){switch(c){case"Description":f=this.getMDCColumnWidthFromDataField(h.$target,n,o,false)-1;break;case"DescriptionValue":case"ValueDescription":case"Value":default:f=this.getMDCColumnWidthFromDataField(p,n,o,false)-1}const t=e.Label?e.Label:p.label;v=i&&t?a.getButtonWidth(t):0}else{t.error(`Cannot compute width for type object: ${e.$Type}`)}return{labelWidth:v,propertyWidth:f}},_getPropertiesByPath:function(t,e){return t.find(function(t){return t.path===e})},exit:function(){this.nbCalls--;if(this.nbCalls===0){this.oBtn.destroy();this.oBtn=null}}};return a},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/Utils-dbg", ["sap/base/Log", "sap/fe/core/CommonUtils", "sap/fe/core/helpers/BindingToolkit", "sap/fe/macros/DelegateUtil", "sap/fe/macros/field/FieldRuntime", "sap/fe/macros/filter/FilterUtils", "sap/ui/core/Component", "sap/ui/core/format/NumberFormat", "sap/ui/model/Filter"], function (Log, CommonUtils, BindingToolkit, DelegateUtil, FieldRuntime, FilterUtils, Component, NumberFormat, Filter) {
  "use strict";

  var pathInModel = BindingToolkit.pathInModel;
  var compileExpression = BindingToolkit.compileExpression;
  /**
   * Get filter information for a SelectionVariant annotation.
   *
   * @param oTable The table instance
   * @param sSvPath Relative SelectionVariant annotation path
   * @returns Information on filters
   *  filters: array of sap.ui.model.filters
   * text: selection Variant text property
   * @private
   * @ui5-restricted
   */
  function getFiltersInfoForSV(oTable, sSvPath) {
    const sEntityTypePath = oTable.data("entityType"),
      oMetaModel = CommonUtils.getAppComponent(oTable).getMetaModel(),
      oSelectionVariant = oMetaModel.getObject(`${sEntityTypePath}${sSvPath}`),
      mPropertyFilters = {},
      aFilters = [],
      aPaths = [];
    let sText = "";
    if (oSelectionVariant) {
      sText = oSelectionVariant.Text;
      (oSelectionVariant.SelectOptions || []).filter(function (oSelectOption) {
        return oSelectOption && oSelectOption.PropertyName && oSelectOption.PropertyName.$PropertyPath;
      }).forEach(function (oSelectOption) {
        const sPath = oSelectOption.PropertyName.$PropertyPath;
        if (!aPaths.includes(sPath)) {
          aPaths.push(sPath);
        }
        for (const j in oSelectOption.Ranges) {
          const oRange = oSelectOption.Ranges[j];
          mPropertyFilters[sPath] = (mPropertyFilters[sPath] || []).concat(new Filter(sPath, oRange.Option.$EnumMember.split("/").pop(), oRange.Low, oRange.High));
        }
      });
      for (const sPropertyPath in mPropertyFilters) {
        aFilters.push(new Filter({
          filters: mPropertyFilters[sPropertyPath],
          and: false
        }));
      }
    }
    return {
      properties: aPaths,
      filters: aFilters,
      text: sText
    };
  }
  function getHiddenFilters(oTable) {
    let aFilters = [];
    const hiddenFilters = oTable.data("hiddenFilters");
    if (hiddenFilters && Array.isArray(hiddenFilters.paths)) {
      hiddenFilters.paths.forEach(function (mPath) {
        const oSvFilter = getFiltersInfoForSV(oTable, mPath.annotationPath);
        aFilters = aFilters.concat(oSvFilter.filters);
      });
    }
    return aFilters;
  }
  function getQuickFilter(oTable) {
    let aFilters = [];
    const sQuickFilterKey = DelegateUtil.getCustomData(oTable, "quickFilterKey");
    if (sQuickFilterKey) {
      aFilters = aFilters.concat(getFiltersInfoForSV(oTable, sQuickFilterKey).filters);
    }
    return aFilters;
  }
  function getTableFilters(oTable) {
    return getQuickFilter(oTable).concat(getHiddenFilters(oTable));
  }
  function getListBindingForCount(oTable, oPageBinding, oParams) {
    let countBinding;
    const oBindingInfo = oTable.data("rowsBindingInfo"),
      oDataModel = oTable.getModel();
    const sBatchId = oParams.batchGroupId || "",
      oFilterInfo = getFilterInfo(oTable);
    let aFilters = Array.isArray(oParams.additionalFilters) ? oParams.additionalFilters : [];
    const sBindingPath = oFilterInfo.bindingPath ? oFilterInfo.bindingPath : oBindingInfo.path;
    aFilters = aFilters.concat(oFilterInfo.filters).concat(getP13nFilters(oTable));
    const oTableContextFilter = new Filter({
      filters: aFilters,
      and: true
    });

    // Need to pass by a temporary ListBinding in order to get $filter query option (as string) thanks to fetchFilter of OdataListBinding
    const oListBinding = oDataModel.bindList((oPageBinding ? `${oPageBinding.getPath()}/` : "") + sBindingPath, oTable.getBindingContext(), [], oTableContextFilter);
    return oListBinding.fetchFilter(oListBinding.getContext()).then(function (aStringFilters) {
      countBinding = oDataModel.bindProperty(`${oListBinding.getPath()}/$count`, oListBinding.getContext(), {
        $$groupId: sBatchId || "$auto",
        $filter: aStringFilters[0],
        $search: oFilterInfo.search
      });
      return countBinding.requestValue();
    }).then(function (iValue) {
      countBinding.destroy();
      oListBinding.destroy();
      return iValue;
    });
  }
  function getCountFormatted(iCount) {
    const oCountFormatter = NumberFormat.getIntegerInstance({
      groupingEnabled: true
    });
    return oCountFormatter.format(iCount);
  }
  function getFilterInfo(oTable) {
    const oTableDefinition = oTable.getParent().getTableDefinition();
    let aIgnoreProperties = [];
    function _getRelativePathArrayFromAggregates(oSubTable) {
      const mAggregates = oSubTable.getParent().getTableDefinition().aggregates;
      return Object.keys(mAggregates).map(function (sAggregateName) {
        return mAggregates[sAggregateName].relativePath;
      });
    }
    if (oTableDefinition.enableAnalytics) {
      aIgnoreProperties = aIgnoreProperties.concat(_getRelativePathArrayFromAggregates(oTable));
      if (!oTableDefinition.enableAnalyticsSearch) {
        // Search isn't allow as a $apply transformation for this table
        aIgnoreProperties = aIgnoreProperties.concat(["search"]);
      }
    }
    return FilterUtils.getFilterInfo(oTable.getFilter(), {
      ignoredProperties: aIgnoreProperties,
      targetControl: oTable
    });
  }

  /**
   * Retrieves all filters configured in Table filter personalization dialog.
   *
   * @param oTable Table instance
   * @returns Filters configured in table personalization dialog
   * @private
   * @ui5-restricted
   */
  function getP13nFilters(oTable) {
    const aP13nMode = oTable.getP13nMode();
    if (aP13nMode && aP13nMode.indexOf("Filter") > -1) {
      const aP13nProperties = (DelegateUtil.getCustomData(oTable, "sap_fe_TableDelegate_propertyInfoMap") || []).filter(function (oTableProperty) {
          return oTableProperty && !(oTableProperty.filterable === false);
        }),
        oFilterInfo = FilterUtils.getFilterInfo(oTable, {
          propertiesMetadata: aP13nProperties
        });
      if (oFilterInfo && oFilterInfo.filters) {
        return oFilterInfo.filters;
      }
    }
    return [];
  }
  function getAllFilterInfo(oTable) {
    const oIFilterInfo = getFilterInfo(oTable);
    return {
      filters: oIFilterInfo.filters.concat(getTableFilters(oTable), getP13nFilters(oTable)),
      search: oIFilterInfo.search,
      bindingPath: oIFilterInfo.bindingPath
    };
  }

  /**
   * Returns a promise that is resolved with the table itself when the table was bound.
   *
   * @param oTable The table to check for binding
   * @returns A Promise that will be resolved when table is bound
   */
  function whenBound(oTable) {
    return _getOrCreateBoundPromiseInfo(oTable).promise;
  }

  /**
   * If not yet happened, it resolves the table bound promise.
   *
   * @param oTable The table that was bound
   */
  function onTableBound(oTable) {
    const oBoundPromiseInfo = _getOrCreateBoundPromiseInfo(oTable);
    if (oBoundPromiseInfo.resolve) {
      oBoundPromiseInfo.resolve(oTable);
      oTable.data("boundPromiseResolve", null);
    }
  }
  function _getOrCreateBoundPromiseInfo(oTable) {
    if (!oTable.data("boundPromise")) {
      let fnResolve;
      oTable.data("boundPromise", new Promise(function (resolve) {
        fnResolve = resolve;
      }));
      if (oTable.isBound()) {
        fnResolve(oTable);
      } else {
        oTable.data("boundPromiseResolve", fnResolve);
      }
    }
    return {
      promise: oTable.data("boundPromise"),
      resolve: oTable.data("boundPromiseResolve")
    };
  }
  function updateBindingInfo(oBindingInfo, oFilterInfo, oFilter) {
    oBindingInfo.filters = oFilter;
    if (oFilterInfo.search) {
      oBindingInfo.parameters.$search = CommonUtils.normalizeSearchTerm(oFilterInfo.search);
    } else {
      oBindingInfo.parameters.$search = undefined;
    }
  }
  function fnGetSemanticTargetsFromTable(oController, oTable) {
    const oView = oController.getView();
    const oInternalModelContext = oView.getBindingContext("internal");
    if (oInternalModelContext) {
      const sEntitySet = DelegateUtil.getCustomData(oTable, "targetCollectionPath");
      if (sEntitySet) {
        const oComponent = oController.getOwnerComponent();
        const oAppComponent = Component.getOwnerComponentFor(oComponent);
        const oMetaModel = oAppComponent.getMetaModel();
        const oShellServiceHelper = CommonUtils.getShellServices(oAppComponent);
        const sCurrentHash = FieldRuntime._fnFixHashQueryString(CommonUtils.getHash());
        const oColumns = oTable.getParent().getTableDefinition().columns;
        const aSemanticObjectsForGetLinks = [];
        const aSemanticObjects = [];
        const aPathAlreadyProcessed = [];
        let sPath = "",
          sAnnotationPath,
          oProperty;
        let _oSemanticObject;
        const aSemanticObjectsPromises = [];
        let sQualifier, regexResult;
        for (let i = 0; i < oColumns.length; i++) {
          sAnnotationPath = oColumns[i].annotationPath;
          //this check is required in cases where custom columns are configured via manifest where there is no provision for an annotation path.
          if (sAnnotationPath) {
            oProperty = oMetaModel.getObject(sAnnotationPath);
            if (oProperty && oProperty.$kind === "Property") {
              sPath = oColumns[i].annotationPath;
            } else if (oProperty && oProperty.$Type === "com.sap.vocabularies.UI.v1.DataField") {
              sPath = `${sEntitySet}/${oMetaModel.getObject(`${sAnnotationPath}/Value/$Path`)}`;
            }
          }
          if (sPath !== "") {
            const _Keys = Object.keys(oMetaModel.getObject(sPath + "@"));
            for (let index = 0; index < _Keys.length; index++) {
              if (!aPathAlreadyProcessed.includes(sPath) && _Keys[index].indexOf(`@${"com.sap.vocabularies.Common.v1.SemanticObject"}`) === 0 && _Keys[index].indexOf(`@${"com.sap.vocabularies.Common.v1.SemanticObjectMapping"}`) === -1 && _Keys[index].indexOf(`@${"com.sap.vocabularies.Common.v1.SemanticObjectUnavailableActions"}`) === -1) {
                regexResult = /#(.*)/.exec(_Keys[index]);
                sQualifier = regexResult ? regexResult[1] : "";
                aSemanticObjectsPromises.push(CommonUtils.getSemanticObjectPromise(oAppComponent, oView, oMetaModel, sPath, sQualifier));
                aPathAlreadyProcessed.push(sPath);
              }
            }
          }
          sPath = "";
        }
        if (aSemanticObjectsPromises.length === 0) {
          return Promise.resolve();
        } else {
          Promise.all(aSemanticObjectsPromises).then(function (aValues) {
            const aGetLinksPromises = [];
            let sSemObjExpression;
            const aSemanticObjectsResolved = aValues.filter(function (element) {
              if (element.semanticObject && typeof element.semanticObject.semanticObject === "object") {
                sSemObjExpression = compileExpression(pathInModel(element.semanticObject.semanticObject.$Path));
                element.semanticObject.semanticObject = sSemObjExpression;
                element.semanticObjectForGetLinks[0].semanticObject = sSemObjExpression;
                return true;
              } else if (element) {
                return element.semanticObject !== undefined;
              } else {
                return false;
              }
            });
            for (let j = 0; j < aSemanticObjectsResolved.length; j++) {
              _oSemanticObject = aSemanticObjectsResolved[j];
              if (_oSemanticObject && _oSemanticObject.semanticObject && !(_oSemanticObject.semanticObject.semanticObject.indexOf("{") === 0)) {
                aSemanticObjectsForGetLinks.push(_oSemanticObject.semanticObjectForGetLinks);
                aSemanticObjects.push({
                  semanticObject: _oSemanticObject.semanticObject && _oSemanticObject.semanticObject.semanticObject,
                  unavailableActions: _oSemanticObject.unavailableActions,
                  path: aSemanticObjectsResolved[j].semanticObjectPath
                });
                aGetLinksPromises.push(oShellServiceHelper.getLinksWithCache([_oSemanticObject.semanticObjectForGetLinks])); //aSemanticObjectsForGetLinks));
              }
            }

            return CommonUtils.updateSemanticTargets(aGetLinksPromises, aSemanticObjects, oInternalModelContext, sCurrentHash);
          }).catch(function (oError) {
            Log.error("fnGetSemanticTargetsFromTable: Cannot get Semantic Objects", oError);
          });
        }
      }
    }
  }
  function clearSelection(oTable) {
    oTable.clearSelection();
    const oInternalModelContext = oTable.getBindingContext("internal");
    if (oInternalModelContext) {
      oInternalModelContext.setProperty("deleteEnabled", false);
      oInternalModelContext.setProperty("numberOfSelectedContexts", 0);
      oInternalModelContext.setProperty("selectedContexts", []);
      oInternalModelContext.setProperty("deletableContexts", []);
    }
  }
  const oTableUtils = {
    getCountFormatted: getCountFormatted,
    getHiddenFilters: getHiddenFilters,
    getFiltersInfoForSV: getFiltersInfoForSV,
    getTableFilters: getTableFilters,
    getListBindingForCount: getListBindingForCount,
    getFilterInfo: getFilterInfo,
    getP13nFilters: getP13nFilters,
    getAllFilterInfo: getAllFilterInfo,
    whenBound: whenBound,
    onTableBound: onTableBound,
    getSemanticTargetsFromTable: fnGetSemanticTargetsFromTable,
    updateBindingInfo: updateBindingInfo,
    clearSelection: clearSelection
  };
  return oTableUtils;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/Utils", ["sap/base/Log","sap/fe/core/CommonUtils","sap/fe/core/helpers/BindingToolkit","sap/fe/macros/DelegateUtil","sap/fe/macros/field/FieldRuntime","sap/fe/macros/filter/FilterUtils","sap/ui/core/Component","sap/ui/core/format/NumberFormat","sap/ui/model/Filter"],function(e,t,n,i,o,r,a,s,c){"use strict";var l=n.pathInModel;var f=n.compileExpression;function u(e,n){const i=e.data("entityType"),o=t.getAppComponent(e).getMetaModel(),r=o.getObject(`${i}${n}`),a={},s=[],l=[];let f="";if(r){f=r.Text;(r.SelectOptions||[]).filter(function(e){return e&&e.PropertyName&&e.PropertyName.$PropertyPath}).forEach(function(e){const t=e.PropertyName.$PropertyPath;if(!l.includes(t)){l.push(t)}for(const n in e.Ranges){const i=e.Ranges[n];a[t]=(a[t]||[]).concat(new c(t,i.Option.$EnumMember.split("/").pop(),i.Low,i.High))}});for(const e in a){s.push(new c({filters:a[e],and:false}))}}return{properties:l,filters:s,text:f}}function m(e){let t=[];const n=e.data("hiddenFilters");if(n&&Array.isArray(n.paths)){n.paths.forEach(function(n){const i=u(e,n.annotationPath);t=t.concat(i.filters)})}return t}function g(e){let t=[];const n=i.getCustomData(e,"quickFilterKey");if(n){t=t.concat(u(e,n).filters)}return t}function d(e){return g(e).concat(m(e))}function p(e,t,n){let i;const o=e.data("rowsBindingInfo"),r=e.getModel();const a=n.batchGroupId||"",s=h(e);let l=Array.isArray(n.additionalFilters)?n.additionalFilters:[];const f=s.bindingPath?s.bindingPath:o.path;l=l.concat(s.filters).concat(P(e));const u=new c({filters:l,and:true});const m=r.bindList((t?`${t.getPath()}/`:"")+f,e.getBindingContext(),[],u);return m.fetchFilter(m.getContext()).then(function(e){i=r.bindProperty(`${m.getPath()}/$count`,m.getContext(),{$$groupId:a||"$auto",$filter:e[0],$search:s.search});return i.requestValue()}).then(function(e){i.destroy();m.destroy();return e})}function b(e){const t=s.getIntegerInstance({groupingEnabled:true});return t.format(e)}function h(e){const t=e.getParent().getTableDefinition();let n=[];function i(e){const t=e.getParent().getTableDefinition().aggregates;return Object.keys(t).map(function(e){return t[e].relativePath})}if(t.enableAnalytics){n=n.concat(i(e));if(!t.enableAnalyticsSearch){n=n.concat(["search"])}}return r.getFilterInfo(e.getFilter(),{ignoredProperties:n,targetControl:e})}function P(e){const t=e.getP13nMode();if(t&&t.indexOf("Filter")>-1){const t=(i.getCustomData(e,"sap_fe_TableDelegate_propertyInfoMap")||[]).filter(function(e){return e&&!(e.filterable===false)}),n=r.getFilterInfo(e,{propertiesMetadata:t});if(n&&n.filters){return n.filters}}return[]}function O(e){const t=h(e);return{filters:t.filters.concat(d(e),P(e)),search:t.search,bindingPath:t.bindingPath}}function j(e){return y(e).promise}function F(e){const t=y(e);if(t.resolve){t.resolve(e);e.data("boundPromiseResolve",null)}}function y(e){if(!e.data("boundPromise")){let t;e.data("boundPromise",new Promise(function(e){t=e}));if(e.isBound()){t(e)}else{e.data("boundPromiseResolve",t)}}return{promise:e.data("boundPromise"),resolve:e.data("boundPromiseResolve")}}function C(e,n,i){e.filters=i;if(n.search){e.parameters.$search=t.normalizeSearchTerm(n.search)}else{e.parameters.$search=undefined}}function $(n,r){const s=n.getView();const c=s.getBindingContext("internal");if(c){const u=i.getCustomData(r,"targetCollectionPath");if(u){const i=n.getOwnerComponent();const m=a.getOwnerComponentFor(i);const g=m.getMetaModel();const d=t.getShellServices(m);const p=o._fnFixHashQueryString(t.getHash());const b=r.getParent().getTableDefinition().columns;const h=[];const P=[];const O=[];let j="",F,y;let C;const $=[];let v,x;for(let e=0;e<b.length;e++){F=b[e].annotationPath;if(F){y=g.getObject(F);if(y&&y.$kind==="Property"){j=b[e].annotationPath}else if(y&&y.$Type==="com.sap.vocabularies.UI.v1.DataField"){j=`${u}/${g.getObject(`${F}/Value/$Path`)}`}}if(j!==""){const e=Object.keys(g.getObject(j+"@"));for(let n=0;n<e.length;n++){if(!O.includes(j)&&e[n].indexOf(`@${"com.sap.vocabularies.Common.v1.SemanticObject"}`)===0&&e[n].indexOf(`@${"com.sap.vocabularies.Common.v1.SemanticObjectMapping"}`)===-1&&e[n].indexOf(`@${"com.sap.vocabularies.Common.v1.SemanticObjectUnavailableActions"}`)===-1){x=/#(.*)/.exec(e[n]);v=x?x[1]:"";$.push(t.getSemanticObjectPromise(m,s,g,j,v));O.push(j)}}}j=""}if($.length===0){return Promise.resolve()}else{Promise.all($).then(function(e){const n=[];let i;const o=e.filter(function(e){if(e.semanticObject&&typeof e.semanticObject.semanticObject==="object"){i=f(l(e.semanticObject.semanticObject.$Path));e.semanticObject.semanticObject=i;e.semanticObjectForGetLinks[0].semanticObject=i;return true}else if(e){return e.semanticObject!==undefined}else{return false}});for(let e=0;e<o.length;e++){C=o[e];if(C&&C.semanticObject&&!(C.semanticObject.semanticObject.indexOf("{")===0)){h.push(C.semanticObjectForGetLinks);P.push({semanticObject:C.semanticObject&&C.semanticObject.semanticObject,unavailableActions:C.unavailableActions,path:o[e].semanticObjectPath});n.push(d.getLinksWithCache([C.semanticObjectForGetLinks]))}}return t.updateSemanticTargets(n,P,c,p)}).catch(function(t){e.error("fnGetSemanticTargetsFromTable: Cannot get Semantic Objects",t)})}}}}function v(e){e.clearSelection();const t=e.getBindingContext("internal");if(t){t.setProperty("deleteEnabled",false);t.setProperty("numberOfSelectedContexts",0);t.setProperty("selectedContexts",[]);t.setProperty("deletableContexts",[])}}const x={getCountFormatted:b,getHiddenFilters:m,getFiltersInfoForSV:u,getTableFilters:d,getListBindingForCount:p,getFilterInfo:h,getP13nFilters:P,getAllFilterInfo:O,whenBound:j,onTableBound:F,getSemanticTargetsFromTable:$,updateBindingInfo:C,clearSelection:v};return x},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/delegates/ALPTableDelegate-dbg", ["sap/base/util/deepClone", "sap/fe/core/CommonUtils", "sap/fe/macros/chart/ChartUtils", "sap/fe/macros/DelegateUtil", "sap/fe/macros/table/delegates/TableDelegate", "sap/fe/macros/table/Utils", "sap/ui/model/Filter"], function (deepClone, CommonUtils, ChartUtils, DelegateUtil, TableDelegate, TableUtils, Filter) {
  "use strict";

  /**
   * Helper class for sap.ui.mdc.Table.
   * <h3><b>Note:</b></h3>
   * The class is experimental and the API/behaviour is not finalised and hence this should not be used for productive usage.
   *
   * @author SAP SE
   * @private
   * @experimental
   * @since 1.69
   * @alias sap.fe.macros.ALPTableDelegate
   */
  const ALPTableDelegate = Object.assign({}, TableDelegate, {
    _internalUpdateBindingInfo: function (table, bindingInfo) {
      var _getChartControl, _ref;
      let filterInfo;
      let chartFilterInfo = {},
        tableFilterInfo = {};
      let chartFilters;

      // We need to deepClone the info we get from the custom data, otherwise some of its subobjects (e.g. parameters) will
      // be shared with oBindingInfo and modified later (Object.assign only does a shallow clone)
      Object.assign(bindingInfo, deepClone(DelegateUtil.getCustomData(table, "rowsBindingInfo")));
      if (table.getRowBinding()) {
        bindingInfo.suspended = false;
      }
      const view = CommonUtils.getTargetView(table);
      const mdcChart = (_getChartControl = (_ref = view.getController()).getChartControl) === null || _getChartControl === void 0 ? void 0 : _getChartControl.call(_ref);
      const chartSelectionsExist = ChartUtils.getChartSelectionsExist(mdcChart, table);
      tableFilterInfo = TableUtils.getAllFilterInfo(table);
      const tableFilters = tableFilterInfo && tableFilterInfo.filters;
      filterInfo = tableFilterInfo;
      if (chartSelectionsExist) {
        chartFilterInfo = ChartUtils.getAllFilterInfo(mdcChart);
        chartFilters = chartFilterInfo && chartFilterInfo.filters;
        filterInfo = chartFilterInfo;
      }
      const finalFilters = (tableFilters && chartFilters ? tableFilters.concat(chartFilters) : chartFilters || tableFilters) || [];
      const oFilter = finalFilters.length > 0 && new Filter({
        filters: finalFilters,
        and: true
      });
      if (filterInfo.bindingPath) {
        // In case of parameters
        bindingInfo.path = filterInfo.bindingPath;
      }

      // Prepare binding info with filter/search parameters
      TableUtils.updateBindingInfo(bindingInfo, filterInfo, oFilter);
    },
    rebind: function (table, bindingInfo) {
      const internalModelContext = table.getBindingContext("pageInternal");
      const templateContentView = internalModelContext === null || internalModelContext === void 0 ? void 0 : internalModelContext.getProperty(`${internalModelContext.getPath()}/alpContentView`);
      if (templateContentView !== "Chart") {
        TableDelegate.rebind(table, bindingInfo);
      }
    }
  });
  return ALPTableDelegate;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/delegates/ALPTableDelegate", ["sap/base/util/deepClone","sap/fe/core/CommonUtils","sap/fe/macros/chart/ChartUtils","sap/fe/macros/DelegateUtil","sap/fe/macros/table/delegates/TableDelegate","sap/fe/macros/table/Utils","sap/ui/model/Filter"],function(t,e,n,i,a,s,l){"use strict";const o=Object.assign({},a,{_internalUpdateBindingInfo:function(a,o){var r,g;let c;let f={},d={};let p;Object.assign(o,t(i.getCustomData(a,"rowsBindingInfo")));if(a.getRowBinding()){o.suspended=false}const u=e.getTargetView(a);const C=(r=(g=u.getController()).getChartControl)===null||r===void 0?void 0:r.call(g);const b=n.getChartSelectionsExist(C,a);d=s.getAllFilterInfo(a);const h=d&&d.filters;c=d;if(b){f=n.getAllFilterInfo(C);p=f&&f.filters;c=f}const m=(h&&p?h.concat(p):p||h)||[];const I=m.length>0&&new l({filters:m,and:true});if(c.bindingPath){o.path=c.bindingPath}s.updateBindingInfo(o,c,I)},rebind:function(t,e){const n=t.getBindingContext("pageInternal");const i=n===null||n===void 0?void 0:n.getProperty(`${n.getPath()}/alpContentView`);if(i!=="Chart"){a.rebind(t,e)}}});return o},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/delegates/TableDelegate-dbg", ["sap/base/Log", "sap/base/util/deepClone", "sap/base/util/deepEqual", "sap/base/util/deepExtend", "sap/fe/core/ActionRuntime", "sap/fe/core/CommonUtils", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/formatters/ValueFormatter", "sap/fe/core/helpers/DeleteHelper", "sap/fe/core/helpers/ExcelFormatHelper", "sap/fe/core/helpers/ModelHelper", "sap/fe/core/type/EDM", "sap/fe/core/type/TypeUtil", "sap/fe/macros/CommonHelper", "sap/fe/macros/DelegateUtil", "sap/fe/macros/filterBar/FilterBarDelegate", "sap/fe/macros/ResourceModel", "sap/fe/macros/table/TableSizeHelper", "sap/fe/macros/table/Utils", "sap/ui/core/Fragment", "sap/ui/mdc/odata/v4/TableDelegate", "sap/ui/model/Filter", "sap/ui/model/json/JSONModel"], function (Log, deepClone, deepEqual, deepExtend, ActionRuntime, CommonUtils, MetaModelConverter, ValueFormatter, DeleteHelper, ExcelFormat, ModelHelper, EDM, TypeUtil, CommonHelper, DelegateUtil, FilterBarDelegate, ResourceModel, TableSizeHelper, TableUtils, Fragment, TableDelegateBase, Filter, JSONModel) {
  "use strict";

  var isTypeFilterable = EDM.isTypeFilterable;
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  const SEMANTICKEY_HAS_DRAFTINDICATOR = "/semanticKeyHasDraftIndicator";

  /**
   * Helper class for sap.ui.mdc.Table.
   * <h3><b>Note:</b></h3>
   * The class is experimental and the API and the behavior are not finalized. This class is not intended for productive usage.
   *
   * @author SAP SE
   * @private
   * @experimental
   * @since 1.69
   * @alias sap.fe.macros.TableDelegate
   */
  return Object.assign({}, TableDelegateBase, {
    /**
     * This function calculates the width for a FieldGroup column.
     * The width of the FieldGroup is the width of the widest property contained in the FieldGroup (including the label if showDataFieldsLabel is true)
     * The result of this calculation is stored in the visualSettings.widthCalculation.minWidth property, which is used by the MDCtable.
     *
     * @param oTable Instance of the MDCtable
     * @param oProperty Current property
     * @param aProperties Array of properties
     * @private
     * @alias sap.fe.macros.TableDelegate
     */
    _computeVisualSettingsForFieldGroup: function (oTable, oProperty, aProperties) {
      if (oProperty.name.indexOf("DataFieldForAnnotation::FieldGroup::") === 0) {
        const oColumn = oTable.getColumns().find(function (oCol) {
          return oCol.getDataProperty() === oProperty.name;
        });
        const bShowDataFieldsLabel = oColumn ? oColumn.data("showDataFieldsLabel") === "true" : false;
        const oMetaModel = oTable.getModel().getMetaModel();
        const involvedDataModelObjects = getInvolvedDataModelObjects(oMetaModel.getContext(oProperty.metadataPath));
        const convertedMetaData = involvedDataModelObjects.convertedTypes;
        const oDataField = involvedDataModelObjects.targetObject;
        const oFieldGroup = oDataField.Target.$target;
        const aFieldWidth = [];
        oFieldGroup.Data.forEach(function (oData) {
          let oDataFieldWidth;
          switch (oData.$Type) {
            case "com.sap.vocabularies.UI.v1.DataFieldForAnnotation":
              oDataFieldWidth = TableSizeHelper.getWidthForDataFieldForAnnotation(oData, aProperties, convertedMetaData, bShowDataFieldsLabel);
              break;
            case "com.sap.vocabularies.UI.v1.DataField":
              oDataFieldWidth = TableSizeHelper.getWidthForDataField(oData, bShowDataFieldsLabel, aProperties, convertedMetaData);
              break;
            case "com.sap.vocabularies.UI.v1.DataFieldForAction":
              oDataFieldWidth = {
                labelWidth: 0,
                propertyWidth: TableSizeHelper.getButtonWidth(oData.Label)
              };
              break;
            default:
          }
          if (oDataFieldWidth) {
            aFieldWidth.push(oDataFieldWidth.labelWidth + oDataFieldWidth.propertyWidth);
          }
        });
        const nWidest = aFieldWidth.reduce(function (acc, value) {
          return Math.max(acc, value);
        }, 0);
        oProperty.visualSettings = deepExtend(oProperty.visualSettings, {
          widthCalculation: {
            verticalArrangement: true,
            minWidth: Math.ceil(nWidest)
          }
        });
      }
    },
    _computeVisualSettingsForPropertyWithValueHelp: function (table, property) {
      const tableAPI = table.getParent();
      if (!property.propertyInfos) {
        const metaModel = table.getModel().getMetaModel();
        if (property.metadataPath && metaModel) {
          const dataField = metaModel.getObject(`${property.metadataPath}@`);
          if (dataField && dataField["@com.sap.vocabularies.Common.v1.ValueList"]) {
            property.visualSettings = deepExtend(property.visualSettings || {}, {
              widthCalculation: {
                gap: tableAPI.getProperty("readOnly") ? 0 : 4
              }
            });
          }
        }
      }
    },
    _computeVisualSettingsForPropertyWithUnit: function (oTable, oProperty, oUnit, oUnitText, oTimezoneText) {
      const oTableAPI = oTable ? oTable.getParent() : null;
      // update gap for properties with string unit
      const sUnitText = oUnitText || oTimezoneText;
      if (sUnitText) {
        oProperty.visualSettings = deepExtend(oProperty.visualSettings, {
          widthCalculation: {
            gap: Math.ceil(TableSizeHelper.getButtonWidth(sUnitText))
          }
        });
      }
      if (oUnit) {
        oProperty.visualSettings = deepExtend(oProperty.visualSettings, {
          widthCalculation: {
            // For properties with unit, a gap needs to be added to properly render the column width on edit mode
            gap: oTableAPI && oTableAPI.getReadOnly() ? 0 : 6
          }
        });
      }
    },
    _computeLabel: function (property, labelMap) {
      if (property.label) {
        var _property$path;
        const propertiesWithSameLabel = labelMap[property.label];
        if ((propertiesWithSameLabel === null || propertiesWithSameLabel === void 0 ? void 0 : propertiesWithSameLabel.length) > 1 && (_property$path = property.path) !== null && _property$path !== void 0 && _property$path.includes("/") && property.additionalLabels) {
          property.label = property.label + " (" + property.additionalLabels.join(" / ") + ")";
        }
        delete property.additionalLabels;
      }
    },
    //Update VisualSetting for columnWidth calculation and labels on navigation properties
    _updatePropertyInfo: function (table, properties) {
      const labelMap = {};
      // Check available p13n modes
      const p13nMode = table.getP13nMode();
      properties.forEach(property => {
        if (!property.propertyInfos && property.label) {
          // Only for non-complex properties
          if ((p13nMode === null || p13nMode === void 0 ? void 0 : p13nMode.indexOf("Sort")) > -1 && property.sortable || (p13nMode === null || p13nMode === void 0 ? void 0 : p13nMode.indexOf("Filter")) > -1 && property.filterable || (p13nMode === null || p13nMode === void 0 ? void 0 : p13nMode.indexOf("Group")) > -1 && property.groupable) {
            labelMap[property.label] = labelMap[property.label] !== undefined ? labelMap[property.label].concat([property]) : [property];
          }
        }
      });
      properties.forEach(property => {
        this._computeVisualSettingsForFieldGroup(table, property, properties);
        this._computeVisualSettingsForPropertyWithValueHelp(table, property);
        // bcp: 2270003577
        // Some columns (eg: custom columns) have no typeConfig property.
        // initializing it prevents an exception throw
        property.typeConfig = deepExtend(property.typeConfig, {});
        this._computeLabel(property, labelMap);
      });
      return properties;
    },
    getColumnsFor: function (table) {
      return table.getParent().getTableDefinition().columns;
    },
    _getAggregatedPropertyMap: function (oTable) {
      return oTable.getParent().getTableDefinition().aggregates;
    },
    /**
     * Returns the export capabilities for the given sap.ui.mdc.Table instance.
     *
     * @param oTable Instance of the table
     * @returns Promise representing the export capabilities of the table instance
     */
    fetchExportCapabilities: function (oTable) {
      const oCapabilities = {
        XLSX: {}
      };
      let oModel;
      return DelegateUtil.fetchModel(oTable).then(function (model) {
        oModel = model;
        return oModel.getMetaModel().getObject("/$EntityContainer@Org.OData.Capabilities.V1.SupportedFormats");
      }).then(function (aSupportedFormats) {
        const aLowerFormats = (aSupportedFormats || []).map(element => {
          return element.toLowerCase();
        });
        if (aLowerFormats.indexOf("application/pdf") > -1) {
          return oModel.getMetaModel().getObject("/$EntityContainer@com.sap.vocabularies.PDF.v1.Features");
        }
        return undefined;
      }).then(function (oAnnotation) {
        if (oAnnotation) {
          oCapabilities["PDF"] = Object.assign({}, oAnnotation);
        }
      }).catch(function (err) {
        Log.error(`An error occurs while computing export capabilities: ${err}`);
      }).then(function () {
        return oCapabilities;
      });
    },
    /**
     * Filtering on 1:n navigation properties and navigation
     * properties not part of the LineItem annotation is forbidden.
     *
     * @param columnInfo
     * @param metaModel
     * @param table
     * @returns Boolean true if filtering is allowed, false otherwise
     */
    _isFilterableNavigationProperty: function (columnInfo, metaModel, table) {
      // get the DataModelObjectPath for the table
      const tableDataModelObjectPath = getInvolvedDataModelObjects(metaModel.getContext(DelegateUtil.getCustomData(table, "metaPath"))),
        // get all navigation properties leading to the column
        columnNavigationProperties = getInvolvedDataModelObjects(metaModel.getContext(columnInfo.annotationPath)).navigationProperties,
        // we are only interested in navigation properties relative to the table, so all before and including the tables targetType can be filtered
        tableTargetEntityIndex = columnNavigationProperties.findIndex(prop => {
          var _prop$targetType;
          return ((_prop$targetType = prop.targetType) === null || _prop$targetType === void 0 ? void 0 : _prop$targetType.name) === tableDataModelObjectPath.targetEntityType.name;
        }),
        relativeNavigationProperties = columnNavigationProperties.slice(tableTargetEntityIndex > 0 ? tableTargetEntityIndex : 0);
      return !columnInfo.relativePath.includes("/") || columnInfo.isPartOfLineItem === true && !relativeNavigationProperties.some(navigationProperty => navigationProperty._type == "NavigationProperty" && navigationProperty.isCollection);
    },
    _fetchPropertyInfo: function (metaModel, columnInfo, table, appComponent) {
      var _columnInfo$typeConfi, _columnInfo$typeConfi2, _columnInfo$propertyI;
      const sAbsoluteNavigationPath = columnInfo.annotationPath,
        oDataField = metaModel.getObject(sAbsoluteNavigationPath),
        oNavigationContext = metaModel.createBindingContext(sAbsoluteNavigationPath),
        oTypeConfig = (_columnInfo$typeConfi = columnInfo.typeConfig) !== null && _columnInfo$typeConfi !== void 0 && _columnInfo$typeConfi.className && isTypeFilterable(columnInfo.typeConfig.className) ? TypeUtil.getTypeConfig(columnInfo.typeConfig.className, columnInfo.typeConfig.formatOptions, columnInfo.typeConfig.constraints) : {},
        bFilterable = CommonHelper.isPropertyFilterable(oNavigationContext, oDataField),
        isComplexType = columnInfo.typeConfig && columnInfo.typeConfig.className && ((_columnInfo$typeConfi2 = columnInfo.typeConfig.className) === null || _columnInfo$typeConfi2 === void 0 ? void 0 : _columnInfo$typeConfi2.indexOf("Edm.")) !== 0,
        bIsAnalyticalTable = DelegateUtil.getCustomData(table, "enableAnalytics") === "true",
        aAggregatedPropertyMapUnfilterable = bIsAnalyticalTable ? this._getAggregatedPropertyMap(table) : {},
        label = DelegateUtil.getLocalizedText(columnInfo.label ?? "", appComponent ?? table);
      const propertyInfo = {
        name: columnInfo.name,
        metadataPath: sAbsoluteNavigationPath,
        groupLabel: columnInfo.groupLabel,
        group: columnInfo.group,
        label: label,
        tooltip: columnInfo.tooltip,
        typeConfig: oTypeConfig,
        visible: columnInfo.availability !== "Hidden" && !isComplexType,
        exportSettings: this._setPropertyInfoExportSettings(columnInfo.exportSettings, columnInfo),
        unit: columnInfo.unit
      };

      // Set visualSettings only if it exists
      if (columnInfo.visualSettings && Object.keys(columnInfo.visualSettings).length > 0) {
        propertyInfo.visualSettings = columnInfo.visualSettings;
      }
      if (columnInfo.exportDataPointTargetValue) {
        propertyInfo.exportDataPointTargetValue = columnInfo.exportDataPointTargetValue;
      }

      // MDC expects  'propertyInfos' only for complex properties.
      // An empty array throws validation error and undefined value is unhandled.
      if ((_columnInfo$propertyI = columnInfo.propertyInfos) !== null && _columnInfo$propertyI !== void 0 && _columnInfo$propertyI.length) {
        propertyInfo.propertyInfos = columnInfo.propertyInfos;
        //only in case of complex properties, wrap the cell content	on the excel exported file
        if (propertyInfo.exportSettings) {
          var _columnInfo$exportSet;
          propertyInfo.exportSettings.wrap = (_columnInfo$exportSet = columnInfo.exportSettings) === null || _columnInfo$exportSet === void 0 ? void 0 : _columnInfo$exportSet.wrap;
        }
      } else {
        var _extension;
        // Add properties which are supported only by simple PropertyInfos.
        propertyInfo.path = columnInfo.relativePath;
        // TODO with the new complex property info, a lot of "Description" fields are added as filter/sort fields
        propertyInfo.sortable = columnInfo.sortable;
        if (bIsAnalyticalTable) {
          this._updateAnalyticalPropertyInfoAttributes(propertyInfo, columnInfo);
        }
        propertyInfo.filterable = !!bFilterable && this._isFilterableNavigationProperty(columnInfo, metaModel, table) && (
        // TODO ignoring all properties that are not also available for adaptation for now, but proper concept required
        !bIsAnalyticalTable || !aAggregatedPropertyMapUnfilterable[propertyInfo.name] && !((_extension = columnInfo.extension) !== null && _extension !== void 0 && _extension.technicallyGroupable));
        propertyInfo.key = columnInfo.isKey;
        propertyInfo.groupable = columnInfo.isGroupable;
        if (columnInfo.textArrangement) {
          const descriptionColumn = this.getColumnsFor(table).find(function (oCol) {
            var _columnInfo$textArran;
            return oCol.name === ((_columnInfo$textArran = columnInfo.textArrangement) === null || _columnInfo$textArran === void 0 ? void 0 : _columnInfo$textArran.textProperty);
          });
          if (descriptionColumn) {
            propertyInfo.mode = columnInfo.textArrangement.mode;
            propertyInfo.valueProperty = columnInfo.relativePath;
            propertyInfo.descriptionProperty = descriptionColumn.relativePath;
          }
        }
        propertyInfo.text = columnInfo.textArrangement && columnInfo.textArrangement.textProperty;
        propertyInfo.caseSensitive = columnInfo.caseSensitive;
        if (columnInfo.additionalLabels) {
          propertyInfo.additionalLabels = columnInfo.additionalLabels.map(additionalLabel => {
            return DelegateUtil.getLocalizedText(additionalLabel, appComponent || table);
          });
        }
      }
      this._computeVisualSettingsForPropertyWithUnit(table, propertyInfo, columnInfo.unit, columnInfo.unitText, columnInfo.timezoneText);
      return propertyInfo;
    },
    /**
     * Extend the export settings based on the column info.
     *
     * @param exportSettings The export settings to be extended
     * @param columnInfo The columnInfo object
     * @returns The extended export settings
     */
    _setPropertyInfoExportSettings: function (exportSettings, columnInfo) {
      var _columnInfo$typeConfi3;
      const exportFormat = this._getExportFormat((_columnInfo$typeConfi3 = columnInfo.typeConfig) === null || _columnInfo$typeConfi3 === void 0 ? void 0 : _columnInfo$typeConfi3.className);
      if (exportSettings) {
        if (exportFormat && !exportSettings.timezoneProperty) {
          exportSettings.format = exportFormat;
        }
        // Set the exportSettings template only if it exists.
        if (exportSettings.template) {
          var _columnInfo$exportSet2;
          exportSettings.template = (_columnInfo$exportSet2 = columnInfo.exportSettings) === null || _columnInfo$exportSet2 === void 0 ? void 0 : _columnInfo$exportSet2.template;
        }
      }
      return exportSettings;
    },
    _updateAnalyticalPropertyInfoAttributes(propertyInfo, columnInfo) {
      if (columnInfo.aggregatable) {
        propertyInfo.aggregatable = columnInfo.aggregatable;
      }
      if (columnInfo.extension) {
        propertyInfo.extension = columnInfo.extension;
      }
    },
    _fetchCustomPropertyInfo: function (oColumnInfo, oTable, oAppComponent) {
      const sLabel = DelegateUtil.getLocalizedText(oColumnInfo.header, oAppComponent || oTable); // Todo: To be removed once MDC provides translation support
      const oPropertyInfo = {
        name: oColumnInfo.name,
        groupLabel: undefined,
        group: undefined,
        label: sLabel,
        type: "Edm.String",
        // TBD
        visible: oColumnInfo.availability !== "Hidden",
        exportSettings: oColumnInfo.exportSettings,
        visualSettings: oColumnInfo.visualSettings
      };

      // MDC expects 'propertyInfos' only for complex properties.
      // An empty array throws validation error and undefined value is unhandled.
      if (oColumnInfo.propertyInfos && oColumnInfo.propertyInfos.length) {
        oPropertyInfo.propertyInfos = oColumnInfo.propertyInfos;
        //only in case of complex properties, wrap the cell content on the excel exported file
        oPropertyInfo.exportSettings = {
          wrap: oColumnInfo.exportSettings.wrap,
          template: oColumnInfo.exportSettings.template
        };
      } else {
        // Add properties which are supported only by simple PropertyInfos.
        oPropertyInfo.path = oColumnInfo.name;
        oPropertyInfo.sortable = false;
        oPropertyInfo.filterable = false;
      }
      return oPropertyInfo;
    },
    _bColumnHasPropertyWithDraftIndicator: function (oColumnInfo) {
      return !!(oColumnInfo.formatOptions && oColumnInfo.formatOptions.hasDraftIndicator || oColumnInfo.formatOptions && oColumnInfo.formatOptions.fieldGroupDraftIndicatorPropertyPath);
    },
    _updateDraftIndicatorModel: function (_oTable, _oColumnInfo) {
      const aVisibleColumns = _oTable.getColumns();
      const oInternalBindingContext = _oTable.getBindingContext("internal");
      const sInternalPath = oInternalBindingContext && oInternalBindingContext.getPath();
      if (aVisibleColumns && oInternalBindingContext) {
        for (const index in aVisibleColumns) {
          if (this._bColumnHasPropertyWithDraftIndicator(_oColumnInfo) && _oColumnInfo.name === aVisibleColumns[index].getDataProperty()) {
            if (oInternalBindingContext.getProperty(sInternalPath + SEMANTICKEY_HAS_DRAFTINDICATOR) === undefined) {
              oInternalBindingContext.setProperty(sInternalPath + SEMANTICKEY_HAS_DRAFTINDICATOR, _oColumnInfo.name);
              break;
            }
          }
        }
      }
    },
    _fetchPropertiesForEntity: function (oTable, sEntityTypePath, oMetaModel, oAppComponent) {
      // when fetching properties, this binding context is needed - so lets create it only once and use if for all properties/data-fields/line-items
      const sBindingPath = ModelHelper.getEntitySetPath(sEntityTypePath);
      let aFetchedProperties = [];
      const oFR = CommonUtils.getFilterRestrictionsByPath(sBindingPath, oMetaModel);
      const aNonFilterableProps = oFR.NonFilterableProperties;
      return Promise.resolve(this.getColumnsFor(oTable)).then(aColumns => {
        // DraftAdministrativeData does not work via 'entitySet/$NavigationPropertyBinding/DraftAdministrativeData'
        if (aColumns) {
          let oPropertyInfo;
          aColumns.forEach(oColumnInfo => {
            this._updateDraftIndicatorModel(oTable, oColumnInfo);
            switch (oColumnInfo.type) {
              case "Annotation":
                oPropertyInfo = this._fetchPropertyInfo(oMetaModel, oColumnInfo, oTable, oAppComponent);
                if (oPropertyInfo && aNonFilterableProps.indexOf(oPropertyInfo.name) === -1) {
                  oPropertyInfo.maxConditions = DelegateUtil.isMultiValue(oPropertyInfo) ? -1 : 1;
                }
                break;
              case "Slot":
              case "Default":
                oPropertyInfo = this._fetchCustomPropertyInfo(oColumnInfo, oTable, oAppComponent);
                break;
              default:
                throw new Error(`unhandled switch case ${oColumnInfo.type}`);
            }
            aFetchedProperties.push(oPropertyInfo);
          });
        }
      }).then(() => {
        aFetchedProperties = this._updatePropertyInfo(oTable, aFetchedProperties);
      }).catch(function (err) {
        Log.error(`An error occurs while updating fetched properties: ${err}`);
      }).then(function () {
        return aFetchedProperties;
      });
    },
    _getCachedOrFetchPropertiesForEntity: function (table, entityTypePath, metaModel, appComponent) {
      const fetchedProperties = DelegateUtil.getCachedProperties(table);
      if (fetchedProperties) {
        return Promise.resolve(fetchedProperties);
      }
      return this._fetchPropertiesForEntity(table, entityTypePath, metaModel, appComponent).then(function (subFetchedProperties) {
        DelegateUtil.setCachedProperties(table, subFetchedProperties);
        return subFetchedProperties;
      });
    },
    _setTableNoDataText: function (oTable, oBindingInfo) {
      let sNoDataKey = "";
      const oTableFilterInfo = TableUtils.getAllFilterInfo(oTable),
        suffixResourceKey = oBindingInfo.path.startsWith("/") ? oBindingInfo.path.substr(1) : oBindingInfo.path;
      const _getNoDataTextWithFilters = function () {
        if (oTable.data("hiddenFilters") || oTable.data("quickFilterKey")) {
          return "M_TABLE_AND_CHART_NO_DATA_TEXT_MULTI_VIEW";
        } else {
          return "T_TABLE_AND_CHART_NO_DATA_TEXT_WITH_FILTER";
        }
      };
      const sFilterAssociation = oTable.getFilter();
      if (sFilterAssociation && !/BasicSearch$/.test(sFilterAssociation)) {
        // check if a FilterBar is associated to the Table (basic search on toolBar is excluded)
        if (oTableFilterInfo.search || oTableFilterInfo.filters && oTableFilterInfo.filters.length) {
          // check if table has any Filterbar filters or personalization filters
          sNoDataKey = _getNoDataTextWithFilters();
        } else {
          sNoDataKey = "T_TABLE_AND_CHART_NO_DATA_TEXT";
        }
      } else if (oTableFilterInfo.search || oTableFilterInfo.filters && oTableFilterInfo.filters.length) {
        //check if table has any personalization filters
        sNoDataKey = _getNoDataTextWithFilters();
      } else {
        sNoDataKey = "M_TABLE_AND_CHART_NO_FILTERS_NO_DATA_TEXT";
      }
      return oTable.getModel("sap.fe.i18n").getResourceBundle().then(function (oResourceBundle) {
        oTable.setNoData(CommonUtils.getTranslatedText(sNoDataKey, oResourceBundle, undefined, suffixResourceKey));
      }).catch(function (error) {
        Log.error(error);
      });
    },
    handleTableDataReceived: function (oTable, oInternalModelContext) {
      const oBinding = oTable && oTable.getRowBinding(),
        bDataReceivedAttached = oInternalModelContext && oInternalModelContext.getProperty("dataReceivedAttached");
      if (oInternalModelContext && !bDataReceivedAttached) {
        oBinding.attachDataReceived(function () {
          // Refresh the selected contexts to trigger re-calculation of enabled state of actions.
          oInternalModelContext.setProperty("selectedContexts", []);
          const aSelectedContexts = oTable.getSelectedContexts();
          oInternalModelContext.setProperty("selectedContexts", aSelectedContexts);
          oInternalModelContext.setProperty("numberOfSelectedContexts", aSelectedContexts.length);
          const oActionOperationAvailableMap = JSON.parse(CommonHelper.parseCustomData(DelegateUtil.getCustomData(oTable, "operationAvailableMap")));
          ActionRuntime.setActionEnablement(oInternalModelContext, oActionOperationAvailableMap, aSelectedContexts, "table");
          // Refresh enablement of delete button
          DeleteHelper.updateDeleteInfoForSelectedContexts(oInternalModelContext, aSelectedContexts);
          const oTableAPI = oTable ? oTable.getParent() : null;
          if (oTableAPI) {
            oTableAPI.setUpEmptyRows(oTable);
          }
        });
        oInternalModelContext.setProperty("dataReceivedAttached", true);
      }
    },
    rebind: function (oTable, oBindingInfo) {
      const oTableAPI = oTable.getParent();
      const bIsSuspended = oTableAPI === null || oTableAPI === void 0 ? void 0 : oTableAPI.getProperty("bindingSuspended");
      oTableAPI === null || oTableAPI === void 0 ? void 0 : oTableAPI.setProperty("outDatedBinding", bIsSuspended);
      if (!bIsSuspended) {
        TableUtils.clearSelection(oTable);
        TableDelegateBase.rebind.apply(this, [oTable, oBindingInfo]);
        TableUtils.onTableBound(oTable);
        this._setTableNoDataText(oTable, oBindingInfo);
        return TableUtils.whenBound(oTable).then(this.handleTableDataReceived(oTable, oTable.getBindingContext("internal"))).catch(function (oError) {
          Log.error("Error while waiting for the table to be bound", oError);
        });
      }
      return Promise.resolve();
    },
    /**
     * Fetches the relevant metadata for the table and returns property info array.
     *
     * @param table Instance of the MDCtable
     * @returns Array of property info
     */
    fetchProperties: function (table) {
      return DelegateUtil.fetchModel(table).then(model => {
        return this._getCachedOrFetchPropertiesForEntity(table, DelegateUtil.getCustomData(table, "entityType"), model.getMetaModel());
      }).then(properties => {
        table.getBindingContext("internal").setProperty("tablePropertiesAvailable", true);
        return properties;
      });
    },
    preInit: function (oTable) {
      return TableDelegateBase.preInit.apply(this, [oTable]).then(function () {
        /**
         * Set the binding context to null for every fast creation row to avoid it inheriting
         * the wrong context and requesting the table columns on the parent entity
         * Set the correct binding context in ObjectPageController.enableFastCreationRow()
         */
        const oFastCreationRow = oTable.getCreationRow();
        if (oFastCreationRow) {
          oFastCreationRow.setBindingContext(null);
        }
      });
    },
    updateBindingInfo: function (oTable, oBindingInfo) {
      TableDelegateBase.updateBindingInfo.apply(this, [oTable, oBindingInfo]);
      this._internalUpdateBindingInfo(oTable, oBindingInfo);
      oBindingInfo.events.dataReceived = oTable.getParent().onInternalDataReceived.bind(oTable.getParent());
      oBindingInfo.events.dataRequested = oTable.getParent().onInternalDataRequested.bind(oTable.getParent());
      this._setTableNoDataText(oTable, oBindingInfo);
    },
    _manageSemanticTargets: function (oMDCTable) {
      const oRowBinding = oMDCTable.getRowBinding();
      if (oRowBinding) {
        oRowBinding.attachEventOnce("dataRequested", function () {
          setTimeout(function () {
            const _oView = CommonUtils.getTargetView(oMDCTable);
            if (_oView) {
              TableUtils.getSemanticTargetsFromTable(_oView.getController(), oMDCTable);
            }
          }, 0);
        });
      }
    },
    updateBinding: function (oTable, oBindingInfo, oBinding) {
      const oTableAPI = oTable.getParent();
      const bIsSuspended = oTableAPI === null || oTableAPI === void 0 ? void 0 : oTableAPI.getProperty("bindingSuspended");
      if (!bIsSuspended) {
        let bNeedManualRefresh = false;
        const _oView = CommonUtils.getTargetView(oTable);
        const oInternalBindingContext = oTable.getBindingContext("internal");
        const sManualUpdatePropertyKey = "pendingManualBindingUpdate";
        const bPendingManualUpdate = oInternalBindingContext.getProperty(sManualUpdatePropertyKey);
        const oRowBinding = oTable.getRowBinding();
        if (oRowBinding) {
          /**
           * Manual refresh if filters are not changed by binding.refresh() since updating the bindingInfo
           * is not enough to trigger a batch request.
           * Removing columns creates one batch request that was not executed before
           */
          const oldFilters = oRowBinding.getFilters("Application");
          bNeedManualRefresh = deepEqual(oBindingInfo.filters, oldFilters[0]) && oRowBinding.getQueryOptionsFromParameters().$search === oBindingInfo.parameters.$search && !bPendingManualUpdate && _oView && _oView.getViewData().converterType === "ListReport";
        }
        TableDelegateBase.updateBinding.apply(this, [oTable, oBindingInfo, oBinding]);
        oTable.fireEvent("bindingUpdated");
        if (bNeedManualRefresh && oTable.getFilter() && oBinding) {
          oRowBinding.requestRefresh(oRowBinding.getGroupId()).finally(function () {
            oInternalBindingContext.setProperty(sManualUpdatePropertyKey, false);
          }).catch(function (oError) {
            Log.error("Error while refreshing the table", oError);
          });
          oInternalBindingContext.setProperty(sManualUpdatePropertyKey, true);
        }
        this._manageSemanticTargets(oTable);
      }
      oTableAPI === null || oTableAPI === void 0 ? void 0 : oTableAPI.setProperty("outDatedBinding", bIsSuspended);
    },
    _computeRowBindingInfoFromTemplate: function (oTable) {
      // We need to deepClone the info we get from the custom data, otherwise some of its subobjects (e.g. parameters) will
      // be shared with oBindingInfo and modified later (Object.assign only does a shallow clone)
      const rowBindingInfo = deepClone(DelegateUtil.getCustomData(oTable, "rowsBindingInfo"));
      // if the rowBindingInfo has a $$getKeepAliveContext parameter we need to check it is the only Table with such a
      // parameter for the collectionMetaPath
      if (rowBindingInfo.parameters.$$getKeepAliveContext) {
        const collectionPath = DelegateUtil.getCustomData(oTable, "targetCollectionPath");
        const internalModel = oTable.getModel("internal");
        const keptAliveLists = internalModel.getObject("/keptAliveLists") || {};
        if (!keptAliveLists[collectionPath]) {
          keptAliveLists[collectionPath] = oTable.getId();
          internalModel.setProperty("/keptAliveLists", keptAliveLists);
        } else if (keptAliveLists[collectionPath] !== oTable.getId()) {
          delete rowBindingInfo.parameters.$$getKeepAliveContext;
        }
      }
      return rowBindingInfo;
    },
    _internalUpdateBindingInfo: function (oTable, oBindingInfo) {
      const oInternalModelContext = oTable.getBindingContext("internal");
      Object.assign(oBindingInfo, this._computeRowBindingInfoFromTemplate(oTable));
      /**
       * Binding info might be suspended at the beginning when the first bindRows is called:
       * To avoid duplicate requests but still have a binding to create new entries.				 *
       * After the initial binding step, follow up bindings should not longer be suspended.
       */
      if (oTable.getRowBinding()) {
        oBindingInfo.suspended = false;
      }
      // The previously added handler for the event 'dataReceived' is not anymore there
      // since the bindingInfo is recreated from scratch so we need to set the flag to false in order
      // to again add the handler on this event if needed
      if (oInternalModelContext) {
        oInternalModelContext.setProperty("dataReceivedAttached", false);
      }
      let oFilter;
      const oFilterInfo = TableUtils.getAllFilterInfo(oTable);
      // Prepare binding info with filter/search parameters
      if (oFilterInfo.filters.length > 0) {
        oFilter = new Filter({
          filters: oFilterInfo.filters,
          and: true
        });
      }
      if (oFilterInfo.bindingPath) {
        oBindingInfo.path = oFilterInfo.bindingPath;
      }
      const oDataStateIndicator = oTable.getDataStateIndicator();
      if (oDataStateIndicator && oDataStateIndicator.isFiltering()) {
        // Include filters on messageStrip
        if (oBindingInfo.filters.length > 0) {
          oFilter = new Filter({
            filters: oBindingInfo.filters.concat(oFilterInfo.filters),
            and: true
          });
          TableUtils.updateBindingInfo(oBindingInfo, oFilterInfo, oFilter);
        }
      } else {
        TableUtils.updateBindingInfo(oBindingInfo, oFilterInfo, oFilter);
      }
    },
    _templateCustomColumnFragment: function (oColumnInfo, oView, oModifier, sTableId) {
      const oColumnModel = new JSONModel(oColumnInfo),
        oThis = new JSONModel({
          id: sTableId
        }),
        oPreprocessorSettings = {
          bindingContexts: {
            this: oThis.createBindingContext("/"),
            column: oColumnModel.createBindingContext("/")
          },
          models: {
            this: oThis,
            column: oColumnModel
          }
        };
      return DelegateUtil.templateControlFragment("sap.fe.macros.table.CustomColumn", oPreprocessorSettings, {
        view: oView
      }, oModifier).then(function (oItem) {
        oColumnModel.destroy();
        return oItem;
      });
    },
    _templateSlotColumnFragment: async function (oColumnInfo, oView, oModifier, sTableId) {
      const oColumnModel = new JSONModel(oColumnInfo),
        oThis = new JSONModel({
          id: sTableId
        }),
        oPreprocessorSettings = {
          bindingContexts: {
            this: oThis.createBindingContext("/"),
            column: oColumnModel.createBindingContext("/")
          },
          models: {
            this: oThis,
            column: oColumnModel
          }
        };
      const slotColumnsXML = await DelegateUtil.templateControlFragment("sap.fe.macros.table.SlotColumn", oPreprocessorSettings, {
        isXML: true
      });
      if (!slotColumnsXML) {
        return Promise.resolve(null);
      }
      const slotXML = slotColumnsXML.getElementsByTagName("slot")[0],
        mdcTableTemplateXML = slotColumnsXML.getElementsByTagName("mdcTable:template")[0];
      mdcTableTemplateXML.removeChild(slotXML);
      if (oColumnInfo.template) {
        const oTemplate = new DOMParser().parseFromString(oColumnInfo.template, "text/xml");
        mdcTableTemplateXML.appendChild(oTemplate.firstElementChild);
      } else {
        Log.error(`Please provide content inside this Building Block Column: ${oColumnInfo.header}`);
        return Promise.resolve(null);
      }
      if (oModifier.targets !== "jsControlTree") {
        return slotColumnsXML;
      }
      return Fragment.load({
        type: "XML",
        definition: slotColumnsXML
      });
    },
    _getExportFormat: function (dataType) {
      switch (dataType) {
        case "Edm.Date":
          return ExcelFormat.getExcelDatefromJSDate();
        case "Edm.DateTimeOffset":
          return ExcelFormat.getExcelDateTimefromJSDateTime();
        case "Edm.TimeOfDay":
          return ExcelFormat.getExcelTimefromJSTime();
        default:
          return undefined;
      }
    },
    _getVHRelevantFields: function (oMetaModel, sMetadataPath, sBindingPath) {
      let aFields = [],
        oDataFieldData = oMetaModel.getObject(sMetadataPath);
      if (oDataFieldData.$kind && oDataFieldData.$kind === "Property") {
        oDataFieldData = oMetaModel.getObject(`${sMetadataPath}@com.sap.vocabularies.UI.v1.DataFieldDefault`);
        sMetadataPath = `${sMetadataPath}@com.sap.vocabularies.UI.v1.DataFieldDefault`;
      }
      switch (oDataFieldData.$Type) {
        case "com.sap.vocabularies.UI.v1.DataFieldForAnnotation":
          if (oMetaModel.getObject(`${sMetadataPath}/Target/$AnnotationPath`).includes("com.sap.vocabularies.UI.v1.FieldGroup")) {
            oMetaModel.getObject(`${sMetadataPath}/Target/$AnnotationPath/Data`).forEach((oValue, iIndex) => {
              aFields = aFields.concat(this._getVHRelevantFields(oMetaModel, `${sMetadataPath}/Target/$AnnotationPath/Data/${iIndex}`));
            });
          }
          break;
        case "com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath":
        case "com.sap.vocabularies.UI.v1.DataFieldWithUrl":
        case "com.sap.vocabularies.UI.v1.DataField":
        case "com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation":
        case "com.sap.vocabularies.UI.v1.DataFieldWithAction":
          aFields.push(oMetaModel.getObject(`${sMetadataPath}/Value/$Path`));
          break;
        case "com.sap.vocabularies.UI.v1.DataFieldForAction":
        case "com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation":
          break;
        default:
          // property
          // temporary workaround to make sure VH relevant field path do not contain the bindingpath
          if (sMetadataPath.indexOf(sBindingPath) === 0) {
            aFields.push(sMetadataPath.substring(sBindingPath.length + 1));
            break;
          }
          aFields.push(CommonHelper.getNavigationPath(sMetadataPath, true));
          break;
      }
      return aFields;
    },
    _setDraftIndicatorOnVisibleColumn: function (oTable, aColumns, oColumnInfo) {
      const oInternalBindingContext = oTable.getBindingContext("internal");
      if (!oInternalBindingContext) {
        return;
      }
      const sInternalPath = oInternalBindingContext.getPath();
      const aColumnsWithDraftIndicator = aColumns.filter(oColumn => {
        return this._bColumnHasPropertyWithDraftIndicator(oColumn);
      });
      const aVisibleColumns = oTable.getColumns();
      let sAddVisibleColumnName, sVisibleColumnName, bFoundColumnVisibleWithDraft, sColumnNameWithDraftIndicator;
      for (const i in aVisibleColumns) {
        sVisibleColumnName = aVisibleColumns[i].getDataProperty();
        for (const j in aColumnsWithDraftIndicator) {
          sColumnNameWithDraftIndicator = aColumnsWithDraftIndicator[j].name;
          if (sVisibleColumnName === sColumnNameWithDraftIndicator) {
            bFoundColumnVisibleWithDraft = true;
            break;
          }
          if (oColumnInfo && oColumnInfo.name === sColumnNameWithDraftIndicator) {
            sAddVisibleColumnName = oColumnInfo.name;
          }
        }
        if (bFoundColumnVisibleWithDraft) {
          oInternalBindingContext.setProperty(sInternalPath + SEMANTICKEY_HAS_DRAFTINDICATOR, sVisibleColumnName);
          break;
        }
      }
      if (!bFoundColumnVisibleWithDraft && sAddVisibleColumnName) {
        oInternalBindingContext.setProperty(sInternalPath + SEMANTICKEY_HAS_DRAFTINDICATOR, sAddVisibleColumnName);
      }
    },
    removeItem: function (oPropertyInfoName, oTable, mPropertyBag) {
      let doRemoveItem = true;
      if (!oPropertyInfoName) {
        // 1. Application removed the property from their data model
        // 2. addItem failed before revertData created
        return Promise.resolve(doRemoveItem);
      }
      const oModifier = mPropertyBag.modifier;
      const sDataProperty = oModifier.getProperty(oPropertyInfoName, "dataProperty");
      if (sDataProperty && sDataProperty.indexOf && sDataProperty.indexOf("InlineXML") !== -1) {
        oModifier.insertAggregation(oTable, "dependents", oPropertyInfoName);
        doRemoveItem = false;
      }
      if (oTable.isA && oModifier.targets === "jsControlTree") {
        this._setDraftIndicatorStatus(oModifier, oTable, this.getColumnsFor(oTable));
      }
      return Promise.resolve(doRemoveItem);
    },
    _getMetaModel: function (mPropertyBag) {
      return mPropertyBag.appComponent && mPropertyBag.appComponent.getModel().getMetaModel();
    },
    _setDraftIndicatorStatus: function (oModifier, oTable, aColumns, oColumnInfo) {
      if (oModifier.targets === "jsControlTree") {
        this._setDraftIndicatorOnVisibleColumn(oTable, aColumns, oColumnInfo);
      }
    },
    _getGroupId: function (sRetrievedGroupId) {
      return sRetrievedGroupId || undefined;
    },
    _getDependent: function (oDependent, sPropertyInfoName, sDataProperty) {
      if (sPropertyInfoName === sDataProperty) {
        return oDependent;
      }
      return undefined;
    },
    _fnTemplateValueHelp: function (fnTemplateValueHelp, bValueHelpRequired, bValueHelpExists) {
      if (bValueHelpRequired && !bValueHelpExists) {
        return fnTemplateValueHelp("sap.fe.macros.table.ValueHelp");
      }
      return Promise.resolve();
    },
    _getDisplayMode: function (bDisplayMode) {
      let columnEditMode;
      if (bDisplayMode !== undefined) {
        bDisplayMode = typeof bDisplayMode === "boolean" ? bDisplayMode : bDisplayMode === "true";
        columnEditMode = bDisplayMode ? "Display" : "Editable";
        return {
          displaymode: bDisplayMode,
          columnEditMode: columnEditMode
        };
      }
      return {
        displaymode: undefined,
        columnEditMode: undefined
      };
    },
    _insertAggregation: function (oValueHelp, oModifier, oTable) {
      if (oValueHelp) {
        return oModifier.insertAggregation(oTable, "dependents", oValueHelp, 0);
      }
      return undefined;
    },
    /**
     * Invoked when a column is added using the table personalization dialog.
     *
     * @param sPropertyInfoName Name of the property for which the column is added
     * @param oTable Instance of table control
     * @param mPropertyBag Instance of property bag from the flexibility API
     * @returns Once resolved, a table column definition is returned
     */
    addItem: async function (sPropertyInfoName, oTable, mPropertyBag) {
      const oMetaModel = this._getMetaModel(mPropertyBag),
        oModifier = mPropertyBag.modifier,
        sTableId = oModifier.getId(oTable),
        aColumns = oTable.isA ? this.getColumnsFor(oTable) : null;
      if (!aColumns) {
        return Promise.resolve(null);
      }
      const oColumnInfo = aColumns.find(function (oColumn) {
        return oColumn.name === sPropertyInfoName;
      });
      if (!oColumnInfo) {
        Log.error(`${sPropertyInfoName} not found while adding column`);
        return Promise.resolve(null);
      }
      this._setDraftIndicatorStatus(oModifier, oTable, aColumns, oColumnInfo);
      // render custom column
      if (oColumnInfo.type === "Default") {
        return this._templateCustomColumnFragment(oColumnInfo, mPropertyBag.view, oModifier, sTableId);
      }
      if (oColumnInfo.type === "Slot") {
        return this._templateSlotColumnFragment(oColumnInfo, mPropertyBag.view, oModifier, sTableId);
      }
      // fall-back
      if (!oMetaModel) {
        return Promise.resolve(null);
      }
      const sPath = await DelegateUtil.getCustomData(oTable, "metaPath", oModifier);
      const sEntityTypePath = await DelegateUtil.getCustomData(oTable, "entityType", oModifier);
      const sRetrievedGroupId = await DelegateUtil.getCustomData(oTable, "requestGroupId", oModifier);
      const sGroupId = this._getGroupId(sRetrievedGroupId);
      const oTableContext = oMetaModel.createBindingContext(sPath);
      const aFetchedProperties = await this._getCachedOrFetchPropertiesForEntity(oTable, sEntityTypePath, oMetaModel, mPropertyBag.appComponent);
      const oPropertyInfo = aFetchedProperties.find(function (oInfo) {
        return oInfo.name === sPropertyInfoName;
      });
      const oPropertyContext = oMetaModel.createBindingContext(oPropertyInfo.metadataPath);
      const aVHProperties = this._getVHRelevantFields(oMetaModel, oPropertyInfo.metadataPath, sPath);
      const oParameters = {
        sBindingPath: sPath,
        sValueHelpType: "TableValueHelp",
        oControl: oTable,
        oMetaModel,
        oModifier,
        oPropertyInfo
      };
      const fnTemplateValueHelp = async sFragmentName => {
        const oThis = new JSONModel({
            id: sTableId,
            requestGroupId: sGroupId
          }),
          oPreprocessorSettings = {
            bindingContexts: {
              this: oThis.createBindingContext("/"),
              dataField: oPropertyContext,
              contextPath: oTableContext
            },
            models: {
              this: oThis,
              dataField: oMetaModel,
              metaModel: oMetaModel,
              contextPath: oMetaModel
            }
          };
        try {
          const oValueHelp = await DelegateUtil.templateControlFragment(sFragmentName, oPreprocessorSettings, {}, oModifier);
          return await this._insertAggregation(oValueHelp, oModifier, oTable);
        } catch (oError) {
          //We always resolve the promise to ensure that the app does not crash
          Log.error(`ValueHelp not loaded : ${oError.message}`);
          return null;
        } finally {
          oThis.destroy();
        }
      };
      const fnTemplateFragment = (oInPropertyInfo, oView) => {
        const sFragmentName = "sap.fe.macros.table.Column";
        let bDisplayMode;
        let sTableTypeCustomData;
        let sOnChangeCustomData;
        let sCreationModeCustomData;
        return Promise.all([DelegateUtil.getCustomData(oTable, "displayModePropertyBinding", oModifier), DelegateUtil.getCustomData(oTable, "tableType", oModifier), DelegateUtil.getCustomData(oTable, "onChange", oModifier), DelegateUtil.getCustomData(oTable, "creationMode", oModifier)]).then(aCustomData => {
          bDisplayMode = aCustomData[0];
          sTableTypeCustomData = aCustomData[1];
          sOnChangeCustomData = aCustomData[2];
          sCreationModeCustomData = aCustomData[3];
          // Read Only and Column Edit Mode can both have three state
          // Undefined means that the framework decides what to do
          // True / Display means always read only
          // False / Editable means editable but while still respecting the low level principle (immutable property will not be editable)
          const oDisplayModes = this._getDisplayMode(bDisplayMode);
          bDisplayMode = oDisplayModes.displaymode;
          const columnEditMode = oDisplayModes.columnEditMode;
          const oThis = new JSONModel({
              enableAutoColumnWidth: oTable.getParent().enableAutoColumnWidth,
              isOptimizedForSmallDevice: oTable.getParent().isOptimizedForSmallDevice,
              readOnly: bDisplayMode,
              columnEditMode: columnEditMode,
              tableType: sTableTypeCustomData,
              onChange: sOnChangeCustomData,
              id: sTableId,
              navigationPropertyPath: sPropertyInfoName,
              columnInfo: oColumnInfo,
              collection: {
                sPath: sPath,
                oModel: oMetaModel
              },
              creationMode: sCreationModeCustomData
            }),
            oPreprocessorSettings = {
              bindingContexts: {
                entitySet: oTableContext,
                collection: oTableContext,
                dataField: oPropertyContext,
                this: oThis.createBindingContext("/"),
                column: oThis.createBindingContext("/columnInfo")
              },
              models: {
                this: oThis,
                entitySet: oMetaModel,
                collection: oMetaModel,
                dataField: oMetaModel,
                metaModel: oMetaModel,
                column: oThis
              }
            };
          return DelegateUtil.templateControlFragment(sFragmentName, oPreprocessorSettings, {
            view: oView
          }, oModifier).finally(function () {
            oThis.destroy();
          });
        });
      };
      await Promise.all(aVHProperties.map(async sPropertyName => {
        const mParameters = Object.assign({}, oParameters, {
          sPropertyName: sPropertyName
        });
        const aResults = await Promise.all([DelegateUtil.isValueHelpRequired(mParameters), DelegateUtil.doesValueHelpExist(mParameters)]);
        const bValueHelpRequired = aResults[0],
          bValueHelpExists = aResults[1];
        return this._fnTemplateValueHelp(fnTemplateValueHelp, bValueHelpRequired, bValueHelpExists);
      }));
      // If view is not provided try to get it by accessing to the parental hierarchy
      // If it doesn't work (table into an unattached OP section) get the view via the AppComponent
      const view = mPropertyBag.view || CommonUtils.getTargetView(oTable) || (mPropertyBag.appComponent ? CommonUtils.getCurrentPageView(mPropertyBag.appComponent) : undefined);
      return fnTemplateFragment(oPropertyInfo, view);
    },
    /**
     * Provide the Table's filter delegate to provide basic filter functionality such as adding FilterFields.
     *
     * @returns Object for the Tables filter personalization.
     */
    getFilterDelegate: function () {
      return Object.assign({}, FilterBarDelegate, {
        addItem: function (sPropertyInfoName, oParentControl) {
          if (sPropertyInfoName.indexOf("Property::") === 0) {
            // Correct the name of complex property info references.
            sPropertyInfoName = sPropertyInfoName.replace("Property::", "");
          }
          return FilterBarDelegate.addItem(sPropertyInfoName, oParentControl);
        }
      });
    },
    /**
     * Returns the TypeUtil attached to this delegate.
     *
     * @returns Any instance of TypeUtil
     */
    getTypeUtil: function /*oPayload: object*/
    () {
      return TypeUtil;
    },
    formatGroupHeader(oTable, oContext, sProperty) {
      var _oFormatInfo$typeConf, _oFormatInfo$typeConf2;
      const mFormatInfos = DelegateUtil.getCachedProperties(oTable),
        oFormatInfo = mFormatInfos && mFormatInfos.filter(obj => {
          return obj.name === sProperty;
        })[0],
        /*For a Date or DateTime property, the value is returned in external format using a UI5 type for the
              given property path that formats corresponding to the property's EDM type and constraints*/
        bExternalFormat = (oFormatInfo === null || oFormatInfo === void 0 ? void 0 : (_oFormatInfo$typeConf = oFormatInfo.typeConfig) === null || _oFormatInfo$typeConf === void 0 ? void 0 : _oFormatInfo$typeConf.baseType) === "DateTime" || (oFormatInfo === null || oFormatInfo === void 0 ? void 0 : (_oFormatInfo$typeConf2 = oFormatInfo.typeConfig) === null || _oFormatInfo$typeConf2 === void 0 ? void 0 : _oFormatInfo$typeConf2.baseType) === "Date";
      let sValue;
      if (oFormatInfo && oFormatInfo.mode) {
        switch (oFormatInfo.mode) {
          case "Description":
            sValue = oContext.getProperty(oFormatInfo.descriptionProperty, bExternalFormat);
            break;
          case "DescriptionValue":
            sValue = ValueFormatter.formatWithBrackets(oContext.getProperty(oFormatInfo.descriptionProperty, bExternalFormat), oContext.getProperty(oFormatInfo.valueProperty, bExternalFormat));
            break;
          case "ValueDescription":
            sValue = ValueFormatter.formatWithBrackets(oContext.getProperty(oFormatInfo.valueProperty, bExternalFormat), oContext.getProperty(oFormatInfo.descriptionProperty, bExternalFormat));
            break;
          default:
            break;
        }
      } else {
        sValue = oContext.getProperty(oFormatInfo === null || oFormatInfo === void 0 ? void 0 : oFormatInfo.path, bExternalFormat);
      }
      return ResourceModel.getText("M_TABLE_GROUP_HEADER_TITLE", [oFormatInfo === null || oFormatInfo === void 0 ? void 0 : oFormatInfo.label, sValue]);
    }
  });
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/delegates/TableDelegate", ["sap/base/Log","sap/base/util/deepClone","sap/base/util/deepEqual","sap/base/util/deepExtend","sap/fe/core/ActionRuntime","sap/fe/core/CommonUtils","sap/fe/core/converters/MetaModelConverter","sap/fe/core/formatters/ValueFormatter","sap/fe/core/helpers/DeleteHelper","sap/fe/core/helpers/ExcelFormatHelper","sap/fe/core/helpers/ModelHelper","sap/fe/core/type/EDM","sap/fe/core/type/TypeUtil","sap/fe/macros/CommonHelper","sap/fe/macros/DelegateUtil","sap/fe/macros/filterBar/FilterBarDelegate","sap/fe/macros/ResourceModel","sap/fe/macros/table/TableSizeHelper","sap/fe/macros/table/Utils","sap/ui/core/Fragment","sap/ui/mdc/odata/v4/TableDelegate","sap/ui/model/Filter","sap/ui/model/json/JSONModel"],function(e,t,n,a,i,o,r,s,l,c,d,u,p,g,f,m,h,y,v,b,P,C,D){"use strict";var F=u.isTypeFilterable;var _=r.getInvolvedDataModelObjects;const T="/semanticKeyHasDraftIndicator";return Object.assign({},P,{_computeVisualSettingsForFieldGroup:function(e,t,n){if(t.name.indexOf("DataFieldForAnnotation::FieldGroup::")===0){const i=e.getColumns().find(function(e){return e.getDataProperty()===t.name});const o=i?i.data("showDataFieldsLabel")==="true":false;const r=e.getModel().getMetaModel();const s=_(r.getContext(t.metadataPath));const l=s.convertedTypes;const c=s.targetObject;const d=c.Target.$target;const u=[];d.Data.forEach(function(e){let t;switch(e.$Type){case"com.sap.vocabularies.UI.v1.DataFieldForAnnotation":t=y.getWidthForDataFieldForAnnotation(e,n,l,o);break;case"com.sap.vocabularies.UI.v1.DataField":t=y.getWidthForDataField(e,o,n,l);break;case"com.sap.vocabularies.UI.v1.DataFieldForAction":t={labelWidth:0,propertyWidth:y.getButtonWidth(e.Label)};break;default:}if(t){u.push(t.labelWidth+t.propertyWidth)}});const p=u.reduce(function(e,t){return Math.max(e,t)},0);t.visualSettings=a(t.visualSettings,{widthCalculation:{verticalArrangement:true,minWidth:Math.ceil(p)}})}},_computeVisualSettingsForPropertyWithValueHelp:function(e,t){const n=e.getParent();if(!t.propertyInfos){const i=e.getModel().getMetaModel();if(t.metadataPath&&i){const e=i.getObject(`${t.metadataPath}@`);if(e&&e["@com.sap.vocabularies.Common.v1.ValueList"]){t.visualSettings=a(t.visualSettings||{},{widthCalculation:{gap:n.getProperty("readOnly")?0:4}})}}}},_computeVisualSettingsForPropertyWithUnit:function(e,t,n,i,o){const r=e?e.getParent():null;const s=i||o;if(s){t.visualSettings=a(t.visualSettings,{widthCalculation:{gap:Math.ceil(y.getButtonWidth(s))}})}if(n){t.visualSettings=a(t.visualSettings,{widthCalculation:{gap:r&&r.getReadOnly()?0:6}})}},_computeLabel:function(e,t){if(e.label){var n;const a=t[e.label];if((a===null||a===void 0?void 0:a.length)>1&&(n=e.path)!==null&&n!==void 0&&n.includes("/")&&e.additionalLabels){e.label=e.label+" ("+e.additionalLabels.join(" / ")+")"}delete e.additionalLabels}},_updatePropertyInfo:function(e,t){const n={};const i=e.getP13nMode();t.forEach(e=>{if(!e.propertyInfos&&e.label){if((i===null||i===void 0?void 0:i.indexOf("Sort"))>-1&&e.sortable||(i===null||i===void 0?void 0:i.indexOf("Filter"))>-1&&e.filterable||(i===null||i===void 0?void 0:i.indexOf("Group"))>-1&&e.groupable){n[e.label]=n[e.label]!==undefined?n[e.label].concat([e]):[e]}}});t.forEach(i=>{this._computeVisualSettingsForFieldGroup(e,i,t);this._computeVisualSettingsForPropertyWithValueHelp(e,i);i.typeConfig=a(i.typeConfig,{});this._computeLabel(i,n)});return t},getColumnsFor:function(e){return e.getParent().getTableDefinition().columns},_getAggregatedPropertyMap:function(e){return e.getParent().getTableDefinition().aggregates},fetchExportCapabilities:function(t){const n={XLSX:{}};let a;return f.fetchModel(t).then(function(e){a=e;return a.getMetaModel().getObject("/$EntityContainer@Org.OData.Capabilities.V1.SupportedFormats")}).then(function(e){const t=(e||[]).map(e=>e.toLowerCase());if(t.indexOf("application/pdf")>-1){return a.getMetaModel().getObject("/$EntityContainer@com.sap.vocabularies.PDF.v1.Features")}return undefined}).then(function(e){if(e){n["PDF"]=Object.assign({},e)}}).catch(function(t){e.error(`An error occurs while computing export capabilities: ${t}`)}).then(function(){return n})},_isFilterableNavigationProperty:function(e,t,n){const a=_(t.getContext(f.getCustomData(n,"metaPath"))),i=_(t.getContext(e.annotationPath)).navigationProperties,o=i.findIndex(e=>{var t;return((t=e.targetType)===null||t===void 0?void 0:t.name)===a.targetEntityType.name}),r=i.slice(o>0?o:0);return!e.relativePath.includes("/")||e.isPartOfLineItem===true&&!r.some(e=>e._type=="NavigationProperty"&&e.isCollection)},_fetchPropertyInfo:function(e,t,n,a){var i,o,r;const s=t.annotationPath,l=e.getObject(s),c=e.createBindingContext(s),d=(i=t.typeConfig)!==null&&i!==void 0&&i.className&&F(t.typeConfig.className)?p.getTypeConfig(t.typeConfig.className,t.typeConfig.formatOptions,t.typeConfig.constraints):{},u=g.isPropertyFilterable(c,l),m=t.typeConfig&&t.typeConfig.className&&((o=t.typeConfig.className)===null||o===void 0?void 0:o.indexOf("Edm."))!==0,h=f.getCustomData(n,"enableAnalytics")==="true",y=h?this._getAggregatedPropertyMap(n):{},v=f.getLocalizedText(t.label??"",a??n);const b={name:t.name,metadataPath:s,groupLabel:t.groupLabel,group:t.group,label:v,tooltip:t.tooltip,typeConfig:d,visible:t.availability!=="Hidden"&&!m,exportSettings:this._setPropertyInfoExportSettings(t.exportSettings,t),unit:t.unit};if(t.visualSettings&&Object.keys(t.visualSettings).length>0){b.visualSettings=t.visualSettings}if(t.exportDataPointTargetValue){b.exportDataPointTargetValue=t.exportDataPointTargetValue}if((r=t.propertyInfos)!==null&&r!==void 0&&r.length){b.propertyInfos=t.propertyInfos;if(b.exportSettings){var P;b.exportSettings.wrap=(P=t.exportSettings)===null||P===void 0?void 0:P.wrap}}else{var C;b.path=t.relativePath;b.sortable=t.sortable;if(h){this._updateAnalyticalPropertyInfoAttributes(b,t)}b.filterable=!!u&&this._isFilterableNavigationProperty(t,e,n)&&(!h||!y[b.name]&&!((C=t.extension)!==null&&C!==void 0&&C.technicallyGroupable));b.key=t.isKey;b.groupable=t.isGroupable;if(t.textArrangement){const e=this.getColumnsFor(n).find(function(e){var n;return e.name===((n=t.textArrangement)===null||n===void 0?void 0:n.textProperty)});if(e){b.mode=t.textArrangement.mode;b.valueProperty=t.relativePath;b.descriptionProperty=e.relativePath}}b.text=t.textArrangement&&t.textArrangement.textProperty;b.caseSensitive=t.caseSensitive;if(t.additionalLabels){b.additionalLabels=t.additionalLabels.map(e=>f.getLocalizedText(e,a||n))}}this._computeVisualSettingsForPropertyWithUnit(n,b,t.unit,t.unitText,t.timezoneText);return b},_setPropertyInfoExportSettings:function(e,t){var n;const a=this._getExportFormat((n=t.typeConfig)===null||n===void 0?void 0:n.className);if(e){if(a&&!e.timezoneProperty){e.format=a}if(e.template){var i;e.template=(i=t.exportSettings)===null||i===void 0?void 0:i.template}}return e},_updateAnalyticalPropertyInfoAttributes(e,t){if(t.aggregatable){e.aggregatable=t.aggregatable}if(t.extension){e.extension=t.extension}},_fetchCustomPropertyInfo:function(e,t,n){const a=f.getLocalizedText(e.header,n||t);const i={name:e.name,groupLabel:undefined,group:undefined,label:a,type:"Edm.String",visible:e.availability!=="Hidden",exportSettings:e.exportSettings,visualSettings:e.visualSettings};if(e.propertyInfos&&e.propertyInfos.length){i.propertyInfos=e.propertyInfos;i.exportSettings={wrap:e.exportSettings.wrap,template:e.exportSettings.template}}else{i.path=e.name;i.sortable=false;i.filterable=false}return i},_bColumnHasPropertyWithDraftIndicator:function(e){return!!(e.formatOptions&&e.formatOptions.hasDraftIndicator||e.formatOptions&&e.formatOptions.fieldGroupDraftIndicatorPropertyPath)},_updateDraftIndicatorModel:function(e,t){const n=e.getColumns();const a=e.getBindingContext("internal");const i=a&&a.getPath();if(n&&a){for(const e in n){if(this._bColumnHasPropertyWithDraftIndicator(t)&&t.name===n[e].getDataProperty()){if(a.getProperty(i+T)===undefined){a.setProperty(i+T,t.name);break}}}}},_fetchPropertiesForEntity:function(t,n,a,i){const r=d.getEntitySetPath(n);let s=[];const l=o.getFilterRestrictionsByPath(r,a);const c=l.NonFilterableProperties;return Promise.resolve(this.getColumnsFor(t)).then(e=>{if(e){let n;e.forEach(e=>{this._updateDraftIndicatorModel(t,e);switch(e.type){case"Annotation":n=this._fetchPropertyInfo(a,e,t,i);if(n&&c.indexOf(n.name)===-1){n.maxConditions=f.isMultiValue(n)?-1:1}break;case"Slot":case"Default":n=this._fetchCustomPropertyInfo(e,t,i);break;default:throw new Error(`unhandled switch case ${e.type}`)}s.push(n)})}}).then(()=>{s=this._updatePropertyInfo(t,s)}).catch(function(t){e.error(`An error occurs while updating fetched properties: ${t}`)}).then(function(){return s})},_getCachedOrFetchPropertiesForEntity:function(e,t,n,a){const i=f.getCachedProperties(e);if(i){return Promise.resolve(i)}return this._fetchPropertiesForEntity(e,t,n,a).then(function(t){f.setCachedProperties(e,t);return t})},_setTableNoDataText:function(t,n){let a="";const i=v.getAllFilterInfo(t),r=n.path.startsWith("/")?n.path.substr(1):n.path;const s=function(){if(t.data("hiddenFilters")||t.data("quickFilterKey")){return"M_TABLE_AND_CHART_NO_DATA_TEXT_MULTI_VIEW"}else{return"T_TABLE_AND_CHART_NO_DATA_TEXT_WITH_FILTER"}};const l=t.getFilter();if(l&&!/BasicSearch$/.test(l)){if(i.search||i.filters&&i.filters.length){a=s()}else{a="T_TABLE_AND_CHART_NO_DATA_TEXT"}}else if(i.search||i.filters&&i.filters.length){a=s()}else{a="M_TABLE_AND_CHART_NO_FILTERS_NO_DATA_TEXT"}return t.getModel("sap.fe.i18n").getResourceBundle().then(function(e){t.setNoData(o.getTranslatedText(a,e,undefined,r))}).catch(function(t){e.error(t)})},handleTableDataReceived:function(e,t){const n=e&&e.getRowBinding(),a=t&&t.getProperty("dataReceivedAttached");if(t&&!a){n.attachDataReceived(function(){t.setProperty("selectedContexts",[]);const n=e.getSelectedContexts();t.setProperty("selectedContexts",n);t.setProperty("numberOfSelectedContexts",n.length);const a=JSON.parse(g.parseCustomData(f.getCustomData(e,"operationAvailableMap")));i.setActionEnablement(t,a,n,"table");l.updateDeleteInfoForSelectedContexts(t,n);const o=e?e.getParent():null;if(o){o.setUpEmptyRows(e)}});t.setProperty("dataReceivedAttached",true)}},rebind:function(t,n){const a=t.getParent();const i=a===null||a===void 0?void 0:a.getProperty("bindingSuspended");a===null||a===void 0?void 0:a.setProperty("outDatedBinding",i);if(!i){v.clearSelection(t);P.rebind.apply(this,[t,n]);v.onTableBound(t);this._setTableNoDataText(t,n);return v.whenBound(t).then(this.handleTableDataReceived(t,t.getBindingContext("internal"))).catch(function(t){e.error("Error while waiting for the table to be bound",t)})}return Promise.resolve()},fetchProperties:function(e){return f.fetchModel(e).then(t=>this._getCachedOrFetchPropertiesForEntity(e,f.getCustomData(e,"entityType"),t.getMetaModel())).then(t=>{e.getBindingContext("internal").setProperty("tablePropertiesAvailable",true);return t})},preInit:function(e){return P.preInit.apply(this,[e]).then(function(){const t=e.getCreationRow();if(t){t.setBindingContext(null)}})},updateBindingInfo:function(e,t){P.updateBindingInfo.apply(this,[e,t]);this._internalUpdateBindingInfo(e,t);t.events.dataReceived=e.getParent().onInternalDataReceived.bind(e.getParent());t.events.dataRequested=e.getParent().onInternalDataRequested.bind(e.getParent());this._setTableNoDataText(e,t)},_manageSemanticTargets:function(e){const t=e.getRowBinding();if(t){t.attachEventOnce("dataRequested",function(){setTimeout(function(){const t=o.getTargetView(e);if(t){v.getSemanticTargetsFromTable(t.getController(),e)}},0)})}},updateBinding:function(t,a,i){const r=t.getParent();const s=r===null||r===void 0?void 0:r.getProperty("bindingSuspended");if(!s){let r=false;const s=o.getTargetView(t);const l=t.getBindingContext("internal");const c="pendingManualBindingUpdate";const d=l.getProperty(c);const u=t.getRowBinding();if(u){const e=u.getFilters("Application");r=n(a.filters,e[0])&&u.getQueryOptionsFromParameters().$search===a.parameters.$search&&!d&&s&&s.getViewData().converterType==="ListReport"}P.updateBinding.apply(this,[t,a,i]);t.fireEvent("bindingUpdated");if(r&&t.getFilter()&&i){u.requestRefresh(u.getGroupId()).finally(function(){l.setProperty(c,false)}).catch(function(t){e.error("Error while refreshing the table",t)});l.setProperty(c,true)}this._manageSemanticTargets(t)}r===null||r===void 0?void 0:r.setProperty("outDatedBinding",s)},_computeRowBindingInfoFromTemplate:function(e){const n=t(f.getCustomData(e,"rowsBindingInfo"));if(n.parameters.$$getKeepAliveContext){const t=f.getCustomData(e,"targetCollectionPath");const a=e.getModel("internal");const i=a.getObject("/keptAliveLists")||{};if(!i[t]){i[t]=e.getId();a.setProperty("/keptAliveLists",i)}else if(i[t]!==e.getId()){delete n.parameters.$$getKeepAliveContext}}return n},_internalUpdateBindingInfo:function(e,t){const n=e.getBindingContext("internal");Object.assign(t,this._computeRowBindingInfoFromTemplate(e));if(e.getRowBinding()){t.suspended=false}if(n){n.setProperty("dataReceivedAttached",false)}let a;const i=v.getAllFilterInfo(e);if(i.filters.length>0){a=new C({filters:i.filters,and:true})}if(i.bindingPath){t.path=i.bindingPath}const o=e.getDataStateIndicator();if(o&&o.isFiltering()){if(t.filters.length>0){a=new C({filters:t.filters.concat(i.filters),and:true});v.updateBindingInfo(t,i,a)}}else{v.updateBindingInfo(t,i,a)}},_templateCustomColumnFragment:function(e,t,n,a){const i=new D(e),o=new D({id:a}),r={bindingContexts:{this:o.createBindingContext("/"),column:i.createBindingContext("/")},models:{this:o,column:i}};return f.templateControlFragment("sap.fe.macros.table.CustomColumn",r,{view:t},n).then(function(e){i.destroy();return e})},_templateSlotColumnFragment:async function(t,n,a,i){const o=new D(t),r=new D({id:i}),s={bindingContexts:{this:r.createBindingContext("/"),column:o.createBindingContext("/")},models:{this:r,column:o}};const l=await f.templateControlFragment("sap.fe.macros.table.SlotColumn",s,{isXML:true});if(!l){return Promise.resolve(null)}const c=l.getElementsByTagName("slot")[0],d=l.getElementsByTagName("mdcTable:template")[0];d.removeChild(c);if(t.template){const e=(new DOMParser).parseFromString(t.template,"text/xml");d.appendChild(e.firstElementChild)}else{e.error(`Please provide content inside this Building Block Column: ${t.header}`);return Promise.resolve(null)}if(a.targets!=="jsControlTree"){return l}return b.load({type:"XML",definition:l})},_getExportFormat:function(e){switch(e){case"Edm.Date":return c.getExcelDatefromJSDate();case"Edm.DateTimeOffset":return c.getExcelDateTimefromJSDateTime();case"Edm.TimeOfDay":return c.getExcelTimefromJSTime();default:return undefined}},_getVHRelevantFields:function(e,t,n){let a=[],i=e.getObject(t);if(i.$kind&&i.$kind==="Property"){i=e.getObject(`${t}@com.sap.vocabularies.UI.v1.DataFieldDefault`);t=`${t}@com.sap.vocabularies.UI.v1.DataFieldDefault`}switch(i.$Type){case"com.sap.vocabularies.UI.v1.DataFieldForAnnotation":if(e.getObject(`${t}/Target/$AnnotationPath`).includes("com.sap.vocabularies.UI.v1.FieldGroup")){e.getObject(`${t}/Target/$AnnotationPath/Data`).forEach((n,i)=>{a=a.concat(this._getVHRelevantFields(e,`${t}/Target/$AnnotationPath/Data/${i}`))})}break;case"com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath":case"com.sap.vocabularies.UI.v1.DataFieldWithUrl":case"com.sap.vocabularies.UI.v1.DataField":case"com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation":case"com.sap.vocabularies.UI.v1.DataFieldWithAction":a.push(e.getObject(`${t}/Value/$Path`));break;case"com.sap.vocabularies.UI.v1.DataFieldForAction":case"com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation":break;default:if(t.indexOf(n)===0){a.push(t.substring(n.length+1));break}a.push(g.getNavigationPath(t,true));break}return a},_setDraftIndicatorOnVisibleColumn:function(e,t,n){const a=e.getBindingContext("internal");if(!a){return}const i=a.getPath();const o=t.filter(e=>this._bColumnHasPropertyWithDraftIndicator(e));const r=e.getColumns();let s,l,c,d;for(const e in r){l=r[e].getDataProperty();for(const e in o){d=o[e].name;if(l===d){c=true;break}if(n&&n.name===d){s=n.name}}if(c){a.setProperty(i+T,l);break}}if(!c&&s){a.setProperty(i+T,s)}},removeItem:function(e,t,n){let a=true;if(!e){return Promise.resolve(a)}const i=n.modifier;const o=i.getProperty(e,"dataProperty");if(o&&o.indexOf&&o.indexOf("InlineXML")!==-1){i.insertAggregation(t,"dependents",e);a=false}if(t.isA&&i.targets==="jsControlTree"){this._setDraftIndicatorStatus(i,t,this.getColumnsFor(t))}return Promise.resolve(a)},_getMetaModel:function(e){return e.appComponent&&e.appComponent.getModel().getMetaModel()},_setDraftIndicatorStatus:function(e,t,n,a){if(e.targets==="jsControlTree"){this._setDraftIndicatorOnVisibleColumn(t,n,a)}},_getGroupId:function(e){return e||undefined},_getDependent:function(e,t,n){if(t===n){return e}return undefined},_fnTemplateValueHelp:function(e,t,n){if(t&&!n){return e("sap.fe.macros.table.ValueHelp")}return Promise.resolve()},_getDisplayMode:function(e){let t;if(e!==undefined){e=typeof e==="boolean"?e:e==="true";t=e?"Display":"Editable";return{displaymode:e,columnEditMode:t}}return{displaymode:undefined,columnEditMode:undefined}},_insertAggregation:function(e,t,n){if(e){return t.insertAggregation(n,"dependents",e,0)}return undefined},addItem:async function(t,n,a){const i=this._getMetaModel(a),r=a.modifier,s=r.getId(n),l=n.isA?this.getColumnsFor(n):null;if(!l){return Promise.resolve(null)}const c=l.find(function(e){return e.name===t});if(!c){e.error(`${t} not found while adding column`);return Promise.resolve(null)}this._setDraftIndicatorStatus(r,n,l,c);if(c.type==="Default"){return this._templateCustomColumnFragment(c,a.view,r,s)}if(c.type==="Slot"){return this._templateSlotColumnFragment(c,a.view,r,s)}if(!i){return Promise.resolve(null)}const d=await f.getCustomData(n,"metaPath",r);const u=await f.getCustomData(n,"entityType",r);const p=await f.getCustomData(n,"requestGroupId",r);const g=this._getGroupId(p);const m=i.createBindingContext(d);const h=await this._getCachedOrFetchPropertiesForEntity(n,u,i,a.appComponent);const y=h.find(function(e){return e.name===t});const v=i.createBindingContext(y.metadataPath);const b=this._getVHRelevantFields(i,y.metadataPath,d);const P={sBindingPath:d,sValueHelpType:"TableValueHelp",oControl:n,oMetaModel:i,oModifier:r,oPropertyInfo:y};const C=async t=>{const a=new D({id:s,requestGroupId:g}),o={bindingContexts:{this:a.createBindingContext("/"),dataField:v,contextPath:m},models:{this:a,dataField:i,metaModel:i,contextPath:i}};try{const e=await f.templateControlFragment(t,o,{},r);return await this._insertAggregation(e,r,n)}catch(t){e.error(`ValueHelp not loaded : ${t.message}`);return null}finally{a.destroy()}};const F=(e,a)=>{const o="sap.fe.macros.table.Column";let l;let u;let p;let g;return Promise.all([f.getCustomData(n,"displayModePropertyBinding",r),f.getCustomData(n,"tableType",r),f.getCustomData(n,"onChange",r),f.getCustomData(n,"creationMode",r)]).then(e=>{l=e[0];u=e[1];p=e[2];g=e[3];const h=this._getDisplayMode(l);l=h.displaymode;const y=h.columnEditMode;const b=new D({enableAutoColumnWidth:n.getParent().enableAutoColumnWidth,isOptimizedForSmallDevice:n.getParent().isOptimizedForSmallDevice,readOnly:l,columnEditMode:y,tableType:u,onChange:p,id:s,navigationPropertyPath:t,columnInfo:c,collection:{sPath:d,oModel:i},creationMode:g}),P={bindingContexts:{entitySet:m,collection:m,dataField:v,this:b.createBindingContext("/"),column:b.createBindingContext("/columnInfo")},models:{this:b,entitySet:i,collection:i,dataField:i,metaModel:i,column:b}};return f.templateControlFragment(o,P,{view:a},r).finally(function(){b.destroy()})})};await Promise.all(b.map(async e=>{const t=Object.assign({},P,{sPropertyName:e});const n=await Promise.all([f.isValueHelpRequired(t),f.doesValueHelpExist(t)]);const a=n[0],i=n[1];return this._fnTemplateValueHelp(C,a,i)}));const _=a.view||o.getTargetView(n)||(a.appComponent?o.getCurrentPageView(a.appComponent):undefined);return F(y,_)},getFilterDelegate:function(){return Object.assign({},m,{addItem:function(e,t){if(e.indexOf("Property::")===0){e=e.replace("Property::","")}return m.addItem(e,t)}})},getTypeUtil:function(){return p},formatGroupHeader(e,t,n){var a,i;const o=f.getCachedProperties(e),r=o&&o.filter(e=>e.name===n)[0],l=(r===null||r===void 0?void 0:(a=r.typeConfig)===null||a===void 0?void 0:a.baseType)==="DateTime"||(r===null||r===void 0?void 0:(i=r.typeConfig)===null||i===void 0?void 0:i.baseType)==="Date";let c;if(r&&r.mode){switch(r.mode){case"Description":c=t.getProperty(r.descriptionProperty,l);break;case"DescriptionValue":c=s.formatWithBrackets(t.getProperty(r.descriptionProperty,l),t.getProperty(r.valueProperty,l));break;case"ValueDescription":c=s.formatWithBrackets(t.getProperty(r.valueProperty,l),t.getProperty(r.descriptionProperty,l));break;default:break}}else{c=t.getProperty(r===null||r===void 0?void 0:r.path,l)}return h.getText("M_TABLE_GROUP_HEADER_TITLE",[r===null||r===void 0?void 0:r.label,c])}})},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/delegates/TreeTableDelegate-dbg", ["sap/fe/macros/table/delegates/TableDelegate"], function (TableDelegate) {
  "use strict";

  /**
   * Helper class for sap.ui.mdc.Table.
   * <h3><b>Note:</b></h3>
   * This class is experimental and not intended for productive usage, since the API/behavior has not been finalized.
   *
   * @author SAP SE
   * @private
   * @experimental
   * @since 1.69
   * @alias sap.fe.macros.TableDelegate
   */
  const TreeTableDelegate = Object.assign({}, TableDelegate, {
    _internalUpdateBindingInfo: function (table, bindingInfo) {
      TableDelegate._internalUpdateBindingInfo.apply(this, [table, bindingInfo]);
      const payload = table.getPayload();
      bindingInfo.parameters.$$aggregation = {
        hierarchyQualifier: payload === null || payload === void 0 ? void 0 : payload.hierarchyQualifier
      };
      if (payload !== null && payload !== void 0 && payload.initialExpansionLevel) {
        bindingInfo.parameters.$$aggregation.expandTo = payload.initialExpansionLevel;
      }
    }
  });
  return TreeTableDelegate;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/table/delegates/TreeTableDelegate", ["sap/fe/macros/table/delegates/TableDelegate"],function(e){"use strict";const a=Object.assign({},e,{_internalUpdateBindingInfo:function(a,i){e._internalUpdateBindingInfo.apply(this,[a,i]);const n=a.getPayload();i.parameters.$$aggregation={hierarchyQualifier:n===null||n===void 0?void 0:n.hierarchyQualifier};if(n!==null&&n!==void 0&&n.initialExpansionLevel){i.parameters.$$aggregation.expandTo=n.initialExpansionLevel}}});return a},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/valuehelp/ValueHelp.metadata-dbg", ["sap/fe/core/helpers/ModelHelper", "sap/fe/macros/MacroMetadata"], function (ModelHelper, MacroMetadata) {
  "use strict";

  const ValueHelp = MacroMetadata.extend("sap.fe.macros.ValueHelp", {
    /**
     * Name of the macro control.
     */
    name: "ValueHelp",
    /**
     * Namespace of the macro control.
     */
    namespace: "sap.fe.macros",
    /**
     * Fragment source of the macro (optional) - if not set, fragment is generated from namespace and name.
     */
    fragment: "sap.fe.macros.internal.valuehelp.ValueHelp",
    /**
     * The metadata describing the macro control.
     */
    metadata: {
      /**
       * Macro stereotype for documentation generation. Not visible in documentation.
       */
      stereotype: "xmlmacro",
      /**
       * Location of the designtime information.
       */
      designtime: "sap/fe/macros/valuehelp/ValueHelp.designtime",
      /**
       * Properties.
       */
      properties: {
        /**
         * A prefix that is added to the generated ID of the value help.
         */
        idPrefix: {
          type: "string",
          defaultValue: "ValueHelp"
        },
        /**
         * Defines the metadata path to the property.
         */
        property: {
          type: "sap.ui.model.Context",
          required: true,
          $kind: ["Property"]
        },
        contextPath: {
          type: "sap.ui.model.Context",
          required: true
        },
        /**
         * Indicator whether the value help is for a filter field.
         */
        conditionModel: {
          type: "string",
          defaultValue: ""
        },
        /**
         * Indicates that this is a value help of a filter field. Necessary to decide if a
         * validation should occur on the back end or already on the client.
         */
        filterFieldValueHelp: {
          type: "boolean",
          defaultValue: false
        },
        /**
         * Specifies the Sematic Date Range option for the filter field.
         */
        useSemanticDateRange: {
          type: "boolean",
          defaultValue: true
        },
        /**
         * GroupId for the valueHelp table
         */
        requestGroupId: {
          type: "string",
          defaultValue: "",
          computed: true
        },
        /**
         * Specifies whether the ValueHelp can be used with a MultiValueField
         */
        useMultiValueField: {
          type: "boolean",
          defaultValue: false
        },
        navigationPrefix: {
          type: "string"
        },
        collaborationEnabled: {
          type: "boolean",
          computed: true
        },
        requiresValidation: {
          type: "boolean",
          defaultValue: false
        }
      },
      events: {}
    },
    create: function (oProps, oControlConfiguration, oAppComponent) {
      Object.keys(this.metadata.properties).forEach(sPropertyName => {
        const oProperty = this.metadata.properties[sPropertyName];
        if (oProperty.type === "boolean") {
          if (typeof oProps[sPropertyName] === "string") {
            oProps[sPropertyName] = oProps[sPropertyName] === "true";
          }
        }
      });
      oProps.requestGroupId = "$auto.Workers";
      const oMetaModel = oAppComponent.models.metaModel || oAppComponent.models.entitySet;
      if (ModelHelper.isCollaborationDraftSupported(oMetaModel)) {
        oProps.collaborationEnabled = true;
      }
      return oProps;
    }
  });
  return ValueHelp;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/valuehelp/ValueHelp.metadata", ["sap/fe/core/helpers/ModelHelper","sap/fe/macros/MacroMetadata"],function(e,t){"use strict";const a=t.extend("sap.fe.macros.ValueHelp",{name:"ValueHelp",namespace:"sap.fe.macros",fragment:"sap.fe.macros.internal.valuehelp.ValueHelp",metadata:{stereotype:"xmlmacro",designtime:"sap/fe/macros/valuehelp/ValueHelp.designtime",properties:{idPrefix:{type:"string",defaultValue:"ValueHelp"},property:{type:"sap.ui.model.Context",required:true,$kind:["Property"]},contextPath:{type:"sap.ui.model.Context",required:true},conditionModel:{type:"string",defaultValue:""},filterFieldValueHelp:{type:"boolean",defaultValue:false},useSemanticDateRange:{type:"boolean",defaultValue:true},requestGroupId:{type:"string",defaultValue:"",computed:true},useMultiValueField:{type:"boolean",defaultValue:false},navigationPrefix:{type:"string"},collaborationEnabled:{type:"boolean",computed:true},requiresValidation:{type:"boolean",defaultValue:false}},events:{}},create:function(t,a,l){Object.keys(this.metadata.properties).forEach(e=>{const a=this.metadata.properties[e];if(a.type==="boolean"){if(typeof t[e]==="string"){t[e]=t[e]==="true"}}});t.requestGroupId="$auto.Workers";const o=l.models.metaModel||l.models.entitySet;if(e.isCollaborationDraftSupported(o)){t.collaborationEnabled=true}return t}});return a},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/valuehelp/ValueHelpDelegate-dbg", ["sap/base/Log", "sap/fe/core/CommonUtils", "sap/fe/core/type/TypeUtil", "sap/fe/macros/internal/valuehelp/ValueListHelper", "sap/m/inputUtils/highlightDOMElements", "sap/ui/mdc/condition/Condition", "sap/ui/mdc/enum/ConditionValidated", "sap/ui/mdc/p13n/StateUtil", "sap/ui/mdc/ValueHelpDelegate", "sap/ui/model/FilterType"], function (Log, CommonUtils, TypeUtil, ValueListHelper, highlightDOMElements, Condition, ConditionValidated, StateUtil, ValueHelpDelegate, FilterType) {
  "use strict";

  const FeCoreControlsFilterBar = "sap.fe.core.controls.FilterBar";
  const MdcFilterbarFilterBarBase = "sap.ui.mdc.filterbar.FilterBarBase";
  return Object.assign({}, ValueHelpDelegate, {
    /**
     * Checks if a <code>ListBinding</code> supports $Search.
     *
     * @param _payload Payload for delegate
     * @param content Content element
     * @param _listBinding
     * @returns True if $search is supported
     */
    isSearchSupported: function (_payload, content, _listBinding) {
      return content.getFilterFields() === "$search";
    },
    /**
     * Adjustable filtering for list-based contents.
     *
     * @param payload Payload for delegate
     * @param content ValueHelp content requesting conditions configuration
     * @param bindingInfo The binding info object to be used to bind the list to the model
     */
    updateBindingInfo: function (payload, content, bindingInfo) {
      ValueHelpDelegate.updateBindingInfo(payload, content, bindingInfo);
      if (content.getFilterFields() === "$search") {
        const search = content.getFilterValue();
        const normalizedSearch = CommonUtils.normalizeSearchTerm(search); // adjustSearch

        if (bindingInfo.parameters) {
          bindingInfo.parameters.$search = normalizedSearch || undefined;
        }
      }
    },
    /**
     * Executes a filter in a <code>ListBinding</code> and resumes it, if suspended.
     *
     * @param _payload Payload for delegate
     * @param listBinding List binding
     * @param bindingInfo The binding info object to be used to bind the list to the model
     */
    updateBinding: function (_payload, listBinding, bindingInfo) {
      const rootBinding = listBinding.getRootBinding() || listBinding;
      if (!rootBinding.isSuspended()) {
        rootBinding.suspend();
      }
      if (bindingInfo.parameters) {
        listBinding.changeParameters(bindingInfo.parameters);
      }
      listBinding.filter(bindingInfo.filters, FilterType.Application);
      if (rootBinding.isSuspended()) {
        rootBinding.resume();
      }
    },
    /**
     * Executes a filter in a <code>ListBinding</code>.
     *
     * @param payload Payload for delegate
     * @param listBinding List binding
     * @param _filter Filter
     * @param requestedItems Number of requested items
     * @returns Promise that is resolved if search is executed
     */
    executeFilter: async function (payload, listBinding, _filter, requestedItems) {
      listBinding.getContexts(0, requestedItems);
      await this.checkListBindingPending(payload, listBinding, requestedItems);
      return listBinding;
    },
    /**
     * Checks if the <code>ListBinding</code> is waiting for an update.
     * As long as the context has not been set for <code>ListBinding</code>,
     * <code>ValueHelp</code> needs to wait.
     *
     * @param _payload Payload for delegate
     * @param listBinding ListBinding to check
     * @param requestedItems Number of requested items
     * @returns Promise that is resolved once ListBinding has been updated
     */
    checkListBindingPending: async function (_payload, listBinding, requestedItems) {
      if (!listBinding || listBinding.isSuspended()) {
        return false;
      }
      const contexts = await listBinding.requestContexts(0, requestedItems);
      return contexts.length === 0;
    },
    getTypeUtil: function (_payload) {
      return TypeUtil;
    },
    /**
     * Requests the content of the value help.
     *
     * This function is called when the value help is opened or a key or description is requested.
     *
     * So, depending on the value help content used, all content controls and data need to be assigned.
     * Once they are assigned and the data is set, the returned <code>Promise</code> needs to be resolved.
     * Only then does the value help continue opening or reading data.
     *
     * @param payload Payload for delegate
     * @param container Container instance
     * @param contentId Id of the content shown after this call to retrieveContent
     * @returns Promise that is resolved if all content is available
     */
    retrieveContent: function (payload, container, contentId) {
      return ValueListHelper.showValueList(payload, container, contentId);
    },
    _getConditionPayloadList: function (condition) {
      const conditionPayloadMap = condition.payload || {},
        valueHelpQualifiers = Object.keys(conditionPayloadMap),
        conditionPayloadList = valueHelpQualifiers.length ? conditionPayloadMap[valueHelpQualifiers[0]] : [];
      return conditionPayloadList;
    },
    _onConditionPropagationToFilterBar: async function (filterBarVH, conditions, outParameters, filterBar) {
      try {
        const state = await StateUtil.retrieveExternalState(filterBar);
        const filterItemsVH = filterBarVH.getFilterItems();
        for (const condition of conditions) {
          const conditionPayloadList = this._getConditionPayloadList(condition);
          for (const outParameter of outParameters) {
            const filterTarget = outParameter.source.split("/").pop() || "";
            // propagate OUT parameter only if the filter field is visible in the LR filterbar
            if (
            // LR FilterBar or LR AdaptFilter
            filterItemsVH.find(item => item.getId().split("::").pop() === filterTarget)) {
              for (const conditionPayload of conditionPayloadList) {
                const newCondition = Condition.createCondition("EQ", [conditionPayload[outParameter.helpPath]], null, null, ConditionValidated.Validated);
                state.filter[filterTarget] ||= [];
                state.filter[filterTarget].push(newCondition);
              }
            }
          }
        }
        StateUtil.applyExternalState(filterBar, state);
      } catch (err) {
        const message = err instanceof Error ? err.message : String(err);
        Log.error(`ValueHelpDelegate: ${message}`);
      }
    },
    _onConditionPropagationToBindingContext: function (conditions, outParameters, context) {
      const metaModel = context.getModel().getMetaModel();
      for (const condition of conditions) {
        const conditionPayloadList = this._getConditionPayloadList(condition),
          outValues = conditionPayloadList.length === 1 ? conditionPayloadList[0] : undefined;
        if (conditionPayloadList.length > 1) {
          Log.warning("ValueHelpDelegate: ParameterOut in multi-value-field not supported");
        }
        if (outValues) {
          this._onConditionPropagationUpdateProperty(metaModel, outValues, outParameters, context);
        }
      }
    },
    _onConditionPropagationUpdateProperty: function (metaModel, outValues, outParameters, context) {
      for (const outParameter of outParameters) {
        /* If the key gets updated via out-parameter, then the description needs also retrieved with requestSideEffects */
        if (context.getProperty(outParameter.source) !== outValues[outParameter.helpPath]) {
          var _context$getPath;
          const propertyPath = ((_context$getPath = context.getPath()) === null || _context$getPath === void 0 ? void 0 : _context$getPath.split('(')[0]) + `/${outParameter.source}`;
          const textAnnotation = metaModel === null || metaModel === void 0 ? void 0 : metaModel.getObject(`${propertyPath}@com.sap.vocabularies.Common.v1.Text`);
          if (textAnnotation !== undefined) {
            const textPath = textAnnotation === null || textAnnotation === void 0 ? void 0 : textAnnotation.$Path;
            context.requestSideEffects([textPath.split('/')[0]]);
          }
        }
        context.setProperty(outParameter.source, outValues[outParameter.helpPath]);
      }
    },
    /**
     * Callback invoked every time a {@link sap.ui.mdc.ValueHelp ValueHelp} fires a select event or the value of the corresponding field changes
     * This callback may be used to update external fields.
     *
     * @param payload Payload for delegate
     * @param valueHelp ValueHelp control instance receiving the <code>controlChange</code>
     * @param reason Reason why the method was invoked
     * @param _config Current configuration provided by the calling control
     * @since 1.101.0
     */
    onConditionPropagation: async function (payload, valueHelp, reason, _config) {
      if (reason !== "ControlChange") {
        // handle only ControlChange reason
        return;
      }
      const qualifier = payload.qualifiers[payload.valueHelpQualifier];
      const outParameters = (qualifier === null || qualifier === void 0 ? void 0 : qualifier.vhParameters) !== undefined ? ValueListHelper.getOutParameters(qualifier.vhParameters) : [],
        field = valueHelp.getControl(),
        fieldParent = field.getParent();
      let conditions = field.getConditions();
      conditions = conditions.filter(function (condition) {
        const conditionPayloadMap = condition.payload || {};
        return conditionPayloadMap[payload.valueHelpQualifier];
      });
      if (fieldParent.isA(MdcFilterbarFilterBarBase)) {
        // field inside a FilterBar or AdaptationFilterBar (Settings Dialog)?
        const filterBarVH = valueHelp.getParent(); // Control e.g. FormContainer
        if (filterBarVH.isA(FeCoreControlsFilterBar)) {
          // only for LR FilterBar
          await this._onConditionPropagationToFilterBar(filterBarVH, conditions, outParameters, fieldParent);
        }
        // LR Settings Dialog or OP Settings Dialog shall not propagate value to the dialog filterfields or context
      } else {
        // Object Page
        const context = valueHelp.getBindingContext();
        if (context) {
          this._onConditionPropagationToBindingContext(conditions, outParameters, context);
        }
      }
    },
    _createInitialFilterCondition: function (value, initialValueFilterEmpty) {
      let condition;
      if (value === undefined || value === null) {
        Log.error("ValueHelpDelegate: value of the property could not be requested");
      } else if (value === "") {
        if (initialValueFilterEmpty) {
          condition = Condition.createCondition("Empty", [], null, null, ConditionValidated.Validated);
        }
      } else {
        condition = Condition.createCondition("EQ", [value], null, null, ConditionValidated.Validated);
      }
      return condition;
    },
    _getInitialFilterConditionsFromBinding: async function (inConditions, control, inParameters) {
      const propertiesToRequest = inParameters.map(inParameter => inParameter.source);
      const bindingContext = control.getBindingContext();
      if (!bindingContext) {
        Log.error("ValueHelpDelegate: No BindingContext");
        return inConditions;
      }

      // According to odata v4 api documentation for requestProperty: Property values that are not cached yet are requested from the back end
      const values = await bindingContext.requestProperty(propertiesToRequest);
      for (let i = 0; i < inParameters.length; i++) {
        const inParameter = inParameters[i];
        const condition = this._createInitialFilterCondition(values[i], inParameter.initialValueFilterEmpty);
        if (condition) {
          inConditions[inParameter.helpPath] = [condition];
        }
      }
      return inConditions;
    },
    _getInitialFilterConditionsFromFilterBar: async function (inConditions, control, inParameters) {
      const filterBar = control.getParent();
      const state = await StateUtil.retrieveExternalState(filterBar);
      for (const inParameter of inParameters) {
        const sourceField = inParameter.source.split("/").pop();
        const conditions = state.filter[sourceField];
        if (conditions) {
          inConditions[inParameter.helpPath] = conditions;
        }
      }
      return inConditions;
    },
    _partitionInParameters: function (inParameters) {
      const inParameterMap = {
        constant: [],
        binding: [],
        filter: []
      };
      for (const inParameter of inParameters) {
        if (inParameter.constantValue !== undefined) {
          inParameterMap.constant.push(inParameter);
        } else if (inParameter.source.indexOf("$filter") === 0) {
          inParameterMap.filter.push(inParameter);
        } else {
          inParameterMap.binding.push(inParameter);
        }
      }
      return inParameterMap;
    },
    _tableAfterRenderDelegate: {
      onAfterRendering: function (event) {
        const table = event.srcControl,
          // m.Table
          tableCellsDomRefs = table.$().find("tbody .sapMText"),
          mdcMTable = table.getParent();
        highlightDOMElements(tableCellsDomRefs, mdcMTable.getFilterValue(), true);
      }
    },
    /**
     * Provides an initial condition configuration everytime a value help content is shown.
     *
     * @param payload Payload for delegate
     * @param content ValueHelp content requesting conditions configuration
     * @param control Instance of the calling control
     * @returns Returns a map of conditions suitable for a sap.ui.mdc.FilterBar control
     * @since 1.101.0
     */
    getInitialFilterConditions: async function (payload, content, control) {
      // highlight text in ValueHelp popover
      if (content !== null && content !== void 0 && content.isA("sap.ui.mdc.valuehelp.content.MTable")) {
        const popoverTable = content.getTable();
        popoverTable === null || popoverTable === void 0 ? void 0 : popoverTable.removeEventDelegate(this._tableAfterRenderDelegate);
        popoverTable === null || popoverTable === void 0 ? void 0 : popoverTable.addEventDelegate(this._tableAfterRenderDelegate, this);
      }
      const inConditions = {};
      if (!control) {
        Log.error("ValueHelpDelegate: Control undefined");
        return inConditions;
      }
      const qualifier = payload.qualifiers[payload.valueHelpQualifier];
      const inParameters = (qualifier === null || qualifier === void 0 ? void 0 : qualifier.vhParameters) !== undefined ? ValueListHelper.getInParameters(qualifier.vhParameters) : [];
      const inParameterMap = this._partitionInParameters(inParameters);
      const isObjectPage = control.getBindingContext();
      for (const inParameter of inParameterMap.constant) {
        const condition = this._createInitialFilterCondition(inParameter.constantValue, isObjectPage ? inParameter.initialValueFilterEmpty : false // no filter with "empty" on ListReport
        );

        if (condition) {
          inConditions[inParameter.helpPath] = [condition];
        }
      }
      if (inParameterMap.binding.length) {
        await this._getInitialFilterConditionsFromBinding(inConditions, control, inParameterMap.binding);
      }
      if (inParameterMap.filter.length) {
        await this._getInitialFilterConditionsFromFilterBar(inConditions, control, inParameterMap.filter);
      }
      return inConditions;
    },
    /**
     * Provides the possibility to convey custom data in conditions.
     * This enables an application to enhance conditions with data relevant for combined key or outparameter scenarios.
     *
     * @param payload Payload for delegate
     * @param content ValueHelp content instance
     * @param _values Description pair for the condition which is to be created
     * @param context Optional additional context
     * @returns Optionally returns a serializable object to be stored in the condition payload field
     * @since 1.101.0
     */
    createConditionPayload: function (payload, content, _values, context) {
      const qualifier = payload.qualifiers[payload.valueHelpQualifier],
        entry = {},
        conditionPayload = {};
      const control = content.getControl();
      const isMultiValueField = control === null || control === void 0 ? void 0 : control.isA("sap.ui.mdc.MultiValueField");
      if (!qualifier.vhKeys || qualifier.vhKeys.length === 1 || isMultiValueField) {
        return undefined;
      }
      qualifier.vhKeys.forEach(function (vhKey) {
        const value = context.getObject(vhKey);
        if (value != null) {
          entry[vhKey] = (value === null || value === void 0 ? void 0 : value.length) === 0 ? "" : value;
        }
      });
      if (Object.keys(entry).length) {
        /* vh qualifier as key for relevant condition */
        conditionPayload[payload.valueHelpQualifier] = [entry];
      }
      return conditionPayload;
    },
    /**
     * Provides the possibility to customize selections in 'Select from list' scenarios.
     * By default, only condition keys are considered. This may be extended with payload dependent filters.
     *
     * @param payload Payload for delegate
     * @param content ValueHelp content instance
     * @param item Entry of a given list
     * @param conditions Current conditions
     * @returns True, if item is selected
     * @since 1.101.0
     */
    isFilterableListItemSelected: function (payload, content, item, conditions) {
      var _content$getConfig;
      //In value help dialogs of single value fields the row for the key shouldn´t be selected/highlight anymore BCP: 2270175246
      if (payload.isValueListWithFixedValues !== true && ((_content$getConfig = content.getConfig()) === null || _content$getConfig === void 0 ? void 0 : _content$getConfig.maxConditions) === 1) {
        return false;
      }
      const context = item.getBindingContext();

      /* Do not consider "NotValidated" conditions */
      conditions = conditions.filter(condition => condition.validated === ConditionValidated.Validated);
      const selectedCondition = conditions.find(function (condition) {
        var _conditionPayloadMap$;
        const conditionPayloadMap = condition.payload,
          valueHelpQualifier = payload.valueHelpQualifier || "";
        if (!conditionPayloadMap && Object.keys(payload.qualifiers)[0] === valueHelpQualifier) {
          const keyPath = content.getKeyPath();
          return (context === null || context === void 0 ? void 0 : context.getObject(keyPath)) === (condition === null || condition === void 0 ? void 0 : condition.values[0]);
        }
        const conditionSelectedRow = (conditionPayloadMap === null || conditionPayloadMap === void 0 ? void 0 : (_conditionPayloadMap$ = conditionPayloadMap[valueHelpQualifier]) === null || _conditionPayloadMap$ === void 0 ? void 0 : _conditionPayloadMap$[0]) || {},
          selectedKeys = Object.keys(conditionSelectedRow);
        if (selectedKeys.length) {
          return selectedKeys.every(function (key) {
            return conditionSelectedRow[key] === (context === null || context === void 0 ? void 0 : context.getObject(key));
          });
        }
        return false;
      });
      return selectedCondition ? true : false;
    }
  });
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/valuehelp/ValueHelpDelegate", ["sap/base/Log","sap/fe/core/CommonUtils","sap/fe/core/type/TypeUtil","sap/fe/macros/internal/valuehelp/ValueListHelper","sap/m/inputUtils/highlightDOMElements","sap/ui/mdc/condition/Condition","sap/ui/mdc/enum/ConditionValidated","sap/ui/mdc/p13n/StateUtil","sap/ui/mdc/ValueHelpDelegate","sap/ui/model/FilterType"],function(e,t,n,i,o,r,a,l,s,u){"use strict";const d="sap.fe.core.controls.FilterBar";const c="sap.ui.mdc.filterbar.FilterBarBase";return Object.assign({},s,{isSearchSupported:function(e,t,n){return t.getFilterFields()==="$search"},updateBindingInfo:function(e,n,i){s.updateBindingInfo(e,n,i);if(n.getFilterFields()==="$search"){const e=n.getFilterValue();const o=t.normalizeSearchTerm(e);if(i.parameters){i.parameters.$search=o||undefined}}},updateBinding:function(e,t,n){const i=t.getRootBinding()||t;if(!i.isSuspended()){i.suspend()}if(n.parameters){t.changeParameters(n.parameters)}t.filter(n.filters,u.Application);if(i.isSuspended()){i.resume()}},executeFilter:async function(e,t,n,i){t.getContexts(0,i);await this.checkListBindingPending(e,t,i);return t},checkListBindingPending:async function(e,t,n){if(!t||t.isSuspended()){return false}const i=await t.requestContexts(0,n);return i.length===0},getTypeUtil:function(e){return n},retrieveContent:function(e,t,n){return i.showValueList(e,t,n)},_getConditionPayloadList:function(e){const t=e.payload||{},n=Object.keys(t),i=n.length?t[n[0]]:[];return i},_onConditionPropagationToFilterBar:async function(t,n,i,o){try{const e=await l.retrieveExternalState(o);const s=t.getFilterItems();for(const t of n){const n=this._getConditionPayloadList(t);for(const t of i){const i=t.source.split("/").pop()||"";if(s.find(e=>e.getId().split("::").pop()===i)){for(const o of n){const n=r.createCondition("EQ",[o[t.helpPath]],null,null,a.Validated);e.filter[i]||=[];e.filter[i].push(n)}}}}l.applyExternalState(o,e)}catch(t){const n=t instanceof Error?t.message:String(t);e.error(`ValueHelpDelegate: ${n}`)}},_onConditionPropagationToBindingContext:function(t,n,i){const o=i.getModel().getMetaModel();for(const r of t){const t=this._getConditionPayloadList(r),a=t.length===1?t[0]:undefined;if(t.length>1){e.warning("ValueHelpDelegate: ParameterOut in multi-value-field not supported")}if(a){this._onConditionPropagationUpdateProperty(o,a,n,i)}}},_onConditionPropagationUpdateProperty:function(e,t,n,i){for(const r of n){if(i.getProperty(r.source)!==t[r.helpPath]){var o;const t=((o=i.getPath())===null||o===void 0?void 0:o.split("(")[0])+`/${r.source}`;const n=e===null||e===void 0?void 0:e.getObject(`${t}@com.sap.vocabularies.Common.v1.Text`);if(n!==undefined){const e=n===null||n===void 0?void 0:n.$Path;i.requestSideEffects([e.split("/")[0]])}}i.setProperty(r.source,t[r.helpPath])}},onConditionPropagation:async function(e,t,n,o){if(n!=="ControlChange"){return}const r=e.qualifiers[e.valueHelpQualifier];const a=(r===null||r===void 0?void 0:r.vhParameters)!==undefined?i.getOutParameters(r.vhParameters):[],l=t.getControl(),s=l.getParent();let u=l.getConditions();u=u.filter(function(t){const n=t.payload||{};return n[e.valueHelpQualifier]});if(s.isA(c)){const e=t.getParent();if(e.isA(d)){await this._onConditionPropagationToFilterBar(e,u,a,s)}}else{const e=t.getBindingContext();if(e){this._onConditionPropagationToBindingContext(u,a,e)}}},_createInitialFilterCondition:function(t,n){let i;if(t===undefined||t===null){e.error("ValueHelpDelegate: value of the property could not be requested")}else if(t===""){if(n){i=r.createCondition("Empty",[],null,null,a.Validated)}}else{i=r.createCondition("EQ",[t],null,null,a.Validated)}return i},_getInitialFilterConditionsFromBinding:async function(t,n,i){const o=i.map(e=>e.source);const r=n.getBindingContext();if(!r){e.error("ValueHelpDelegate: No BindingContext");return t}const a=await r.requestProperty(o);for(let e=0;e<i.length;e++){const n=i[e];const o=this._createInitialFilterCondition(a[e],n.initialValueFilterEmpty);if(o){t[n.helpPath]=[o]}}return t},_getInitialFilterConditionsFromFilterBar:async function(e,t,n){const i=t.getParent();const o=await l.retrieveExternalState(i);for(const t of n){const n=t.source.split("/").pop();const i=o.filter[n];if(i){e[t.helpPath]=i}}return e},_partitionInParameters:function(e){const t={constant:[],binding:[],filter:[]};for(const n of e){if(n.constantValue!==undefined){t.constant.push(n)}else if(n.source.indexOf("$filter")===0){t.filter.push(n)}else{t.binding.push(n)}}return t},_tableAfterRenderDelegate:{onAfterRendering:function(e){const t=e.srcControl,n=t.$().find("tbody .sapMText"),i=t.getParent();o(n,i.getFilterValue(),true)}},getInitialFilterConditions:async function(t,n,o){if(n!==null&&n!==void 0&&n.isA("sap.ui.mdc.valuehelp.content.MTable")){const e=n.getTable();e===null||e===void 0?void 0:e.removeEventDelegate(this._tableAfterRenderDelegate);e===null||e===void 0?void 0:e.addEventDelegate(this._tableAfterRenderDelegate,this)}const r={};if(!o){e.error("ValueHelpDelegate: Control undefined");return r}const a=t.qualifiers[t.valueHelpQualifier];const l=(a===null||a===void 0?void 0:a.vhParameters)!==undefined?i.getInParameters(a.vhParameters):[];const s=this._partitionInParameters(l);const u=o.getBindingContext();for(const e of s.constant){const t=this._createInitialFilterCondition(e.constantValue,u?e.initialValueFilterEmpty:false);if(t){r[e.helpPath]=[t]}}if(s.binding.length){await this._getInitialFilterConditionsFromBinding(r,o,s.binding)}if(s.filter.length){await this._getInitialFilterConditionsFromFilterBar(r,o,s.filter)}return r},createConditionPayload:function(e,t,n,i){const o=e.qualifiers[e.valueHelpQualifier],r={},a={};const l=t.getControl();const s=l===null||l===void 0?void 0:l.isA("sap.ui.mdc.MultiValueField");if(!o.vhKeys||o.vhKeys.length===1||s){return undefined}o.vhKeys.forEach(function(e){const t=i.getObject(e);if(t!=null){r[e]=(t===null||t===void 0?void 0:t.length)===0?"":t}});if(Object.keys(r).length){a[e.valueHelpQualifier]=[r]}return a},isFilterableListItemSelected:function(e,t,n,i){var o;if(e.isValueListWithFixedValues!==true&&((o=t.getConfig())===null||o===void 0?void 0:o.maxConditions)===1){return false}const r=n.getBindingContext();i=i.filter(e=>e.validated===a.Validated);const l=i.find(function(n){var i;const o=n.payload,a=e.valueHelpQualifier||"";if(!o&&Object.keys(e.qualifiers)[0]===a){const e=t.getKeyPath();return(r===null||r===void 0?void 0:r.getObject(e))===(n===null||n===void 0?void 0:n.values[0])}const l=(o===null||o===void 0?void 0:(i=o[a])===null||i===void 0?void 0:i[0])||{},s=Object.keys(l);if(s.length){return s.every(function(e){return l[e]===(r===null||r===void 0?void 0:r.getObject(e))})}return false});return l?true:false}})},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/valuehelp/ValueHelpFilterBar.metadata-dbg", ["sap/base/Log", "sap/fe/core/converters/controls/ListReport/FilterBar", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/ModelHelper", "sap/fe/core/TemplateModel", "sap/fe/macros/MacroMetadata"], function (Log, FilterBar, MetaModelConverter, ModelHelper, TemplateModel, MacroMetadata) {
  "use strict";

  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  var getSelectionFields = FilterBar.getSelectionFields;
  var getExpandFilterFields = FilterBar.getExpandFilterFields;
  const ValueHelpFilterBar = MacroMetadata.extend("sap.fe.macros.valuehelp.ValueHelpFilterBar", {
    /**
     * Name of the macro control.
     */
    name: "ValueHelpFilterBar",
    /**
     * Namespace of the macro control
     */
    namespace: "sap.fe.macros.valuehelp",
    /**
     * Fragment source of the macro (optional) - if not set, fragment is generated from namespace and name
     */
    fragment: "sap.fe.macros.valuehelp.ValueHelpFilterBar",
    /**
     * The metadata describing the macro control.
     */
    metadata: {
      /**
       * Define macro stereotype for documentation
       */
      stereotype: "xmlmacro",
      /**
       * Location of the designtime info
       */
      designtime: "sap/fe/macros/valuehelp/ValueHelpFilterBar.designtime",
      /**
       * Properties.
       */
      properties: {
        /**
         * ID of the FilterBar
         */
        id: {
          type: "string"
        },
        contextPath: {
          type: "sap.ui.model.Context"
        },
        /**
         * Don't show the basic search field
         */
        hideBasicSearch: {
          type: "boolean",
          defaultValue: false
        },
        /**
         * Enables the fallback to show all fields of the EntityType as filter fields if com.sap.vocabularies.UI.v1.SelectionFields are not present
         */
        enableFallback: {
          type: "boolean",
          defaultValue: false
        },
        /**
         * Specifies the personalization options for the filter bar.
         */
        p13nMode: {
          type: "sap.ui.mdc.FilterBarP13nMode[]"
        },
        /**
         * Specifies the Sematic Date Range option for the filter bar.
         */
        useSemanticDateRange: {
          type: "boolean",
          defaultValue: true
        },
        /**
         * If set the search will be automatically triggered, when a filter value was changed.
         */
        liveMode: {
          type: "boolean",
          defaultValue: false
        },
        /**
         * Temporary workaround only
         * path to valuelist
         */
        _valueList: {
          type: "sap.ui.model.Context",
          required: false
        },
        /**
         * selectionFields to be displayed
         */
        selectionFields: {
          type: "sap.ui.model.Context",
          required: false
        },
        /**
         * Filter conditions to be applied to the filter bar
         */
        filterConditions: {
          type: "string",
          required: false
        },
        /**
         * If set to <code>true</code>, all search requests are ignored. Once it has been set to <code>false</code>,
         * a search is triggered immediately if one or more search requests have been triggered in the meantime
         * but were ignored based on the setting.
         */
        suspendSelection: {
          type: "boolean",
          defaultValue: false
        },
        /**
         * Determines whether the Show/Hide Filters button is in the state show or hide.
         */
        expandFilterFields: {
          type: "boolean",
          defaultValue: true
        }
      },
      events: {
        /**
         * Search handler name
         */
        search: {
          type: "function"
        },
        /**
         * Filters changed handler name
         */
        filterChanged: {
          type: "function"
        }
      }
    },
    create: function (oProps, oControlConfiguration, mSettings) {
      const oContext = oProps.contextPath;
      if (!oContext) {
        Log.error("Context Path not available for FilterBar Macro.");
        return;
      }
      const sContextPath = oContext.getPath();
      const sEntitySetPath = ModelHelper.getEntitySetPath(sContextPath);
      const oMetaModel = oContext.getModel();
      let oConverterContext;
      if (!oProps.selectionFields) {
        const oMetaPathContext = oProps.metaPath;
        const sMetaPath = oMetaPathContext && oMetaPathContext.getPath();
        const oVisualizationObjectPath = getInvolvedDataModelObjects(oContext);
        oConverterContext = this.getConverterContext(oVisualizationObjectPath, undefined, mSettings);
        const oSelectionFields = getSelectionFields(oConverterContext, [], sMetaPath).selectionFields;
        oProps.selectionFields = new TemplateModel(oSelectionFields, oMetaModel).createBindingContext("/");
      }

      // TODO: this could be also moved into a central place
      if (oMetaModel.getObject(sEntitySetPath + "@com.sap.vocabularies.Common.v1.DraftRoot") || oMetaModel.getObject(sEntitySetPath + "@com.sap.vocabularies.Common.v1.DraftNode")) {
        oProps.showDraftEditState = true;
      }
      const oFilterRestrictionsAnnotation = oMetaModel.getObject(sEntitySetPath + "@Org.OData.Capabilities.V1.FilterRestrictions");
      oProps.expandFilterFields = getExpandFilterFields(oConverterContext, oFilterRestrictionsAnnotation, oProps._valueList);
      return oProps;
    }
  });
  return ValueHelpFilterBar;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/valuehelp/ValueHelpFilterBar.metadata", ["sap/base/Log","sap/fe/core/converters/controls/ListReport/FilterBar","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/ModelHelper","sap/fe/core/TemplateModel","sap/fe/macros/MacroMetadata"],function(e,t,a,l,o,r){"use strict";var s=a.getInvolvedDataModelObjects;var n=t.getSelectionFields;var i=t.getExpandFilterFields;const c=r.extend("sap.fe.macros.valuehelp.ValueHelpFilterBar",{name:"ValueHelpFilterBar",namespace:"sap.fe.macros.valuehelp",fragment:"sap.fe.macros.valuehelp.ValueHelpFilterBar",metadata:{stereotype:"xmlmacro",designtime:"sap/fe/macros/valuehelp/ValueHelpFilterBar.designtime",properties:{id:{type:"string"},contextPath:{type:"sap.ui.model.Context"},hideBasicSearch:{type:"boolean",defaultValue:false},enableFallback:{type:"boolean",defaultValue:false},p13nMode:{type:"sap.ui.mdc.FilterBarP13nMode[]"},useSemanticDateRange:{type:"boolean",defaultValue:true},liveMode:{type:"boolean",defaultValue:false},_valueList:{type:"sap.ui.model.Context",required:false},selectionFields:{type:"sap.ui.model.Context",required:false},filterConditions:{type:"string",required:false},suspendSelection:{type:"boolean",defaultValue:false},expandFilterFields:{type:"boolean",defaultValue:true}},events:{search:{type:"function"},filterChanged:{type:"function"}}},create:function(t,a,r){const c=t.contextPath;if(!c){e.error("Context Path not available for FilterBar Macro.");return}const p=c.getPath();const d=l.getEntitySetPath(p);const u=c.getModel();let f;if(!t.selectionFields){const e=t.metaPath;const a=e&&e.getPath();const l=s(c);f=this.getConverterContext(l,undefined,r);const i=n(f,[],a).selectionFields;t.selectionFields=new o(i,u).createBindingContext("/")}if(u.getObject(d+"@com.sap.vocabularies.Common.v1.DraftRoot")||u.getObject(d+"@com.sap.vocabularies.Common.v1.DraftNode")){t.showDraftEditState=true}const m=u.getObject(d+"@Org.OData.Capabilities.V1.FilterRestrictions");t.expandFilterFields=i(f,m,t._valueList);return t}});return c},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/visualfilters/InteractiveChartHelper-dbg", ["sap/base/util/JSTokenizer", "sap/fe/core/CommonUtils", "sap/fe/core/controls/filterbar/utils/VisualFilterUtils", "sap/fe/core/helpers/StableIdHelper", "sap/fe/core/templating/CriticalityFormatters", "sap/fe/core/templating/FilterHelper", "sap/fe/core/type/TypeUtil", "sap/fe/macros/CommonHelper", "sap/fe/macros/filter/FilterFieldHelper", "sap/fe/macros/ResourceModel", "sap/ui/core/format/NumberFormat", "sap/ui/mdc/condition/ConditionConverter", "sap/ui/model/odata/v4/AnnotationHelper", "sap/ui/model/odata/v4/ODataUtils"], function (JSTokenizer, CommonUtils, VisualFilterUtils, StableIdHelper, CriticalityFormatters, FilterHelper, TypeUtil, CommonHelper, FilterFieldHelper, ResourceModel, NumberFormat, ConditionConverter, ODataModelAnnotationHelper, ODataUtils) {
  "use strict";

  var getFiltersConditionsFromSelectionVariant = FilterHelper.getFiltersConditionsFromSelectionVariant;
  var buildExpressionForCriticalityColorMicroChart = CriticalityFormatters.buildExpressionForCriticalityColorMicroChart;
  var generate = StableIdHelper.generate;
  const InteractiveChartHelper = {
    getChartDisplayedValue: function (value, oValueFormat, sMetaPath) {
      //var sType = "" + value + "@odata.type";
      const sInfoPath = generate([sMetaPath]);
      return "{parts:[{path:'" + value + "',type:'sap.ui.model.odata.type.Decimal', constraints:{'nullable':false}}" + (oValueFormat && oValueFormat.ScaleFactor ? ",{value:'" + oValueFormat.ScaleFactor.$Decimal + "'}" : ",{path:'internal>scalefactorNumber/" + sInfoPath + "'}") + (oValueFormat && oValueFormat.NumberOfFractionalDigits ? ",{value:'" + oValueFormat.NumberOfFractionalDigits + "'}" : ",{value:'0'}") + ",{path:'internal>currency/" + sInfoPath + "'}" + ",{path:'" + value + "',type:'sap.ui.model.odata.type.String', constraints:{'nullable':false}}" + "], formatter:'VisualFilterRuntime.scaleVisualFilterValue'}"; //+ sType.split('#').length ? sType.split('#')[1] : 'Decimal' + "}";
    },

    getChartValue: function (oValue) {
      return "{path:'" + oValue + "',type:'sap.ui.model.odata.type.Decimal', constraints:{'nullable':false}}";
    },
    getChart: function (oMetaPath) {
      const oModel = oMetaPath.getModel();
      const oPresentationVariant = oModel.getObject(oMetaPath.getPath());
      const aVisualizations = oPresentationVariant.Visualizations;
      for (let i = 0; i < aVisualizations.length; i++) {
        if (aVisualizations[i].$AnnotationPath.indexOf("com.sap.vocabularies.UI.v1.Chart") > -1) {
          const sCollectionPath = ODataModelAnnotationHelper.getNavigationPath(oMetaPath.getPath());
          return oModel.createBindingContext(sCollectionPath + "/" + aVisualizations[i].$AnnotationPath);
        }
      }
      return undefined;
    },
    getChartLabel: function () {
      return arguments.length <= 2 ? undefined : arguments[2];
    },
    /**
     * Build the expression for measure path based on whether CustomAggregate/Dynamic/TransformationAggregate measures exists.
     *
     * @param oChartAnnotation Chart configurations.
     * @param bCustomAggregate Indicator for existence for custom aggregates in chart measures.
     * @returns Measure Path
     */
    _getMeasurePath: function (oChartAnnotation, bCustomAggregate) {
      let sMeasurePath;
      if (bCustomAggregate) {
        sMeasurePath = "/Measures/0/$PropertyPath";
      }
      if (oChartAnnotation.DynamicMeasures && oChartAnnotation.DynamicMeasures.length > 0) {
        sMeasurePath = "/DynamicMeasures/0/$AnnotationPath/AggregatableProperty/$PropertyPath";
      } else if (!bCustomAggregate && oChartAnnotation.Measures && oChartAnnotation.Measures.length > 0) {
        sMeasurePath = "/Measures/0/$PropertyPath";
      }
      return sMeasurePath;
    },
    getAggregationBinding: function (oInterface, oChartAnnotations, oCollection, oTextAssociation, oDimensionType, aSortOrder, selectionVariantAnnotation, bCustomAggregate, oAggregation, bUoMHasCustomAggregate, aParameters, oFilterBarContext, bDraftSupported, sChartMeasure) {
      const sEntityType = oFilterBarContext ? oFilterBarContext.getPath() : "";
      const sDimension = oChartAnnotations.Dimensions[0].$PropertyPath;
      const aFilters = [];
      let sAggregationExpression, sUOMExpression, filterConditions, sBindingPath;
      let sCollectionName = oCollection.$kind == "NavigationProperty" ? oInterface.getPath(1) : (oCollection.$kind == "EntitySet" ? "/" : "") + oInterface.getModel(1).getObject(`${oInterface.getPath(1)}@sapui.name`);
      const vUOM = InteractiveChartHelper.getUoM(oInterface, oChartAnnotations, oCollection, undefined, bCustomAggregate, oAggregation);
      const sEntitySetPath = oInterface.getInterface(1).getPath(),
        oMetaModel = oInterface.getInterface(1).getModel();
      if (bDraftSupported) {
        aFilters.push({
          operator: "EQ",
          value1: "true",
          value2: null,
          path: "IsActiveEntity",
          isParameter: true
        });
      }
      if (selectionVariantAnnotation && selectionVariantAnnotation.getObject()) {
        filterConditions = getFiltersConditionsFromSelectionVariant(sEntitySetPath, oMetaModel, selectionVariantAnnotation.getObject(), VisualFilterUtils.getCustomConditions.bind(VisualFilterUtils));
        for (const sPath in filterConditions) {
          const aConditions = filterConditions[sPath];
          aConditions.forEach(function (oCondition) {
            if (!oCondition.isParameter) {
              aFilters.push(oCondition);
            }
          });
        }
      }
      if (sEntityType !== `${sCollectionName}/` && aParameters && aParameters.length && filterConditions) {
        const aParams = [];
        const convertedFilterConditions = VisualFilterUtils.convertFilterCondions(filterConditions);
        const parameterProperties = CommonUtils.getParameterInfo(oMetaModel, sCollectionName).parameterProperties;
        if (parameterProperties) {
          for (const i in aParameters) {
            const parameter = aParameters[i];
            const oProperty = parameterProperties[parameter];
            const sEntityPath = sEntitySetPath.split("/")[1];
            const oPropertyContext = oMetaModel.createBindingContext(`/${sEntityPath}/${parameter}`);
            const oFormatOptions = JSTokenizer.parseJS(FilterFieldHelper.formatOptions(oProperty, {
              context: oPropertyContext
            }) || "{}");
            const oConstraints = JSTokenizer.parseJS(FilterFieldHelper.constraints(oProperty, {
              context: oPropertyContext
            }) || "{}");
            const typeConfig = TypeUtil.getTypeConfig(oProperty.$Type, oFormatOptions, oConstraints);
            const oCondition = convertedFilterConditions[parameter];
            const oConditionInternal = oCondition ? oCondition[0] : undefined;
            if (oConditionInternal) {
              const mInternalParameterCondition = ConditionConverter.toType(oConditionInternal, typeConfig, TypeUtil);
              const sEdmType = oProperty.$Type;
              let sValue = encodeURIComponent(ODataUtils.formatLiteral(mInternalParameterCondition.values[0], sEdmType));
              sValue = sValue.replaceAll("'", "\\'");
              aParams.push(`${parameter}=${sValue}`);
            }
          }
        }
        const sParameterEntitySet = sCollectionName.slice(0, sCollectionName.lastIndexOf("/"));
        const sTargetNavigation = sCollectionName.substring(sCollectionName.lastIndexOf("/") + 1);
        // create parameter context
        sBindingPath = `${sParameterEntitySet}(${aParams.toString()})/${sTargetNavigation}`;
        sCollectionName = sBindingPath;
      }
      if (bCustomAggregate) {
        //custom aggregate for a currency or unit of measure corresponding to this aggregatable property
        if (bUoMHasCustomAggregate) {
          sAggregationExpression = vUOM && vUOM.$Path ? `{ 'unit' : '${vUOM.$Path}' }` : "{}";
          sUOMExpression = "";
        } else {
          sAggregationExpression = "{}";
          sUOMExpression = vUOM && vUOM.$Path ? `, '${vUOM.$Path}' : {}` : "";
        }
      } else if (oAggregation && oAggregation.AggregatableProperty && oAggregation.AggregatableProperty.value && oAggregation.AggregationMethod) {
        sAggregationExpression = "{ 'name' : '" + oAggregation.AggregatableProperty.value + "', 'with' : '" + oAggregation.AggregationMethod + "'}";
        sUOMExpression = vUOM && vUOM.$Path ? ", '" + vUOM.$Path + "' : {}" : "";
      }
      const sTextAssociationExpression = oTextAssociation ? "' : { 'additionally' : ['" + oTextAssociation.$Path + "'] }" : "' : { }";
      const sFilterExpression = JSON.stringify(aFilters);
      return "{path: '" + sCollectionName + "', templateShareable: true, suspended : true, 'filters' : " + sFilterExpression + ",'parameters' : {" + InteractiveChartHelper.getSortOrder(oInterface, oMetaModel, oChartAnnotations, oDimensionType, aSortOrder, sChartMeasure) + ", '$$aggregation' : {'aggregate' : {'" + sChartMeasure + "' : " + sAggregationExpression + "},'group' : {'" + sDimension + sTextAssociationExpression + sUOMExpression + "} } }" + InteractiveChartHelper.getMaxItems(oChartAnnotations) + "}";
    },
    getSortOrder: function (oInterface, oMetaModel, oChartAnnotations, sDimensionType, aSortOrder, sChartMeasure) {
      let sSortPropertyName;
      if (oChartAnnotations.ChartType.$EnumMember === "com.sap.vocabularies.UI.v1.ChartType/Donut" || oChartAnnotations.ChartType.$EnumMember === "com.sap.vocabularies.UI.v1.ChartType/Bar") {
        if (aSortOrder && aSortOrder.length) {
          if (aSortOrder[0].DynamicProperty) {
            sSortPropertyName = oMetaModel.getObject(oInterface.getPath(0).split("@")[0] + aSortOrder[0].DynamicProperty.$AnnotationPath).Name;
          } else {
            sSortPropertyName = aSortOrder[0].Property.$PropertyPath;
          }
          if (sSortPropertyName === sChartMeasure) {
            return "'$orderby' : '" + sChartMeasure + (aSortOrder[0].Descending ? " desc'" : "'");
          }
          return "'$orderby' : '" + sChartMeasure + " desc'";
        }
        return "'$orderby' : '" + sChartMeasure + " desc'";
      } else if (sDimensionType === "Edm.Date" || sDimensionType === "Edm.Time" || sDimensionType === "Edm.DateTimeOffset") {
        return "'$orderby' : '" + oChartAnnotations.Dimensions[0].$PropertyPath + "'";
      } else if (aSortOrder && aSortOrder.length && aSortOrder[0].Property.$PropertyPath === oChartAnnotations.Dimensions[0].$PropertyPath) {
        return "'$orderby' : '" + aSortOrder[0].Property.$PropertyPath + (aSortOrder[0].Descending ? " desc'" : "'");
      } else {
        return "'$orderby' : '" + oChartAnnotations.Dimensions[0].$PropertyPath + "'";
      }
    },
    getMaxItems: function (oChartAnnotations) {
      if (oChartAnnotations.ChartType.$EnumMember === "com.sap.vocabularies.UI.v1.ChartType/Bar") {
        return ",'startIndex' : 0,'length' : 3";
      } else if (oChartAnnotations.ChartType.$EnumMember === "com.sap.vocabularies.UI.v1.ChartType/Line") {
        return ",'startIndex' : 0,'length' : 6";
      } else {
        return "";
      }
    },
    getColorBinding: function (iContext, oDataPoint, oDimension) {
      const oModel = iContext.getModel(0);
      const oDimensionPath = iContext.getPath(1);
      const aValueCriticality = oModel.getObject(`${oDimensionPath}$PropertyPath@com.sap.vocabularies.UI.v1.ValueCriticality`);
      oDataPoint = oDataPoint.targetObject;
      if (oDataPoint.Criticality) {
        return buildExpressionForCriticalityColorMicroChart(oDataPoint);
      } else if (oDataPoint.CriticalityCalculation) {
        const oDirection = oDataPoint.CriticalityCalculation.ImprovementDirection && oDataPoint.CriticalityCalculation.ImprovementDirection.$EnumMember;
        const oDataPointValue = ODataModelAnnotationHelper.value(oDataPoint.Value, {
          context: iContext.getInterface(0)
        });
        const oDeviationRangeLowValue = ODataModelAnnotationHelper.value(oDataPoint.CriticalityCalculation.DeviationRangeLowValue, {
          context: iContext.getInterface(0)
        });
        const oToleranceRangeLowValue = ODataModelAnnotationHelper.value(oDataPoint.CriticalityCalculation.ToleranceRangeLowValue, {
          context: iContext.getInterface(0)
        });
        const oAcceptanceRangeLowValue = ODataModelAnnotationHelper.value(oDataPoint.CriticalityCalculation.AcceptanceRangeLowValue, {
          context: iContext.getInterface(0)
        });
        const oAcceptanceRangeHighValue = ODataModelAnnotationHelper.value(oDataPoint.CriticalityCalculation.AcceptanceRangeHighValue, {
          context: iContext.getInterface(0)
        });
        const oToleranceRangeHighValue = ODataModelAnnotationHelper.value(oDataPoint.CriticalityCalculation.ToleranceRangeHighValue, {
          context: iContext.getInterface(0)
        });
        const oDeviationRangeHighValue = ODataModelAnnotationHelper.value(oDataPoint.CriticalityCalculation.DeviationRangeHighValue, {
          context: iContext.getInterface(0)
        });
        return CommonHelper.getCriticalityCalculationBinding(oDirection, oDataPointValue, oDeviationRangeLowValue, oToleranceRangeLowValue, oAcceptanceRangeLowValue, oAcceptanceRangeHighValue, oToleranceRangeHighValue, oDeviationRangeHighValue);
      } else if (aValueCriticality && aValueCriticality.length) {
        return CommonHelper.getValueCriticality(oDimension.$PropertyPath, aValueCriticality);
      } else {
        return undefined;
      }
    },
    getScaleUoMTitle: function (oInterface, oChartAnnotation, oCollection, sMetaPath, bCustomAggregate, oAggregation, sSeperator, bIsToolTip) {
      const oModel = oInterface.getModel(0);
      const sScaleFactor = oModel.getObject(`${oInterface.getPath(0)}/MeasureAttributes/0/DataPoint/$AnnotationPath/ValueFormat/ScaleFactor/$Decimal`);
      const sInfoPath = generate([sMetaPath]);
      const fixedInteger = NumberFormat.getIntegerInstance({
        style: "short",
        showScale: false,
        shortRefNumber: sScaleFactor
      });
      let sScale = fixedInteger.getScale();
      let vUOM = InteractiveChartHelper.getUoM(oInterface, oChartAnnotation, oCollection, undefined, bCustomAggregate, oAggregation);
      vUOM = vUOM && (vUOM.$Path ? "${internal>uom/" + sInfoPath + "}" : "'" + vUOM + "'");
      sScale = sScale ? "'" + sScale + "'" : "${internal>scalefactor/" + sInfoPath + "}";
      if (!sSeperator) {
        sSeperator = "|";
      }
      sSeperator = vUOM ? "' " + sSeperator + " ' + " : "";
      const sExpression = sScale && vUOM ? sSeperator + sScale + " + ' ' + " + vUOM : sSeperator + (sScale || vUOM);
      return bIsToolTip ? sExpression : "{= " + sExpression + "}";
    },
    getMeasureDimensionTitle: function (oInterface, oChartAnnotation, oCollection, bCustomAggregate, oAggregation) {
      const oModel = oInterface.getModel(0);
      let sMeasureLabel;
      const sMeasurePathExpression = InteractiveChartHelper._getMeasurePath(oChartAnnotation, bCustomAggregate);
      const sMeasurePath = oModel.getObject(`${oInterface.getPath(0)}` + sMeasurePathExpression);
      const sDimensionPath = oModel.getObject(`${oInterface.getPath(0)}/Dimensions/0/$PropertyPath`);
      let sDimensionLabel = InteractiveChartHelper.getLabel(oModel, oInterface, "Dimensions");
      if (!bCustomAggregate && oAggregation) {
        // check if the label is part of aggregated properties (Transformation aggregates)
        sMeasureLabel = oAggregation.annotations && oAggregation.annotations.Common && oAggregation.annotations.Common.Label;
        if (sMeasureLabel === undefined) {
          sMeasureLabel = sMeasureLabel = InteractiveChartHelper.getLabel(oModel, oInterface, "Measures");
        }
      } else {
        sMeasureLabel = InteractiveChartHelper.getLabel(oModel, oInterface, "Measures");
      }
      if (sMeasureLabel === undefined) {
        sMeasureLabel = sMeasurePath;
      }
      if (sDimensionLabel === undefined) {
        sDimensionLabel = sDimensionPath;
      }
      return ResourceModel && ResourceModel.getText("M_INTERACTIVE_CHART_HELPER_VISUALFILTER_MEASURE_DIMENSION_TITLE", [sMeasureLabel, sDimensionLabel]);
    },
    getLabel: function (oModel, oInterface, sProperty) {
      return oModel.getObject(`${oInterface.getPath(0)}/${sProperty}/0/$PropertyPath@com.sap.vocabularies.Common.v1.Label`);
    },
    getToolTip: function (oInterface, oChartAnnotation, oCollection, sMetaPath, bCustomAggregate, oAggregation, bRenderLineChart) {
      const sChartType = oChartAnnotation && oChartAnnotation["ChartType"];
      let sMeasureDimensionToolTip = InteractiveChartHelper.getMeasureDimensionTitle(oInterface, oChartAnnotation, oCollection, bCustomAggregate, oAggregation);
      sMeasureDimensionToolTip = CommonHelper.escapeSingleQuotes(sMeasureDimensionToolTip);
      if (bRenderLineChart === "false" && sChartType === "UI.ChartType/Line") {
        return `{= '${sMeasureDimensionToolTip}'}`;
      }
      const sSeperator = ResourceModel.getText("M_INTERACTIVE_CHART_HELPER_VISUALFILTER_TOOLTIP_SEPERATOR");
      const sInfoPath = generate([sMetaPath]);
      const sScaleUOMTooltip = InteractiveChartHelper.getScaleUoMTitle(oInterface, oChartAnnotation, oCollection, sInfoPath, bCustomAggregate, oAggregation, sSeperator, true);
      return "{= '" + sMeasureDimensionToolTip + (sScaleUOMTooltip ? "' + " + sScaleUOMTooltip : "'") + "}";
    },
    getUoM: function (oInterface, oChartAnnotation, oCollection, isCustomData, bCustomAggregate, oAggregation) {
      const oModel = oInterface.getModel(0);
      const sMeasurePathExpression = InteractiveChartHelper._getMeasurePath(oChartAnnotation, bCustomAggregate);
      const vISOCurrency = oModel.getObject(`${oInterface.getPath(0)}` + sMeasurePathExpression + `@Org.OData.Measures.V1.ISOCurrency`);
      const vUnit = oModel.getObject(`${oInterface.getPath(0)}` + sMeasurePathExpression + `@Org.OData.Measures.V1.Unit`);
      const sMeasurePath = oModel.getObject(`${oInterface.getPath(0)}` + sMeasurePathExpression);
      let sAggregatablePropertyPath;
      if (!bCustomAggregate && oAggregation) {
        sAggregatablePropertyPath = oAggregation.AggregatableProperty && oAggregation.AggregatableProperty.value;
      } else {
        sAggregatablePropertyPath = sMeasurePath;
      }
      const _getUOM = function (vUOM, sAnnotation) {
        const sUOM = sAnnotation && sAnnotation.split("V1.")[1];
        const oUOM = {};
        if (vUOM) {
          // check if the UOM is part of Measure annotations(Custom aggregates)
          oUOM[sUOM] = vUOM;
          return isCustomData && vUOM.$Path ? JSON.stringify(oUOM) : vUOM;
        } else if (sAggregatablePropertyPath) {
          // check if the UOM is part of base property annotations(Transformation aggregates)
          vUOM = oInterface.getModel(1).getObject(`${oInterface.getPath(1)}/${sAggregatablePropertyPath}${sAnnotation}`);
          oUOM[sUOM] = vUOM;
          return vUOM && isCustomData && vUOM.$Path ? JSON.stringify(oUOM) : vUOM;
        }
      };
      return _getUOM(vISOCurrency, "@Org.OData.Measures.V1.ISOCurrency") || _getUOM(vUnit, "@Org.OData.Measures.V1.Unit");
    },
    getScaleFactor: function (oValueFormat) {
      if (oValueFormat && oValueFormat.ScaleFactor) {
        return oValueFormat.ScaleFactor.$Decimal;
      }
      return undefined;
    },
    getUoMVisiblity: function (oChartAnnotation, bShowError) {
      const sChartType = oChartAnnotation && oChartAnnotation["ChartType"];
      if (bShowError) {
        return false;
      } else if (!(sChartType === "UI.ChartType/Bar" || sChartType === "UI.ChartType/Line")) {
        return false;
      } else {
        return true;
      }
    },
    getInParameterFiltersBinding: function (aInParameters) {
      if (aInParameters.length > 0) {
        const aParts = [];
        let sPaths = "";
        aInParameters.forEach(function (oInParameter) {
          if (oInParameter.localDataProperty) {
            aParts.push(`{path:'$filters>/conditions/${oInParameter.localDataProperty}'}`);
          }
        });
        if (aParts.length > 0) {
          sPaths = aParts.join();
          return `{parts:[${sPaths}], formatter:'sap.fe.macros.visualfilters.VisualFilterRuntime.getFiltersFromConditions'}`;
        } else {
          return undefined;
        }
      } else {
        return undefined;
      }
    },
    getfilterCountBinding: function (oChartAnnotation) {
      var _oChartAnnotation$Dim, _oChartAnnotation$Dim2;
      const sDimension = (_oChartAnnotation$Dim = oChartAnnotation.Dimensions[0]) === null || _oChartAnnotation$Dim === void 0 ? void 0 : (_oChartAnnotation$Dim2 = _oChartAnnotation$Dim.$target) === null || _oChartAnnotation$Dim2 === void 0 ? void 0 : _oChartAnnotation$Dim2.name;
      return "{path:'$filters>/conditions/" + sDimension + "', formatter:'sap.fe.macros.visualfilters.VisualFilterRuntime.getFilterCounts'}";
    }
  };
  InteractiveChartHelper.getColorBinding.requiresIContext = true;
  InteractiveChartHelper.getAggregationBinding.requiresIContext = true;
  InteractiveChartHelper.getUoM.requiresIContext = true;
  InteractiveChartHelper.getScaleUoMTitle.requiresIContext = true;
  InteractiveChartHelper.getToolTip.requiresIContext = true;
  InteractiveChartHelper.getMeasureDimensionTitle.requiresIContext = true;
  return InteractiveChartHelper;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/visualfilters/InteractiveChartHelper", ["sap/base/util/JSTokenizer","sap/fe/core/CommonUtils","sap/fe/core/controls/filterbar/utils/VisualFilterUtils","sap/fe/core/helpers/StableIdHelper","sap/fe/core/templating/CriticalityFormatters","sap/fe/core/templating/FilterHelper","sap/fe/core/type/TypeUtil","sap/fe/macros/CommonHelper","sap/fe/macros/filter/FilterFieldHelper","sap/fe/macros/ResourceModel","sap/ui/core/format/NumberFormat","sap/ui/mdc/condition/ConditionConverter","sap/ui/model/odata/v4/AnnotationHelper","sap/ui/model/odata/v4/ODataUtils"],function(e,t,a,n,r,i,o,s,l,c,u,g,f,p){"use strict";var h=i.getFiltersConditionsFromSelectionVariant;var m=r.buildExpressionForCriticalityColorMicroChart;var d=n.generate;const y={getChartDisplayedValue:function(e,t,a){const n=d([a]);return"{parts:[{path:'"+e+"',type:'sap.ui.model.odata.type.Decimal', constraints:{'nullable':false}}"+(t&&t.ScaleFactor?",{value:'"+t.ScaleFactor.$Decimal+"'}":",{path:'internal>scalefactorNumber/"+n+"'}")+(t&&t.NumberOfFractionalDigits?",{value:'"+t.NumberOfFractionalDigits+"'}":",{value:'0'}")+",{path:'internal>currency/"+n+"'}"+",{path:'"+e+"',type:'sap.ui.model.odata.type.String', constraints:{'nullable':false}}"+"], formatter:'VisualFilterRuntime.scaleVisualFilterValue'}"},getChartValue:function(e){return"{path:'"+e+"',type:'sap.ui.model.odata.type.Decimal', constraints:{'nullable':false}}"},getChart:function(e){const t=e.getModel();const a=t.getObject(e.getPath());const n=a.Visualizations;for(let a=0;a<n.length;a++){if(n[a].$AnnotationPath.indexOf("com.sap.vocabularies.UI.v1.Chart")>-1){const r=f.getNavigationPath(e.getPath());return t.createBindingContext(r+"/"+n[a].$AnnotationPath)}}return undefined},getChartLabel:function(){return arguments.length<=2?undefined:arguments[2]},_getMeasurePath:function(e,t){let a;if(t){a="/Measures/0/$PropertyPath"}if(e.DynamicMeasures&&e.DynamicMeasures.length>0){a="/DynamicMeasures/0/$AnnotationPath/AggregatableProperty/$PropertyPath"}else if(!t&&e.Measures&&e.Measures.length>0){a="/Measures/0/$PropertyPath"}return a},getAggregationBinding:function(n,r,i,s,c,u,f,m,d,P,$,C,b,I){const v=C?C.getPath():"";const M=r.Dimensions[0].$PropertyPath;const T=[];let O,D,S,E;let V=i.$kind=="NavigationProperty"?n.getPath(1):(i.$kind=="EntitySet"?"/":"")+n.getModel(1).getObject(`${n.getPath(1)}@sapui.name`);const A=y.getUoM(n,r,i,undefined,m,d);const F=n.getInterface(1).getPath(),x=n.getInterface(1).getModel();if(b){T.push({operator:"EQ",value1:"true",value2:null,path:"IsActiveEntity",isParameter:true})}if(f&&f.getObject()){S=h(F,x,f.getObject(),a.getCustomConditions.bind(a));for(const e in S){const t=S[e];t.forEach(function(e){if(!e.isParameter){T.push(e)}})}}if(v!==`${V}/`&&$&&$.length&&S){const n=[];const r=a.convertFilterCondions(S);const i=t.getParameterInfo(x,V).parameterProperties;if(i){for(const t in $){const a=$[t];const s=i[a];const c=F.split("/")[1];const u=x.createBindingContext(`/${c}/${a}`);const f=e.parseJS(l.formatOptions(s,{context:u})||"{}");const h=e.parseJS(l.constraints(s,{context:u})||"{}");const m=o.getTypeConfig(s.$Type,f,h);const d=r[a];const y=d?d[0]:undefined;if(y){const e=g.toType(y,m,o);const t=s.$Type;let r=encodeURIComponent(p.formatLiteral(e.values[0],t));r=r.replaceAll("'","\\'");n.push(`${a}=${r}`)}}}const s=V.slice(0,V.lastIndexOf("/"));const c=V.substring(V.lastIndexOf("/")+1);E=`${s}(${n.toString()})/${c}`;V=E}if(m){if(P){O=A&&A.$Path?`{ 'unit' : '${A.$Path}' }`:"{}";D=""}else{O="{}";D=A&&A.$Path?`, '${A.$Path}' : {}`:""}}else if(d&&d.AggregatableProperty&&d.AggregatableProperty.value&&d.AggregationMethod){O="{ 'name' : '"+d.AggregatableProperty.value+"', 'with' : '"+d.AggregationMethod+"'}";D=A&&A.$Path?", '"+A.$Path+"' : {}":""}const U=s?"' : { 'additionally' : ['"+s.$Path+"'] }":"' : { }";const R=JSON.stringify(T);return"{path: '"+V+"', templateShareable: true, suspended : true, 'filters' : "+R+",'parameters' : {"+y.getSortOrder(n,x,r,c,u,I)+", '$$aggregation' : {'aggregate' : {'"+I+"' : "+O+"},'group' : {'"+M+U+D+"} } }"+y.getMaxItems(r)+"}"},getSortOrder:function(e,t,a,n,r,i){let o;if(a.ChartType.$EnumMember==="com.sap.vocabularies.UI.v1.ChartType/Donut"||a.ChartType.$EnumMember==="com.sap.vocabularies.UI.v1.ChartType/Bar"){if(r&&r.length){if(r[0].DynamicProperty){o=t.getObject(e.getPath(0).split("@")[0]+r[0].DynamicProperty.$AnnotationPath).Name}else{o=r[0].Property.$PropertyPath}if(o===i){return"'$orderby' : '"+i+(r[0].Descending?" desc'":"'")}return"'$orderby' : '"+i+" desc'"}return"'$orderby' : '"+i+" desc'"}else if(n==="Edm.Date"||n==="Edm.Time"||n==="Edm.DateTimeOffset"){return"'$orderby' : '"+a.Dimensions[0].$PropertyPath+"'"}else if(r&&r.length&&r[0].Property.$PropertyPath===a.Dimensions[0].$PropertyPath){return"'$orderby' : '"+r[0].Property.$PropertyPath+(r[0].Descending?" desc'":"'")}else{return"'$orderby' : '"+a.Dimensions[0].$PropertyPath+"'"}},getMaxItems:function(e){if(e.ChartType.$EnumMember==="com.sap.vocabularies.UI.v1.ChartType/Bar"){return",'startIndex' : 0,'length' : 3"}else if(e.ChartType.$EnumMember==="com.sap.vocabularies.UI.v1.ChartType/Line"){return",'startIndex' : 0,'length' : 6"}else{return""}},getColorBinding:function(e,t,a){const n=e.getModel(0);const r=e.getPath(1);const i=n.getObject(`${r}$PropertyPath@com.sap.vocabularies.UI.v1.ValueCriticality`);t=t.targetObject;if(t.Criticality){return m(t)}else if(t.CriticalityCalculation){const a=t.CriticalityCalculation.ImprovementDirection&&t.CriticalityCalculation.ImprovementDirection.$EnumMember;const n=f.value(t.Value,{context:e.getInterface(0)});const r=f.value(t.CriticalityCalculation.DeviationRangeLowValue,{context:e.getInterface(0)});const i=f.value(t.CriticalityCalculation.ToleranceRangeLowValue,{context:e.getInterface(0)});const o=f.value(t.CriticalityCalculation.AcceptanceRangeLowValue,{context:e.getInterface(0)});const l=f.value(t.CriticalityCalculation.AcceptanceRangeHighValue,{context:e.getInterface(0)});const c=f.value(t.CriticalityCalculation.ToleranceRangeHighValue,{context:e.getInterface(0)});const u=f.value(t.CriticalityCalculation.DeviationRangeHighValue,{context:e.getInterface(0)});return s.getCriticalityCalculationBinding(a,n,r,i,o,l,c,u)}else if(i&&i.length){return s.getValueCriticality(a.$PropertyPath,i)}else{return undefined}},getScaleUoMTitle:function(e,t,a,n,r,i,o,s){const l=e.getModel(0);const c=l.getObject(`${e.getPath(0)}/MeasureAttributes/0/DataPoint/$AnnotationPath/ValueFormat/ScaleFactor/$Decimal`);const g=d([n]);const f=u.getIntegerInstance({style:"short",showScale:false,shortRefNumber:c});let p=f.getScale();let h=y.getUoM(e,t,a,undefined,r,i);h=h&&(h.$Path?"${internal>uom/"+g+"}":"'"+h+"'");p=p?"'"+p+"'":"${internal>scalefactor/"+g+"}";if(!o){o="|"}o=h?"' "+o+" ' + ":"";const m=p&&h?o+p+" + ' ' + "+h:o+(p||h);return s?m:"{= "+m+"}"},getMeasureDimensionTitle:function(e,t,a,n,r){const i=e.getModel(0);let o;const s=y._getMeasurePath(t,n);const l=i.getObject(`${e.getPath(0)}`+s);const u=i.getObject(`${e.getPath(0)}/Dimensions/0/$PropertyPath`);let g=y.getLabel(i,e,"Dimensions");if(!n&&r){o=r.annotations&&r.annotations.Common&&r.annotations.Common.Label;if(o===undefined){o=o=y.getLabel(i,e,"Measures")}}else{o=y.getLabel(i,e,"Measures")}if(o===undefined){o=l}if(g===undefined){g=u}return c&&c.getText("M_INTERACTIVE_CHART_HELPER_VISUALFILTER_MEASURE_DIMENSION_TITLE",[o,g])},getLabel:function(e,t,a){return e.getObject(`${t.getPath(0)}/${a}/0/$PropertyPath@com.sap.vocabularies.Common.v1.Label`)},getToolTip:function(e,t,a,n,r,i,o){const l=t&&t["ChartType"];let u=y.getMeasureDimensionTitle(e,t,a,r,i);u=s.escapeSingleQuotes(u);if(o==="false"&&l==="UI.ChartType/Line"){return`{= '${u}'}`}const g=c.getText("M_INTERACTIVE_CHART_HELPER_VISUALFILTER_TOOLTIP_SEPERATOR");const f=d([n]);const p=y.getScaleUoMTitle(e,t,a,f,r,i,g,true);return"{= '"+u+(p?"' + "+p:"'")+"}"},getUoM:function(e,t,a,n,r,i){const o=e.getModel(0);const s=y._getMeasurePath(t,r);const l=o.getObject(`${e.getPath(0)}`+s+`@Org.OData.Measures.V1.ISOCurrency`);const c=o.getObject(`${e.getPath(0)}`+s+`@Org.OData.Measures.V1.Unit`);const u=o.getObject(`${e.getPath(0)}`+s);let g;if(!r&&i){g=i.AggregatableProperty&&i.AggregatableProperty.value}else{g=u}const f=function(t,a){const r=a&&a.split("V1.")[1];const i={};if(t){i[r]=t;return n&&t.$Path?JSON.stringify(i):t}else if(g){t=e.getModel(1).getObject(`${e.getPath(1)}/${g}${a}`);i[r]=t;return t&&n&&t.$Path?JSON.stringify(i):t}};return f(l,"@Org.OData.Measures.V1.ISOCurrency")||f(c,"@Org.OData.Measures.V1.Unit")},getScaleFactor:function(e){if(e&&e.ScaleFactor){return e.ScaleFactor.$Decimal}return undefined},getUoMVisiblity:function(e,t){const a=e&&e["ChartType"];if(t){return false}else if(!(a==="UI.ChartType/Bar"||a==="UI.ChartType/Line")){return false}else{return true}},getInParameterFiltersBinding:function(e){if(e.length>0){const t=[];let a="";e.forEach(function(e){if(e.localDataProperty){t.push(`{path:'$filters>/conditions/${e.localDataProperty}'}`)}});if(t.length>0){a=t.join();return`{parts:[${a}], formatter:'sap.fe.macros.visualfilters.VisualFilterRuntime.getFiltersFromConditions'}`}else{return undefined}}else{return undefined}},getfilterCountBinding:function(e){var t,a;const n=(t=e.Dimensions[0])===null||t===void 0?void 0:(a=t.$target)===null||a===void 0?void 0:a.name;return"{path:'$filters>/conditions/"+n+"', formatter:'sap.fe.macros.visualfilters.VisualFilterRuntime.getFilterCounts'}"}};y.getColorBinding.requiresIContext=true;y.getAggregationBinding.requiresIContext=true;y.getUoM.requiresIContext=true;y.getScaleUoMTitle.requiresIContext=true;y.getToolTip.requiresIContext=true;y.getMeasureDimensionTitle.requiresIContext=true;return y},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/visualfilters/VisualFilterBuildingBlock-dbg", ["sap/base/Log", "sap/fe/core/buildingBlocks/BuildingBlock", "sap/fe/core/buildingBlocks/BuildingBlockRuntime", "sap/fe/core/converters/helpers/Aggregation", "sap/fe/core/converters/MetaModelConverter", "sap/fe/core/helpers/ModelHelper", "sap/fe/core/helpers/StableIdHelper", "../ResourceModel", "./InteractiveChartHelper"], function (Log, BuildingBlock, BuildingBlockRuntime, Aggregation, MetaModelConverter, ModelHelper, StableIdHelper, ResourceModel, InteractiveChartHelper) {
  "use strict";

  var _dec, _dec2, _dec3, _dec4, _dec5, _dec6, _dec7, _dec8, _dec9, _dec10, _dec11, _dec12, _dec13, _dec14, _dec15, _dec16, _dec17, _dec18, _dec19, _dec20, _dec21, _dec22, _dec23, _dec24, _class, _class2, _descriptor, _descriptor2, _descriptor3, _descriptor4, _descriptor5, _descriptor6, _descriptor7, _descriptor8, _descriptor9, _descriptor10, _descriptor11, _descriptor12, _descriptor13, _descriptor14, _descriptor15, _descriptor16, _descriptor17, _descriptor18, _descriptor19, _descriptor20, _descriptor21, _descriptor22, _descriptor23;
  var _exports = {};
  var generate = StableIdHelper.generate;
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  var AggregationHelper = Aggregation.AggregationHelper;
  var xml = BuildingBlockRuntime.xml;
  var defineBuildingBlock = BuildingBlock.defineBuildingBlock;
  var BuildingBlockBase = BuildingBlock.BuildingBlockBase;
  var blockAttribute = BuildingBlock.blockAttribute;
  function _initializerDefineProperty(target, property, descriptor, context) { if (!descriptor) return; Object.defineProperty(target, property, { enumerable: descriptor.enumerable, configurable: descriptor.configurable, writable: descriptor.writable, value: descriptor.initializer ? descriptor.initializer.call(context) : void 0 }); }
  function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }
  function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }
  function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }
  function _applyDecoratedDescriptor(target, property, decorators, descriptor, context) { var desc = {}; Object.keys(descriptor).forEach(function (key) { desc[key] = descriptor[key]; }); desc.enumerable = !!desc.enumerable; desc.configurable = !!desc.configurable; if ('value' in desc || desc.initializer) { desc.writable = true; } desc = decorators.slice().reverse().reduce(function (desc, decorator) { return decorator(target, property, desc) || desc; }, desc); if (context && desc.initializer !== void 0) { desc.value = desc.initializer ? desc.initializer.call(context) : void 0; desc.initializer = undefined; } if (desc.initializer === void 0) { Object.defineProperty(target, property, desc); desc = null; } return desc; }
  function _initializerWarningHelper(descriptor, context) { throw new Error('Decorating class property failed. Please ensure that ' + 'proposal-class-properties is enabled and runs after the decorators transform.'); }
  let VisualFilterBuildingBlock = (
  /**
   * @classdesc
   * Building block for creating a VisualFilter based on the metadata provided by OData V4.
   * <br>
   * A Chart annotation is required to bring up an interactive chart
   *
   *
   * Usage example:
   * <pre>
   * &lt;macro:VisualFilter
   *   collection="{entitySet&gt;}"
   *   chartAnnotation="{chartAnnotation&gt;}"
   *   id="someID"
   *   groupId="someGroupID"
   *   title="some Title"
   * /&gt;
   * </pre>
   * @class sap.fe.macros.VisualFilter
   * @hideconstructor
   * @private
   * @experimental
   */
  _dec = defineBuildingBlock({
    name: "VisualFilter",
    namespace: "sap.fe.macros"
  }), _dec2 = blockAttribute({
    type: "string"
  }), _dec3 = blockAttribute({
    type: "string",
    defaultValue: ""
  }), _dec4 = blockAttribute({
    type: "sap.ui.model.Context",
    required: true,
    $kind: ["EntitySet", "NavigationProperty"]
  }), _dec5 = blockAttribute({
    type: "sap.ui.model.Context"
  }), _dec6 = blockAttribute({
    type: "string"
  }), _dec7 = blockAttribute({
    type: "string"
  }), _dec8 = blockAttribute({
    type: "sap.ui.model.Context"
  }), _dec9 = blockAttribute({
    type: "sap.ui.model.Context"
  }), _dec10 = blockAttribute({
    type: "boolean"
  }), _dec11 = blockAttribute({
    type: "boolean"
  }), _dec12 = blockAttribute({
    type: "boolean"
  }), _dec13 = blockAttribute({
    type: "string"
  }), _dec14 = blockAttribute({
    type: "string"
  }), _dec15 = blockAttribute({
    type: "sap.ui.model.Context"
  }), _dec16 = blockAttribute({
    type: "boolean"
  }), _dec17 = blockAttribute({
    type: "string"
  }), _dec18 = blockAttribute({
    type: "boolean"
  }), _dec19 = blockAttribute({
    type: "boolean"
  }), _dec20 = blockAttribute({
    type: "boolean",
    defaultValue: false
  }), _dec21 = blockAttribute({
    type: "string",
    defaultValue: "$auto.visualFilters"
  }), _dec22 = blockAttribute({
    type: "string"
  }), _dec23 = blockAttribute({
    type: "string"
  }), _dec24 = blockAttribute({
    type: "boolean"
  }), _dec(_class = (_class2 = /*#__PURE__*/function (_BuildingBlockBase) {
    _inheritsLoose(VisualFilterBuildingBlock, _BuildingBlockBase);
    function VisualFilterBuildingBlock(oProps, configuration, mSettings) {
      var _this$metaPath, _chartAnnotation, _chartAnnotation$Meas, _chartAnnotation3, _chartAnnotation4, _chartAnnotation5, _chartAnnotation6, _aVisualizations$, _aVisualizations$$$ta, _aVisualizations$2, _aVisualizations$2$$t, _aVisualizations$2$$t2, _aVisualizations$2$$t3, _oAggregation$Aggrega, _oAggregation$Aggrega2, _propertyAnnotations$, _aggregatableProperty, _chartAnnotation8, _chartAnnotation9, _chartAnnotation10, _oProps$contextPath, _this$metaPath3;
      var _this;
      _this = _BuildingBlockBase.call(this, oProps, configuration, mSettings) || this;
      _initializerDefineProperty(_this, "id", _descriptor, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "title", _descriptor2, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "contextPath", _descriptor3, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "metaPath", _descriptor4, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "outParameter", _descriptor5, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "valuelistProperty", _descriptor6, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "selectionVariantAnnotation", _descriptor7, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "inParameters", _descriptor8, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "multipleSelectionAllowed", _descriptor9, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "required", _descriptor10, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "showOverlayInitially", _descriptor11, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "renderLineChart", _descriptor12, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "requiredProperties", _descriptor13, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "filterBarEntityType", _descriptor14, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "showError", _descriptor15, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "chartMeasure", _descriptor16, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "bUoMHasCustomAggregate", _descriptor17, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "showValueHelp", _descriptor18, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "bCustomAggregate", _descriptor19, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "groupId", _descriptor20, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "errorMessageTitle", _descriptor21, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "errorMessage", _descriptor22, _assertThisInitialized(_this));
      _initializerDefineProperty(_this, "draftSupported", _descriptor23, _assertThisInitialized(_this));
      _this.groupId = "$auto.visualFilters";
      _this.inParameters = oProps.inParameters;
      _this.metaPath = oProps.metaPath;
      _this.sMetaPath = (_this$metaPath = _this.metaPath) === null || _this$metaPath === void 0 ? void 0 : _this$metaPath.getPath();
      const oContextObjectPath = getInvolvedDataModelObjects(_this.metaPath, oProps.contextPath);
      const oConverterContext = _this.getConverterContext(oContextObjectPath, undefined, mSettings);
      const aggregationHelper = new AggregationHelper(oConverterContext.getEntityType(), oConverterContext);
      const customAggregates = aggregationHelper.getCustomAggregateDefinitions();
      const pvAnnotation = oContextObjectPath.targetObject;
      let chartAnnotation;
      let sMeasure;
      const aVisualizations = pvAnnotation && pvAnnotation.Visualizations;
      if (aVisualizations) {
        for (let i = 0; i < aVisualizations.length; i++) {
          const sAnnotationPath = pvAnnotation.Visualizations[i] && pvAnnotation.Visualizations[i].value;
          chartAnnotation = oConverterContext.getEntityTypeAnnotation(sAnnotationPath) && oConverterContext.getEntityTypeAnnotation(sAnnotationPath).annotation;
        }
      }
      let aAggregations,
        aCustAggMeasure = [];
      if ((_chartAnnotation = chartAnnotation) !== null && _chartAnnotation !== void 0 && (_chartAnnotation$Meas = _chartAnnotation.Measures) !== null && _chartAnnotation$Meas !== void 0 && _chartAnnotation$Meas.length) {
        aCustAggMeasure = customAggregates.filter(function (custAgg) {
          var _chartAnnotation2;
          return custAgg.qualifier === ((_chartAnnotation2 = chartAnnotation) === null || _chartAnnotation2 === void 0 ? void 0 : _chartAnnotation2.Measures[0].value);
        });
        sMeasure = aCustAggMeasure.length > 0 ? aCustAggMeasure[0].qualifier : chartAnnotation.Measures[0].value;
        aAggregations = aggregationHelper.getAggregatedProperties("AggregatedProperties")[0];
      }
      // if there are AggregatedProperty objects but no dynamic measures, rather there are transformation aggregates found in measures
      if (aAggregations && aAggregations.length > 0 && !((_chartAnnotation3 = chartAnnotation) !== null && _chartAnnotation3 !== void 0 && _chartAnnotation3.DynamicMeasures) && aCustAggMeasure.length === 0 && (_chartAnnotation4 = chartAnnotation) !== null && _chartAnnotation4 !== void 0 && _chartAnnotation4.Measures && ((_chartAnnotation5 = chartAnnotation) === null || _chartAnnotation5 === void 0 ? void 0 : _chartAnnotation5.Measures.length) > 0) {
        Log.warning("The transformational aggregate measures are configured as Chart.Measures but should be configured as Chart.DynamicMeasures instead. Please check the SAP Help documentation and correct the configuration accordingly.");
      }
      //if the chart has dynamic measures, but with no other custom aggregate measures then consider the dynamic measures
      if ((_chartAnnotation6 = chartAnnotation) !== null && _chartAnnotation6 !== void 0 && _chartAnnotation6.DynamicMeasures) {
        if (aCustAggMeasure.length === 0) {
          sMeasure = oConverterContext.getConverterContextFor(oConverterContext.getAbsoluteAnnotationPath(chartAnnotation.DynamicMeasures[0].value)).getDataModelObjectPath().targetObject.Name;
          aAggregations = aggregationHelper.getAggregatedProperties("AggregatedProperty");
        } else {
          Log.warning("The dynamic measures have been ignored as visual filters can deal with only 1 measure and the first (custom aggregate) measure defined under Chart.Measures is considered.");
        }
      }
      let validChartType;
      if (chartAnnotation) {
        if (chartAnnotation.ChartType === "UI.ChartType/Line" || chartAnnotation.ChartType === "UI.ChartType/Bar") {
          validChartType = true;
        } else {
          validChartType = false;
        }
      }
      if (customAggregates.some(function (custAgg) {
        return custAgg.qualifier === sMeasure;
      })) {
        _this.bCustomAggregate = true;
      }
      let selectionVariant;
      if (oProps.selectionVariantAnnotation) {
        var _this$metaPath2;
        const selectionVariantContext = (_this$metaPath2 = _this.metaPath) === null || _this$metaPath2 === void 0 ? void 0 : _this$metaPath2.getModel().createBindingContext(oProps.selectionVariantAnnotation.getPath());
        selectionVariant = selectionVariantContext && getInvolvedDataModelObjects(selectionVariantContext, oProps.contextPath).targetObject;
      }
      let iSelectOptionsForDimension = 0;
      if (selectionVariant && !oProps.multipleSelectionAllowed) {
        for (let j = 0; j < selectionVariant.SelectOptions.length; j++) {
          var _chartAnnotation7;
          if (selectionVariant.SelectOptions[j].PropertyName.value === ((_chartAnnotation7 = chartAnnotation) === null || _chartAnnotation7 === void 0 ? void 0 : _chartAnnotation7.Dimensions[0].value)) {
            iSelectOptionsForDimension++;
            if (iSelectOptionsForDimension > 1) {
              throw new Error("Multiple SelectOptions for FilterField having SingleValue Allowed Expression");
            }
          }
        }
      }
      const oAggregation = _this.getAggregateProperties(aAggregations, sMeasure);
      if (oAggregation) {
        _this.aggregateProperties = oAggregation;
      }
      const propertyAnnotations = ((_aVisualizations$ = aVisualizations[0]) === null || _aVisualizations$ === void 0 ? void 0 : (_aVisualizations$$$ta = _aVisualizations$.$target) === null || _aVisualizations$$$ta === void 0 ? void 0 : _aVisualizations$$$ta.Measures) && ((_aVisualizations$2 = aVisualizations[0]) === null || _aVisualizations$2 === void 0 ? void 0 : (_aVisualizations$2$$t = _aVisualizations$2.$target) === null || _aVisualizations$2$$t === void 0 ? void 0 : (_aVisualizations$2$$t2 = _aVisualizations$2$$t.Measures[0]) === null || _aVisualizations$2$$t2 === void 0 ? void 0 : (_aVisualizations$2$$t3 = _aVisualizations$2$$t2.$target) === null || _aVisualizations$2$$t3 === void 0 ? void 0 : _aVisualizations$2$$t3.annotations);
      const aggregatablePropertyAnnotations = oAggregation === null || oAggregation === void 0 ? void 0 : (_oAggregation$Aggrega = oAggregation.AggregatableProperty) === null || _oAggregation$Aggrega === void 0 ? void 0 : (_oAggregation$Aggrega2 = _oAggregation$Aggrega.$target) === null || _oAggregation$Aggrega2 === void 0 ? void 0 : _oAggregation$Aggrega2.annotations;
      const measures = propertyAnnotations === null || propertyAnnotations === void 0 ? void 0 : propertyAnnotations.Measures;
      const aggregatablePropertyMeasures = aggregatablePropertyAnnotations === null || aggregatablePropertyAnnotations === void 0 ? void 0 : aggregatablePropertyAnnotations.Measures;
      const vUOM = _this.getUoM(measures, aggregatablePropertyMeasures);
      if (vUOM && customAggregates.some(function (custAgg) {
        return custAgg.qualifier === vUOM;
      })) {
        _this.bUoMHasCustomAggregate = true;
      } else {
        _this.bUoMHasCustomAggregate = false;
      }
      const propertyHidden = propertyAnnotations === null || propertyAnnotations === void 0 ? void 0 : (_propertyAnnotations$ = propertyAnnotations.UI) === null || _propertyAnnotations$ === void 0 ? void 0 : _propertyAnnotations$.Hidden;
      const aggregatablePropertyHidden = aggregatablePropertyAnnotations === null || aggregatablePropertyAnnotations === void 0 ? void 0 : (_aggregatableProperty = aggregatablePropertyAnnotations.UI) === null || _aggregatableProperty === void 0 ? void 0 : _aggregatableProperty.Hidden;
      const bHiddenMeasure = _this.getHiddenMeasure(propertyHidden, aggregatablePropertyHidden, _this.bCustomAggregate);
      const sDimensionType = ((_chartAnnotation8 = chartAnnotation) === null || _chartAnnotation8 === void 0 ? void 0 : _chartAnnotation8.Dimensions[0]) && ((_chartAnnotation9 = chartAnnotation) === null || _chartAnnotation9 === void 0 ? void 0 : _chartAnnotation9.Dimensions[0].$target) && chartAnnotation.Dimensions[0].$target.type;
      const sChartType = (_chartAnnotation10 = chartAnnotation) === null || _chartAnnotation10 === void 0 ? void 0 : _chartAnnotation10.ChartType;
      if (sDimensionType === "Edm.Date" || sDimensionType === "Edm.Time" || sDimensionType === "Edm.DateTimeOffset") {
        _this.showValueHelp = false;
      } else if (typeof bHiddenMeasure === "boolean" && bHiddenMeasure) {
        _this.showValueHelp = false;
      } else if (!(sChartType === "UI.ChartType/Bar" || sChartType === "UI.ChartType/Line")) {
        _this.showValueHelp = false;
      } else if (oProps.renderLineChart === "false" && sChartType === "UI.ChartType/Line") {
        _this.showValueHelp = false;
      } else {
        _this.showValueHelp = true;
      }
      _this.chartType = sChartType;
      _this.draftSupported = ModelHelper.isDraftSupported(mSettings.models.metaModel, (_oProps$contextPath = oProps.contextPath) === null || _oProps$contextPath === void 0 ? void 0 : _oProps$contextPath.getPath());
      /**
       * If the measure of the chart is marked as 'hidden', or if the chart type is invalid, or if the data type for the line chart is invalid,
       * the call is made to the InteractiveChartWithError fragment (using error-message related APIs, but avoiding batch calls)
       */
      if (typeof bHiddenMeasure === "boolean" && bHiddenMeasure || !validChartType || oProps.renderLineChart === "false") {
        _this.showError = true;
        _this.errorMessageTitle = bHiddenMeasure || !validChartType ? ResourceModel.getText("M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE") : ResourceModel.getText("M_VISUAL_FILTER_LINE_CHART_INVALID_DATATYPE");
        if (bHiddenMeasure) {
          _this.errorMessage = ResourceModel.getText("M_VISUAL_FILTER_HIDDEN_MEASURE", [sMeasure]);
        } else if (!validChartType) {
          _this.errorMessage = ResourceModel.getText("M_VISUAL_FILTER_UNSUPPORTED_CHART_TYPE");
        } else {
          _this.errorMessage = ResourceModel.getText("M_VISUAL_FILTER_LINE_CHART_UNSUPPORTED_DIMENSION");
        }
      }
      _this.chartMeasure = sMeasure;
      const chartPath = _this.sMetaPath + "Visualizations/0/$AnnotationPath";
      const chartAnnotationContext = (_this$metaPath3 = _this.metaPath) === null || _this$metaPath3 === void 0 ? void 0 : _this$metaPath3.getModel().createBindingContext(chartPath, chartAnnotation);
      _this._measureDimensionTitle = InteractiveChartHelper.getMeasureDimensionTitle(chartAnnotationContext, chartAnnotation, oProps.contextPath, _this.bCustomAggregate, _this.aggregateProperties);
      _this._toolTip = InteractiveChartHelper.getToolTip(chartAnnotationContext, chartAnnotation, oProps.contextPath, _this.sMetaPath, _this.bCustomAggregate, _this.aggregateProperties, _this.renderLineChart);
      _this._UoMVisibility = InteractiveChartHelper.getUoMVisiblity(chartAnnotation, _this.showError);
      _this._scaleUoMTitle = InteractiveChartHelper.getScaleUoMTitle(chartAnnotationContext, chartAnnotation, oProps.contextPath, _this.sMetaPath, _this.bCustomAggregate, _this.aggregateProperties);
      _this._filterCountBinding = InteractiveChartHelper.getfilterCountBinding(chartAnnotation);
      return _this;
    }
    _exports = VisualFilterBuildingBlock;
    var _proto = VisualFilterBuildingBlock.prototype;
    _proto.getAggregateProperties = function getAggregateProperties(aAggregations, sMeasure) {
      let oMatchedAggregate;
      if (!aAggregations) {
        return;
      }
      aAggregations.some(function (oAggregate) {
        if (oAggregate.Name === sMeasure) {
          oMatchedAggregate = oAggregate;
          return true;
        }
      });
      return oMatchedAggregate;
    };
    _proto.getUoM = function getUoM(measures, aggregatablePropertyMeasures) {
      var _vISOCurrency, _vUnit;
      let vISOCurrency = measures === null || measures === void 0 ? void 0 : measures.ISOCurrency;
      let vUnit = measures === null || measures === void 0 ? void 0 : measures.Unit;
      if (!vISOCurrency && !vUnit && aggregatablePropertyMeasures) {
        vISOCurrency = aggregatablePropertyMeasures.ISOCurrency;
        vUnit = aggregatablePropertyMeasures.Unit;
      }
      return ((_vISOCurrency = vISOCurrency) === null || _vISOCurrency === void 0 ? void 0 : _vISOCurrency.path) || ((_vUnit = vUnit) === null || _vUnit === void 0 ? void 0 : _vUnit.path);
    };
    _proto.getHiddenMeasure = function getHiddenMeasure(propertyHidden, aggregatablePropertyHidden, bCustomAggregate) {
      if (!bCustomAggregate && aggregatablePropertyHidden) {
        return aggregatablePropertyHidden.valueOf();
      } else {
        return propertyHidden === null || propertyHidden === void 0 ? void 0 : propertyHidden.valueOf();
      }
    };
    _proto.getRequired = function getRequired() {
      if (this.required) {
        return xml`<Label text="" width="0.5rem" required="true">
							<layoutData>
								<OverflowToolbarLayoutData priority="Never" />
							</layoutData>
						</Label>`;
      } else {
        return xml``;
      }
    };
    _proto.getUoMTitle = function getUoMTitle(showErrorExpression) {
      if (this._UoMVisibility) {
        return xml`<Title
							id="${generate([this.id, "ScaleUoMTitle"])}"
							visible="{= !${showErrorExpression}}"
							text="${this._scaleUoMTitle}"
							titleStyle="H6"
							level="H3"
							width="4.15rem"
						/>`;
      } else {
        return xml``;
      }
    };
    _proto.getValueHelp = function getValueHelp(showErrorExpression) {
      if (this.showValueHelp) {
        return xml`<ToolbarSpacer />
						<Button
							id="${generate([this.id, "VisualFilterValueHelpButton"])}"
							type="Transparent"
							ariaHasPopup="Dialog"
							text="${this._filterCountBinding}"
							press="VisualFilterRuntime.fireValueHelp"
							enabled="{= !${showErrorExpression}}"
						>
							<layoutData>
								<OverflowToolbarLayoutData priority="Never" />
							</layoutData>
						</Button>`;
      } else {
        return xml``;
      }
    };
    _proto.getInteractiveChartFragment = function getInteractiveChartFragment() {
      if (this.showError) {
        return xml`<core:Fragment fragmentName="sap.fe.macros.visualfilters.fragments.InteractiveChartWithError" type="XML" />`;
      } else if (this.chartType === "UI.ChartType/Bar") {
        return xml`<core:Fragment fragmentName="sap.fe.macros.visualfilters.fragments.InteractiveBarChart" type="XML" />`;
      } else {
        return xml`<core:Fragment fragmentName="sap.fe.macros.visualfilters.fragments.InteractiveLineChart" type="XML" />`;
      }
    };
    _proto.getTemplate = function getTemplate() {
      var _this$metaPath4;
      const id = generate([this.sMetaPath]);
      const showErrorExpression = "${internal>" + id + "/showError}";
      const sMetaPath = (_this$metaPath4 = this.metaPath) === null || _this$metaPath4 === void 0 ? void 0 : _this$metaPath4.getPath();
      return xml`
		<control:VisualFilter
		core:require="{VisualFilterRuntime: 'sap/fe/macros/visualfilters/VisualFilterRuntime'}"
		xmlns="sap.m"
		xmlns:control="sap.fe.core.controls.filterbar"
		xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
		xmlns:core="sap.ui.core"
		id="${this.id}"
		height="13rem"
		width="20.5rem"
		class="sapUiSmallMarginBeginEnd"
		customData:infoPath="${generate([sMetaPath])}"
	>
		<VBox height="2rem" class="sapUiSmallMarginBottom">
			<OverflowToolbar style="Clear">
				${this.getRequired()}
				<Title
					id="${generate([this.id, "MeasureDimensionTitle"])}"
					text="${this._measureDimensionTitle}"
					tooltip="${this._toolTip}"
					titleStyle="H6"
					level="H3"
					class="sapUiTinyMarginEnd sapUiNoMarginBegin"
				/>
				${this.getUoMTitle(showErrorExpression)}
				${this.getValueHelp(showErrorExpression)}
			</OverflowToolbar>
		</VBox>
		<VBox height="100%" width="100%">
			${this.getInteractiveChartFragment()}
		</VBox>
	</control:VisualFilter>`;
    };
    return VisualFilterBuildingBlock;
  }(BuildingBlockBase), (_descriptor = _applyDecoratedDescriptor(_class2.prototype, "id", [_dec2], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor2 = _applyDecoratedDescriptor(_class2.prototype, "title", [_dec3], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor3 = _applyDecoratedDescriptor(_class2.prototype, "contextPath", [_dec4], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor4 = _applyDecoratedDescriptor(_class2.prototype, "metaPath", [_dec5], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor5 = _applyDecoratedDescriptor(_class2.prototype, "outParameter", [_dec6], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor6 = _applyDecoratedDescriptor(_class2.prototype, "valuelistProperty", [_dec7], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor7 = _applyDecoratedDescriptor(_class2.prototype, "selectionVariantAnnotation", [_dec8], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor8 = _applyDecoratedDescriptor(_class2.prototype, "inParameters", [_dec9], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor9 = _applyDecoratedDescriptor(_class2.prototype, "multipleSelectionAllowed", [_dec10], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor10 = _applyDecoratedDescriptor(_class2.prototype, "required", [_dec11], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor11 = _applyDecoratedDescriptor(_class2.prototype, "showOverlayInitially", [_dec12], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor12 = _applyDecoratedDescriptor(_class2.prototype, "renderLineChart", [_dec13], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor13 = _applyDecoratedDescriptor(_class2.prototype, "requiredProperties", [_dec14], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor14 = _applyDecoratedDescriptor(_class2.prototype, "filterBarEntityType", [_dec15], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor15 = _applyDecoratedDescriptor(_class2.prototype, "showError", [_dec16], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor16 = _applyDecoratedDescriptor(_class2.prototype, "chartMeasure", [_dec17], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor17 = _applyDecoratedDescriptor(_class2.prototype, "bUoMHasCustomAggregate", [_dec18], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor18 = _applyDecoratedDescriptor(_class2.prototype, "showValueHelp", [_dec19], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor19 = _applyDecoratedDescriptor(_class2.prototype, "bCustomAggregate", [_dec20], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor20 = _applyDecoratedDescriptor(_class2.prototype, "groupId", [_dec21], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor21 = _applyDecoratedDescriptor(_class2.prototype, "errorMessageTitle", [_dec22], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor22 = _applyDecoratedDescriptor(_class2.prototype, "errorMessage", [_dec23], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  }), _descriptor23 = _applyDecoratedDescriptor(_class2.prototype, "draftSupported", [_dec24], {
    configurable: true,
    enumerable: true,
    writable: true,
    initializer: null
  })), _class2)) || _class);
  _exports = VisualFilterBuildingBlock;
  return _exports;
}, false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/visualfilters/VisualFilterBuildingBlock", ["sap/base/Log","sap/fe/core/buildingBlocks/BuildingBlock","sap/fe/core/buildingBlocks/BuildingBlockRuntime","sap/fe/core/converters/helpers/Aggregation","sap/fe/core/converters/MetaModelConverter","sap/fe/core/helpers/ModelHelper","sap/fe/core/helpers/StableIdHelper","../ResourceModel","./InteractiveChartHelper"],function(e,t,r,i,a,l,o,n,u){"use strict";var s,g,p,c,d,f,m,b,h,v,y,M,P,T,w,C,A,V,E,I,_,U,x,D,z,S,H,B,L,O,$,F,R,N,q,j,k,X,Y,G,W,J,K,Q,Z,ee,te,re,ie;var ae={};var le=o.generate;var oe=a.getInvolvedDataModelObjects;var ne=i.AggregationHelper;var ue=r.xml;var se=t.defineBuildingBlock;var ge=t.BuildingBlockBase;var pe=t.blockAttribute;function ce(e,t,r,i){if(!r)return;Object.defineProperty(e,t,{enumerable:r.enumerable,configurable:r.configurable,writable:r.writable,value:r.initializer?r.initializer.call(i):void 0})}function de(e){if(e===void 0){throw new ReferenceError("this hasn't been initialised - super() hasn't been called")}return e}function fe(e,t){e.prototype=Object.create(t.prototype);e.prototype.constructor=e;me(e,t)}function me(e,t){me=Object.setPrototypeOf?Object.setPrototypeOf.bind():function e(t,r){t.__proto__=r;return t};return me(e,t)}function be(e,t,r,i,a){var l={};Object.keys(i).forEach(function(e){l[e]=i[e]});l.enumerable=!!l.enumerable;l.configurable=!!l.configurable;if("value"in l||l.initializer){l.writable=true}l=r.slice().reverse().reduce(function(r,i){return i(e,t,r)||r},l);if(a&&l.initializer!==void 0){l.value=l.initializer?l.initializer.call(a):void 0;l.initializer=undefined}if(l.initializer===void 0){Object.defineProperty(e,t,l);l=null}return l}function he(e,t){throw new Error("Decorating class property failed. Please ensure that "+"proposal-class-properties is enabled and runs after the decorators transform.")}let ve=(s=se({name:"VisualFilter",namespace:"sap.fe.macros"}),g=pe({type:"string"}),p=pe({type:"string",defaultValue:""}),c=pe({type:"sap.ui.model.Context",required:true,$kind:["EntitySet","NavigationProperty"]}),d=pe({type:"sap.ui.model.Context"}),f=pe({type:"string"}),m=pe({type:"string"}),b=pe({type:"sap.ui.model.Context"}),h=pe({type:"sap.ui.model.Context"}),v=pe({type:"boolean"}),y=pe({type:"boolean"}),M=pe({type:"boolean"}),P=pe({type:"string"}),T=pe({type:"string"}),w=pe({type:"sap.ui.model.Context"}),C=pe({type:"boolean"}),A=pe({type:"string"}),V=pe({type:"boolean"}),E=pe({type:"boolean"}),I=pe({type:"boolean",defaultValue:false}),_=pe({type:"string",defaultValue:"$auto.visualFilters"}),U=pe({type:"string"}),x=pe({type:"string"}),D=pe({type:"boolean"}),s(z=(S=function(t){fe(r,t);function r(r,i,a){var o,s,g,p,c,d,f,m,b,h,v,y,M,P,T,w,C,A,V,E,I,_;var U;U=t.call(this,r,i,a)||this;ce(U,"id",H,de(U));ce(U,"title",B,de(U));ce(U,"contextPath",L,de(U));ce(U,"metaPath",O,de(U));ce(U,"outParameter",$,de(U));ce(U,"valuelistProperty",F,de(U));ce(U,"selectionVariantAnnotation",R,de(U));ce(U,"inParameters",N,de(U));ce(U,"multipleSelectionAllowed",q,de(U));ce(U,"required",j,de(U));ce(U,"showOverlayInitially",k,de(U));ce(U,"renderLineChart",X,de(U));ce(U,"requiredProperties",Y,de(U));ce(U,"filterBarEntityType",G,de(U));ce(U,"showError",W,de(U));ce(U,"chartMeasure",J,de(U));ce(U,"bUoMHasCustomAggregate",K,de(U));ce(U,"showValueHelp",Q,de(U));ce(U,"bCustomAggregate",Z,de(U));ce(U,"groupId",ee,de(U));ce(U,"errorMessageTitle",te,de(U));ce(U,"errorMessage",re,de(U));ce(U,"draftSupported",ie,de(U));U.groupId="$auto.visualFilters";U.inParameters=r.inParameters;U.metaPath=r.metaPath;U.sMetaPath=(o=U.metaPath)===null||o===void 0?void 0:o.getPath();const x=oe(U.metaPath,r.contextPath);const D=U.getConverterContext(x,undefined,a);const z=new ne(D.getEntityType(),D);const S=z.getCustomAggregateDefinitions();const ae=x.targetObject;let le;let ue;const se=ae&&ae.Visualizations;if(se){for(let e=0;e<se.length;e++){const t=ae.Visualizations[e]&&ae.Visualizations[e].value;le=D.getEntityTypeAnnotation(t)&&D.getEntityTypeAnnotation(t).annotation}}let ge,pe=[];if((s=le)!==null&&s!==void 0&&(g=s.Measures)!==null&&g!==void 0&&g.length){pe=S.filter(function(e){var t;return e.qualifier===((t=le)===null||t===void 0?void 0:t.Measures[0].value)});ue=pe.length>0?pe[0].qualifier:le.Measures[0].value;ge=z.getAggregatedProperties("AggregatedProperties")[0]}if(ge&&ge.length>0&&!((p=le)!==null&&p!==void 0&&p.DynamicMeasures)&&pe.length===0&&(c=le)!==null&&c!==void 0&&c.Measures&&((d=le)===null||d===void 0?void 0:d.Measures.length)>0){e.warning("The transformational aggregate measures are configured as Chart.Measures but should be configured as Chart.DynamicMeasures instead. Please check the SAP Help documentation and correct the configuration accordingly.")}if((f=le)!==null&&f!==void 0&&f.DynamicMeasures){if(pe.length===0){ue=D.getConverterContextFor(D.getAbsoluteAnnotationPath(le.DynamicMeasures[0].value)).getDataModelObjectPath().targetObject.Name;ge=z.getAggregatedProperties("AggregatedProperty")}else{e.warning("The dynamic measures have been ignored as visual filters can deal with only 1 measure and the first (custom aggregate) measure defined under Chart.Measures is considered.")}}let fe;if(le){if(le.ChartType==="UI.ChartType/Line"||le.ChartType==="UI.ChartType/Bar"){fe=true}else{fe=false}}if(S.some(function(e){return e.qualifier===ue})){U.bCustomAggregate=true}let me;if(r.selectionVariantAnnotation){var be;const e=(be=U.metaPath)===null||be===void 0?void 0:be.getModel().createBindingContext(r.selectionVariantAnnotation.getPath());me=e&&oe(e,r.contextPath).targetObject}let he=0;if(me&&!r.multipleSelectionAllowed){for(let e=0;e<me.SelectOptions.length;e++){var ve;if(me.SelectOptions[e].PropertyName.value===((ve=le)===null||ve===void 0?void 0:ve.Dimensions[0].value)){he++;if(he>1){throw new Error("Multiple SelectOptions for FilterField having SingleValue Allowed Expression")}}}}const ye=U.getAggregateProperties(ge,ue);if(ye){U.aggregateProperties=ye}const Me=((m=se[0])===null||m===void 0?void 0:(b=m.$target)===null||b===void 0?void 0:b.Measures)&&((h=se[0])===null||h===void 0?void 0:(v=h.$target)===null||v===void 0?void 0:(y=v.Measures[0])===null||y===void 0?void 0:(M=y.$target)===null||M===void 0?void 0:M.annotations);const Pe=ye===null||ye===void 0?void 0:(P=ye.AggregatableProperty)===null||P===void 0?void 0:(T=P.$target)===null||T===void 0?void 0:T.annotations;const Te=Me===null||Me===void 0?void 0:Me.Measures;const we=Pe===null||Pe===void 0?void 0:Pe.Measures;const Ce=U.getUoM(Te,we);if(Ce&&S.some(function(e){return e.qualifier===Ce})){U.bUoMHasCustomAggregate=true}else{U.bUoMHasCustomAggregate=false}const Ae=Me===null||Me===void 0?void 0:(w=Me.UI)===null||w===void 0?void 0:w.Hidden;const Ve=Pe===null||Pe===void 0?void 0:(C=Pe.UI)===null||C===void 0?void 0:C.Hidden;const Ee=U.getHiddenMeasure(Ae,Ve,U.bCustomAggregate);const Ie=((A=le)===null||A===void 0?void 0:A.Dimensions[0])&&((V=le)===null||V===void 0?void 0:V.Dimensions[0].$target)&&le.Dimensions[0].$target.type;const _e=(E=le)===null||E===void 0?void 0:E.ChartType;if(Ie==="Edm.Date"||Ie==="Edm.Time"||Ie==="Edm.DateTimeOffset"){U.showValueHelp=false}else if(typeof Ee==="boolean"&&Ee){U.showValueHelp=false}else if(!(_e==="UI.ChartType/Bar"||_e==="UI.ChartType/Line")){U.showValueHelp=false}else if(r.renderLineChart==="false"&&_e==="UI.ChartType/Line"){U.showValueHelp=false}else{U.showValueHelp=true}U.chartType=_e;U.draftSupported=l.isDraftSupported(a.models.metaModel,(I=r.contextPath)===null||I===void 0?void 0:I.getPath());if(typeof Ee==="boolean"&&Ee||!fe||r.renderLineChart==="false"){U.showError=true;U.errorMessageTitle=Ee||!fe?n.getText("M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE"):n.getText("M_VISUAL_FILTER_LINE_CHART_INVALID_DATATYPE");if(Ee){U.errorMessage=n.getText("M_VISUAL_FILTER_HIDDEN_MEASURE",[ue])}else if(!fe){U.errorMessage=n.getText("M_VISUAL_FILTER_UNSUPPORTED_CHART_TYPE")}else{U.errorMessage=n.getText("M_VISUAL_FILTER_LINE_CHART_UNSUPPORTED_DIMENSION")}}U.chartMeasure=ue;const Ue=U.sMetaPath+"Visualizations/0/$AnnotationPath";const xe=(_=U.metaPath)===null||_===void 0?void 0:_.getModel().createBindingContext(Ue,le);U._measureDimensionTitle=u.getMeasureDimensionTitle(xe,le,r.contextPath,U.bCustomAggregate,U.aggregateProperties);U._toolTip=u.getToolTip(xe,le,r.contextPath,U.sMetaPath,U.bCustomAggregate,U.aggregateProperties,U.renderLineChart);U._UoMVisibility=u.getUoMVisiblity(le,U.showError);U._scaleUoMTitle=u.getScaleUoMTitle(xe,le,r.contextPath,U.sMetaPath,U.bCustomAggregate,U.aggregateProperties);U._filterCountBinding=u.getfilterCountBinding(le);return U}ae=r;var i=r.prototype;i.getAggregateProperties=function e(t,r){let i;if(!t){return}t.some(function(e){if(e.Name===r){i=e;return true}});return i};i.getUoM=function e(t,r){var i,a;let l=t===null||t===void 0?void 0:t.ISOCurrency;let o=t===null||t===void 0?void 0:t.Unit;if(!l&&!o&&r){l=r.ISOCurrency;o=r.Unit}return((i=l)===null||i===void 0?void 0:i.path)||((a=o)===null||a===void 0?void 0:a.path)};i.getHiddenMeasure=function e(t,r,i){if(!i&&r){return r.valueOf()}else{return t===null||t===void 0?void 0:t.valueOf()}};i.getRequired=function e(){if(this.required){return ue`<Label text="" width="0.5rem" required="true">
							<layoutData>
								<OverflowToolbarLayoutData priority="Never" />
							</layoutData>
						</Label>`}else{return ue``}};i.getUoMTitle=function e(t){if(this._UoMVisibility){return ue`<Title
							id="${le([this.id,"ScaleUoMTitle"])}"
							visible="{= !${t}}"
							text="${this._scaleUoMTitle}"
							titleStyle="H6"
							level="H3"
							width="4.15rem"
						/>`}else{return ue``}};i.getValueHelp=function e(t){if(this.showValueHelp){return ue`<ToolbarSpacer />
						<Button
							id="${le([this.id,"VisualFilterValueHelpButton"])}"
							type="Transparent"
							ariaHasPopup="Dialog"
							text="${this._filterCountBinding}"
							press="VisualFilterRuntime.fireValueHelp"
							enabled="{= !${t}}"
						>
							<layoutData>
								<OverflowToolbarLayoutData priority="Never" />
							</layoutData>
						</Button>`}else{return ue``}};i.getInteractiveChartFragment=function e(){if(this.showError){return ue`<core:Fragment fragmentName="sap.fe.macros.visualfilters.fragments.InteractiveChartWithError" type="XML" />`}else if(this.chartType==="UI.ChartType/Bar"){return ue`<core:Fragment fragmentName="sap.fe.macros.visualfilters.fragments.InteractiveBarChart" type="XML" />`}else{return ue`<core:Fragment fragmentName="sap.fe.macros.visualfilters.fragments.InteractiveLineChart" type="XML" />`}};i.getTemplate=function e(){var t;const r=le([this.sMetaPath]);const i="${internal>"+r+"/showError}";const a=(t=this.metaPath)===null||t===void 0?void 0:t.getPath();return ue`
		<control:VisualFilter
		core:require="{VisualFilterRuntime: 'sap/fe/macros/visualfilters/VisualFilterRuntime'}"
		xmlns="sap.m"
		xmlns:control="sap.fe.core.controls.filterbar"
		xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
		xmlns:core="sap.ui.core"
		id="${this.id}"
		height="13rem"
		width="20.5rem"
		class="sapUiSmallMarginBeginEnd"
		customData:infoPath="${le([a])}"
	>
		<VBox height="2rem" class="sapUiSmallMarginBottom">
			<OverflowToolbar style="Clear">
				${this.getRequired()}
				<Title
					id="${le([this.id,"MeasureDimensionTitle"])}"
					text="${this._measureDimensionTitle}"
					tooltip="${this._toolTip}"
					titleStyle="H6"
					level="H3"
					class="sapUiTinyMarginEnd sapUiNoMarginBegin"
				/>
				${this.getUoMTitle(i)}
				${this.getValueHelp(i)}
			</OverflowToolbar>
		</VBox>
		<VBox height="100%" width="100%">
			${this.getInteractiveChartFragment()}
		</VBox>
	</control:VisualFilter>`};return r}(ge),H=be(S.prototype,"id",[g],{configurable:true,enumerable:true,writable:true,initializer:null}),B=be(S.prototype,"title",[p],{configurable:true,enumerable:true,writable:true,initializer:null}),L=be(S.prototype,"contextPath",[c],{configurable:true,enumerable:true,writable:true,initializer:null}),O=be(S.prototype,"metaPath",[d],{configurable:true,enumerable:true,writable:true,initializer:null}),$=be(S.prototype,"outParameter",[f],{configurable:true,enumerable:true,writable:true,initializer:null}),F=be(S.prototype,"valuelistProperty",[m],{configurable:true,enumerable:true,writable:true,initializer:null}),R=be(S.prototype,"selectionVariantAnnotation",[b],{configurable:true,enumerable:true,writable:true,initializer:null}),N=be(S.prototype,"inParameters",[h],{configurable:true,enumerable:true,writable:true,initializer:null}),q=be(S.prototype,"multipleSelectionAllowed",[v],{configurable:true,enumerable:true,writable:true,initializer:null}),j=be(S.prototype,"required",[y],{configurable:true,enumerable:true,writable:true,initializer:null}),k=be(S.prototype,"showOverlayInitially",[M],{configurable:true,enumerable:true,writable:true,initializer:null}),X=be(S.prototype,"renderLineChart",[P],{configurable:true,enumerable:true,writable:true,initializer:null}),Y=be(S.prototype,"requiredProperties",[T],{configurable:true,enumerable:true,writable:true,initializer:null}),G=be(S.prototype,"filterBarEntityType",[w],{configurable:true,enumerable:true,writable:true,initializer:null}),W=be(S.prototype,"showError",[C],{configurable:true,enumerable:true,writable:true,initializer:null}),J=be(S.prototype,"chartMeasure",[A],{configurable:true,enumerable:true,writable:true,initializer:null}),K=be(S.prototype,"bUoMHasCustomAggregate",[V],{configurable:true,enumerable:true,writable:true,initializer:null}),Q=be(S.prototype,"showValueHelp",[E],{configurable:true,enumerable:true,writable:true,initializer:null}),Z=be(S.prototype,"bCustomAggregate",[I],{configurable:true,enumerable:true,writable:true,initializer:null}),ee=be(S.prototype,"groupId",[_],{configurable:true,enumerable:true,writable:true,initializer:null}),te=be(S.prototype,"errorMessageTitle",[U],{configurable:true,enumerable:true,writable:true,initializer:null}),re=be(S.prototype,"errorMessage",[x],{configurable:true,enumerable:true,writable:true,initializer:null}),ie=be(S.prototype,"draftSupported",[D],{configurable:true,enumerable:true,writable:true,initializer:null}),S))||z);ae=ve;return ae},false);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/visualfilters/VisualFilterRuntime-dbg", ["sap/base/Log", "sap/fe/core/controls/filterbar/utils/VisualFilterUtils", "sap/fe/core/templating/FilterHelper", "sap/fe/core/type/TypeUtil", "sap/fe/macros/CommonHelper", "sap/fe/macros/filter/FilterUtils", "sap/ui/core/Core", "sap/ui/mdc/condition/Condition", "sap/ui/mdc/util/FilterUtil", "sap/ui/model/Filter", "sap/ui/model/FilterOperator"], function (Log, VisualFilterUtils, FilterHelper, TypeUtil, CommonHelper, FilterUtils, Core, Condition, MdcFilterUtil, Filter, FilterOperator) {
  "use strict";

  var getFiltersConditionsFromSelectionVariant = FilterHelper.getFiltersConditionsFromSelectionVariant;
  /**
   * Static class used by Visual Filter during runtime
   *
   * @private
   * @experimental This module is only for internal/experimental use!
   */
  const VisualFilterRuntime = {
    selectionChanged(oEvent) {
      const oInteractiveChart = oEvent.getSource();
      const sOutParameter = oInteractiveChart.data("outParameter");
      const sValueListProperty = oInteractiveChart.data("valuelistProperty");
      const sDimension = oInteractiveChart.data("dimension");
      const sDimensionText = oInteractiveChart.data("dimensionText");
      const bMultipleSelectionAllowed = oInteractiveChart.data("multipleSelectionAllowed");
      const sDimensionType = oInteractiveChart.data("dimensionType");
      const oSelectedAggregation = oEvent.getParameter("bar") || oEvent.getParameter("point") || oEvent.getParameter("segment");
      const bIsAggregationSelected = oEvent.getParameter("selected");
      const oConditionModel = oInteractiveChart.getModel("$field");
      let aConditions = oConditionModel.getProperty("/conditions");
      if (!sOutParameter || sValueListProperty !== sDimension) {
        Log.error("VisualFilter: Cannot sync values with regular filter as out parameter is not configured properly!");
      } else {
        let sSelectionChangedValue = oSelectedAggregation.getBindingContext().getObject(sValueListProperty);
        if (sSelectionChangedValue) {
          let sSelectionChangedValueText = oSelectedAggregation.getBindingContext().getObject(sDimensionText);
          if (typeof sSelectionChangedValueText !== "string" && !(sSelectionChangedValueText instanceof String)) {
            sSelectionChangedValueText = undefined;
          }
          // if selection has been done on the aggregation then add to conditions
          if (bIsAggregationSelected) {
            if (bMultipleSelectionAllowed === "false") {
              aConditions = [];
            }
            if (sDimensionType === "Edm.DateTimeOffset") {
              sSelectionChangedValue = VisualFilterUtils._parseDateTime(sSelectionChangedValue);
            }
            const oCondition = Condition.createItemCondition(sSelectionChangedValue, sSelectionChangedValueText || undefined, {}, {});
            aConditions.push(oCondition);
          } else {
            // because selection was removed on the aggregation hence remove this from conditions
            aConditions = aConditions.filter(function (oCondition) {
              if (sDimensionType === "Edm.DateTimeOffset") {
                return oCondition.operator !== "EQ" || Date.parse(oCondition.values[0]) !== Date.parse(sSelectionChangedValue);
              }
              return oCondition.operator !== "EQ" || oCondition.values[0] !== sSelectionChangedValue;
            });
          }
          oConditionModel.setProperty("/conditions", aConditions);
        } else {
          Log.error("VisualFilter: No vaue found for the outParameter");
        }
      }
    },
    // THIS IS A FORMATTER
    getAggregationSelected(aConditions) {
      var _this$getBindingConte;
      const aSelectableValues = [];
      if (!this.getBindingContext()) {
        return;
      }
      for (let i = 0; i <= aConditions.length - 1; i++) {
        const oCondition = aConditions[i];
        // 1. get conditions with EQ operator (since visual filter can only deal with EQ operators) and get their values
        if (oCondition.operator === "EQ") {
          aSelectableValues.push(oCondition.values[0]);
        }
      }

      // access the interactive chart from the control.
      const oInteractiveChart = this.getParent();
      const sDimension = oInteractiveChart.data("dimension");
      const sDimensionType = oInteractiveChart.data("dimensionType");
      let sDimensionValue = (_this$getBindingConte = this.getBindingContext()) === null || _this$getBindingConte === void 0 ? void 0 : _this$getBindingConte.getObject(sDimension);
      if (sDimensionType === "Edm.DateTimeOffset") {
        sDimensionValue = VisualFilterUtils._parseDateTime(sDimensionValue);
      }
      return aSelectableValues.indexOf(sDimensionValue) > -1;
    },
    // THIS IS A FORMATTER
    getFiltersFromConditions() {
      var _oInteractiveChart$ge, _oInteractiveChart$ge2, _oInteractiveChart$ge3;
      for (var _len = arguments.length, aArguments = new Array(_len), _key = 0; _key < _len; _key++) {
        aArguments[_key] = arguments[_key];
      }
      const oInteractiveChart = this.getParent();
      const oFilterBar = (_oInteractiveChart$ge = oInteractiveChart.getParent()) === null || _oInteractiveChart$ge === void 0 ? void 0 : (_oInteractiveChart$ge2 = _oInteractiveChart$ge.getParent()) === null || _oInteractiveChart$ge2 === void 0 ? void 0 : (_oInteractiveChart$ge3 = _oInteractiveChart$ge2.getParent()) === null || _oInteractiveChart$ge3 === void 0 ? void 0 : _oInteractiveChart$ge3.getParent();
      const aInParameters = oInteractiveChart.data("inParameters").customData;
      const bIsDraftSupported = oInteractiveChart.data("draftSupported") === "true";
      const aPropertyInfoSet = oFilterBar.getPropertyInfo();
      const mConditions = {};
      const aValueListPropertyInfoSet = [];
      let oFilters;
      let aFilters = [];
      const aParameters = oInteractiveChart.data("parameters").customData;
      const oSelectionVariantAnnotation = CommonHelper.parseCustomData(oInteractiveChart.data("selectionVariantAnnotation"));
      const oInteractiveChartListBinding = oInteractiveChart.getBinding("bars") || oInteractiveChart.getBinding("points") || oInteractiveChart.getBinding("segments");
      const sPath = oInteractiveChartListBinding.getPath();
      const oMetaModel = oInteractiveChart.getModel().getMetaModel();
      const sEntitySetPath = oInteractiveChartListBinding.getPath();
      const filterConditions = getFiltersConditionsFromSelectionVariant(sEntitySetPath, oMetaModel, oSelectionVariantAnnotation, VisualFilterUtils.getCustomConditions.bind(VisualFilterUtils));
      for (const i in aPropertyInfoSet) {
        aPropertyInfoSet[i].typeConfig = TypeUtil.getTypeConfig(aPropertyInfoSet[i].dataType, {}, {});
      }
      const oSelectionVariantConditions = VisualFilterUtils.convertFilterCondions(filterConditions);
      // aInParameters and the bindings to in parameters are in the same order so we can rely on it to create our conditions
      Object.keys(oSelectionVariantConditions).forEach(function (sKey) {
        mConditions[sKey] = oSelectionVariantConditions[sKey];
        //fetch localDataProperty if selection variant key is based on vaue list property
        const inParameterForKey = aInParameters.find(function (inParameter) {
          return inParameter.valueListProperty === sKey;
        });
        const localDataProperty = inParameterForKey ? inParameterForKey.localDataProperty : sKey;
        if (!aParameters || aParameters && aParameters.indexOf(sKey) === -1) {
          for (const i in aPropertyInfoSet) {
            const propertyInfoSet = aPropertyInfoSet[i];
            if (localDataProperty === propertyInfoSet.name) {
              if (propertyInfoSet.typeConfig.baseType === "DateTime") {
                if (mConditions[sKey]) {
                  mConditions[sKey].forEach(function (condition) {
                    condition.values[0] = VisualFilterUtils._formatDateTime(condition.values[0]);
                  });
                }
              }
              aValueListPropertyInfoSet.push({
                name: sKey,
                typeConfig: propertyInfoSet.typeConfig
              });
            }
          }
        }
      });
      aInParameters.forEach(function (oInParameter, index) {
        if (aArguments[index].length > 0) {
          // store conditions with value list property since we are filtering on the value list collection path
          mConditions[oInParameter.valueListProperty] = aArguments[index];
          if (!aParameters || aParameters && aParameters.indexOf(oInParameter.valueListProperty) === -1) {
            // aPropertyInfoSet is list of properties from the filter bar but we need to create conditions for the value list
            // which could have a different collectionPath.
            // Only typeConfig from aPropertyInfoSet is required for getting the converted filters from conditions
            // so we update aPropertyInfoSet to have the valueListProperties only
            // This way conditions will be converted to sap.ui.model.Filter for the value list
            // This works because for in parameter mapping the property from the main entity type should be of the same type as the value list entity type
            // TODO: Follow up with MDC to check if they can provide a clean api to convert conditions into filters
            for (const i in aPropertyInfoSet) {
              // store conditions with value list property since we are filtering on the value list collection path
              const propertyInfoSet = aPropertyInfoSet[i];
              if (propertyInfoSet.name === oInParameter.localDataProperty) {
                if (propertyInfoSet.typeConfig.baseType === "DateTime") {
                  if (mConditions[oInParameter.valueListProperty]) {
                    mConditions[oInParameter.valueListProperty].forEach(function (condition) {
                      condition.values[0] = VisualFilterUtils._formatDateTime(condition.values[0]);
                    });
                  }
                }
                aValueListPropertyInfoSet.push({
                  name: oInParameter.valueListProperty,
                  typeConfig: propertyInfoSet.typeConfig
                });
              }
            }
          }
        }
      });
      const oInternalModelContext = oInteractiveChart.getBindingContext("internal");
      const sInfoPath = oInteractiveChart.data("infoPath");
      let bEnableBinding;
      const oResourceBundle = Core.getLibraryResourceBundle("sap.fe.macros");
      const aRequiredProperties = CommonHelper.parseCustomData(oInteractiveChart.data("requiredProperties"));
      if (aRequiredProperties.length) {
        const aConditions = Object.keys(mConditions) || [];
        const aNotMatchedConditions = [];
        aRequiredProperties.forEach(function (requiredPropertyPath) {
          if (aConditions.indexOf(requiredPropertyPath) === -1) {
            aNotMatchedConditions.push(requiredPropertyPath);
          }
        });
        if (!aNotMatchedConditions.length) {
          bEnableBinding = oInternalModelContext.getProperty(`${sInfoPath}/showError`);
          oInternalModelContext.setProperty(sInfoPath, {
            errorMessageTitle: "",
            errorMessage: "",
            showError: false
          });
        } else if (aNotMatchedConditions.length > 1) {
          oInternalModelContext.setProperty(sInfoPath, {
            errorMessageTitle: oResourceBundle.getText("M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE"),
            errorMessage: oResourceBundle.getText("M_VISUAL_FILTERS_PROVIDE_FILTER_VAL_MULTIPLEVF"),
            showError: true
          });
          return;
        } else {
          const sLabel = oMetaModel.getObject(`${sEntitySetPath}/${aNotMatchedConditions[0]}@com.sap.vocabularies.Common.v1.Label`) || aNotMatchedConditions[0];
          oInternalModelContext.setProperty(sInfoPath, {
            errorMessageTitle: oResourceBundle.getText("M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE"),
            errorMessage: oResourceBundle.getText("M_VISUAL_FILTERS_PROVIDE_FILTER_VAL_SINGLEVF", sLabel),
            showError: true
          });
          return;
        }
      } else {
        bEnableBinding = oInternalModelContext.getProperty(`${sInfoPath}/showError`);
        oInternalModelContext.setProperty(sInfoPath, {
          errorMessageTitle: "",
          errorMessage: "",
          showError: false
        });
      }
      const sFilterEntityName = oFilterBar.data("entityType").split("/")[1];
      const sChartEntityName = sPath.split("/")[1].split("(")[0];
      if (aParameters && aParameters.length && sFilterEntityName === sChartEntityName) {
        const sBindingPath = bEnableBinding ? FilterUtils.getBindingPathForParameters(oFilterBar, mConditions, aPropertyInfoSet, aParameters) : undefined;
        if (sBindingPath) {
          oInteractiveChartListBinding.sPath = sBindingPath;
        }
      }
      if (aParameters && aParameters.length) {
        //Remove parameters from mConditions since it should not be a part of $filter
        aParameters.forEach(function (parameter) {
          if (mConditions[parameter]) {
            delete mConditions[parameter];
          }
        });
      }

      //Only keep the actual value of filters and remove type informations
      Object.keys(mConditions).forEach(function (key) {
        mConditions[key].forEach(function (condition) {
          if (condition.values.length > 1) {
            condition.values = condition.values.slice(0, 1);
          }
        });
      });
      // On InitialLoad when initiallayout is visual, aPropertyInfoSet is always empty and we cannot get filters from MDCFilterUtil.
      // Also when SVQualifier is there then we should not change the listbinding filters to empty as we are not getting filters from MDCFilterUtil but
      // instead we need to not call listbinding.filter and use the template time binding itself.
      if (Object.keys(mConditions).length > 0 && aValueListPropertyInfoSet.length) {
        oFilters = MdcFilterUtil.getFilterInfo(oFilterBar, mConditions, aValueListPropertyInfoSet, []).filters;
        if (oFilters) {
          if (!oFilters.aFilters) {
            aFilters.push(oFilters);
          } else if (oFilters.aFilters) {
            aFilters = oFilters.aFilters;
          }
        }
      }
      if (bIsDraftSupported) {
        aFilters.push(new Filter("IsActiveEntity", FilterOperator.EQ, true));
      }
      if (aFilters && aFilters.length > 0) {
        oInteractiveChartListBinding.filter(aFilters);
      } else if (!Object.keys(mConditions).length) {
        oInteractiveChartListBinding.filter();
      }
      // update the interactive chart binding
      if (bEnableBinding && oInteractiveChartListBinding.isSuspended()) {
        oInteractiveChartListBinding.resume();
      }
      return aFilters;
    },
    getFilterCounts(oConditions) {
      if (oConditions.length > 0) {
        return `(${oConditions.length})`;
      } else {
        return undefined;
      }
    },
    scaleVisualFilterValue(oValue, scaleFactor, numberOfFractionalDigits, currency, oRawValue) {
      // ScaleFactor if defined is priority for formatting
      if (scaleFactor) {
        return VisualFilterUtils.getFormattedNumber(oRawValue, scaleFactor, numberOfFractionalDigits);
        // If Scale Factor is not defined, use currency formatting
      } else if (currency) {
        return VisualFilterUtils.getFormattedNumber(oRawValue, undefined, undefined, currency);
        // No ScaleFactor and no Currency, use numberOfFractionalDigits defined in DataPoint
      } else if (numberOfFractionalDigits > 0) {
        // Number of fractional digits shall not exceed 2, unless required by currency
        numberOfFractionalDigits = numberOfFractionalDigits > 2 ? 2 : numberOfFractionalDigits;
        return VisualFilterUtils.getFormattedNumber(oRawValue, undefined, numberOfFractionalDigits);
      } else {
        return oValue;
      }
    },
    fireValueHelp(oEvent) {
      oEvent.getSource().getParent().getParent().getParent().fireValueHelpRequest();
    }
  };

  /**
   * @global
   */
  return VisualFilterRuntime;
}, true);
/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.predefine("sap/fe/macros/visualfilters/VisualFilterRuntime", ["sap/base/Log","sap/fe/core/controls/filterbar/utils/VisualFilterUtils","sap/fe/core/templating/FilterHelper","sap/fe/core/type/TypeUtil","sap/fe/macros/CommonHelper","sap/fe/macros/filter/FilterUtils","sap/ui/core/Core","sap/ui/mdc/condition/Condition","sap/ui/mdc/util/FilterUtil","sap/ui/model/Filter","sap/ui/model/FilterOperator"],function(e,t,r,n,o,i,s,a,l,f,c){"use strict";var u=r.getFiltersConditionsFromSelectionVariant;const g={selectionChanged(r){const n=r.getSource();const o=n.data("outParameter");const i=n.data("valuelistProperty");const s=n.data("dimension");const l=n.data("dimensionText");const f=n.data("multipleSelectionAllowed");const c=n.data("dimensionType");const u=r.getParameter("bar")||r.getParameter("point")||r.getParameter("segment");const g=r.getParameter("selected");const d=n.getModel("$field");let p=d.getProperty("/conditions");if(!o||i!==s){e.error("VisualFilter: Cannot sync values with regular filter as out parameter is not configured properly!")}else{let r=u.getBindingContext().getObject(i);if(r){let e=u.getBindingContext().getObject(l);if(typeof e!=="string"&&!(e instanceof String)){e=undefined}if(g){if(f==="false"){p=[]}if(c==="Edm.DateTimeOffset"){r=t._parseDateTime(r)}const n=a.createItemCondition(r,e||undefined,{},{});p.push(n)}else{p=p.filter(function(e){if(c==="Edm.DateTimeOffset"){return e.operator!=="EQ"||Date.parse(e.values[0])!==Date.parse(r)}return e.operator!=="EQ"||e.values[0]!==r})}d.setProperty("/conditions",p)}else{e.error("VisualFilter: No vaue found for the outParameter")}}},getAggregationSelected(e){var r;const n=[];if(!this.getBindingContext()){return}for(let t=0;t<=e.length-1;t++){const r=e[t];if(r.operator==="EQ"){n.push(r.values[0])}}const o=this.getParent();const i=o.data("dimension");const s=o.data("dimensionType");let a=(r=this.getBindingContext())===null||r===void 0?void 0:r.getObject(i);if(s==="Edm.DateTimeOffset"){a=t._parseDateTime(a)}return n.indexOf(a)>-1},getFiltersFromConditions(){var e,r,a;for(var g=arguments.length,d=new Array(g),p=0;p<g;p++){d[p]=arguments[p]}const m=this.getParent();const h=(e=m.getParent())===null||e===void 0?void 0:(r=e.getParent())===null||r===void 0?void 0:(a=r.getParent())===null||a===void 0?void 0:a.getParent();const y=m.data("inParameters").customData;const P=m.data("draftSupported")==="true";const E=h.getPropertyInfo();const T={};const v=[];let F;let C=[];const L=m.data("parameters").customData;const _=o.parseCustomData(m.data("selectionVariantAnnotation"));const b=m.getBinding("bars")||m.getBinding("points")||m.getBinding("segments");const O=b.getPath();const S=m.getModel().getMetaModel();const I=b.getPath();const D=u(I,S,_,t.getCustomConditions.bind(t));for(const e in E){E[e].typeConfig=n.getTypeConfig(E[e].dataType,{},{})}const M=t.convertFilterCondions(D);Object.keys(M).forEach(function(e){T[e]=M[e];const r=y.find(function(t){return t.valueListProperty===e});const n=r?r.localDataProperty:e;if(!L||L&&L.indexOf(e)===-1){for(const r in E){const o=E[r];if(n===o.name){if(o.typeConfig.baseType==="DateTime"){if(T[e]){T[e].forEach(function(e){e.values[0]=t._formatDateTime(e.values[0])})}}v.push({name:e,typeConfig:o.typeConfig})}}}});y.forEach(function(e,r){if(d[r].length>0){T[e.valueListProperty]=d[r];if(!L||L&&L.indexOf(e.valueListProperty)===-1){for(const r in E){const n=E[r];if(n.name===e.localDataProperty){if(n.typeConfig.baseType==="DateTime"){if(T[e.valueListProperty]){T[e.valueListProperty].forEach(function(e){e.values[0]=t._formatDateTime(e.values[0])})}}v.push({name:e.valueListProperty,typeConfig:n.typeConfig})}}}}});const V=m.getBindingContext("internal");const R=m.data("infoPath");let x;const A=s.getLibraryResourceBundle("sap.fe.macros");const w=o.parseCustomData(m.data("requiredProperties"));if(w.length){const e=Object.keys(T)||[];const t=[];w.forEach(function(r){if(e.indexOf(r)===-1){t.push(r)}});if(!t.length){x=V.getProperty(`${R}/showError`);V.setProperty(R,{errorMessageTitle:"",errorMessage:"",showError:false})}else if(t.length>1){V.setProperty(R,{errorMessageTitle:A.getText("M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE"),errorMessage:A.getText("M_VISUAL_FILTERS_PROVIDE_FILTER_VAL_MULTIPLEVF"),showError:true});return}else{const e=S.getObject(`${I}/${t[0]}@com.sap.vocabularies.Common.v1.Label`)||t[0];V.setProperty(R,{errorMessageTitle:A.getText("M_VISUAL_FILTERS_ERROR_MESSAGE_TITLE"),errorMessage:A.getText("M_VISUAL_FILTERS_PROVIDE_FILTER_VAL_SINGLEVF",e),showError:true});return}}else{x=V.getProperty(`${R}/showError`);V.setProperty(R,{errorMessageTitle:"",errorMessage:"",showError:false})}const B=h.data("entityType").split("/")[1];const j=O.split("/")[1].split("(")[0];if(L&&L.length&&B===j){const e=x?i.getBindingPathForParameters(h,T,E,L):undefined;if(e){b.sPath=e}}if(L&&L.length){L.forEach(function(e){if(T[e]){delete T[e]}})}Object.keys(T).forEach(function(e){T[e].forEach(function(e){if(e.values.length>1){e.values=e.values.slice(0,1)}})});if(Object.keys(T).length>0&&v.length){F=l.getFilterInfo(h,T,v,[]).filters;if(F){if(!F.aFilters){C.push(F)}else if(F.aFilters){C=F.aFilters}}}if(P){C.push(new f("IsActiveEntity",c.EQ,true))}if(C&&C.length>0){b.filter(C)}else if(!Object.keys(T).length){b.filter()}if(x&&b.isSuspended()){b.resume()}return C},getFilterCounts(e){if(e.length>0){return`(${e.length})`}else{return undefined}},scaleVisualFilterValue(e,r,n,o,i){if(r){return t.getFormattedNumber(i,r,n)}else if(o){return t.getFormattedNumber(i,undefined,undefined,o)}else if(n>0){n=n>2?2:n;return t.getFormattedNumber(i,undefined,n)}else{return e}},fireValueHelp(e){e.getSource().getParent().getParent().getParent().fireValueHelpRequest()}};return g},true);
sap.ui.require.preload({
	"sap/fe/macros/contact/ContactQuickView.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\txmlns="sap.m"\n\ttemplate:require="{\n\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\tCONTACT: \'sap/fe/macros/contact/ContactHelper\'\n\t\t\t\t}"\n><template:if test="{contact>}"><VBox class="sapFePaddingTop sapUiTinyMarginBottom"><control:CustomQuickViewPage\n\t\t\t\tunittest:id="CustomQuickViewPageContact"\n\t\t\t\ticon="{= ${contact>photo@@MODEL.format} ? ${contact>photo@@MODEL.format} : \'sap-icon://person-placeholder\' }"\n\t\t\t\tfallbackIcon="sap-icon://person-placeholder"\n\t\t\t\ttitle="{contact>fn@@MODEL.format}"\n\t\t\t\tdescription="{contact>role@@MODEL.format}"\n\t\t\t\tcrossAppNavCallback=""\n\t\t\t><core:Fragment fragmentName="sap.fe.macros.contact.ContactQuickViewGroup" type="XML" /></control:CustomQuickViewPage></VBox></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/contact/ContactQuickViewGroup.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns="sap.m"\n\ttemplate:require="{\n\t\t\t\t\tCONTACT: \'sap/fe/macros/contact/ContactHelper\'\n\t}"\n><QuickViewGroup heading="{= CONTACT.getContactTitle(${contact>fn}) }"><QuickViewGroupElement\n\t\t\tlabel="{= CONTACT.computeLabel(\'title\', ${contact>title}) }"\n\t\t\tvalue="{contact>title@@MODEL.format}"\n\t\t\ttype="text"\n\t\t\tvisible="{= !!${contact>title}}"\n\t\t/><QuickViewGroupElement\n\t\t\tlabel="{= CONTACT.computeLabel(\'org\', ${contact>org}) }"\n\t\t\tvalue="{contact>org@@MODEL.format}"\n\t\t\ttype="text"\n\t\t\tvisible="{= !!${contact>org}}"\n\t\t/><template:if test="{contact>tel}"><template:with path="contact>tel" var="tels"><template:repeat\n\t\t\t\t\tlist="{path:\'tels>\', filters: { path: \'type/$EnumMember\', operator: \'EndsWith\', value1: \'preferred\'}}"\n\t\t\t\t\tvar="tel"\n\t\t\t\t><QuickViewGroupElement\n\t\t\t\t\t\tlabel="{= CONTACT.computeLabel(\'phone\', ${tel>type/$EnumMember})}"\n\t\t\t\t\t\tvalue="{tel>uri/@@MODEL.format}"\n\t\t\t\t\t\ttarget="{= CONTACT.formatUri(\'phone\', ${tel>uri/@@MODEL.format})}"\n\t\t\t\t\t\ttype="phone"\n\t\t\t\t\t/></template:repeat><template:repeat\n\t\t\t\t\tlist="{path:\'tels>\', filters: { path: \'type/$EnumMember\', operator: \'EndsWith\', value1: \'work\'}}"\n\t\t\t\t\tvar="tel"\n\t\t\t\t><QuickViewGroupElement\n\t\t\t\t\t\tlabel="{= CONTACT.computeLabel(\'phone\', ${tel>type/$EnumMember})}"\n\t\t\t\t\t\tvalue="{tel>uri/@@MODEL.format}"\n\t\t\t\t\t\ttarget="{= CONTACT.formatUri(\'phone\', ${tel>uri/@@MODEL.format})}"\n\t\t\t\t\t\ttype="phone"\n\t\t\t\t\t/></template:repeat><template:repeat\n\t\t\t\t\tlist="{path:\'tels>\', filters: { path: \'type/$EnumMember\', operator: \'EndsWith\', value1: \'cell\'}}"\n\t\t\t\t\tvar="tel"\n\t\t\t\t><QuickViewGroupElement\n\t\t\t\t\t\tlabel="{= CONTACT.computeLabel(\'phone\', ${tel>type/$EnumMember})}"\n\t\t\t\t\t\tvalue="{tel>uri/@@MODEL.format}"\n\t\t\t\t\t\ttarget="{= CONTACT.formatUri(\'phone\', ${tel>uri/@@MODEL.format})}"\n\t\t\t\t\t\ttype="phone"\n\t\t\t\t\t/></template:repeat><template:repeat list="{path:\'tels>\', filters: { path: \'type/$EnumMember\', operator: \'EndsWith\', value1: \'fax\'}}" var="tel"><QuickViewGroupElement\n\t\t\t\t\t\tlabel="{= CONTACT.computeLabel(\'phone\', ${tel>type/$EnumMember})}"\n\t\t\t\t\t\tvalue="{tel>uri/@@MODEL.format}"\n\t\t\t\t\t\ttarget="{= CONTACT.formatUri(\'phone\', ${tel>uri/@@MODEL.format})}"\n\t\t\t\t\t\ttype="phone"\n\t\t\t\t\t/></template:repeat></template:with></template:if><template:if test="{contact>email}"><template:with path="contact>email" var="emails"><template:repeat\n\t\t\t\t\tlist="{path:\'emails>\', filters: { path: \'type/$EnumMember\', operator: \'EndsWith\', value1: \'preferred\'}}"\n\t\t\t\t\tvar="mail"\n\t\t\t\t><QuickViewGroupElement\n\t\t\t\t\t\tlabel="{= CONTACT.computeLabel(\'mail\', ${mail>type/$EnumMember})}"\n\t\t\t\t\t\tvalue="{mail>address/@@MODEL.format}"\n\t\t\t\t\t\ttarget="{= CONTACT.formatUri(\'mail\', ${mail>address/@@MODEL.format})}"\n\t\t\t\t\t\ttype="email"\n\t\t\t\t\t/></template:repeat><template:repeat\n\t\t\t\t\tlist="{path:\'emails>\', filters: { path: \'type/$EnumMember\', operator: \'EndsWith\', value1: \'work\'}}"\n\t\t\t\t\tvar="mail"\n\t\t\t\t><QuickViewGroupElement\n\t\t\t\t\t\tlabel="{= CONTACT.computeLabel(\'mail\', ${mail>type/$EnumMember})}"\n\t\t\t\t\t\tvalue="{mail>address/@@MODEL.format}"\n\t\t\t\t\t\ttarget="{= CONTACT.formatUri(\'mail\', ${mail>address/@@MODEL.format})}"\n\t\t\t\t\t\ttype="email"\n\t\t\t\t\t/></template:repeat></template:with></template:if><template:if test="{contact>adr}"><template:with path="contact>adr" var="adrs"><template:repeat list="{adrs>}" var="adr"><template:if test="{adr>label}"><template:then><QuickViewGroupElement\n\t\t\t\t\t\t\t\tlabel="{= CONTACT.computeLabel(\'address\', ${adr>type/$EnumMember})}"\n\t\t\t\t\t\t\t\tvalue="{adr>label/@@MODEL.format}"\n\t\t\t\t\t\t\t/></template:then><template:else><QuickViewGroupElement\n\t\t\t\t\t\t\t\tlabel="{= CONTACT.computeLabel(\'address\', ${adr>type/$EnumMember})}"\n\t\t\t\t\t\t\t\tvalue="{= CONTACT.formatAddress(${adr>street/@@MODEL.format}, ${adr>code/@@MODEL.format}, ${adr>locality/@@MODEL.format}, ${adr>region/@@MODEL.format}, ${adr>country/@@MODEL.format})}"\n\t\t\t\t\t\t\t/></template:else></template:if></template:repeat></template:with></template:if></QuickViewGroup></core:FragmentDefinition>\n',
	"sap/fe/macros/filter/CustomFilter.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:mdc="sap.ui.mdc"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\txmlns:fpm="sap.fe.macros.fpm"\n\txmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\ttemplate:require="{\n\t\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\tFILTERFIELD: \'sap/fe/macros/filter/FilterFieldHelper\',\n\t\t\tFILTER: \'sap/fe/macros/filter/FilterUtils\',\n\t\t\tMACRO: \'sap/fe/macros/MacroTemplating\'\n\t\t}"\n><template:with path="item>annotationPath" var="property"><mdc:FilterField\n\t\t\tid="{= ID.generate([${this>id}, \'CustomFilterField\', ${item>key}]) }"\n\t\t\tdelegate="{name: \'sap/ui/mdc/odata/v4/FieldBaseDelegate\'}"\n\t\t\tlabel="{item>label}"\n\t\t\tdataType="{= ${property>$Type} || \'Edm.String\'}"\n\t\t\tmaxConditions="{= ${property>@@FILTERFIELD.maxConditions} || -1 }"\n\t\t\tconditions="{= \'{$filters>/conditions/\' + ${item>conditionPath} + \'}\'}"\n\t\t\toperators="{parts : [{path: \'property>\'}, {path: \'item>useSemanticDateRange\'}, {path: \'item>settings\'}, {path: \'contextPath>@@MACRO.getPath\'}], formatter: \'FIELD.operators\'}"\n\t\t\tdataTypeConstraints="{item>constraints}"\n\t\t\tdataTypeFormatOptions="{item>formatOptions}"\n\t\t\tfieldHelp="undefined"\n\t\t\trequired="{item>required}"\n\t\t\tcustomData:isSlot="{= ${item>type} === \'Slot\'}"\n\t\t><control:CustomFilterFieldContentWrapper\n\t\t\t\tcore:require="{handler: \'sap/fe/macros/filter/FilterUtils\'}"\n\t\t\t\tid="{= ID.generate([${this>id}, \'FilterFieldContentWrapper\', ${item>key}]) }"\n\t\t\t\tbinding="{= \'{filterValues>/\' + FILTER.conditionToModelPath(${item>conditionPath}) + \'}\' }"\n\t\t\t\tconditions="{path: \'$field>/conditions\'}"\n\t\t\t><template:if test="{= !!${item>template}}"><fpm:CustomFragment\n\t\t\t\t\t\tfragmentName="{item>template}"\n\t\t\t\t\t\tid="{= ID.generate([${this>id}, \'CustomFilterField\', ${item>key}]) }"\n\t\t\t\t\t\tcontextPath="{contextPath>}"\n\t\t\t\t\t/></template:if><template:if test="{= ${item>type} === \'Slot\'}"><slot name="{item>slotName}" /></template:if></control:CustomFilterFieldContentWrapper></mdc:FilterField></template:with></core:FragmentDefinition>\n',
	"sap/fe/macros/filter/DraftEditState.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:mdc="sap.ui.mdc"\n\txmlns:mdcf="sap.ui.mdc.field"\n\txmlns:mdcv="sap.ui.mdc.valuehelp"\n\txmlns:mdcvc="sap.ui.mdc.valuehelp.content"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\t\t\t\t\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\t\t\t\t\t\tEDITSTATE: \'sap/fe/macros/filter/DraftEditState\'\n\t\t\t\t\t\t}"\n><mdc:FilterField\n\t\tlabel="{sap.fe.i18n>FILTERBAR_EDITING_STATUS}"\n\t\tmaxConditions="1"\n\t\tid="{= ID.generate([${this>id}, \'FilterField\', \'DraftEditingStatus\' ]) }"\n\t\toperators="DRAFT_EDIT_STATE"\n\t\tdataType="sap.ui.model.odata.type.String"\n\t\tconditions="{$filters>/conditions/$editState}"\n\t\tfieldHelp="{= ID.generate([${this>id}, \'FilterFieldValueHelp\', \'DraftEditingStatus\' ]) }"\n\t\tdisplay="Description"\n\t><mdc:dependents><mdc:ValueHelp\n\t\t\t\tcore:require="{DraftEditState: \'sap/fe/macros/filter/DraftEditState\'}"\n\t\t\t\tid="{= ID.generate([${this>id}, \'FilterFieldValueHelp\', \'DraftEditingStatus\' ]) }"\n\t\t\t><mdc:typeahead><mdcv:Popover><mdcvc:FixedList useFirstMatch="true"><template:with path="this>" helper="EDITSTATE.getEditStatesContext" var="states"><template:repeat list="{states>}" var="state"><mdcf:ListFieldHelpItem key="{state>id}" text="{state>display}" /></template:repeat></template:with></mdcvc:FixedList></mdcv:Popover></mdc:typeahead></mdc:ValueHelp></mdc:dependents></mdc:FilterField></core:FragmentDefinition>\n',
	"sap/fe/macros/form/AddressSection.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns="sap.m"\n\txmlns:f="sap.ui.layout.form"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tFORM: \'sap/fe/macros/form/FormHelper\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t}"\n><template:with path="facet>Target/$AnnotationPath" var="annotationPath"><f:FormContainer\n\t\t\tid="{= ${this>id} ? ID.generate([\'fe\', \'FormContainer\', ${facet>ID}]) : undefined }"\n\t\t\tunittest:id="formCAddr"\n\t\t\tbinding="{= FORM.generateBindingExpression((MODEL.getNavigationPath(${facet>Target/$AnnotationPath}) ? MODEL.getNavigationPath(${facet>Target/$AnnotationPath}) : \'\'),${contextPath>./@com.sap.vocabularies.Common.v1.SemanticKey})}"\n\t\t\tvisible="{= ${facet>./@com.sap.vocabularies.UI.v1.Hidden/$Path} ? (\'{= !${\' + ${facet>./@com.sap.vocabularies.UI.v1.Hidden/$Path} + \'} }\') : true }"\n\t\t\tmacrodata:navigationPath="{= MODEL.getNavigationPath(${annotationPath>}) ? MODEL.getNavigationPath(${annotationPath>}) : \'\'}"\n\t\t\tmacrodata:etName="{contextPath>./@sapui.name}"\n\t\t><template:if test="{= ${facet>@@MODEL.label} }"><f:title><core:Title level="{this>titleLevel}" text="{= ${facet>@@MODEL.label} }" /></f:title></template:if><f:formElements><f:FormElement id="{= ${this>id} ? ID.generate([${this>id}, \'FormElement\', ${facet>ID}]) : undefined}"><f:fields><Text text="{facet>Target/$AnnotationPath/label@@MODEL.format}" class="sapMITBFilterNeutral" /></f:fields></f:FormElement></f:formElements></f:FormContainer></template:with></core:FragmentDefinition>\n',
	"sap/fe/macros/form/FormActionButtons.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tDEFAULTACTIONHANDLER: \'sap/fe/macros/internal/helpers/DefaultActionHandler\'\n\t}"\n><template:if test="{= ${action>type} === \'Menu\'}"><template:then><MenuButton\n\t\t\t\ttext="{action>text}"\n\t\t\t\tmenuPosition="BeginBottom"\n\t\t\t\tid="{= ID.generate([\'fe\',${action>id}])}"\n\t\t\t\tvisible="{= COMMON.handleVisibilityOfMenuActions(${action>visible}) }"\n\t\t\t\tenabled="{action>enabled}"\n\t\t\t\tclass="sapUiSmallMarginBegin"\n\t\t\t\tuseDefaultActionOnly="{= DEFAULTACTIONHANDLER.getUseDefaultActionOnly(${action>})}"\n\t\t\t\tbuttonMode="{= DEFAULTACTIONHANDLER.getButtonMode(${action>})}"\n\t\t\t\tdefaultAction="{= DEFAULTACTIONHANDLER.getDefaultActionHandler(undefined, ${action>}, undefined, undefined, \'Form\')}"\n\t\t\t><menu><Menu><template:repeat list="{action>menu}" var="menuItemAction"><template:if test="{= ${menuItemAction>type} === \'Default\'}"><template:then><MenuItem\n\t\t\t\t\t\t\t\t\t\tcore:require="{FPM: \'sap/fe/core/helpers/FPMHelper\'}"\n\t\t\t\t\t\t\t\t\t\tid="{= ID.generate([\'fe\',${menuItemAction>id}])}"\n\t\t\t\t\t\t\t\t\t\ttext="{menuItemAction>text}"\n\t\t\t\t\t\t\t\t\t\tpress="{= ${menuItemAction>command} ? (\'cmd:\' + ${menuItemAction>command}) : COMMON.buildActionWrapper(${menuItemAction>})}"\n\t\t\t\t\t\t\t\t\t\tvisible="{menuItemAction>visible}"\n\t\t\t\t\t\t\t\t\t\tenabled="{menuItemAction>enabled}"\n\t\t\t\t\t\t\t\t\t/></template:then><template:else><MenuItem\n\t\t\t\t\t\t\t\t\t\tid="{menuItemAction>id}"\n\t\t\t\t\t\t\t\t\t\tbinding="{menuItemAction>binding}"\n\t\t\t\t\t\t\t\t\t\ttext="{menuItemAction>text}"\n\t\t\t\t\t\t\t\t\t\tpress="{= ${menuItemAction>command} ? (\'cmd:\' + ${menuItemAction>command}) : ${menuItemAction>press}}"\n\t\t\t\t\t\t\t\t\t\tariaHasPopup="{menuItemAction>requiresDialog}"\n\t\t\t\t\t\t\t\t\t\tvisible="{menuItemAction>visible}"\n\t\t\t\t\t\t\t\t\t\tenabled="{menuItemAction>enabled}"\n\t\t\t\t\t\t\t\t\t\tmacrodata:IBNData="{menuItemAction>customData}"\n\t\t\t\t\t\t\t\t\t/></template:else></template:if></template:repeat></Menu></menu></MenuButton></template:then><template:elseif test="{= ${action>type} === \'Default\'}"><Button\n\t\t\t\tcore:require="{FPM: \'sap/fe/core/helpers/FPMHelper\'}"\n\t\t\t\tid="{= ID.generate([\'fe\',${action>id}])}"\n\t\t\t\ttext="{action>text}"\n\t\t\t\tpress="{= ${action>command} ? (\'cmd:\' + ${action>command}) : COMMON.buildActionWrapper(${action>})}"\n\t\t\t\ttype="Transparent"\n\t\t\t\tvisible="{action>visible}"\n\t\t\t\tenabled="{action>enabled}"\n\t\t\t/></template:elseif><template:else><Button\n\t\t\t\tid="{action>id}"\n\t\t\t\tbinding="{action>binding}"\n\t\t\t\ttext="{action>text}"\n\t\t\t\tpress="{= ${action>command} ? (\'cmd:\' + ${action>command}) : ${action>press}}"\n\t\t\t\ttype="{action>buttonType}"\n\t\t\t\tariaHasPopup="{action>requiresDialog}"\n\t\t\t\tvisible="{action>visible}"\n\t\t\t\tenabled="{action>enabled}"\n\t\t\t\tmacrodata:IBNData="{action>customData}"\n\t\t\t/></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/form/FormContainer.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:f="sap.ui.layout.form"\n\txmlns:macro="sap.fe.macros"\n\txmlns:macroForm="sap.fe.macros.form"\n\txmlns:internalMacro="sap.fe.macros.internal"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\txmlns:dt="sap.ui.dt"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns:fpm="sap.fe.macros.fpm"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tFORM: \'sap/fe/macros/form/FormHelper\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tDataField: \'sap/fe/core/templating/DataFieldFormatters\',\n\t\tFormTemplating: \'sap/fe/macros/internal/form/FormTemplating\',\n\t\tFieldTemplating: \'sap/fe/macros/field/FieldTemplating\',\n\t\tProperty: \'sap/fe/core/templating/PropertyFormatters\',\n\t\tFIELD: \'sap/fe/macros/field/FieldHelper\'\n\t}"\n><f:FormContainer\n\t\tcore:require="{FormContainerRuntime: \'sap/fe/macros/form/FormContainerAPI\'}"\n\t\tunittest:id="formC"\n\t\tdt:designtime="{this>designtimeSettings}"\n\t\tid="{= ${this>id} || undefined}"\n\t\tvisible="{this>visible}"\n\t\tmacrodata:navigationPath="{this>navigationPath}"\n\t\tmacrodata:etName="{contextPath>./@sapui.name}"\n\t><template:if test="{this>title}"><f:title><core:Title level="{this>titleLevel}" text="{this>title}" /></f:title></template:if><f:dependents><macroForm:FormContainerAPI formContainerId="{this>id}" showDetails="{internal>showDetails}" /></f:dependents><template:if test="{actions>}"><template:then><f:toolbar><OverflowToolbar\n\t\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'FormActionsToolbar\']) : undefined}"\n\t\t\t\t\t\tbinding="{= FORM.generateBindingExpression(${this>navigationPath},${contextPath>./@com.sap.vocabularies.Common.v1.SemanticKey})}"\n\t\t\t\t\t><Title level="{this>titleLevel}" text="{this>title}" /><ToolbarSpacer /><template:repeat list="{actions>}" var="action"><core:Fragment fragmentName="sap.fe.macros.form.FormActionButtons" type="XML" /></template:repeat></OverflowToolbar></f:toolbar></template:then></template:if><f:dependents><template:repeat list="{path:\'dataFieldCollection>\'}" var="dataField"><template:with path="dataField>annotationPath" var="dataField"><template:if test="{this>id}"><macro:ValueHelp\n\t\t\t\t\t\t\tidPrefix="{= ID.generate([${this>id}, \'FieldValueHelp\']) }"\n\t\t\t\t\t\t\tproperty="{dataField>Value}"\n\t\t\t\t\t\t\tcontextPath="{contextPath>}"\n\t\t\t\t\t\t\tuseMultiValueField="true"\n\t\t\t\t\t\t\tbinding="{= FORM.generateBindingExpression(${this>navigationPath},${contextPath>./@com.sap.vocabularies.Common.v1.SemanticKey})}"\n\t\t\t\t\t\t/></template:if></template:with><template:if test="${dataField>type} === \'Annotation\'}"><template:then><template:with path="dataField>annotationPath" var="annotationDataField"><template:if test="{annotationDataField>Target@@DataField.isSemanticallyConnectedFields}"><template:then><template:repeat list="{annotationDataField>Target/$AnnotationPath/Data}" var="data"><template:with path="data>" helper="COMMON.getDataFromTemplate" var="element"><template:if test="{this>id}"><template:if\n\t\t\t\t\t\t\t\t\t\t\t\t\ttest="{= !FIELD.isFieldPartOfForm(${dataFieldCollection>}, ${element>@@UI.getDataModelObjectPath}) }"\n\t\t\t\t\t\t\t\t\t\t\t\t><macro:ValueHelp\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tidPrefix="{= ID.generate([${this>id}, \'FieldValueHelp\']) }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tproperty="{element>Value}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontextPath="{contextPath>}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tuseMultiValueField="true"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tbinding="{= FORM.generateBindingExpression(${this>navigationPath},${contextPath>./@com.sap.vocabularies.Common.v1.SemanticKey})}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t/></template:if></template:if></template:with></template:repeat></template:then></template:if></template:with></template:then></template:if></template:repeat></f:dependents><f:formElements><template:with path="dataFieldCollection>" var="formElements"><template:if test="{= ${formElements>0/annotationPath}.indexOf(\'com.sap.vocabularies.UI.v1.DataPoint\') > -1 }"><template:then><template:with path="formElements>0/annotationPath" var="dataPoint"><f:FormElement\n\t\t\t\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'FormElement\', ${dataPoint>@@UI.getDataModelObjectPath}]) : undefined}"\n\t\t\t\t\t\t\t\tlabel="{dataPoint>@@FIELD.computeLabelText}"\n\t\t\t\t\t\t\t\tvisible="{= FieldTemplating.getVisibleExpression(${dataPoint>@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\t\t\tbinding="{= FORM.generateBindingExpression(${this>navigationPath},${contextPath>./@com.sap.vocabularies.Common.v1.SemanticKey})}"\n\t\t\t\t\t\t\t><f:fields><internalMacro:Field\n\t\t\t\t\t\t\t\t\t\tidPrefix="{= ${this>id} ? ID.generate([${this>id}, \'FormElement\', ${dataPoint>@@UI.getDataModelObjectPath}]) : \'\' }"\n\t\t\t\t\t\t\t\t\t\tvhIdPrefix="{= ${this>id} ? ID.generate([${this>id}, \'FieldValueHelp\']) : \'\'}"\n\t\t\t\t\t\t\t\t\t\tentitySet="{contextPath>}"\n\t\t\t\t\t\t\t\t\t\tdataField="{dataPoint>}"\n\t\t\t\t\t\t\t\t\t\teditMode="{= ${this>displayMode} === \'true\' ? \'Display\' : undefined}"\n\t\t\t\t\t\t\t\t\t\tonChange="{this>onChange}"\n\t\t\t\t\t\t\t\t\t><internalMacro:formatOptions textAlignMode="Form" showEmptyIndicator="true" /></internalMacro:Field></f:fields></f:FormElement></template:with></template:then><template:elseif\n\t\t\t\t\t\ttest="{= ${formElements>0/annotationPath}.indexOf(\'com.sap.vocabularies.Communication.v1.Contact\') > -1 }"\n\t\t\t\t\t><template:with path="formElements>0/annotationPath" var="metaPath"><f:FormElement\n\t\t\t\t\t\t\t\tbinding="{= FORM.generateBindingExpression(${this>navigationPath},${contextPath>./@com.sap.vocabularies.Common.v1.SemanticKey})}"\n\t\t\t\t\t\t\t><f:label><Label\n\t\t\t\t\t\t\t\t\t\ttext="{metaPath>fn/$Path@com.sap.vocabularies.Common.v1.Label}"\n\t\t\t\t\t\t\t\t\t\tvisible="{= FieldTemplating.getVisibleExpression(${dataField>@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\t\t\t\t><layoutData><f:ColumnElementData cellsLarge="12" /></layoutData></Label></f:label><f:fields><macro:Contact metaPath="{metaPath>}" contextPath="{contextPath>}" visible="true" /></f:fields></f:FormElement></template:with></template:elseif><template:else><template:repeat list="{path: \'formElements>\'}" var="dataField"><template:if test="{= ${dataField>type} === \'Annotation\'}"><template:then><template:with path="dataField>annotationPath" var="annotationDataField"><template:if test="{annotationDataField>Target@@DataField.isSemanticallyConnectedFields}"><template:then><f:FormElement\n\t\t\t\t\t\t\t\t\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'SemanticFormElement\', ${annotationDataField>@@UI.getDataModelObjectPath}]) : \'\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible="{= (${dataField>isPartOfPreview}) ? true : \'{= ${internal>showDetails} === true}\'}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tbinding="{= FORM.generateBindingExpression(${this>navigationPath},${contextPath>./@com.sap.vocabularies.Common.v1.SemanticKey})}"\n\t\t\t\t\t\t\t\t\t\t\t\t><f:label><Label\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext="{annotationDataField>@@FIELD.computeLabelText}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'SemanticFormElementLabel\', ${annotationDataField>@@UI.getDataModelObjectPath}]) : \'\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></f:label><f:fields><control:FieldWrapper\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\trequired="{= UI.getRequiredExpressionForConnectedDataField(${annotationDataField>Target@@UI.getDataModelObjectPath}) }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t><HBox><template:repeat\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tlist="{annotationDataField>Target/$AnnotationPath/Data}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar="data"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t><template:with\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath="data>"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thelper="COMMON.getDataFromTemplate"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar="element"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t><core:Fragment\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfragmentName="sap.fe.macros.internal.field.ConnectedDataField"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype="XML"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></template:with></template:repeat></HBox></control:FieldWrapper></f:fields></f:FormElement></template:then><template:elseif\n\t\t\t\t\t\t\t\t\t\t\t\ttest="{= ${annotationDataField>Value} &amp;&amp; ${annotationDataField>Value/$Path} &amp;&amp; UI.isMultiValueField(${annotationDataField>Value@@Property.getPropertyObjectPath})}"\n\t\t\t\t\t\t\t\t\t\t\t><f:FormElement\n\t\t\t\t\t\t\t\t\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'FormElement\', ${annotationDataField>@@UI.getDataModelObjectPath}]) : undefined }"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel="{annotationDataField>@@FIELD.computeLabelText}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible="{= (${dataField>isPartOfPreview}) ? FieldTemplating.getVisibleExpression(${annotationDataField>@@UI.getDataModelObjectPath}) : \'{= ${internal>showDetails} === true}\'}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tbinding="{= FORM.generateBindingExpression(${this>navigationPath},${contextPath>./@com.sap.vocabularies.Common.v1.SemanticKey})}"\n\t\t\t\t\t\t\t\t\t\t\t\t><f:fields><internalMacro:MultiValueField\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tidPrefix="{= ${this>id} ? ID.generate([${this>id}, \'FormElement\', ${annotationDataField>@@UI.getDataModelObjectPath}]) : \'\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvhIdPrefix="{= ${this>id} ? ID.generate([${this>id}, \'FieldValueHelp\']) : \'\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontextPath="{contextPath>}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmetaPath="{annotationDataField>}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t><internalMacro:formatOptions showEmptyIndicator="true" /></internalMacro:MultiValueField></f:fields></f:FormElement></template:elseif><template:else><f:FormElement\n\t\t\t\t\t\t\t\t\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'FormElement\', ${annotationDataField>@@UI.getDataModelObjectPath}]) : undefined }"\n\t\t\t\t\t\t\t\t\t\t\t\t\tlabel="{annotationDataField>@@FIELD.computeLabelText}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible="{= (${dataField>isPartOfPreview}) ? FieldTemplating.getVisibleExpression(${annotationDataField>@@UI.getDataModelObjectPath}) : \'{= ${internal>showDetails} === true}\'}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tbinding="{= FORM.generateBindingExpression(${this>navigationPath},${contextPath>./@com.sap.vocabularies.Common.v1.SemanticKey})}"\n\t\t\t\t\t\t\t\t\t\t\t\t><f:fields><internalMacro:Field\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tidPrefix="{= ${this>id} ? ID.generate([${this>id}, \'FormElement\', ${annotationDataField>@@UI.getDataModelObjectPath}]) : \'\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvhIdPrefix="{= ${this>id} ? ID.generate([${this>id}, \'FieldValueHelp\']) : \'\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tentitySet="{contextPath>}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdataField="{annotationDataField>}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange="{this>onChange}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t><internalMacro:formatOptions\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextLinesEdit="{dataField>formatOptions/textLinesEdit}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextMaxLines="{dataField>formatOptions/textMaxLines}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextMaxCharactersDisplay="{dataField>formatOptions/textMaxCharactersDisplay}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextExpandBehaviorDisplay="{dataField>formatOptions/textExpandBehaviorDisplay}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttextAlignMode="Form"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tshowEmptyIndicator="true"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></internalMacro:Field></f:fields></f:FormElement></template:else></template:if></template:with></template:then><template:elseif test="{= ${dataField>type} === \'Default\'}"><f:FormElement\n\t\t\t\t\t\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, ${dataField>id}]) : \'\' }"\n\t\t\t\t\t\t\t\t\t\tlabel="{dataField>label}"\n\t\t\t\t\t\t\t\t\t\tvisible="{dataField>visible}"\n\t\t\t\t\t\t\t\t\t\tbinding="{= FORM.generateBindingExpression(${this>navigationPath},${contextPath>./@com.sap.vocabularies.Common.v1.SemanticKey})}"\n\t\t\t\t\t\t\t\t\t><f:fields><fpm:CustomFragment\n\t\t\t\t\t\t\t\t\t\t\t\tid="{= ID.generate([${this>id}, ${dataField>key}]) }"\n\t\t\t\t\t\t\t\t\t\t\t\tfragmentName="{dataField>template}"\n\t\t\t\t\t\t\t\t\t\t\t\tcontextPath="{entitySet>}"\n\t\t\t\t\t\t\t\t\t\t\t/></f:fields></f:FormElement></template:elseif><template:elseif test="{= ${dataField>type} === \'Slot\'}"><slot name="{dataField>key}" /></template:elseif></template:if></template:repeat></template:else></template:if></template:with></f:formElements></f:FormContainer></core:FragmentDefinition>\n',
	"sap/fe/macros/form/FormElementFlexibility.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns="sap.m"\n\txmlns:internalMacro="sap.fe.macros.internal"\n\txmlns:f="sap.ui.layout.form"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\ttemplate:require="{\n        FIELD: \'sap/fe/macros/field/FieldHelper\',\n        FORM: \'sap/fe/macros/form/FormHelper\',\n        MODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n        COMMON: \'sap/fe/macros/CommonHelper\',\n        UI: \'sap/fe/core/templating/UIFormatters\',\n\t\tFieldTemplating: \'sap/fe/macros/field/FieldTemplating\'\n    }"\n><template:if test="{dataField>@com.sap.vocabularies.UI.v1.DataFieldDefault}"><template:then><template:with path="dataField>@com.sap.vocabularies.UI.v1.DataFieldDefault" var="dataField"><core:Fragment fragmentName="sap.fe.macros.form.FormElementFlexibility" type="XML" /></template:with></template:then><template:else><f:FormElement\n\t\t\t\tunittest:id="FormElement"\n\t\t\t\tid="{= ${this>_flexId} + \'_FormElement\'}"\n\t\t\t\tlabel="{= ${dataField>@com.sap.vocabularies.Common.v1.Label} || ${dataField>@@MODEL.label} || \'[LABEL_MISSING: \' + ${dataField>@@FIELD.propertyName} +\']\'}"\n\t\t\t\tvisible="{= FieldTemplating.getVisibleExpression(${dataField>@@UI.getDataModelObjectPath})}"\n\t\t\t\tbinding="{= FORM.generateBindingExpression(${this>navigationPath},${entitySet>./@com.sap.vocabularies.Common.v1.SemanticKey})}"\n\t\t\t><internalMacro:Field\n\t\t\t\t\teditMode="{= ${this>displayMode} === \'true\' ? \'Display\' : undefined}"\n\t\t\t\t\t_flexId="{this>_flexId}"\n\t\t\t\t\tentitySet="{entitySet>}"\n\t\t\t\t\tdataField="{dataField>}"\n\t\t\t\t\tonChange="{this>onChange}"\n\t\t\t\t><internalMacro:formatOptions textAlignMode="Form" showEmptyIndicator="true" /></internalMacro:Field></f:FormElement></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/form/ValueHelpWrapper.fragment.xml":'<core:FragmentDefinition\n\txmlns:core="sap.ui.core"\n\txmlns="sap.m"\n\txmlns:macro="sap.fe.macros"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\ttemplate:require="{FORM: \'sap/fe/macros/form/FormHelper\'}"\n><macro:ValueHelp\n\t\t_flexId="{= ${this>idPrefix} + \'-content_FieldValueHelp\'}"\n\t\tproperty="{property>}"\n\t\tcontextPath="{contextPath>}"\n\t\tbinding="{= FORM.generateBindingExpression(${this>navigationPath},${entitySet>./@com.sap.vocabularies.Common.v1.SemanticKey})}"\n\t/></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/CollaborationAvatar.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns="sap.m"\n><Avatar\n\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\tvisible="{this>collaborationHasActivityExpression}"\n\t\tinitials="{this>collaborationInitialsExpression}"\n\t\tdisplaySize="Custom"\n\t\tcustomDisplaySize="1.75rem"\n\t\tcustomFontSize="1rem"\n\t\tbackgroundColor="{this>collaborationColorExpression}"\n\t/></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/ConnectedDataField.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:macro="sap.fe.macros"\n\txmlns:internalMacro="sap.fe.macros.internal"\n\ttemplate:require="{\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t}"\n><internalMacro:Field\n\t\tidPrefix="{= ${this>id} ? ID.generate([${this>id}, \'SemanticFormElement\', ${annotationDataField>@@UI.getDataModelObjectPath},${element>Value/$Path}]) : \'\' }"\n\t\tvhIdPrefix="{= ${this>id} ? ID.generate([${this>id}, \'FieldValueHelp\']) : \'\' }"\n\t\tentitySet="{entitySet>}"\n\t\tdataField="{element>}"\n\t\tonChange="{this>onChange}"\n\t\tariaLabelledBy="{= ${this>id} ? ID.generate([${this>id}, \'SemanticFormElementLabel\', ${annotationDataField>@@UI.getDataModelObjectPath}]) : \'\' }"\n\t><macro:formatOptions\n\t\t\ttextLinesEdit="{element>formatOptions/textLinesEdit}"\n\t\t\ttextMaxLines="{element>formatOptions/textMaxLines}"\n\t\t\ttextMaxCharactersDisplay="{dataField>formatOptions/textMaxCharactersDisplay}"\n\t\t\ttextExpandBehaviorDisplay="{dataField>formatOptions/textExpandBehaviorDisplay}"\n\t\t\ttextAlignMode="Form"\n\t\t\tshowEmptyIndicator="true"\n\t\t/></internalMacro:Field><template:if test="{= COMMON.notLastIndex(${annotationDataField>Target/$AnnotationPath/}, ${element>})}"><template:then><Text\n\t\t\t\ttext="{= COMMON.getDelimiter(${annotationDataField>Target/$AnnotationPath/Template})}"\n\t\t\t\tclass="sapUiSmallMarginBeginEnd"\n\t\t\t\twidth="100%"\n\t\t\t/></template:then></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/FieldContent.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns="sap.m"\n\ttemplate:require="{\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\'\n\t\t\t\t\t\t }"\n><template:if\n\t\ttest="{= ${dataField>$Type} === \'com.sap.vocabularies.UI.v1.DataField\' ||\n\t\t${dataField>$Type} === \'com.sap.vocabularies.UI.v1.DataFieldWithUrl\' ||\n\t\t${dataField>$Type} === \'com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath\' ||\n\t\t${dataField>$Type} === \'com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation\' ||\n\t\t${dataField>$Type} === \'com.sap.vocabularies.UI.v1.DataFieldWithAction\' }"\n\t><template:then><template:with path="dataField>Value" var="property"><template:with path="property>" helper="FIELD.valueHelpProperty" var="valueHelpProperty"><template:with path="property>$Path" var="propertyPath"><core:Fragment fragmentName="sap.fe.macros.internal.field.FieldStructure" type="XML" /></template:with></template:with></template:with></template:then><template:elseif test="{= ${dataField>$Type} === \'com.sap.vocabularies.UI.v1.DataFieldForAnnotation\'}"><template:with path="dataField>" helper="MODEL.resolve$Path" var="dataField"><template:with path="dataField>Target/$AnnotationPath" var="annotationPath"><template:if test="{= ${this>displayStyle}===\'DataPoint\'}"><template:then><template:with path="annotationPath>Value" var="property"><template:with path="annotationPath>" var="dataPoint"><template:with path="property>" helper="FIELD.valueHelpProperty" var="valueHelpProperty"><template:with path="property>$Path" var="propertyPath"><core:Fragment fragmentName="sap.fe.macros.internal.field.FieldStructure" type="XML" /></template:with></template:with></template:with></template:with></template:then><template:elseif test="{= ${this>displayStyle}===\'Contact\'}"><template:with path="annotationPath>" var="contact"><core:Fragment fragmentName="sap.fe.macros.internal.field.FieldStructure" type="XML" /></template:with></template:elseif><template:elseif test="{= ${this>displayStyle}===\'Text\'}"><core:Fragment fragmentName="sap.fe.macros.internal.field.FieldStructure" type="XML" /></template:elseif><template:elseif test="{= ${this>semanticObject}}"><core:Fragment fragmentName="sap.fe.macros.internal.field.FieldStructure" type="XML" /></template:elseif></template:if></template:with></template:with></template:elseif><template:elseif test="{= ${this>displayStyle}===\'Button\'}"><core:Fragment fragmentName="sap.fe.macros.internal.field.FieldStructure" type="XML" /></template:elseif><template:elseif\n\t\t\ttest="{= ${dataField>./@sapui.name} &amp;&amp; ${dataField>./@sapui.name}.indexOf(\'com.sap.vocabularies.UI.v1.DataPoint\') > -1}"\n\t\t><template:with path="dataField>" helper="MODEL.resolve$Path" var="dataField"><template:with path="dataField>Value" var="property"><template:with path="dataField>" var="dataPoint"><template:with path="property>" helper="FIELD.valueHelpProperty" var="valueHelpProperty"><template:with path="property>$Path" var="propertyPath"><core:Fragment fragmentName="sap.fe.macros.internal.field.FieldStructure" type="XML" /></template:with></template:with></template:with></template:with></template:with></template:elseif><template:elseif test="{= ${dataField>$kind} === \'Property\'}"><template:if test="{dataField>@com.sap.vocabularies.UI.v1.DataFieldDefault}"><template:then><template:with path="dataField>@com.sap.vocabularies.UI.v1.DataFieldDefault" var="dataField"><core:Fragment fragmentName="sap.fe.macros.internal.field.FieldContent" type="XML" /></template:with></template:then></template:if></template:elseif><template:else></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/FieldStructure.fragment.xml":'\n<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\ttemplate:require="{\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\t\t\t\t\t\tProperty: \'sap/fe/core/templating/PropertyFormatters\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\t\t\t\t\t\tFieldTemplating: \'sap/fe/macros/field/FieldTemplating\',\n\t\t\t\t\t\t\tFE_MODEL: \'sap/fe/core/helpers/ModelHelper\'\n\t\t\t\t\t\t }"\n><template:if\n\t\ttest="{= ${this>displayStyle}===\'Avatar\' || ${this>displayStyle}===\'Contact\' || ${this>displayStyle}===\'Button\' || ${this>displayStyle}===\'File\'}"\n\t><template:then><template:if\n\t\t\t\ttest="{= (${this>displayStyle}===\'File\') &amp;&amp; (${this>collaborationEnabled}) &amp;&amp; (${this>editMode}!==\'Display\')}"\n\t\t\t><template:then><HBox width="100%"><VBox width="100%"><core:Fragment fragmentName="sap.fe.macros.internal.field.displayStyle.{this>displayStyle}" type="XML" /></VBox><core:Fragment fragmentName="sap.fe.macros.internal.CollaborationAvatar" type="XML" /></HBox></template:then><template:else><core:Fragment fragmentName="sap.fe.macros.internal.field.displayStyle.{this>displayStyle}" type="XML" /></template:else></template:if></template:then><template:else><template:if test="{= (${this>formatOptions/fieldMode} === \'nowrapper\') &amp;&amp; (${this>editMode}===\'Display\') }"><template:then><core:Fragment fragmentName="sap.fe.macros.internal.field.displayStyle.{this>displayStyle}" type="XML" /></template:then><template:else><control:FieldWrapper\n\t\t\t\t\t\tid="{= ${this>_flexId} || (${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-content\']) : undefined) }"\n\t\t\t\t\t\teditMode="{this>editMode}"\n\t\t\t\t\t\tvisible="{this>visible}"\n\t\t\t\t\t\twidth="100%"\n\t\t\t\t\t\ttextAlign="{this>textAlign}"\n\t\t\t\t\t\tclass="{this>class}"\n\t\t\t\t\t><control:contentDisplay><core:Fragment fragmentName="sap.fe.macros.internal.field.displayStyle.{this>displayStyle}" type="XML" /></control:contentDisplay><template:if test="{= ${this>editMode}!==\'Display\'  &amp;&amp; !!${this>editStyle}}"><control:contentEdit><template:if test="{this>collaborationEnabled}"><template:then><HBox width="100%"><core:Fragment\n\t\t\t\t\t\t\t\t\t\t\t\tfragmentName="sap.fe.macros.internal.field.editStyle.{this>editStyle}"\n\t\t\t\t\t\t\t\t\t\t\t\ttype="XML"\n\t\t\t\t\t\t\t\t\t\t\t/><core:Fragment fragmentName="sap.fe.macros.internal.CollaborationAvatar" type="XML" /></HBox></template:then><template:else><core:Fragment fragmentName="sap.fe.macros.internal.field.editStyle.{this>editStyle}" type="XML" /></template:else></template:if></control:contentEdit></template:if></control:FieldWrapper></template:else></template:if></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/AmountWithCurrency.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:u="sap.ui.unified"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\ttemplate:require="{\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t\t\t\t\t\t }"\n><template:if test="{this>formatOptions/isAnalytics}"><template:then><control:ConditionalWrapper\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\tcondition="{= UI.hasValidAnalyticalCurrencyOrUnit(${property>$Path@@UI.getDataModelObjectPath})}"\n\t\t\t><control:contentTrue><u:Currency\n\t\t\t\t\t\tstringValue="{this>valueAsStringBindingExpression}"\n\t\t\t\t\t\tcurrency="{this>unitBindingExpression}"\n\t\t\t\t\t\tuseSymbol="false"\n\t\t\t\t\t\tmaxPrecision="5"\n\t\t\t\t\t/></control:contentTrue><control:contentFalse><u:Currency stringValue="" currency="*" useSymbol="false" /></control:contentFalse></control:ConditionalWrapper></template:then><template:else><control:FormElementWrapper\n\t\t\t\tformDoNotAdjustWidth="true"\n\t\t\t\twidth="{= ${this>formatOptions/textAlignMode} === \'Table\' ? \'100%\' : undefined}"\n\t\t\t><u:Currency\n\t\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\t\tstringValue="{this>valueAsStringBindingExpression}"\n\t\t\t\t\tcurrency="{this>unitBindingExpression}"\n\t\t\t\t\tuseSymbol="false"\n\t\t\t\t\tmaxPrecision="5"\n\t\t\t\t/></control:FormElementWrapper></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/Avatar.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\ttemplate:require="{\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t }"\n><control:FormElementWrapper visible="{this>avatarVisible}"><Avatar\n\t\t\tid="{= ${this>_flexId} || (${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-content\']) : undefined) }"\n\t\t\tsrc="{this>avatarSrc}"\n\t\t\tdisplaySize="S"\n\t\t\tclass="sapUiSmallMarginEnd"\n\t\t\tdisplayShape="Square"\n\t\t/></control:FormElementWrapper></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/Button.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:core="sap.ui.core"\n\txmlns="sap.m"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tCRIT: \'sap/fe/core/templating/CriticalityFormatters\'\n\t}"\n><template:if test="{= ${dataField>$Type} === \'com.sap.vocabularies.UI.v1.DataFieldForIntentBasedNavigation\'}"><template:then><Button\n\t\t\t\tunittest:id="MacroDataFieldForIntentBasedNavigationButton"\n\t\t\t\tvisible="{this>visible}"\n\t\t\t\ttext="{= !${this>formatOptions/showIconUrl} ? ${dataField>Label} : undefined}"\n\t\t\t\ticon="{= ${this>formatOptions/showIconUrl} ? ${dataField>IconUrl} : undefined}"\n\t\t\t\tenabled="{this>navigationAvailable}"\n\t\t\t\ttooltip="{= ${this>formatOptions/showIconUrl} ? ${dataField>Label} : undefined}"\n\t\t\t\tpress="{= COMMON.getPressHandlerForDataFieldForIBN(${dataField>})}"\n\t\t\t/></template:then><template:else><template:with path="dataField>Target/$AnnotationPath" var="annotationPath"><template:with path="dataField>Action" helper="COMMON.getActionContext" var="actionContext"><template:with path="dataField>Action" helper="COMMON.getPathToBoundActionOverload" var="isBound"><template:if\n\t\t\t\t\t\t\ttest="{= FIELD.isDataFieldActionButtonVisible(${this>}, ${dataField>}, ${isBound>$IsBound}, ${actionContext>@Org.OData.Core.V1.OperationAvailable}) }"\n\t\t\t\t\t\t><Button\n\t\t\t\t\t\t\t\tunittest:id="MacroDataFieldActionButton"\n\t\t\t\t\t\t\t\tclass="{this>class}"\n\t\t\t\t\t\t\t\ttext="{= !${this>formatOptions/showIconUrl} ? ${dataField>Label} : undefined}"\n\t\t\t\t\t\t\t\ticon="{= ${this>formatOptions/showIconUrl} ? ${dataField>IconUrl} : undefined}"\n\t\t\t\t\t\t\t\ttooltip="{= ${this>formatOptions/showIconUrl} ? ${dataField>Label} : undefined}"\n\t\t\t\t\t\t\t\tpress="{= FIELD.getPressEventForDataFieldActionButton(${this>}, ${dataField>}) }"\n\t\t\t\t\t\t\t\tenabled="{= FIELD.isDataFieldActionButtonEnabled(${dataField>}, ${isBound>$IsBound},\n\t\t\t\t\t${actionContext>@Org.OData.Core.V1.OperationAvailable}, ${actionContext>@Org.OData.Core.V1.OperationAvailable@@MODEL.format})\n\t\t\t\t\t}"\n\t\t\t\t\t\t\t\tvisible="{this>visible}"\n\t\t\t\t\t\t\t\ttype="{= CRIT.buildExpressionForCriticalityButtonType(${dataField>@@UI.getDataModelObjectPath}) }"\n\t\t\t\t\t\t\t/></template:if></template:with></template:with></template:with></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/Contact.fragment.xml":'\n<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:macro="sap.fe.macros"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tFieldTemplating: \'sap/fe/macros/field/FieldTemplating\'\n\t}"\n><template:if test="{= ${annotationPath>}.indexOf(\'com.sap.vocabularies.UI.v1.DataPoint\') >= 0}"><template:then><template:with path="annotationPath>Value" var="property"><core:Fragment fragmentName="sap.fe.macros.internal.field.DataField" type="XML" /></template:with></template:then><template:elseif test="{= ${annotationPath>}.indexOf(\'com.sap.vocabularies.Communication.v1.Contact\') >= 0}"><template:with path="annotationPath>" var="metaPath"><macro:Contact\n\t\t\t\t\tidPrefix="{this>idPrefix}"\n\t\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\t\tmetaPath="{metaPath>}"\n\t\t\t\t\tcontextPath="{entitySet>}"\n\t\t\t\t\t_flexId="{this>_flexId}"\n\t\t\t\t\tvisible="{= FieldTemplating.getVisibleExpression(${dataField>@@UI.getDataModelObjectPath})}"\n\t\t\t\t/></template:with></template:elseif></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/DataPoint.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:internalMacro="sap.fe.macros.internal"\n\txmlns:control="sap.fe.core.controls"\n\txmlns:m="sap.m"\n\ttemplate:require="{\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tProperty: \'sap/fe/core/templating/PropertyFormatters\'\n\n\t}"\n><template:if test="{= ${this>formatOptions/isAnalytics} &amp;&amp; ${property>@@Property.hasUnitOrCurrency} }"><template:then><control:ConditionalWrapper\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\tcondition="{= UI.hasValidAnalyticalCurrencyOrUnit(${property>$Path@@UI.getDataModelObjectPath})}"\n\t\t\t><control:contentTrue><internalMacro:DataPoint\n\t\t\t\t\t\tidPrefix="{= ${this>idPrefix} }"\n\t\t\t\t\t\tariaLabelledBy="{= ${this>ariaLabelledBy} }"\n\t\t\t\t\t\t_flexId="{= ${this>_flexId} }"\n\t\t\t\t\t\tmetaPath="{dataPoint>}"\n\t\t\t\t\t\tcontextPath="{entitySet>}"\n\t\t\t\t\t><internalMacro:formatOptions\n\t\t\t\t\t\t\tmeasureDisplayMode="{this>formatOptions/measureDisplayMode}"\n\t\t\t\t\t\t\tshowEmptyIndicator="{this>formatOptions/showEmptyIndicator}"\n\t\t\t\t\t\t\tisAnalytics="{this>formatOptions/isAnalytics}"\n\t\t\t\t\t\t/></internalMacro:DataPoint></control:contentTrue><control:contentFalse><m:Text text="*" /></control:contentFalse></control:ConditionalWrapper></template:then><template:else><internalMacro:DataPoint\n\t\t\t\tidPrefix="{= ${this>idPrefix} }"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\tariaLabelledBy="{= ${this>ariaLabelledBy} }"\n\t\t\t\t_flexId="{= ${this>_flexId} }"\n\t\t\t\tmetaPath="{dataPoint>}"\n\t\t\t\tcontextPath="{entitySet>}"\n\t\t\t><internalMacro:formatOptions measureDisplayMode="{this>formatOptions/measureDisplayMode}" /></internalMacro:DataPoint></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/ExpandableText.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\ttemplate:require="{\n\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tProperty: \'sap/fe/core/templating/PropertyFormatters\'\n\t}"\n><ExpandableText\n\t\tid="{this>noWrapperId}"\n\t\tvisible="{this>displayVisible}"\n\t\ttext="{this>text}"\n\t\toverflowMode="{this>formatOptions/textExpandBehaviorDisplay}"\n\t\tmaxCharacters="{this>formatOptions/textMaxCharactersDisplay}"\n\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t/></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/File.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns:u="sap.ui.unified"\n\txmlns="sap.m"\n\txmlns:control="sap.fe.core.controls"\n\txmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\ttemplate:require="{\n        MODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tFIELD: \'sap/fe/macros/field/FieldHelper\'\n    }"\n><control:FileWrapper\n\t\tcore:require="{FIELDRUNTIME: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\tvisible="{this>visible}"\n\t\tuploadUrl="{propertyPath>@@MODEL.format}"\n\t\tpropertyPath="{propertyPath>}"\n\t\tfilename="{propertyPath>@Org.OData.Core.V1.ContentDisposition/Filename/$Path}"\n\t\tmediaType="{propertyPath>@Org.OData.Core.V1.MediaType/$Path}"\n\t\tfieldGroupIds="{parts:[{path:\'dataField>Value/$Path\'}, {path:\'entityType>\'}], formatter: \'FIELD.getFieldGroupIds\'}"\n\t\tvalidateFieldGroup="FIELDRUNTIME.onValidateFieldGroup($controller, $event)"\n\t\tcustomData:sourcePath="{this>dataSourcePath}"\n\t><template:if\n\t\t\ttest="{= ${property>$Path@com.sap.vocabularies.UI.v1.IsImageURL} || ${property>$Path@com.sap.vocabularies.UI.v1.IsImage} || RegExp(\'image/\',\'i\').test(${property>$Path@Org.OData.Core.V1.MediaType})}"\n\t\t><template:then><control:avatar><Avatar\n\t\t\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\t\t\tsrc="{this>fileSrc}"\n\t\t\t\t\t\tdisplaySize="S"\n\t\t\t\t\t\tclass="sapUiSmallMarginEnd"\n\t\t\t\t\t\tdisplayShape="Square"\n\t\t\t\t\t/></control:avatar></template:then><template:else><control:icon><core:Icon\n\t\t\t\t\t\tsrc="{= FIELD.getPathForIconSource(${propertyPath>})}"\n\t\t\t\t\t\tclass="sapUiSmallMarginEnd"\n\t\t\t\t\t\tvisible="{= FIELD.getIsMediaContentTypeNullExpr(${propertyPath>}, \'!==\') }"\n\t\t\t\t\t/></control:icon><control:link><Link\n\t\t\t\t\t\ttext="{= FIELD.getFilenameExpr(${propertyPath>@Org.OData.Core.V1.ContentDisposition/Filename@@MODEL.format}, \'{sap.fe.i18n>M_FIELD_FILEUPLOADER_NOFILENAME_TEXT}\')}"\n\t\t\t\t\t\ttarget="_blank"\n\t\t\t\t\t\thref="{= FIELD.getDownloadUrl(${propertyPath>@@MODEL.format})}"\n\t\t\t\t\t\tvisible="{= FIELD.getIsMediaContentTypeNullExpr(${propertyPath>}, \'!==\') }"\n\t\t\t\t\t\twrapping="true"\n\t\t\t\t\t/></control:link><control:text><Text emptyIndicatorMode="On" text="" visible="{= FIELD.getIsMediaContentTypeNullExpr(${propertyPath>}, \'===\') }" /></control:text></template:else></template:if><template:if test="{= ${this>editMode}!==\'Display\' &amp;&amp; !!${this>editStyle}}"><template:then><control:fileUploader><u:FileUploader\n\t\t\t\t\t\tname="FEV4FileUpload"\n\t\t\t\t\t\tvisible="{this>editableExpression}"\n\t\t\t\t\t\tbuttonOnly="true"\n\t\t\t\t\t\ticonOnly="true"\n\t\t\t\t\t\tmultiple="false"\n\t\t\t\t\t\ttooltip="{sap.fe.i18n>M_FIELD_FILEUPLOADER_UPLOAD_BUTTON_TOOLTIP}"\n\t\t\t\t\t\ticon="sap-icon://upload"\n\t\t\t\t\t\tstyle="Transparent"\n\t\t\t\t\t\tsendXHR="true"\n\t\t\t\t\t\tuseMultipart="false"\n\t\t\t\t\t\tsameFilenameAllowed="true"\n\t\t\t\t\t\tmimeType="{propertyPath>@Org.OData.Core.V1.AcceptableMediaTypes@@MODEL.value}"\n\t\t\t\t\t\ttypeMissmatch="FIELDRUNTIME.handleTypeMissmatch"\n\t\t\t\t\t\tmaximumFileSize="{= FIELD.calculateMBfromByte(${propertyPath>$MaxLength@@MODEL.value})}"\n\t\t\t\t\t\tfileSizeExceed="FIELDRUNTIME.handleFileSizeExceed"\n\t\t\t\t\t\tuploadOnChange="false"\n\t\t\t\t\t\tuploadComplete="FIELDRUNTIME.handleUploadComplete($event, {= ${propertyPath>@Org.OData.Core.V1.ContentDisposition/Filename} ? ${propertyPath>@Org.OData.Core.V1.ContentDisposition/Filename@@MODEL.format} : \'undefined\'}, \'{propertyPath>}\', $controller)"\n\t\t\t\t\t\thttpRequestMethod="Put"\n\t\t\t\t\t\tchange="FIELDRUNTIME.uploadStream($controller, $event)"\n\t\t\t\t\t\tbeforeDialogOpen="{= ${this>collaborationEnabled} ? \'FIELDRUNTIME.handleOpenUploader\' : undefined}"\n\t\t\t\t\t\tafterDialogClose="{= ${this>collaborationEnabled} ? \'FIELDRUNTIME.handleCloseUploader\' : undefined}"\n\t\t\t\t\t\tuploadStart="FIELDRUNTIME.handleOpenUploader"\n\t\t\t\t\t/></control:fileUploader><control:deleteButton><Button\n\t\t\t\t\t\ticon="sap-icon://sys-cancel"\n\t\t\t\t\t\ttype="Transparent"\n\t\t\t\t\t\tpress="FIELDRUNTIME.removeStream($event, {= ${propertyPath>@Org.OData.Core.V1.ContentDisposition/Filename} ? ${propertyPath>@Org.OData.Core.V1.ContentDisposition/Filename@@MODEL.format} : \'undefined\'}, \'{propertyPath>}\', $controller)"\n\t\t\t\t\t\ttooltip="{sap.fe.i18n>M_FIELD_FILEUPLOADER_DELETE_BUTTON_TOOLTIP}"\n\t\t\t\t\t\tvisible="{this>editableExpression}"\n\t\t\t\t\t\tenabled="{= FIELD.getIsMediaContentTypeNullExpr(${propertyPath>}, \'!==\') }"\n\t\t\t\t\t/></control:deleteButton></template:then></template:if></control:FileWrapper></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/LabelSemanticKey.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\txmlns:macro="sap.fe.macros"\n\ttemplate:require="{\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t\t\t\t\t\t }"\n><template:if test="{propertyPath>@com.sap.vocabularies.Common.v1.SemanticObject}"><template:then><control:ConditionalWrapper\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\tcondition="{= FIELD.hasSemanticObjectTargets( ${property>@@UI.getDataModelObjectPath} ) }"\n\t\t\t><control:contentTrue><Link\n\t\t\t\t\t\ttext="{this>text}"\n\t\t\t\t\t\twrapping="true"\n\t\t\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\t\t\tpress="FieldRuntime.pressLink"\n\t\t\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\t\t\tmodelContextChange="{= FIELD.computeSemanticLinkModelContextChange(${semanticObjects>}, ${property>$Path@@UI.getDataModelObjectPath}) }"\n\t\t\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\t\t><dependents><macro:QuickView dataField="{dataField>}" semanticObject="{this>semanticObject}" contextPath="{entitySet>}" /></dependents></Link></control:contentTrue><control:contentFalse><Label\n\t\t\t\t\t\tunittest:id="MacroDataFieldLabel"\n\t\t\t\t\t\ttext="{= FIELD.getLabelTextForDataField(${entitySet>@}, ${propertyPath>@}, ${propertyPath>@@FIELD.buildExpressionForTextValue}, ${property>@@FIELD.semanticKeyFormat}, ${dataField>@sapui.name}, ${this>formatOptions/semanticKeyStyle}) }"\n\t\t\t\t\t\tdesign="Bold"\n\t\t\t\t\t/></control:contentFalse></control:ConditionalWrapper></template:then><template:else><Label\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tunittest:id="MacroDataFieldLabel"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\ttext="{= FIELD.getLabelTextForDataField(${entitySet>@}, ${propertyPath>@}, ${propertyPath>@@FIELD.buildExpressionForTextValue}, ${property>@@FIELD.semanticKeyFormat}, ${dataField>@sapui.name}, ${this>formatOptions/semanticKeyStyle}) }"\n\t\t\t\tdesign="Bold"\n\t\t\t/></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/Link.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\'\n\t}"\n><template:if test="{= ${dataField>$Type} === \'com.sap.vocabularies.UI.v1.DataFieldWithNavigationPath\' }"><template:then><Link\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\ttext="{this>text}"\n\t\t\t\tpress="{= \'FieldRuntime.onDataFieldWithNavigationPath(${$source>/}, $controller, \\\'\' + ${dataField>Target/$NavigationPropertyPath} + \'\\\')\' }"\n\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\tclass="sapMTextRenderWhitespaceWrap"\n\t\t\t/></template:then><template:elseif test="{= ${dataField>$Type} === \'com.sap.vocabularies.UI.v1.DataFieldWithIntentBasedNavigation\' }"><Link\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tcore:require="{WSR: \'sap/base/strings/whitespaceReplacer\'}"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\ttext="{this>text}"\n\t\t\t\tpress="{= COMMON.getPressHandlerForDataFieldForIBN(${dataField>})}"\n\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\tclass="sapMTextRenderWhitespaceWrap"\n\t\t\t/></template:elseif><template:elseif test="{= ${dataField>$Type} === \'com.sap.vocabularies.UI.v1.DataFieldWithAction\' }"><Link\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\ttext="{this>text}"\n\t\t\t\tpress="{= FIELD.getPressEventForDataFieldActionButton(${this>}, ${dataField>}) }"\n\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\tclass="sapMTextRenderWhitespaceWrap"\n\t\t\t/></template:elseif><template:elseif test="{property>$Path@com.sap.vocabularies.Communication.v1.IsEmailAddress}"><Link\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tcore:require="{WSR: \'sap/base/strings/whitespaceReplacer\'}"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\ttext="{this>text}"\n\t\t\t\thref="mailto:{property>@@MODEL.format}"\n\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\tclass="sapMTextRenderWhitespaceWrap"\n\t\t\t/></template:elseif><template:elseif test="{property>$Path@com.sap.vocabularies.Communication.v1.IsPhoneNumber}"><Link\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tcore:require="{WSR: \'sap/base/strings/whitespaceReplacer\'}"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\ttext="{this>text}"\n\t\t\t\thref="tel:{property>@@MODEL.format}"\n\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\tclass="sapMTextRenderWhitespaceWrap"\n\t\t\t/></template:elseif><template:else><template:if test="{this>iconUrl}"><template:then><ObjectStatus\n\t\t\t\t\t\tcore:require="{WSR: \'sap/base/strings/whitespaceReplacer\', FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\t\t\ticon="{this>iconUrl}"\n\t\t\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\t\t\ttext="{this>text}"\n\t\t\t\t\t\tpress="FieldRuntime.openExternalLink"\n\t\t\t\t\t\tactive="true"\n\t\t\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\t\t\tcustomData:url="{this>linkUrl}"\n\t\t\t\t\t/></template:then><template:else><Link\n\t\t\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\t\t\tcore:require="{WSR: \'sap/base/strings/whitespaceReplacer\'}"\n\t\t\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\t\t\ttext="{this>text}"\n\t\t\t\t\t\thref="{dataField>Url@@MODEL.value}"\n\t\t\t\t\t\twrapping="{= ${this>wrap} === undefined ? true : ${this>wrap} }"\n\t\t\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\t\t/></template:else></template:if></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/LinkWithQuickView.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:macro="sap.fe.macros"\n\txmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\ttemplate:require="{\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\'\n\t\t\t\t\t\t }"\n><Link\n\t\tid="{this>noWrapperId}"\n\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\', WSR: \'sap/base/strings/whitespaceReplacer\'}"\n\t\ttext="{= ${this>formatOptions/retrieveTextFromValueList} ? FIELD.retrieveTextFromValueList( ${this>entitySet}, ${propertyPath>}, ${this>formatOptions} ) : ${this>text} }"\n\t\tvisible="{this>displayVisible}"\n\t\twrapping="{= ${this>wrap} === undefined ? true : ${this>wrap} }"\n\t\tpress="FieldRuntime.pressLink"\n\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t><dependents><macro:QuickView dataField="{dataField>}" semanticObject="{this>semanticObject}" contextPath="{entitySet>}" /></dependents></Link></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/LinkWrapper.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\txmlns:macro="sap.fe.macros"\n\txmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\ttemplate:require="{\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t\t\t\t\t\t }"\n><control:ConditionalWrapper\n\t\tid="{this>noWrapperId}"\n\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\tvisible="{this>displayVisible}"\n\t\tcondition="{= FIELD.hasSemanticObjectTargets(${property>@@UI.getDataModelObjectPath}) }"\n\t><control:contentTrue><Link\n\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\', WSR: \'sap/base/strings/whitespaceReplacer\'}"\n\t\t\t\ttext="{= ${this>formatOptions/retrieveTextFromValueList} ? FIELD.retrieveTextFromValueList( ${this>entitySet}, ${propertyPath>}, ${this>formatOptions} ) : ${this>text} }"\n\t\t\t\twrapping="{= ${this>wrap} === undefined ? true : ${this>wrap} }"\n\t\t\t\tpress="FieldRuntime.pressLink"\n\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\tmodelContextChange="{= FIELD.computeSemanticLinkModelContextChange(${semanticObjects>}, ${property>$Path@@UI.getDataModelObjectPath}) }"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t><dependents><macro:QuickView dataField="{dataField>}" semanticObject="{this>semanticObject}" contextPath="{entitySet>}" /></dependents></Link></control:contentTrue><control:contentFalse><Text\n\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\', WSR: \'sap/base/strings/whitespaceReplacer\'}"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\ttext="{this>text}"\n\t\t\t\twrapping="{= ${this>wrap} || \'false\' }"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\trenderWhitespace="true"\n\t\t\t/></control:contentFalse></control:ConditionalWrapper></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/ObjectIdentifier.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\tFIELD: \'sap/fe/macros/field/FieldHelper\'\n\t}"\n><template:if test="{= ${entitySet>$kind} === \'NavigationProperty\'}"><template:then><VBox><template:if test="{= ${this>hasSituationsIndicator}}"><template:then><HBox alignItems="Center" justifyContent="SpaceBetween" width="100%"><core:Fragment fragmentName="sap.fe.macros.internal.field.fragments.ObjectIdentifierContent" type="XML" /><SituationsIndicator\n\t\t\t\t\t\t\t\txmlns="sap.fe.macros.internal.situations"\n\t\t\t\t\t\t\t\tentitySet="{entitySet>}"\n\t\t\t\t\t\t\t\tpropertyPath="{property>$Path}"\n\t\t\t\t\t\t\t/></HBox></template:then><template:else><core:Fragment fragmentName="sap.fe.macros.internal.field.fragments.ObjectIdentifierContent" type="XML" /></template:else></template:if><template:if test="{= ${this>formatOptions/fieldGroupDraftIndicatorPropertyPath} === null }"><ObjectStatus\n\t\t\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\t\t\tvisible="{this>formatOptions/containsErrorVisibility}"\n\t\t\t\t\t\tclass="sapUiSmallMarginBottom"\n\t\t\t\t\t\ttext="{sap.fe.i18n>Contains_Errors}"\n\t\t\t\t\t\tstate="Error"\n\t\t\t\t\t/></template:if></VBox></template:then><template:else><template:if test="{= ${this>hasSituationsIndicator}}"><template:then><HBox alignItems="Center" justifyContent="SpaceBetween" width="100%"><core:Fragment fragmentName="sap.fe.macros.internal.field.fragments.ObjectIdentifierContent" type="XML" /><SituationsIndicator\n\t\t\t\t\t\t\txmlns="sap.fe.macros.internal.situations"\n\t\t\t\t\t\t\tentitySet="{entitySet>}"\n\t\t\t\t\t\t\tpropertyPath="{property>$Path}"\n\t\t\t\t\t\t/></HBox></template:then><template:else><core:Fragment fragmentName="sap.fe.macros.internal.field.fragments.ObjectIdentifierContent" type="XML" /></template:else></template:if></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/ObjectStatus.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\txmlns:macro="sap.fe.macros"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\ttemplate:require="{\n\t\t\t\t\t\t\tCRIT: \'sap/fe/core/templating/CriticalityFormatters\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\t\t\t\t\t\tProperty: \'sap/fe/core/templating/PropertyFormatters\'\n\t\t\t\t\t\t }"\n><template:if test="{= ${this>formatOptions/isAnalytics} &amp;&amp; ${property>@@Property.hasUnitOrCurrency} }"><template:then><control:ConditionalWrapper\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tcondition="{= UI.hasValidAnalyticalCurrencyOrUnit(${property>$Path@@UI.getDataModelObjectPath})}"\n\t\t\t><control:contentTrue><ObjectStatus\n\t\t\t\t\t\tunittest:id="MacroDataFieldObjectStatus"\n\t\t\t\t\t\ticon="{= CRIT.buildExpressionForCriticalityIcon(${dataField>@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\tstate="{= CRIT.buildExpressionForCriticalityColor(${dataField>@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\t\t\ttext="{this>text}"\n\t\t\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\t\t\tclass="sapMTextRenderWhitespaceWrap"\n\t\t\t\t\t/></control:contentTrue><control:contentFalse><ObjectStatus text="*" visible="{this>displayVisible}" /></control:contentFalse></control:ConditionalWrapper></template:then><template:else><ObjectStatus\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tunittest:id="MacroDataFieldObjectStatus"\n\t\t\t\ticon="{= CRIT.buildExpressionForCriticalityIcon(${dataField>@@UI.getDataModelObjectPath})}"\n\t\t\t\tstate="{= CRIT.buildExpressionForCriticalityColor(${dataField>@@UI.getDataModelObjectPath})}"\n\t\t\t\ttext="{this>text}"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\tactive="{= FIELD.hasSemanticObjectTargets( ${property>@@UI.getDataModelObjectPath} )}"\n\t\t\t\tpress="FieldRuntime.pressLink"\n\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\tmodelContextChange="{= FIELD.hasSemanticObjectsWithPath(${semanticObjects>}) ? FIELD.computeSemanticLinkModelContextChange(${semanticObjects>}, ${property>$Path@@UI.getDataModelObjectPath}) : undefined }"\n\t\t\t><template:if test="{= ${this>hasQuickViewFacets}}"><template:then><dependents><macro:QuickView dataField="{metaPath>}" semanticObject="{this>semanticObject}" contextPath="{entitySet>}" /></dependents></template:then><template:elseif test="{property>$Path@com.sap.vocabularies.Common.v1.SemanticObject}"><dependents><macro:QuickView dataField="{dataField>}" semanticObject="{this>semanticObject}" contextPath="{entitySet>}" /></dependents></template:elseif></template:if></ObjectStatus></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/SemanticKeyWithDraftIndicator.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:macro="sap.fe.macros"\n\txmlns:control="sap.fe.core.controls"\n\ttemplate:require="{\n\t\tFIELD: \'sap/fe/macros/field/FieldHelper\'\n\t}"\n><control:FormElementWrapper visible="{this>displayVisible}"><VBox class="{= FIELD.getMarginClass(${this>formatOptions/compactSemanticKey}) }"><template:if test="{= ${this>formatOptions/semanticKeyStyle} === \'ObjectIdentifier\' }"><template:then><core:Fragment fragmentName="sap.fe.macros.internal.field.displayStyle.ObjectIdentifier" type="XML" /></template:then><template:else><core:Fragment fragmentName="sap.fe.macros.internal.field.displayStyle.LabelSemanticKey" type="XML" /></template:else></template:if><template:if test="{= ${this>formatOptions/fieldGroupDraftIndicatorPropertyPath} === null }"><macro:DraftIndicator\n\t\t\t\t\tdraftIndicatorType="IconAndText"\n\t\t\t\t\tentitySet="{entitySet>}"\n\t\t\t\t\tisDraftIndicatorVisible="{=\'{parts: [{value: \\\'\' + ${propertyPath>} + \'\\\'}, {path: \\\'internal>semanticKeyHasDraftIndicator\\\'} , {path: \\\'HasDraftEntity\\\'}, {path: \\\'IsActiveEntity\\\'}, {path: \\\'pageInternal>hideDraftInfo\\\'}] , formatter: \\\'sap.fe.macros.field.FieldRuntime.isDraftIndicatorVisible\\\'}\'}"\n\t\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\t/></template:if></VBox></control:FormElementWrapper></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/displayStyle/Text.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\ttemplate:require="{\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\t\t\t\t\t\tProperty: \'sap/fe/core/templating/PropertyFormatters\'\n\t\t\t\t\t\t }"\n><template:if\n\t\ttest="{= (${property>$Path/$Type} === \'Edm.String\') &amp;&amp;\t${property>$Path@com.sap.vocabularies.UI.v1.MultiLineText} }"\n\t><template:then><Text\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\ttext="{this>text}"\n\t\t\t\twidth="100%"\n\t\t\t\twrapping="{this>wrap}"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\trenderWhitespace="true"\n\t\t\t/></template:then><template:elseif test="{= ${this>formatOptions/isAnalytics} &amp;&amp; ${property>@@Property.hasUnitOrCurrency} }"><control:ConditionalWrapper\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\tcondition="{= UI.hasValidAnalyticalCurrencyOrUnit(${property>$Path@@UI.getDataModelObjectPath})}"\n\t\t\t><control:contentTrue><Text\n\t\t\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\t\t\ttext="{this>text}"\n\t\t\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\t\t\trenderWhitespace="true"\n\t\t\t\t\t\twrapping="{this>wrap}"\n\t\t\t\t\t/></control:contentTrue><control:contentFalse><Text id="{this>noWrapperId}" text="*" /></control:contentFalse></control:ConditionalWrapper></template:elseif><template:elseif test="{= ${this>formatOptions/retrieveTextFromValueList} }"><Text\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\ttext="{= FIELD.retrieveTextFromValueList( ${this>entitySet}, ${propertyPath>}, ${this>formatOptions} ) }"\n\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\trenderWhitespace="true"\n\t\t\t/></template:elseif><template:else><Text\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\ttext="{this>text}"\n\t\t\t\twrapping="{this>wrap}"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t\trenderWhitespace="true"\n\t\t\t/></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/editStyle/CheckBox.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t\t\t\t\t\t }"\n><CheckBox\n\t\tunittest:id="MacroInput"\n\t\tlog:sourcePath="{this>dataSourcePath}"\n\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\tid="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-edit\']) : undefined) }"\n\t\tselected="{this>valueBindingExpression}"\n\t\teditable="{this>editableExpression}"\n\t\tenabled="{this>enabledExpression}"\n\t\tselect="FieldRuntime.handleChange($controller, $event)"\n\t\tfieldGroupIds="{parts:[{path:\'dataField>Value/$Path\'}, {path:\'entityType>\'}], formatter: \'FIELD.getFieldGroupIds\'}"\n\t\tvalidateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"\n\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t/></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/editStyle/DatePicker.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\t\t\t\t\t\tFE_MODEL: \'sap/fe/core/helpers/ModelHelper\'\n\t\t\t\t\t\t }"\n><DatePicker\n\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\tunittest:id="MacroInput"\n\t\tlog:sourcePath="{this>dataSourcePath}"\n\t\tid="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-edit\']) : undefined) }"\n\t\tvalue="{this>valueBindingExpression}"\n\t\twidth="100%"\n\t\teditable="{this>editableExpression}"\n\t\tenabled="{this>enabledExpression}"\n\t\trequired="{this>requiredExpression}"\n\t\tchange="FieldRuntime.handleChange($controller, $event)"\n\t\tfieldGroupIds="{parts:[{path:\'dataField>Value/$Path\'}, {path:\'entityType>\'}], formatter: \'FIELD.getFieldGroupIds\'}"\n\t\ttextAlign="{parts: [{path:\'dataField>\'}, {path:\'this>formatOptions\'}, {path:\'property>@@FIELD.getPropertyCollection\'}, {path:\'this>editModeAsObject\'}, {path:\'property>@@UI.getConverterContext\'}], formatter:\'FIELD.getTypeAlignment\'}"\n\t\tvalidateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"\n\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\tafterValueHelpOpen="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleOpenPicker\' : undefined}"\n\t\tafterValueHelpClose="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleClosePicker\' : undefined}"\n\t\tliveChange="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleLiveChange\' : undefined}"\n\t><template:if test="{this>collaborationEnabled}"><layoutData><FlexItemData growFactor="9" /></layoutData></template:if></DatePicker></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/editStyle/DateTimePicker.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\t\t\t\t\t\tFE_MODEL: \'sap/fe/core/helpers/ModelHelper\'\n\t\t\t\t\t\t }"\n><DateTimePicker\n\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\tunittest:id="MacroInput"\n\t\tlog:sourcePath="{this>dataSourcePath}"\n\t\tid="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-edit\']) : undefined) }"\n\t\tvalue="{this>valueBindingExpression}"\n\t\twidth="100%"\n\t\teditable="{this>editableExpression}"\n\t\tenabled="{this>enabledExpression}"\n\t\trequired="{this>requiredExpression}"\n\t\tchange="{= ${this>onChange} || \'FieldRuntime.handleChange($controller, $event)\' }"\n\t\tfieldGroupIds="{parts:[{path:\'dataField>Value/$Path\'}, {path:\'entityType>\'}], formatter: \'FIELD.getFieldGroupIds\'}"\n\t\ttextAlign="{parts: [{path:\'dataField>\'}, {path:\'this>formatOptions\'}, {path:\'property>@@FIELD.getPropertyCollection\'}, {path:\'this>editModeAsObject\'}, {path:\'property>@@UI.getConverterContext\'}], formatter:\'FIELD.getTypeAlignment\'}"\n\t\tvalidateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"\n\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\tshowTimezone="{this>showTimezone}"\n\t\tafterValueHelpOpen="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleOpenPicker\' : undefined}"\n\t\tafterValueHelpClose="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleClosePicker\' : undefined}"\n\t\tliveChange="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleLiveChange\' : undefined}"\n\t><template:if test="{this>collaborationEnabled}"><layoutData><FlexItemData growFactor="9" /></layoutData></template:if></DateTimePicker></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/editStyle/Input.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns="sap.m"\n\txmlns:f="sap.f"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\t\t\t\t\t\tFE_MODEL: \'sap/fe/core/helpers/ModelHelper\'\n\t\t\t\t\t\t }"\n><Input\n\t\tunittest:id="MacroInput"\n\t\tlog:sourcePath="{this>dataSourcePath}"\n\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\tid="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-edit\']) : undefined) }"\n\t\tvalue="{this>valueBindingExpression}"\n\t\tplaceholder="{property>$Path@com.sap.vocabularies.UI.v1.Placeholder@@MODEL.value}"\n\t\twidth="100%"\n\t\teditable="{this>editableExpression}"\n\t\tenabled="{this>enabledExpression}"\n\t\trequired="{this>requiredExpression}"\n\t\tchange="FieldRuntime.handleChange($controller, $event)"\n\t\tliveChange="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleLiveChange\' : undefined}"\n\t\tfieldGroupIds="{parts:[{path:\'dataField>Value/$Path\'}, {path:\'entityType>\'}], formatter: \'FIELD.getFieldGroupIds\'}"\n\t\ttextAlign="{parts: [{path:\'dataField>\'}, {path:\'this>formatOptions\'}, {path:\'property>@@FIELD.getPropertyCollection\'}, {path:\'this>editModeAsObject\'}, {path:\'property>@@UI.getConverterContext\'}], formatter:\'FIELD.getTypeAlignment\'}"\n\t\tvalidateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"\n\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t><template:if test="{this>collaborationEnabled}"><layoutData><FlexItemData growFactor="9" /></layoutData></template:if></Input></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/editStyle/InputWithUnit.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\t\t\t\t\t\tFieldTemplating: \'sap/fe/macros/field/FieldTemplating\',\n\t\t\t\t\t\t\tFE_MODEL: \'sap/fe/core/helpers/ModelHelper\'\n\t\t\t\t\t\t }"\n><template:if test="{= FIELD.hasStaticUnitOrCurrency(${property>$Path@})}"><template:then><Input\n\t\t\t\tlog:sourcePath="{this>dataSourcePath}"\n\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\tid="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-edit\']) : undefined) }"\n\t\t\t\tvalue="{this>valueBindingExpression}"\n\t\t\t\twidth="100%"\n\t\t\t\tfieldWidth="70%"\n\t\t\t\tdescription="{= FIELD.getStaticUnitOrCurrency(${property>$Path@}, ${this>formatOptions})}"\n\t\t\t\teditable="{this>editableExpression}"\n\t\t\t\tenabled="{this>enabledExpression}"\n\t\t\t\trequired="{this>requiredExpression}"\n\t\t\t\tchange="FieldRuntime.handleChange($controller, $event)"\n\t\t\t\tliveChange="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleLiveChange\' : undefined}"\n\t\t\t\ttextAlign="{parts: [{path:\'dataField>\'}, {path:\'this>formatOptions\'}, {path:\'property>@@FIELD.getPropertyCollection\'}, {path:\'this>editModeAsObject\'}, {path:\'property>@@UI.getConverterContext\'}], formatter:\'FIELD.getTypeAlignment\'}"\n\t\t\t\tfieldGroupIds="{parts:[{path:\'dataField>Value/$Path\'}, {path:\'entityType>\'}], formatter: \'FIELD.getFieldGroupIds\'}"\n\t\t\t\tvalidateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"\n\t\t\t><template:if test="{this>collaborationEnabled}"><layoutData><FlexItemData growFactor="9" /></layoutData></template:if></Input></template:then><template:else><template:with path="property>$Path@" helper="FIELD.getUnitOrCurrency" var="unit"><Input\n\t\t\t\t\tlog:sourcePath="{this>dataSourcePath}"\n\t\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\t\tid="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-edit\']) : undefined) }"\n\t\t\t\t\tvalue="{this>valueBindingExpression}"\n\t\t\t\t\twidth="{= UI.ifUnitEditable(${property>@@UI.getConverterContext},\'70%\',\'100%\')}"\n\t\t\t\t\tfieldWidth="{= UI.ifUnitEditable(${property>@@UI.getConverterContext}, \'100%\' , \'70%\')}"\n\t\t\t\t\tdescription="{this>descriptionBindingExpression}"\n\t\t\t\t\teditable="{this>editableExpression}"\n\t\t\t\t\tenabled="{this>enabledExpression}"\n\t\t\t\t\trequired="{this>requiredExpression}"\n\t\t\t\t\tchange="FieldRuntime.handleChange($controller, $event)"\n\t\t\t\t\tliveChange="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleLiveChange\' : undefined}"\n\t\t\t\t\ttextAlign="{parts: [{path:\'dataField>\'}, {path:\'this>formatOptions\'}, {path:\'property>@@FIELD.getPropertyCollection\'}, {path:\'this>editModeAsObject\'}, {path:\'property>@@UI.getConverterContext\'}], formatter:\'FIELD.getTypeAlignment\'}"\n\t\t\t\t\tfieldGroupIds="{parts:[{path:\'dataField>Value/$Path\'}, {path:\'entityType>\'}], formatter: \'FIELD.getFieldGroupIds\'}"\n\t\t\t\t\tvalidateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"\n\t\t\t\t><template:if test="{this>collaborationEnabled}"><layoutData><FlexItemData growFactor="9" /></layoutData></template:if></Input><template:if test="{= (${this>formatOptions/measureDisplayMode} !== \'Hidden\')}"><template:then><Input\n\t\t\t\t\t\t\tlog:sourcePath="{this>dataSourcePath}"\n\t\t\t\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\t\t\t\tid="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-unitEdit\']) : undefined) }"\n\t\t\t\t\t\t\tvalue="{this>unitBindingExpression}"\n\t\t\t\t\t\t\twidth="30%"\n\t\t\t\t\t\t\teditable="{= (${this>formatOptions/measureDisplayMode} === \'ReadOnly\' ? \'false\' : ${this>unitEditable}) }"\n\t\t\t\t\t\t\tenabled="{this>enabledExpression}"\n\t\t\t\t\t\t\tchange="FieldRuntime.handleChange($controller, $event)"\n\t\t\t\t\t\t\tliveChange="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleLiveChange\' : undefined}"\n\t\t\t\t\t\t\ttextAlign="{parts: [{path:\'dataField>\'}, {path:\'this>formatOptions\'}, {path:\'property>@@FIELD.getPropertyCollection\'}, {path:\'this>editModeAsObject\'}, {path:\'property>@@UI.getConverterContext\'}], formatter:\'FIELD.getTypeAlignment\'}"\n\t\t\t\t\t\t\tfieldGroupIds="{parts:[{path:\'dataField>Value/$Path\'}, {path:\'entityType>\'}], formatter: \'FIELD.getFieldGroupIds\'}"\n\t\t\t\t\t\t\tvalidateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"\n\t\t\t\t\t\t\tvisible="{= UI.ifUnitEditable(${property>@@UI.getConverterContext},true,false)}"\n\t\t\t\t\t\t><template:if test="{this>collaborationEnabled}"><layoutData><FlexItemData growFactor="9" /></layoutData></template:if></Input></template:then></template:if></template:with></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/editStyle/InputWithValueHelp.fragment.xml":'\n<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\txmlns:mdc="sap.ui.mdc"\n\txmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns:macro="sap.fe.macros"\n\ttemplate:require="{\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\t\t\t\t\t\tValueHelpTemplating: \'sap/fe/macros/internal/valuehelp/ValueHelpTemplating\',\n\t\t\t\t\t\t\tProperty: \'sap/fe/core/templating/PropertyFormatters\',\n\t\t\t\t\t\t\tFE_MODEL: \'sap/fe/core/helpers/ModelHelper\',\n\t\t\t\t\t\t\tFieldTemplating: \'sap/fe/macros/field/FieldTemplating\'\n\t}"\n><mdc:Field\n\t\tunittest:id="MacroDataField"\n\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\tdelegate="{= FIELD.computeFieldBaseDelegate(\'sap/fe/macros/field/FieldBaseDelegate\', ${this>formatOptions/retrieveTextFromValueList})}"\n\t\tid="{= ${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-edit\']) : undefined }"\n\t\tlog:sourcePath="{this>dataSourcePath}"\n\t\tvalue="{this>valueBindingExpression}"\n\t\tplaceholder="{property>$Path@com.sap.vocabularies.UI.v1.Placeholder@@MODEL.value}"\n\t\teditMode="{this>editMode}"\n\t\twidth="100%"\n\t\trequired="{this>requiredExpression}"\n\t\tadditionalValue="{this>textBindingExpression}"\n\t\tdisplay="{= UI.getFieldDisplay(${property>@@UI.getConverterContext}, ${this>formatOptions/displayMode}, ${this>editModeAsObject})}"\n\t\tmultipleLines="{= FieldTemplating.getMultipleLinesForDataField(${this>}, ${property>$Path/$Type}, ${property>$Path@com.sap.vocabularies.UI.v1.MultiLineText}) }"\n\t\tfieldHelp="{= ${valueHelpProperty>@@Property.hasValueHelp} ? ValueHelpTemplating.generateID(${this>_vhFlexId},${this>vhIdPrefix},${property>@@Property.getRelativePropertyPath},${valueHelpProperty>@@Property.getRelativePropertyPath}) : undefined}"\n\t\tfieldGroupIds="{parts:[{path:\'dataField>Value/$Path\'}, {path:\'entityType>\'}], formatter: \'FIELD.getFieldGroupIds\'}"\n\t\tchange="FieldRuntime.handleChange($controller, $event)"\n\t\tliveChange="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleLiveChange\' : undefined}"\n\t\ttextAlign="{parts: [{path:\'dataField>\'}, {path:\'this>formatOptions\'}, {path:\'property>@@FIELD.getPropertyCollection\'}, {path:\'this>editModeAsObject\'}, {path:\'property>@@UI.getConverterContext\'}], formatter:\'FIELD.getTypeAlignment\'}"\n\t\tvalidateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"\n\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\tlabel="{dataField>@@FIELD.computeLabelText}"\n\t><template:if\n\t\t\ttest="{= (${property>$Path/$Type} === \'Edm.String\') &amp;&amp;\t${property>$Path@com.sap.vocabularies.UI.v1.MultiLineText} }"\n\t\t><mdc:contentEdit><TextArea\n\t\t\t\t\tvalue="{this>valueBindingExpression}"\n\t\t\t\t\trequired="{this>requiredExpression}"\n\t\t\t\t\trows="{this>formatOptions/textLinesEdit}"\n\t\t\t\t\tgrowing="{= ${this>formatOptions/textMaxLines} > 0 ? true : undefined}"\n\t\t\t\t\tgrowingMaxLines="{this>formatOptions/textMaxLines}"\n\t\t\t\t\twidth="100%"\n\t\t\t\t\tchange="FieldRuntime.handleChange($controller, $event)"\n\t\t\t\t\tfieldGroupIds="{parts:[{path:\'dataField>Value/$Path\'}, {path:\'entityType>\'}], formatter: \'FIELD.getFieldGroupIds\'}"\n\t\t\t\t/></mdc:contentEdit></template:if><template:if test="{this>collaborationEnabled}"><mdc:layoutData><FlexItemData growFactor="9" /></mdc:layoutData></template:if></mdc:Field></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/editStyle/RatingIndicator.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n                        ID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\t\t\t\t\tFE_MODEL: \'sap/fe/core/helpers/ModelHelper\'\n\t\t\t\t\t  }"\n><RatingIndicator\n\t\tunittest:id="HeaderRatingIndicatorTest"\n\t\tid="{= ${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-display\']) : undefined }"\n\t\tmaxValue="{dataPoint>TargetValue@@MODEL.format}"\n\t\tvalue="{dataPoint>Value@@MODEL.format}"\n\t\tbinding="{dataPoint>@@MODEL.getNavigationBinding}"\n\t\ttooltip="{= ${dataPoint>@com.sap.vocabularies.Common.v1.QuickInfo} ? ${dataPoint>@com.sap.vocabularies.Common.v1.QuickInfo@@MODEL.value} : \'{sap.fe.i18n>T_COMMON_RATING_INDICATOR_TITLE_LABEL}\'}"\n\t\ticonSize="1.375rem"\n\t\tclass="sapUiTinyMarginTopBottom"\n\t\teditable="true"\n\t><template:if test="{this>collaborationEnabled}"><layoutData><FlexItemData growFactor="9" /></layoutData></template:if></RatingIndicator></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/editStyle/TextArea.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:field="sap.fe.macros.field"\n\ttemplate:require="{\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t\t\t\t\t\t }"\n><field:TextAreaEx\n\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\tunittest:id="MacroInput"\n\t\tlog:sourcePath="{this>dataSourcePath}"\n\t\tid="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-edit\']) : undefined) }"\n\t\tvalue="{this>valueBindingExpression}"\n\t\tplaceholder="{property>$Path@com.sap.vocabularies.UI.v1.Placeholder@@MODEL.value}"\n\t\trequired="{this>requiredExpression}"\n\t\trows="{this>formatOptions/textLinesEdit}"\n\t\tgrowing="{= ${this>formatOptions/textMaxLines} > 0}"\n\t\tgrowingMaxLines="{this>formatOptions/textMaxLines}"\n\t\twidth="100%"\n\t\teditable="{this>editableExpression}"\n\t\tenabled="{this>enabledExpression}"\n\t\tchange="FieldRuntime.handleChange($controller, $event)"\n\t\tfieldGroupIds="{parts:[{path:\'dataField>Value/$Path\'}, {path:\'entityType>\'}], formatter: \'FIELD.getFieldGroupIds\'}"\n\t\tvalidateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"\n\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\tliveChange="{= (${this>collaborationEnabled} || ${this>formatOptions/textMaxLength}) ? \'FieldRuntime.handleLiveChange\' : undefined}"\n\t\tmaxLength="{this>formatOptions/textMaxLength}"\n\t\tshowExceededText="true"\n\t><template:if test="{this>collaborationEnabled}"><field:layoutData><FlexItemData growFactor="9" /></field:layoutData></template:if></field:TextAreaEx></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/editStyle/TimePicker.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\t\t\t\t\t\tFE_MODEL: \'sap/fe/core/helpers/ModelHelper\'\n\t\t\t\t\t\t }"\n><TimePicker\n\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\tunittest:id="MacroInput"\n\t\tlog:sourcePath="{this>dataSourcePath}"\n\t\tid="{= (${this>idPrefix} ? ID.generate([${this>idPrefix}, \'Field-edit\']) : undefined) }"\n\t\tvalue="{this>valueBindingExpression}"\n\t\twidth="100%"\n\t\teditable="{this>editableExpression}"\n\t\tenabled="{this>enabledExpression}"\n\t\trequired="{this>requiredExpression}"\n\t\tchange="FieldRuntime.handleChange($controller, $event)"\n\t\tfieldGroupIds="{parts:[{path:\'dataField>Value/$Path\'}, {path:\'entityType>\'}], formatter: \'FIELD.getFieldGroupIds\'}"\n\t\ttextAlign="{parts: [{path:\'dataField>\'}, {path:\'this>formatOptions\'}, {path:\'property>@@FIELD.getPropertyCollection\'}, {path:\'this>editModeAsObject\'}, {path:\'property>@@UI.getConverterContext\'}], formatter:\'FIELD.getTypeAlignment\'}"\n\t\tvalidateFieldGroup="FieldRuntime.onValidateFieldGroup($controller, $event)"\n\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\tafterValueHelpOpen="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleOpenPicker\' : undefined}"\n\t\tafterValueHelpClose="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleClosePicker\' : undefined}"\n\t\tliveChange="{= ${this>collaborationEnabled} ? \'FieldRuntime.handleLiveChange\' : undefined}"\n\t><template:if test="{this>collaborationEnabled}"><layoutData><FlexItemData growFactor="9" /></layoutData></template:if></TimePicker></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/field/fragments/ObjectIdentifierContent.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\txmlns:macro="sap.fe.macros"\n\ttemplate:require="{\n\t\t\t\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t\t\t\t\t\t }"\n><template:if test="{propertyPath>@com.sap.vocabularies.Common.v1.SemanticObject}"><template:then><ObjectIdentifier\n\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\ttitle="{this>identifierTitle}"\n\t\t\t\ttext="{this>identifierText}"\n\t\t\t\ttitleActive="{= FIELD.hasSemanticObjectTargets( ${property>@@UI.getDataModelObjectPath} )}"\n\t\t\t\ttitlePress="FieldRuntime.pressLink"\n\t\t\t\tunittest:id="MacroDataFieldObjectIdentifier"\n\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\tmodelContextChange="{= FIELD.computeSemanticLinkModelContextChange(${semanticObjects>}, ${property>$Path@@UI.getDataModelObjectPath}) }"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t><dependents><macro:QuickView dataField="{dataField>}" semanticObject="{this>semanticObject}" contextPath="{entitySet>}" /></dependents></ObjectIdentifier></template:then><template:else><ObjectIdentifier\n\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\tid="{this>noWrapperId}"\n\t\t\t\tvisible="{this>displayVisible}"\n\t\t\t\ttitle="{this>identifierTitle}"\n\t\t\t\ttext="{this>identifierText}"\n\t\t\t\temptyIndicatorMode="{this>emptyIndicatorMode}"\n\t\t\t/></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/filterField/FilterFieldTemplate.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:internalMacro="sap.fe.macros.internal"\n\ttemplate:require="{\n\t\tmacroLibrary: \'sap/fe/macros/macroLibrary\',\n\t\tCOMMON_HELPER: \'sap/fe/macros/CommonHelper\'\n\t}"\n><internalMacro:FilterField\n\t\tidPrefix="{this>idPrefix}"\n\t\tvhIdPrefix="{this>vhIdPrefix}"\n\t\tproperty="{property>}"\n\t\tcontextPath="{contextPath>}"\n\t\tuseSemanticDateRange="{this>useSemanticDateRange}"\n\t\tsettings="{= COMMON_HELPER.stringifyCustomData(${this>settings}) }"\n\t\tvisualFilter="{visualFilter>}"\n\t/></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/valuehelp/ValueHelp.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns="sap.m"\n\ttemplate:require="{\n\t\tFIELD: \'sap/fe/macros/field/FieldHelper\'\n\t}"\n><template:with path="property>" var="originalProperty"><template:if test="{this>filterFieldValueHelp}"><template:then><template:with path="property>" helper="FIELD.valueHelpPropertyForFilterField" var="property"><core:Fragment fragmentName="sap.fe.macros.internal.valuehelp.ValueHelpContent" type="XML" /></template:with></template:then><template:else><template:with path="property>" helper="FIELD.valueHelpProperty" var="property"><core:Fragment fragmentName="sap.fe.macros.internal.valuehelp.ValueHelpContent" type="XML" /></template:with></template:else></template:if></template:with></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/valuehelp/ValueHelpContent.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns="sap.m"\n\txmlns:fl="sap.ui.fl.variants"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns:mdc="sap.ui.mdc"\n\txmlns:mdcv="sap.ui.mdc.valuehelp"\n\txmlns:mdcvc="sap.ui.mdc.valuehelp.content"\n\ttemplate:require="{\n\t\tValueHelpTemplating: \'sap/fe/macros/internal/valuehelp/ValueHelpTemplating\',\n\t\tProperty: \'sap/fe/core/templating/PropertyFormatters\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tMODEL : \'sap/ui/model/odata/v4/AnnotationHelper\'\n\t}"\n><template:if test="{property>@@Property.hasValueHelp}"><template:then><mdc:ValueHelp\n\t\t\t\tcore:require="{CollaborationHelper: \'sap/fe/macros/internal/collaborationHelper\'}"\n\t\t\t\tunittest:id="ValueHelpMacroFragment"\n\t\t\t\tdelegate="{= ValueHelpTemplating.getDelegateConfiguration(${property>@@Property.getPropertyPath},${this>conditionModel}, ${originalProperty>@@Property.getPropertyPath}, ${this>requestGroupId}, ${this>useMultiValueField})}"\n\t\t\t\tid="{= ValueHelpTemplating.generateID(${this>_flexId},${this>idPrefix},${originalProperty>@@Property.getRelativePropertyPath},${property>@@Property.getRelativePropertyPath})}"\n\t\t\t\tvalidateInput="{= (${this>filterFieldValueHelp} || ${this>requiresValidation}) ? true : ValueHelpTemplating.requiresValidation(${property>@@Property.getProperty})}"\n\t\t\t\topen="{= ${this>collaborationEnabled} ? \'CollaborationHelper.onValueHelpOpenDialog\' : undefined }"\n\t\t\t\tclosed="{= ${this>collaborationEnabled} ? \'CollaborationHelper.onValueHelpCloseDialog\' : undefined }"\n\t\t\t\tcustomData:valuelistForValidation="{property>@com.sap.vocabularies.Common.v1.ValueListForValidation@@MODEL.value}"\n\t\t\t\tcustomData:showConditionPanel="{= ${this>filterFieldValueHelp} ? ValueHelpTemplating.shouldShowConditionPanel(${property>@@Property.getPropertyObjectPath}, ${contextPath>@@UI.getDataModelObjectPath}) : false}"\n\t\t\t><mdc:typeahead><mdcv:Popover><mdcvc:MTable\n\t\t\t\t\t\t\tid="{= ValueHelpTemplating.generateID(${this>_flexId},${this>idPrefix},${originalProperty>@@Property.getRelativePropertyPath},${property>@@Property.getRelativePropertyPath})}::Popover::qualifier::"\n\t\t\t\t\t\t\tcaseSensitive="{= ValueHelpTemplating.useCaseSensitiveFilterRequests(${property>@@Property.getPropertyObjectPath}, ${property>/@Org.OData.Capabilities.V1.FilterFunctions})}"\n\t\t\t\t\t\t\tuseAsValueHelp="{= ${property>@com.sap.vocabularies.Common.v1.ValueListWithFixedValues} || false}"\n\t\t\t\t\t\t/></mdcv:Popover></mdc:typeahead><template:if\n\t\t\t\t\ttest="{= ${property>@com.sap.vocabularies.Common.v1.ValueListWithFixedValues} ? (${property>@com.sap.vocabularies.Common.v1.ValueListWithFixedValues} === \'true\') : true}"\n\t\t\t\t><mdc:dialog><mdcv:Dialog /></mdc:dialog></template:if></mdc:ValueHelp></template:then><template:elseif test="{= ${property>@@Property.hasDateType} || ${this>filterFieldValueHelp}}"><mdc:ValueHelp\n\t\t\t\tunittest:id="ValueHelpMacroFragmentWithDateTimeFilters"\n\t\t\t\tid="{= ValueHelpTemplating.generateID(${this>_flexId},${this>idPrefix},${originalProperty>@@Property.getRelativePropertyPath},${property>@@Property.getRelativePropertyPath})}"\n\t\t\t\tcustomData:requestGroupId="{this>requestGroupId}"\n\t\t\t><mdc:dialog><mdcv:Dialog title="{= ${property>@@Property.getLabel} || ${property>@@Property.getName}}"><mdcvc:Conditions label="{= ${property>@@Property.getLabel} || ${property>@@Property.getName}}" /></mdcv:Dialog></mdc:dialog></mdc:ValueHelp></template:elseif></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/valuehelp/ValueListDialogTable.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:internalMacro="sap.fe.macros.internal"\n\txmlns:mdc="sap.ui.mdc"\n\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\ttemplate:require="{\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tmacroLibrary: \'sap/fe/macros/macroLibrary\',\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\tVLH: \'sap/fe/macros/internal/valuehelp/ValueListHelper\',\n\t\tValueHelpTemplating: \'sap/fe/macros/internal/valuehelp/ValueHelpTemplating\',\n\t\tProperty: \'sap/fe/core/templating/PropertyFormatters\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t}"\n><template:with path="valueList>" helper="VLH.getValueListCollectionEntitySet" var="entitySet"><mdc:Table\n\t\t\tid="{source>id}::Table"\n\t\t\theight="100%"\n\t\t\tdelegate="{parts: [{path:\'valueList>\'}], formatter:\'VLH.getTableDelegate\'}"\n\t\t\tthreshold="20"\n\t\t\tp13nMode="Sort"\n\t\t\tshowRowCount="true"\n\t\t\tsortConditions="{parts: [{path:\'valueList>\'},{path:\'source>/bSuggestion\'}], formatter:\'VLH.getSortConditionsFromPresentationVariant\'}"\n\t\t\tmacrodata:columns="{= COMMON.stringifyCustomData(${viewData>/columns})}"\n\t\t\tautoBindOnInit="false"\n\t\t><mdc:columns><template:repeat list="{valueList>Parameters}" var="parameter"><template:if\n\t\t\t\t\t\ttest="{= ${parameter>$Type} !== \'com.sap.vocabularies.Common.v1.ValueListParameterIn\'  &amp;&amp; ${parameter>$Type} !== \'com.sap.vocabularies.Common.v1.ValueListParameterConstant\'}"\n\t\t\t\t\t><template:with path="parameter>ValueListProperty" var="property" helper="VLH.getValueListProperty"><template:if\n\t\t\t\t\t\t\t\ttest="{parts:[{path:\'valueList>\'}, {path:\'parameter>\'}, {path:\'source>\'}],formatter:\'VLH.getColumnVisibility\'}"\n\t\t\t\t\t\t\t><mdc:table.Column\n\t\t\t\t\t\t\t\t\twidth="{= \'{parts: [{value: \\\'getColumnWidthForValueHelpTable\\\'}, {path: \\\'internal>tablePropertiesAvailable\\\', targetType: \\\'any\\\'},{value: \\\'\' + ${parameter>ValueListProperty}+ \'\\\'} , {value: false}], formatter: \\\'sap.fe.core.formatters.TableFormatter\\\'}\' }"\n\t\t\t\t\t\t\t\t\tminWidth="{= \'{parts: [{value: \\\'getColumnWidthForValueHelpTable\\\'}, {path: \\\'internal>tablePropertiesAvailable\\\', targetType: \\\'any\\\'},{value: \\\'\' + ${parameter>ValueListProperty}+ \'\\\'} , {value: true}], formatter: \\\'sap.fe.core.formatters.TableFormatter\\\'}\' }"\n\t\t\t\t\t\t\t\t\theader="{= ${property>@com.sap.vocabularies.Common.v1.Label} || ${property>@sapui.name@@MODEL.value}}"\n\t\t\t\t\t\t\t\t\thAlign="{= ValueHelpTemplating.getColumnHAlign(${property>@@UI.getDataModelObjectPath}) }"\n\t\t\t\t\t\t\t\t\tdataProperty="{= ValueHelpTemplating.getColumnDataProperty(${parameter>ValueListProperty},${property>@@Property.getPropertyObjectPath})}"\n\t\t\t\t\t\t\t\t><internalMacro:Field editMode="Display" entitySet="{entitySet>}" dataField="{property>}" wrap="false"><internalMacro:formatOptions\n\t\t\t\t\t\t\t\t\t\t\tdisplayMode="{= ValueHelpTemplating.getValueHelpTableDisplayMode(${property>@@Property.getPropertyObjectPath})}"\n\t\t\t\t\t\t\t\t\t\t/></internalMacro:Field></mdc:table.Column></template:if></template:with></template:if></template:repeat></mdc:columns><mdc:type><mdc:table.GridTableType /></mdc:type></mdc:Table></template:with></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/valuehelp/ValueListFilterBar.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:macro="sap.fe.macros.valuehelp"\n\ttemplate:require="{\n\t\tmacroLibrary: \'sap/fe/macros/macroLibrary\'\n\t}"\n><macro:ValueHelpFilterBar\n\t\tid="{source>id}::FilterBar"\n\t\tcontextPath="{contextPath>}"\n\t\t_valueList="{valueList>}"\n\t\tliveMode="false"\n\t\tenableFallback="true"\n\t\thideBasicSearch="true"\n\t/></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/valuehelp/ValueListTable.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:customdata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:macro="sap.fe.macros"\n\txmlns:internalMacro="sap.fe.macros.internal"\n\ttemplate:require="{\n\t\tmacroLibrary: \'sap/fe/macros/macroLibrary\',\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tVLH: \'sap/fe/macros/internal/valuehelp/ValueListHelper\',\n\t\tValueHelpTemplating: \'sap/fe/macros/internal/valuehelp/ValueHelpTemplating\',\n\t\tProperty: \'sap/fe/core/templating/PropertyFormatters\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t}"\n><Table\n\t\tid="{source>id}::SuggestTable"\n\t\titems="{parts: [{path:\'valueList>\'}, {path:\'source>/requestGroupId\'}, {path:\'source>/bSuggestion\'}, {path:\'source>/valueHelpWithFixedValues\'}], formatter:\'VLH.getTableItemsParameters\'}"\n\t\tsticky="ColumnHeaders"\n\t\tgrowing="{source>/valueHelpWithFixedValues}"\n\t\tgrowingScrollToLoad="{source>/valueHelpWithFixedValues}"\n\t><columns><template:repeat list="{path: \'valueList>Parameters\'}" var="parameter"><template:if\n\t\t\t\t\ttest="{= ${parameter>$Type} !== \'com.sap.vocabularies.Common.v1.ValueListParameterIn\'  &amp;&amp; ${parameter>$Type} !== \'com.sap.vocabularies.Common.v1.ValueListParameterConstant\'}"\n\t\t\t\t><template:with path="parameter>ValueListProperty" var="dataField" helper="VLH.getValueListProperty"><template:if test="{= !(${dataField>@com.sap.vocabularies.UI.v1.Hidden} === true)}"><Column\n\t\t\t\t\t\t\t\tvisible="{parts:[{path:\'valueList>\'}, {path:\'parameter>\'}, {path:\'source>\'}],formatter:\'VLH.getColumnVisibility\'}"\n\t\t\t\t\t\t\t\tminScreenWidth="{path:\'valueList>\',formatter:\'VLH.getMinScreenWidth\'}"\n\t\t\t\t\t\t\t\tdemandPopin="true"\n\t\t\t\t\t\t\t\tpopinDisplay="Inline"\n\t\t\t\t\t\t\t\thAlign="{= ValueHelpTemplating.getColumnHAlign(${dataField>@@UI.getDataModelObjectPath}) }"\n\t\t\t\t\t\t\t\twidth="{=VLH.getColumnWidth(${dataField>@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\t\t><template:if test="{= !(${source>valueHelpWithFixedValues} === true)}"><core:Fragment fragmentName="sap.fe.macros.internal.valuehelp.ValueListTableColumnHeader" type="XML" /></template:if></Column></template:if></template:with></template:if></template:repeat></columns><items><ColumnListItem type="Active" customdata:ensurePropertyLoaded="{= VLH.getOutParameterPaths(${valueList>Parameters}) }"><cells><template:with path="valueList>" helper="VLH.getValueListCollectionEntitySet" var="entitySet"><template:repeat list="{valueList>Parameters}" var="parameter"><template:if test="{= ${parameter>$Type} !== \'com.sap.vocabularies.Common.v1.ValueListParameterIn\'}"><template:with path="parameter>ValueListProperty" var="property" helper="VLH.getValueListProperty"><template:if test="{= !(${property>@com.sap.vocabularies.UI.v1.Hidden} === true)}"><internalMacro:Field editMode="Display" entitySet="{entitySet>}" dataField="{property>}"><internalMacro:formatOptions\n\t\t\t\t\t\t\t\t\t\t\t\tdisplayMode="{= ValueHelpTemplating.getValueHelpTableDisplayMode(${property>@@Property.getPropertyObjectPath}, ${source>valueHelpWithFixedValues}) }"\n\t\t\t\t\t\t\t\t\t\t\t/></internalMacro:Field></template:if></template:with></template:if></template:repeat></template:with></cells></ColumnListItem></items></Table></core:FragmentDefinition>\n',
	"sap/fe/macros/internal/valuehelp/ValueListTableColumnHeader.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\'\n\t}"\n><template:if test="{dataField>Label}"><template:then><Label text="{dataField>Label@@MODEL.value}" wrapping="true" wrappingType="Hyphenated" /></template:then><template:elseif test="{dataField>@com.sap.vocabularies.Common.v1.Label}"><Label text="{dataField>@com.sap.vocabularies.Common.v1.Label@@MODEL.value}" wrapping="true" wrappingType="Hyphenated" /></template:elseif><template:else><Label text="[{dataField>@sapui.name@@MODEL.value}]" wrapping="true" wrappingType="Hyphenated" /></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/manifest.json":'{"_version":"1.21.0","sap.app":{"id":"sap.fe.macros","type":"library","embeds":[],"applicationVersion":{"version":"1.111.1"},"title":"UI5 library: sap.fe.macros","description":"UI5 library: sap.fe.macros","ach":"CA-UI5-FE","resources":"resources.json","offline":true},"sap.ui":{"technology":"UI5","supportedThemes":[]},"sap.ui5":{"dependencies":{"libs":{"sap.m":{},"sap.suite.ui.microchart":{},"sap.ui.core":{},"sap.fe.core":{},"sap.ui.layout":{},"sap.ui.unified":{},"sap.ui.mdc":{}}},"library":{"i18n":{"bundleUrl":"messagebundle.properties","supportedLocales":["","ar","bg","ca","cs","cy","da","de","el","en","en-GB","en-US-sappsd","en-US-saprigi","en-US-saptrc","es","es-MX","et","fi","fr","fr-CA","hi","hr","hu","id","it","iw","ja","kk","ko","lt","lv","ms","nl","no","pl","pt","pt-PT","ro","ru","sh","sk","sl","sv","th","tr","uk","vi","zh-CN","zh-TW"]},"content":{"controls":[],"elements":[],"types":[],"interfaces":[]}}}}',
	"sap/fe/macros/microchart/MicroChart.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\txmlns:m="sap.m"\n\txmlns:oDataV4MicroChart="sap.fe.macros.microchart"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tMICROCHART: \'sap/fe/macros/microchart/MicroChartHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t}"\n><template:with path="metaPath>" helper="MODEL.resolve$Path" var="metaPath"><template:with path="metaPath>Measures/0" helper="COMMON.getMeasureAttributeForMeasure" var="DataPoint"><template:if test="{this>isAnalytics}"><template:then><control:ConditionalWrapper\n\t\t\t\t\t\tcondition="{= UI.hasValidAnalyticalCurrencyOrUnit(${DataPoint>Value/$Path@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\tvisible="{= !%{@$ui5.node.isExpanded} || %{@$ui5.node.level} === 0 }"\n\t\t\t\t\t><control:contentTrue><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.MicroChartContent" type="XML" /></control:contentTrue><control:contentFalse><m:Text text="*" /></control:contentFalse></control:ConditionalWrapper></template:then><template:else><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.MicroChartContent" type="XML" /></template:else></template:if></template:with></template:with></core:FragmentDefinition>\n',
	"sap/fe/macros/microchart/fragments/AreaMicroChart.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:oDataV4MicroChart="sap.fe.macros.microchart"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tMICROCHART: \'sap/fe/macros/microchart/MicroChartHelper\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t}"\n><template:if test="{= MICROCHART.shouldMicroChartRender(\'Area\', ${DataPoint>}, ${DataPoint>Value/$Path@}, ${metaPath>})}"><template:then><template:with path="DataPoint>Value/$Path" helper="MODEL.resolve$Path" var="Measure"><template:with path="metaPath>Dimensions/0/" var="Dimension"><oDataV4MicroChart:MicroChartContainer\n\t\t\t\t\t\tcore:require="{MICROCHARTR: \'sap/fe/macros/microchart/MicroChartHelper\' }"\n\t\t\t\t\t\tunittest:id="AreaMicroChartContainer"\n\t\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'AreaMicroChart\']) : undefined }"\n\t\t\t\t\t\tshowOnlyChart="{this>showOnlyChart}"\n\t\t\t\t\t\tchartTitle="{= ${this>title} || ${metaPath>Title}}"\n\t\t\t\t\t\tchartDescription="{= ${this>description} || ${metaPath>Description}}"\n\t\t\t\t\t\tuomPath="{= MICROCHART.getUOMPathForMicrochart(${this>showOnlyChart}, ${Measure>@}) }"\n\t\t\t\t\t\tmeasures="{DataPoint>Value/$Path}"\n\t\t\t\t\t\tdimension="{= ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text} ? ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text/$Path} : ${Dimension>$PropertyPath} }"\n\t\t\t\t\t\tmeasurePrecision="{= ${DataPoint>Value/$Path/$Precision} ? ${DataPoint>Value/$Path/$Precision} : undefined }"\n\t\t\t\t\t\tmeasureScale="{= MICROCHART.getMeasureScaleForMicroChart(${DataPoint>}) }"\n\t\t\t\t\t\tdimensionPrecision="{= ${Dimension>$PropertyPath/$Precision} ? ${Dimension>$PropertyPath/$Precision} : undefined }"\n\t\t\t\t\t\tdataPointQualifiers="{= ${DataPoint>./@sapui.name}.indexOf(\'com.sap.vocabularies.UI.v1.DataPoint\') === -1 ? undefined : (${DataPoint>./@sapui.name}.indexOf(\'#\') > -1 ? ${DataPoint>./@sapui.name}.split(\'#\')[1] : \'\') }"\n\t\t\t\t\t\tbinding="{= ${this>batchGroupId} ? (\'{path:\\\'\\\', parameters : { $$groupId: \\\'\' + ${this>batchGroupId} + \'\\\'} }\') : undefined }"\n\t\t\t\t\t\tonTitlePressed="{this>onTitlePressed}"\n\t\t\t\t\t\tnavigationType="{this>navigationType}"\n\t\t\t\t\t\tcalendarPattern="{= ${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ? \'yyyy-MM-dd\' : MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}) }"\n\t\t\t\t\t><template:if test="{= !${this>showOnlyChart} || (${this>showOnlyChart} !== \'true\' ? true : false)}"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.MicroChartTitle" type="XML" /></template:if><AreaMicroChart hideOnNoData="{this>hideOnNoData}" size="{this>size}"><chart><AreaMicroChartItem\n\t\t\t\t\t\t\t\t\tunittest:id="AreaMicroChartItem"\n\t\t\t\t\t\t\t\t\tpoints="{= MICROCHART.getAggregationForMicrochart(\'Points\', ${contextPath>}, ${DataPoint>}, ${contextPath>@sapui.name}, ${Dimension>}, ${Measure>@}) }"\n\t\t\t\t\t\t\t\t><points><AreaMicroChartPoint\n\t\t\t\t\t\t\t\t\t\t\tx="{= (${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ||  (${Dimension>$PropertyPath/$Type} === \'Edm.String\' &amp;&amp; MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}))) ? MICROCHART.getX(${Dimension>$PropertyPath}, ${Dimension>$PropertyPath/$Type}, ${Dimension>$PropertyPath@}) : ${Dimension>@@.MODEL.format} }"\n\t\t\t\t\t\t\t\t\t\t\ty="{DataPoint>Value@@.MODEL.value}"\n\t\t\t\t\t\t\t\t\t\t/></points></AreaMicroChartItem></chart><target><AreaMicroChartItem\n\t\t\t\t\t\t\t\t\tpoints="{= \'{path:\\\'\' + (${contextPath>$kind} === \'EntitySet\' ? \'/\' : \'\') + ${contextPath>@sapui.name} + \'\\\'}\' }"\n\t\t\t\t\t\t\t\t><points><AreaMicroChartPoint\n\t\t\t\t\t\t\t\t\t\t\tx="{= (${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ||  (${Dimension>$PropertyPath/$Type} === \'Edm.String\' &amp;&amp; MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}))) ? MICROCHART.getX(${Dimension>$PropertyPath}, ${Dimension>$PropertyPath/$Type}, ${Dimension>$PropertyPath@}) : ${Dimension>@@.MODEL.format} }"\n\t\t\t\t\t\t\t\t\t\t\ty="{DataPoint>TargetValue@@.MODEL.value}"\n\t\t\t\t\t\t\t\t\t\t/></points></AreaMicroChartItem></target><template:if test="{= ${this>showOnlyChart} !== true }"><firstXLabel><AreaMicroChartLabel /></firstXLabel><firstYLabel><AreaMicroChartLabel /></firstYLabel><lastXLabel><AreaMicroChartLabel /></lastXLabel><lastYLabel><AreaMicroChartLabel /></lastYLabel></template:if><template:if\n\t\t\t\t\t\t\t\ttest="{= ${DataPoint>CriticalityCalculation} &amp;&amp; ${DataPoint>CriticalityCalculation/ImprovementDirection/$EnumMember} }"\n\t\t\t\t\t\t\t><template:with path="DataPoint>CriticalityCalculation" var="CriticalityCalculation"><template:if\n\t\t\t\t\t\t\t\t\t\ttest="{= ${CriticalityCalculation>ImprovementDirection/$EnumMember} === \'com.sap.vocabularies.UI.v1.ImprovementDirectionType/Minimize\'}"\n\t\t\t\t\t\t\t\t\t><template:then><minThreshold><AreaMicroChartItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="Good"\n\t\t\t\t\t\t\t\t\t\t\t\t\tpoints="{= \'{path:\\\'\' + (${contextPath>$kind} === \'EntitySet\' ? \'/\' : \'\') + ${contextPath>@sapui.name} + \'\\\'}\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t><points><AreaMicroChartPoint\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx="{= (${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ||  (${Dimension>$PropertyPath/$Type} === \'Edm.String\' &amp;&amp; MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}))) ? MICROCHART.getX(${Dimension>$PropertyPath}, ${Dimension>$PropertyPath/$Type}, ${Dimension>$PropertyPath@}) : ${Dimension>@@.MODEL.format} }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty="{CriticalityCalculation>ToleranceRangeHighValue@@.MODEL.format}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></points></AreaMicroChartItem></minThreshold><maxThreshold><AreaMicroChartItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="Error"\n\t\t\t\t\t\t\t\t\t\t\t\t\tpoints="{= \'{path:\\\'\' + (${contextPath>$kind} === \'EntitySet\' ? \'/\' : \'\') + ${contextPath>@sapui.name} + \'\\\'}\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t><points><AreaMicroChartPoint\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx="{= (${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ||  (${Dimension>$PropertyPath/$Type} === \'Edm.String\' &amp;&amp; MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}))) ? MICROCHART.getX(${Dimension>$PropertyPath}, ${Dimension>$PropertyPath/$Type}, ${Dimension>$PropertyPath@}) : ${Dimension>@@.MODEL.format} }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty="{CriticalityCalculation>DeviationRangeHighValue@@.MODEL.format}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></points></AreaMicroChartItem></maxThreshold></template:then><template:elseif\n\t\t\t\t\t\t\t\t\t\t\ttest="{= ${CriticalityCalculation>ImprovementDirection/$EnumMember} === \'com.sap.vocabularies.UI.v1.ImprovementDirectionType/Maximize\'}"\n\t\t\t\t\t\t\t\t\t\t><minThreshold><AreaMicroChartItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="Error"\n\t\t\t\t\t\t\t\t\t\t\t\t\tpoints="{= \'{path:\\\'\' + (${contextPath>$kind} === \'EntitySet\' ? \'/\' : \'\') + ${contextPath>@sapui.name} + \'\\\'}\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t><points><AreaMicroChartPoint\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx="{= (${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ||  (${Dimension>$PropertyPath/$Type} === \'Edm.String\' &amp;&amp; MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}))) ? MICROCHART.getX(${Dimension>$PropertyPath}, ${Dimension>$PropertyPath/$Type}, ${Dimension>$PropertyPath@}) : ${Dimension>@@.MODEL.format} }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty="{CriticalityCalculation>DeviationRangeLowValue@@.MODEL.format}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></points></AreaMicroChartItem></minThreshold><maxThreshold><AreaMicroChartItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="Good"\n\t\t\t\t\t\t\t\t\t\t\t\t\tpoints="{= \'{path:\\\'\' + (${contextPath>$kind} === \'EntitySet\' ? \'/\' : \'\') + ${contextPath>@sapui.name} + \'\\\'}\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t><points><AreaMicroChartPoint\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx="{= (${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ||  (${Dimension>$PropertyPath/$Type} === \'Edm.String\' &amp;&amp; MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}))) ? MICROCHART.getX(${Dimension>$PropertyPath}, ${Dimension>$PropertyPath/$Type}, ${Dimension>$PropertyPath@}) : ${Dimension>@@.MODEL.format} }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty="{CriticalityCalculation>ToleranceRangeLowValue@@.MODEL.format}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></points></AreaMicroChartItem></maxThreshold></template:elseif><template:elseif\n\t\t\t\t\t\t\t\t\t\t\ttest="{= ${CriticalityCalculation>ImprovementDirection/$EnumMember} === \'com.sap.vocabularies.UI.v1.ImprovementDirectionType/Target\'}"\n\t\t\t\t\t\t\t\t\t\t><minThreshold><AreaMicroChartItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="Error"\n\t\t\t\t\t\t\t\t\t\t\t\t\tpoints="{= \'{path:\\\'\' + (${contextPath>$kind} === \'EntitySet\' ? \'/\' : \'\') + ${contextPath>@sapui.name} + \'\\\'}\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t><points><AreaMicroChartPoint\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx="{= (${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ||  (${Dimension>$PropertyPath/$Type} === \'Edm.String\' &amp;&amp; MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}))) ? MICROCHART.getX(${Dimension>$PropertyPath}, ${Dimension>$PropertyPath/$Type}, ${Dimension>$PropertyPath@}) : ${Dimension>@@.MODEL.format} }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty="{CriticalityCalculation>DeviationRangeLowValue@@.MODEL.format}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></points></AreaMicroChartItem></minThreshold><maxThreshold><AreaMicroChartItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="Error"\n\t\t\t\t\t\t\t\t\t\t\t\t\tpoints="{= \'{path:\\\'\' + (${contextPath>$kind} === \'EntitySet\' ? \'/\' : \'\') + ${contextPath>@sapui.name} + \'\\\'}\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t><points><AreaMicroChartPoint\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx="{= (${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ||  (${Dimension>$PropertyPath/$Type} === \'Edm.String\' &amp;&amp; MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}))) ? MICROCHART.getX(${Dimension>$PropertyPath}, ${Dimension>$PropertyPath/$Type}, ${Dimension>$PropertyPath@}) : ${Dimension>@@.MODEL.format} }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty="{CriticalityCalculation>DeviationRangeHighValue@@.MODEL.format}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></points></AreaMicroChartItem></maxThreshold><innerMinThreshold><AreaMicroChartItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="Good"\n\t\t\t\t\t\t\t\t\t\t\t\t\tpoints="{= \'{path:\\\'\' + (${contextPath>$kind} === \'EntitySet\' ? \'/\' : \'\') + ${contextPath>@sapui.name} + \'\\\'}\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t><points><AreaMicroChartPoint\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx="{= (${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ||  (${Dimension>$PropertyPath/$Type} === \'Edm.String\' &amp;&amp; MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}))) ? MICROCHART.getX(${Dimension>$PropertyPath}, ${Dimension>$PropertyPath/$Type}, ${Dimension>$PropertyPath@}) : ${Dimension>@@.MODEL.format} }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty="{CriticalityCalculation>ToleranceRangeLowValue@@.MODEL.format}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></points></AreaMicroChartItem></innerMinThreshold><innerMaxThreshold><AreaMicroChartItem\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="Good"\n\t\t\t\t\t\t\t\t\t\t\t\t\tpoints="{= \'{path:\\\'\' + (${contextPath>$kind} === \'EntitySet\' ? \'/\' : \'\') + ${contextPath>@sapui.name} + \'\\\'}\' }"\n\t\t\t\t\t\t\t\t\t\t\t\t><points><AreaMicroChartPoint\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tx="{= (${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ||  (${Dimension>$PropertyPath/$Type} === \'Edm.String\' &amp;&amp; MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}))) ? MICROCHART.getX(${Dimension>$PropertyPath}, ${Dimension>$PropertyPath/$Type}, ${Dimension>$PropertyPath@}) : ${Dimension>@@.MODEL.format} }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ty="{CriticalityCalculation>ToleranceRangeHighValue@@.MODEL.format}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></points></AreaMicroChartItem></innerMaxThreshold></template:elseif></template:if></template:with></template:if></AreaMicroChart></oDataV4MicroChart:MicroChartContainer></template:with></template:with></template:then><template:elseif\n\t\t\ttest="{= MICROCHART.logWarning(\'Area\', { DataPoint_Value : ${DataPoint>Value}, Dimension : ${metaPath>Dimensions/0/$PropertyPath}, CriticalityCalculation : (${DataPoint>CriticalityCalculation} &amp;&amp; ${DataPoint>CriticalityCalculation/ImprovementDirection/$EnumMember}) }) }"\n\t\t/></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/microchart/fragments/BulletMicroChart.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:oDataV4MicroChart="sap.fe.macros.microchart"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tMICROCHART: \'sap/fe/macros/microchart/MicroChartHelper\',\n\t\tCRIT: \'sap/fe/core/templating/CriticalityFormatters\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t}"\n><template:if test="{= MICROCHART.shouldMicroChartRender(\'Bullet\', ${DataPoint>}, ${DataPoint>Value/$Path@})}"><template:then><template:with path="DataPoint>Value/$Path" helper="MODEL.resolve$Path" var="Measure"><oDataV4MicroChart:MicroChartContainer\n\t\t\t\t\tunittest:id="BulletMicroChartContainer"\n\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'BulletMicroChart\']) : undefined }"\n\t\t\t\t\tshowOnlyChart="{this>showOnlyChart}"\n\t\t\t\t\tchartTitle="{= ${this>title} || ${metaPath>Title}}"\n\t\t\t\t\tchartDescription="{= ${this>description} || ${metaPath>Description}}"\n\t\t\t\t\tuomPath="{= MICROCHART.getUOMPathForMicrochart(${this>showOnlyChart}, ${Measure>@}) }"\n\t\t\t\t\tbinding="{= MICROCHART.getBindingExpressionForMicrochart(\'Bullet\', ${Measure>@}, ${this>}, ${contextPath>}, ${contextPath>@sapui.name}) }"\n\t\t\t\t\tvisible="{= MICROCHART.getHiddenPathExpression(${DataPoint>Value/$Path@com.sap.vocabularies.UI.v1.Hidden}) }"\n\t\t\t\t\tnavigationType="{this>navigationType}"\n\t\t\t\t\tonTitlePressed="{this>onTitlePressed}"\n\t\t\t\t><template:if test="{= !${this>showOnlyChart} || (${this>showOnlyChart} !== \'true\' ? true : false)}"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.MicroChartTitle" type="XML" /></template:if><BulletMicroChart\n\t\t\t\t\t\tunittest:id="BulletMicroChart"\n\t\t\t\t\t\ttargetValue="{DataPoint>TargetValue@@MODEL.value}"\n\t\t\t\t\t\tforecastValue="{DataPoint>ForecastValue@@MODEL.value}"\n\t\t\t\t\t\tmaxValue="{DataPoint>MaximumValue@@MODEL.format}"\n\t\t\t\t\t\tminValue="{DataPoint>MinimumValue@@MODEL.format}"\n\t\t\t\t\t\tactualValueLabel="{= MICROCHART.formatDecimal(${DataPoint>Value/$Path}, ${DataPoint>Value/$Path/$}, (${DataPoint>ValueFormat} &amp;&amp; ${DataPoint>ValueFormat/NumberOfFractionalDigits})) }"\n\t\t\t\t\t\ttargetValueLabel="{= MICROCHART.formatDecimal(${DataPoint>TargetValue/$Path}, ${DataPoint>TargetValue/$Path/$}, (${DataPoint>ValueFormat} &amp;&amp; ${DataPoint>ValueFormat/NumberOfFractionalDigits})) }"\n\t\t\t\t\t\tshowDeltaValue="{= ${DataPoint>Visualization/$EnumMember} &amp;&amp; ${DataPoint>Visualization/$EnumMember}.indexOf(\'DeltaBulletChart\') > -1 }"\n\t\t\t\t\t\tmode="{= ${DataPoint>Visualization/$EnumMember} &amp;&amp; ${DataPoint>Visualization/$EnumMember}.indexOf(\'DeltaBulletChart\') > -1 ? \'Delta\' : undefined }"\n\t\t\t\t\t\tsize="{this>size}"\n\t\t\t\t\t\thideOnNoData="{this>hideOnNoData}"\n\t\t\t\t\t><template:if\n\t\t\t\t\t\t\ttest="{= ${DataPoint>Criticality} || (!${DataPoint>Criticality} &amp;&amp; !${DataPoint>CriticalityCalculation}) }"\n\t\t\t\t\t\t><template:then><actual><BulletMicroChartData\n\t\t\t\t\t\t\t\t\t\tunittest:id="BulletMicroChartData"\n\t\t\t\t\t\t\t\t\t\tvalue="{DataPoint>Value@@MODEL.value}"\n\t\t\t\t\t\t\t\t\t\tcolor="{= ${DataPoint>Criticality} ? CRIT.buildExpressionForCriticalityColorMicroChart(${DataPoint>@@UI.getDataModelObjectPath}) : undefined }"\n\t\t\t\t\t\t\t\t\t/></actual></template:then><template:else><template:with path="DataPoint>CriticalityCalculation" var="CriticalityCalculation"><template:with path="DataPoint>CriticalityCalculation/ImprovementDirection/$EnumMember" var="Direction"><actual><BulletMicroChartData\n\t\t\t\t\t\t\t\t\t\t\t\tvalue="{DataPoint>Value@@MODEL.value}"\n\t\t\t\t\t\t\t\t\t\t\t\tcolor="{= COMMON.getCriticalityCalculationBinding(${Direction>},\n\t\t\t\t\t\t\t\t\t${DataPoint>Value@@MODEL.value},\n\t\t\t\t\t\t\t\t\t${CriticalityCalculation>DeviationRangeLowValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t${CriticalityCalculation>ToleranceRangeLowValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t${CriticalityCalculation>AcceptanceRangeLowValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t${CriticalityCalculation>AcceptanceRangeHighValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t${CriticalityCalculation>ToleranceRangeHighValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t${CriticalityCalculation>DeviationRangeHighValue@@MODEL.format}) }"\n\t\t\t\t\t\t\t\t\t\t\t/></actual><thresholds><template:if\n\t\t\t\t\t\t\t\t\t\t\t\ttest="{= ${Direction>}.indexOf(\'Minimize\') === -1 &amp;&amp; ${CriticalityCalculation>DeviationRangeLowValue} }"\n\t\t\t\t\t\t\t\t\t\t\t><BulletMicroChartData\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue="{CriticalityCalculation>DeviationRangeLowValue@@MODEL.format}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="{CriticalityCalculation>DeviationRangeLowValue@@MICROCHART.getThresholdColor}"\n\t\t\t\t\t\t\t\t\t\t\t\t/></template:if><template:if\n\t\t\t\t\t\t\t\t\t\t\t\ttest="{= ${Direction>}.indexOf(\'Minimize\') === -1 &amp;&amp; ${CriticalityCalculation>ToleranceRangeLowValue} }"\n\t\t\t\t\t\t\t\t\t\t\t><BulletMicroChartData\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue="{CriticalityCalculation>ToleranceRangeLowValue@@MODEL.format}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="{CriticalityCalculation>ToleranceRangeLowValue@@MICROCHART.getThresholdColor}"\n\t\t\t\t\t\t\t\t\t\t\t\t/></template:if><template:if\n\t\t\t\t\t\t\t\t\t\t\t\ttest="{= ${Direction>}.indexOf(\'Maximize\') === -1 &amp;&amp; ${CriticalityCalculation>ToleranceRangeHighValue} }"\n\t\t\t\t\t\t\t\t\t\t\t><BulletMicroChartData\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue="{CriticalityCalculation>ToleranceRangeHighValue@@MODEL.format}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="{CriticalityCalculation>ToleranceRangeHighValue@@MICROCHART.getThresholdColor}"\n\t\t\t\t\t\t\t\t\t\t\t\t/></template:if><template:if\n\t\t\t\t\t\t\t\t\t\t\t\ttest="{= ${Direction>}.indexOf(\'Maximize\') === -1 &amp;&amp; ${CriticalityCalculation>DeviationRangeHighValue} }"\n\t\t\t\t\t\t\t\t\t\t\t><BulletMicroChartData\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue="{CriticalityCalculation>DeviationRangeHighValue@@MODEL.format}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="{CriticalityCalculation>DeviationRangeHighValue@@MICROCHART.getThresholdColor}"\n\t\t\t\t\t\t\t\t\t\t\t\t/></template:if></thresholds></template:with></template:with></template:else></template:if></BulletMicroChart></oDataV4MicroChart:MicroChartContainer></template:with></template:then><template:elseif test="{= MICROCHART.logWarning(\'Bullet\', { DataPoint_Value : ${DataPoint>Value} }) }" /></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/microchart/fragments/ColumnMicroChart.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:oDataV4MicroChart="sap.fe.macros.microchart"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tMICROCHART: \'sap/fe/macros/microchart/MicroChartHelper\',\n\t\tCRIT: \'sap/fe/core/templating/CriticalityFormatters\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t}"\n><template:if test="{= MICROCHART.shouldMicroChartRender(\'Column\', ${DataPoint>}, ${DataPoint>Value/$Path@}, ${metaPath>})}"><template:then><template:with path="DataPoint>Value/$Path" helper="MODEL.resolve$Path" var="Measure"><template:with path="metaPath>Dimensions/0/" var="Dimension"><oDataV4MicroChart:MicroChartContainer\n\t\t\t\t\t\tunittest:id="ColumnMicroChartContainer"\n\t\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'ColumnMicroChart\']) : undefined }"\n\t\t\t\t\t\tshowOnlyChart="{this>showOnlyChart}"\n\t\t\t\t\t\tchartTitle="{= ${this>title} || ${metaPath>Title}}"\n\t\t\t\t\t\tchartDescription="{= ${this>description} || ${metaPath>Description}}"\n\t\t\t\t\t\tuomPath="{= MICROCHART.getUOMPathForMicrochart(${this>showOnlyChart}, ${Measure>@}) }"\n\t\t\t\t\t\tmeasures="{DataPoint>Value/$Path}"\n\t\t\t\t\t\tdimension="{= ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text} ? ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text/$Path} : ${Dimension>$PropertyPath} }"\n\t\t\t\t\t\tmeasurePrecision="{= ${DataPoint>Value/$Path/$Precision} ? ${DataPoint>Value/$Path/$Precision} : undefined }"\n\t\t\t\t\t\tmeasureScale="{= MICROCHART.getMeasureScaleForMicroChart(${DataPoint>}) }"\n\t\t\t\t\t\tdimensionPrecision="{= ${Dimension>$PropertyPath/$Precision} ? ${Dimension>$PropertyPath/$Precision} : undefined }"\n\t\t\t\t\t\tdataPointQualifiers="{= MICROCHART.getdataPointQualifiersForMicroChart(${DataPoint>./@sapui.name}) }"\n\t\t\t\t\t\tbinding="{= ${this>batchGroupId} ? (\'{path:\\\'\\\', parameters : { $$groupId: \\\'\' + ${this>batchGroupId} + \'\\\'} }\') : undefined }"\n\t\t\t\t\t\tonTitlePressed="{this>onTitlePressed}"\n\t\t\t\t\t\tnavigationType="{this>navigationType}"\n\t\t\t\t\t\tcalendarPattern="{= ${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ? \'yyyy-MM-dd\' : MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}) }"\n\t\t\t\t\t><template:if test="{= !${this>showOnlyChart} || (${this>showOnlyChart} !== \'true\' ? true : false)}"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.MicroChartTitle" type="XML" /></template:if><ColumnMicroChart\n\t\t\t\t\t\t\tunittest:id="ColumnMicroChart"\n\t\t\t\t\t\t\thideOnNoData="{this>hideOnNoData}"\n\t\t\t\t\t\t\tcolumns="{= MICROCHART.getAggregationForMicrochart(\'Columns\', ${contextPath>}, ${DataPoint>}, ${contextPath>@sapui.name}, ${Dimension>}, ${Measure>@}) }"\n\t\t\t\t\t\t\tsize="{this>size}"\n\t\t\t\t\t\t><columns><template:if\n\t\t\t\t\t\t\t\t\ttest="{= ${DataPoint>Criticality} || (!${DataPoint>Criticality} &amp;&amp; !${DataPoint>CriticalityCalculation}) }"\n\t\t\t\t\t\t\t\t><template:then><ColumnMicroChartData\n\t\t\t\t\t\t\t\t\t\t\tunittest:id="ColumnMicroChartData"\n\t\t\t\t\t\t\t\t\t\t\tvalue="{path:\'DataPoint>Value@@MODEL.value\', type:\'sap.ui.model.odata.type.Decimal\'}"\n\t\t\t\t\t\t\t\t\t\t\tcolor="{= ${DataPoint>Criticality} ? CRIT.buildExpressionForCriticalityColorMicroChart(${DataPoint>@@UI.getDataModelObjectPath}) : undefined }"\n\t\t\t\t\t\t\t\t\t\t/></template:then><template:else><template:with path="DataPoint>CriticalityCalculation" var="CriticalityCalculation"><template:with\n\t\t\t\t\t\t\t\t\t\t\t\tpath="DataPoint>CriticalityCalculation/ImprovementDirection/$EnumMember"\n\t\t\t\t\t\t\t\t\t\t\t\tvar="Direction"\n\t\t\t\t\t\t\t\t\t\t\t><ColumnMicroChartData\n\t\t\t\t\t\t\t\t\t\t\t\t\tvalue="{path:\'DataPoint>Value@@MODEL.value\', type:\'sap.ui.model.odata.type.Decimal\'}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tcolor="{= COMMON.getCriticalityCalculationBinding(${Direction>},\n\t\t\t\t\t\t\t\t\t\t\t\t${DataPoint>Value@@MODEL.value},\n\t\t\t\t\t\t\t\t\t\t\t\t${CriticalityCalculation>DeviationRangeLowValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t\t\t\t${CriticalityCalculation>ToleranceRangeLowValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t\t\t\t${CriticalityCalculation>AcceptanceRangeLowValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t\t\t\t${CriticalityCalculation>AcceptanceRangeHighValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t\t\t\t${CriticalityCalculation>ToleranceRangeHighValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t\t\t\t${CriticalityCalculation>DeviationRangeHighValue@@MODEL.format}) }"\n\t\t\t\t\t\t\t\t\t\t\t\t/></template:with></template:with></template:else></template:if></columns><template:if test="{= ${this>showOnlyChart} !== \'true\' }"><leftBottomLabel><ColumnMicroChartLabel /></leftBottomLabel><leftTopLabel><ColumnMicroChartLabel /></leftTopLabel><rightBottomLabel><ColumnMicroChartLabel /></rightBottomLabel><rightTopLabel><ColumnMicroChartLabel /></rightTopLabel></template:if></ColumnMicroChart></oDataV4MicroChart:MicroChartContainer></template:with></template:with></template:then><template:elseif\n\t\t\ttest="{= MICROCHART.logWarning(\'Column\', { DataPoint_Value : ${DataPoint>Value}, Dimension : ${metaPath>Dimensions/0/$PropertyPath} }) }"\n\t\t/></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/microchart/fragments/ComparisonMicroChart.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:oDataV4MicroChart="sap.fe.macros.microchart"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tMICROCHART: \'sap/fe/macros/microchart/MicroChartHelper\',\n\t\tCRIT: \'sap/fe/core/templating/CriticalityFormatters\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t}"\n><template:if test="{= MICROCHART.shouldMicroChartRender(\'Comparison\', ${DataPoint>}, ${DataPoint>Value/$Path@}, ${metaPath>})}"><template:then><template:with path="DataPoint>Value/$Path" helper="MODEL.resolve$Path" var="Measure"><template:with path="metaPath>Dimensions/0/" var="Dimension"><template:with path="metaPath>Dimensions/0/$PropertyPath" helper="MODEL.resolve$Path" var="DimensionPath"><oDataV4MicroChart:MicroChartContainer\n\t\t\t\t\t\t\tunittest:id="ComparisonMicroChartContainer"\n\t\t\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'ComparisonMicroChart\']) : undefined }"\n\t\t\t\t\t\t\tshowOnlyChart="{this>showOnlyChart}"\n\t\t\t\t\t\t\tchartTitle="{= ${this>title} || ${metaPath>Title}}"\n\t\t\t\t\t\t\tchartDescription="{= ${this>description} || ${metaPath>Description}}"\n\t\t\t\t\t\t\tuomPath="{= MICROCHART.getUOMPathForMicrochart(${this>showOnlyChart}, ${Measure>@}) }"\n\t\t\t\t\t\t\tdataPointQualifiers="{= MICROCHART.getdataPointQualifiersForMicroChart(${DataPoint>./@sapui.name}) }"\n\t\t\t\t\t\t\tbinding="{= ${this>batchGroupId} ? (\'{path:\\\'\\\', parameters : { $$groupId: \\\'\' + ${this>batchGroupId} + \'\\\'} }\') : undefined }"\n\t\t\t\t\t\t\tonTitlePressed="{this>onTitlePressed}"\n\t\t\t\t\t\t\tnavigationType="{this>navigationType}"\n\t\t\t\t\t\t><template:if test="{= !${this>showOnlyChart} || (${this>showOnlyChart} !== \'true\' ? true : false)}"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.MicroChartTitle" type="XML" /></template:if><ComparisonMicroChart\n\t\t\t\t\t\t\t\tunittest:id="ComparisonMicroChart"\n\t\t\t\t\t\t\t\thideOnNoData="{this>hideOnNoData}"\n\t\t\t\t\t\t\t\tdata="{= MICROCHART.getAggregationForMicrochart(\'Data\', ${contextPath>}, ${DataPoint>}, ${contextPath>@sapui.name}, ${Dimension>}, ${Measure>@}) }"\n\t\t\t\t\t\t\t\tcolorPalette="{= MICROCHART.getcolorPaletteForMicroChart(${DataPoint>}) }"\n\t\t\t\t\t\t\t\tsize="{this>size}"\n\t\t\t\t\t\t\t\tmaxValue="{DataPoint>MaximumValue@@MODEL.value}"\n\t\t\t\t\t\t\t\tminValue="{DataPoint>MinimumValue@@MODEL.value}"\n\t\t\t\t\t\t\t><data><ComparisonMicroChartData\n\t\t\t\t\t\t\t\t\t\tunittest:id="ComparisonMicroChartData"\n\t\t\t\t\t\t\t\t\t\tvalue="{DataPoint>Value@@MODEL.value}"\n\t\t\t\t\t\t\t\t\t\ttitle="{= ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text} ? ${DimensionPath>@com.sap.vocabularies.Common.v1.Text@@MODEL.format} : ${Dimension>@@MODEL.format} }"\n\t\t\t\t\t\t\t\t\t\tdisplayValue="{= MICROCHART.getDisplayValueForMicroChart(${DataPoint>}, ${DataPoint>Value/$Path@com.sap.vocabularies.Common.v1.Text}, ${DataPoint>Value/$Path@com.sap.vocabularies.Common.v1.Text/$Path/$}, ${DataPoint>Value/$Path/$}) }"\n\t\t\t\t\t\t\t\t\t\tcolor="{= CRIT.buildExpressionForCriticalityColorMicroChart(${DataPoint>@@UI.getDataModelObjectPath}) }"\n\t\t\t\t\t\t\t\t\t/></data></ComparisonMicroChart></oDataV4MicroChart:MicroChartContainer></template:with></template:with></template:with></template:then><template:elseif\n\t\t\ttest="{= MICROCHART.logWarning(\'Comparison\', { DataPoint_Value : ${DataPoint>Value}, Dimension : ${metaPath>Dimensions/0/$PropertyPath} }) }"\n\t\t/></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/microchart/fragments/HarveyBallMicroChart.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:oDataV4MicroChart="sap.fe.macros.microchart"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tMICROCHART: \'sap/fe/macros/microchart/MicroChartHelper\',\n\t\tCRIT: \'sap/fe/core/templating/CriticalityFormatters\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t}"\n><template:if\n\t\ttest="{= MICROCHART.shouldMicroChartRender(\'Harvey\', ${DataPoint>}, ${DataPoint>Value/$Path@}, \'\', ${DataPoint>MaximumValue/$Path@})}"\n\t><template:then><template:with path="DataPoint>Value/$Path" helper="MODEL.resolve$Path" var="Measure"><oDataV4MicroChart:MicroChartContainer\n\t\t\t\t\tunittest:id="HarveyBallMicroChartContainer"\n\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'HarveyBallMicroChart\']) : undefined }"\n\t\t\t\t\tshowOnlyChart="{this>showOnlyChart}"\n\t\t\t\t\tchartTitle="{= ${this>title} || ${metaPath>Title}}"\n\t\t\t\t\tchartDescription="{= ${this>description} || ${metaPath>Description}}"\n\t\t\t\t\tuomPath="{= MICROCHART.getUOMPathForMicrochart(${this>showOnlyChart}, ${Measure>@}) }"\n\t\t\t\t\tbinding="{= MICROCHART.getBindingExpressionForMicrochart(\'Harvey\', ${Measure>@}, ${this>}, ${contextPath>}, ${contextPath>@sapui.name}, ${DataPoint>}) }"\n\t\t\t\t\tvisible="{= MICROCHART.getHiddenPathExpression(${DataPoint>Value/$Path@com.sap.vocabularies.UI.v1.Hidden}, ${DataPoint>MaximumValue/$Path@com.sap.vocabularies.UI.v1.Hidden}) }"\n\t\t\t\t\tonTitlePressed="{this>onTitlePressed}"\n\t\t\t\t\tnavigationType="{this>navigationType}"\n\t\t\t\t><template:if test="{= !${this>showOnlyChart} || (${this>showOnlyChart} !== \'true\' ? true : false)}"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.MicroChartTitle" type="XML" /></template:if><HarveyBallMicroChart\n\t\t\t\t\t\tunittest:id="HarveyBallMicroChart"\n\t\t\t\t\t\thideOnNoData="{this>hideOnNoData}"\n\t\t\t\t\t\tformattedLabel="true"\n\t\t\t\t\t\ttotalLabel="{= MICROCHART.formatDecimal(${DataPoint>MaximumValue/$Path}, ${DataPoint>MaximumValue/$Path/$}, (${DataPoint>ValueFormat} &amp;&amp; ${DataPoint>ValueFormat/NumberOfFractionalDigits})) }"\n\t\t\t\t\t\ttotal="{DataPoint>MaximumValue@@MODEL.value}"\n\t\t\t\t\t\tcolorPalette="{= MICROCHART.getcolorPaletteForMicroChart(${DataPoint>}) }"\n\t\t\t\t\t\tsize="{this>size}"\n\t\t\t\t\t><items><HarveyBallMicroChartItem\n\t\t\t\t\t\t\t\tunittest:id="HarveyBallMicroChartItem"\n\t\t\t\t\t\t\t\tformattedLabel="true"\n\t\t\t\t\t\t\t\tfractionLabel="{= MICROCHART.formatDecimal(${DataPoint>Value/$Path}, ${DataPoint>Value/$Path/$}, (${DataPoint>ValueFormat} &amp;&amp; ${DataPoint>ValueFormat/NumberOfFractionalDigits})) }"\n\t\t\t\t\t\t\t\tfraction="{DataPoint>Value@@MODEL.value}"\n\t\t\t\t\t\t\t\tcolor="{= CRIT.buildExpressionForCriticalityColorMicroChart(${DataPoint>@@UI.getDataModelObjectPath}) }"\n\t\t\t\t\t\t\t/></items></HarveyBallMicroChart></oDataV4MicroChart:MicroChartContainer></template:with></template:then><template:elseif\n\t\t\ttest="{= MICROCHART.logWarning(\'HarveyBall\', { DataPoint_Value : ${DataPoint>Value}, DataPoint_MaximumValue : ${DataPoint>MaximumValue} }) }"\n\t\t/></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/microchart/fragments/LineMicroChart.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:oDataV4MicroChart="sap.fe.macros.microchart"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tMICROCHART: \'sap/fe/macros/microchart/MicroChartHelper\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\'\n\t}"\n><template:with path="DataPoint>Value/$Path" helper="MODEL.resolve$Path" var="Measure"><template:with path="metaPath>Dimensions/0/" var="Dimension"><oDataV4MicroChart:MicroChartContainer\n\t\t\t\tcore:require="{MICROCHARTR: \'sap/fe/macros/microchart/MicroChartHelper\' }"\n\t\t\t\tunittest:id="LineMicroChartContainer"\n\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'LineMicroChart\']) : undefined }"\n\t\t\t\tshowOnlyChart="{this>showOnlyChart}"\n\t\t\t\tchartTitle="{= ${this>title} || ${metaPath>Title}}"\n\t\t\t\tchartDescription="{= ${this>description} || ${metaPath>Description}}"\n\t\t\t\tuomPath="{= MICROCHART.getUOMPathForMicrochart(${this>showOnlyChart}, ${Measure>@}) }"\n\t\t\t\tmeasures="{= MICROCHART.getMeasurePropertyPaths(${metaPath>}, ${contextPath>./@}, \'Line\')}"\n\t\t\t\tdimension="{= ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text} ? ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text/$Path} : ${Dimension>$PropertyPath} }"\n\t\t\t\tmeasurePrecision="{= ${Measure>$Precision} ? ${Measure>$Precision} : undefined }"\n\t\t\t\tmeasureScale="{= MICROCHART.getMeasureScaleForMicroChart(${DataPoint>}) }"\n\t\t\t\tdimensionPrecision="{= ${Dimension>$PropertyPath/$Precision} ? ${Dimension>$PropertyPath/$Precision} : undefined }"\n\t\t\t\tdataPointQualifiers="{= MICROCHART.getDataPointQualifiersForMeasures(${metaPath>}, ${contextPath>./@}, \'Line\')}"\n\t\t\t\tbinding="{= ${this>batchGroupId} ? (\'{path:\\\'\\\', parameters : { $$groupId: \\\'\' + ${this>batchGroupId} + \'\\\'} }\') : undefined }"\n\t\t\t\tonTitlePressed="{this>onTitlePressed}"\n\t\t\t\tnavigationType="{this>navigationType}"\n\t\t\t\tcalendarPattern="{= ${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ? \'yyyy-MM-dd\' : MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}) }"\n\t\t\t><template:if test="{= !${this>showOnlyChart} || (${this>showOnlyChart} !== \'true\' ? true : false)}"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.MicroChartTitle" type="XML" /></template:if><LineMicroChart showThresholdLine="false" hideOnNoData="{this>hideOnNoData}" size="{this>size}"><lines><template:repeat list="{metaPath>Measures}" var="Measure"><template:with path="Measure>" helper="COMMON.getMeasureAttributeForMeasure" var="DataPoint"><template:if\n\t\t\t\t\t\t\t\t\ttest="{= ${DataPoint>Value} &amp;&amp; ${Dimension>$PropertyPath} &amp;&amp; MICROCHART.isNotAlwaysHidden(\'Line\', ${DataPoint>Value}, undefined,${DataPoint>Value/$Path@com.sap.vocabularies.UI.v1.Hidden}) }"\n\t\t\t\t\t\t\t\t><template:then><template:with path="DataPoint>Value/$Path" helper="MODEL.resolve$Path" var="DataPointMeasure"><LineMicroChartLine\n\t\t\t\t\t\t\t\t\t\t\t\tunittest:id="LineMicroChartLine"\n\t\t\t\t\t\t\t\t\t\t\t\tpoints="{= MICROCHART.getAggregationForMicrochart(\'LinePoints\', ${contextPath>}, ${DataPoint>}, ${contextPath>@sapui.name}, ${Dimension>}, ${DataPointMeasure>@}) }"\n\t\t\t\t\t\t\t\t\t\t\t><points><LineMicroChartPoint\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tx="{= (${Dimension>$PropertyPath/$Type} === \'Edm.Date\' ||  (${Dimension>$PropertyPath/$Type} === \'Edm.String\' &amp;&amp; MICROCHART.getCalendarPattern(${Dimension>$PropertyPath@}))) ? MICROCHART.getX(${Dimension>$PropertyPath}, ${Dimension>$PropertyPath/$Type}, ${Dimension>$PropertyPath@}) : ${Dimension>@@.MODEL.format} }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ty="{DataPoint>Value@@.MODEL.value}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t/></points></LineMicroChartLine></template:with></template:then><template:elseif\n\t\t\t\t\t\t\t\t\t\ttest="{= MICROCHART.logWarning(\'Line\', { DataPoint_Value : ${DataPoint>Value}, Dimension : ${Dimension>$PropertyPath} }) }"\n\t\t\t\t\t\t\t\t\t/></template:if></template:with></template:repeat></lines></LineMicroChart></oDataV4MicroChart:MicroChartContainer></template:with></template:with></core:FragmentDefinition>\n',
	"sap/fe/macros/microchart/fragments/MicroChartContent.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\txmlns:m="sap.m"\n\txmlns:oDataV4MicroChart="sap.fe.macros.microchart"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tMICROCHART: \'sap/fe/macros/microchart/MicroChartHelper\'\n\t}"\n><template:if test="{= ${metaPath>ChartType/$EnumMember} === \'com.sap.vocabularies.UI.v1.ChartType/Bullet\' }"><template:then><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.BulletMicroChart" type="XML" /></template:then><template:elseif test="{= ${metaPath>ChartType/$EnumMember} === \'com.sap.vocabularies.UI.v1.ChartType/Donut\' }"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.RadialMicroChart" type="XML" /></template:elseif><template:elseif test="{= ${metaPath>ChartType/$EnumMember} === \'com.sap.vocabularies.UI.v1.ChartType/Pie\' }"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.HarveyBallMicroChart" type="XML" /></template:elseif><template:elseif test="{= ${metaPath>ChartType/$EnumMember} === \'com.sap.vocabularies.UI.v1.ChartType/BarStacked\' }"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.StackedBarMicroChart" type="XML" /></template:elseif><template:elseif test="{= ${metaPath>ChartType/$EnumMember} === \'com.sap.vocabularies.UI.v1.ChartType/Area\' }"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.AreaMicroChart" type="XML" /></template:elseif><template:elseif test="{= ${metaPath>ChartType/$EnumMember} === \'com.sap.vocabularies.UI.v1.ChartType/Column\' }"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.ColumnMicroChart" type="XML" /></template:elseif><template:elseif test="{= ${metaPath>ChartType/$EnumMember} === \'com.sap.vocabularies.UI.v1.ChartType/Line\' }"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.LineMicroChart" type="XML" /></template:elseif><template:elseif test="{= ${metaPath>ChartType/$EnumMember} === \'com.sap.vocabularies.UI.v1.ChartType/Bar\' }"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.ComparisonMicroChart" type="XML" /></template:elseif><template:else><m:Text text="This chart type is not supported. Other Types yet to be implemented.." /></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/microchart/fragments/MicroChartTitle.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:m="sap.m"\n\txmlns:oDataV4MicroChart="sap.fe.macros.microchart"\n\ttemplate:require="{\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n        MICROCHART: \'sap/fe/macros/microchart/MicroChartHelper\',\n        COMMON: \'sap/fe/macros/CommonHelper\'\n\n\t}"\n><oDataV4MicroChart:microChartTitle><template:if test="{= ${this>navigationType} === \'External\'}"><template:then><core:InvisibleText\n\t\t\t\t\ttext="{sap.fe.i18n>M_MICROCHART_TITLE_FRAGMENT_HEADER_MICROCHART_LINK_ARIA}"\n\t\t\t\t\tid="{= ID.generate([${this>id}, ${this>metaPath>@sapui.name}, \'AriaText\']) }"\n\t\t\t\t/><m:Title\n\t\t\t\t\tlevel="H3"\n\t\t\t\t\tvisible="{= COMMON.getHeaderDataPointLinkVisibility(ID.generate([\'fe\', \'MicroChartLink\',  ${contextPath>@sapui.name}, ${this>metaPath>@sapui.name}]), true) }"\n\t\t\t\t><m:content><m:Link\n\t\t\t\t\t\t\tid="{= ID.generate([\'fe\', \'MicroChartLink\', ${contextPath>@sapui.name}, ${this>metaPath>@sapui.name}]) }"\n\t\t\t\t\t\t\ttext="{= ${this>title} || ${metaPath>Title}}"\n\t\t\t\t\t\t\tpress="{this>onTitlePressed}"\n\t\t\t\t\t\t\tariaDescribedBy="{= ID.generate([${this>id}, ${this>metaPath>@sapui.name}, \'AriaText\']) }"\n\t\t\t\t\t\t/></m:content></m:Title><m:Title\n\t\t\t\t\tid="{= ID.generate([\'fe\', ${contextPath>@sapui.name}, ${this>metaPath>@sapui.name}, \'microChartTitle\']) }"\n\t\t\t\t\tlevel="H3"\n\t\t\t\t\ttext="{= ${this>title} || ${metaPath>Title}}"\n\t\t\t\t\tclass="sapUiTinyMarginBottom"\n\t\t\t\t\tvisible="{= COMMON.getHeaderDataPointLinkVisibility(ID.generate([\'fe\',  \'MicroChartLink\',  ${contextPath>@sapui.name}, ${this>metaPath>@sapui.name}]), false) }"\n\t\t\t\t/></template:then><template:elseif test="{= ${this>navigationType} === \'InPage\'}"><core:InvisibleText\n\t\t\t\t\ttext="{sap.fe.i18n>T_COMMON_HEADERDP_TITLE_LINK_INPAGE_ARIA}"\n\t\t\t\t\tid="{= ID.generate([${this>id}, ${this>metaPath>@sapui.name}, \'AriaText\']) }"\n\t\t\t\t/><m:Title level="H3"><m:content><m:Link\n\t\t\t\t\t\t\ttext="{= ${this>title} || ${metaPath>Title}}"\n\t\t\t\t\t\t\tpress="{this>onTitlePressed}"\n\t\t\t\t\t\t\tariaDescribedBy="{= ID.generate([${this>id}, ${this>metaPath>@sapui.name}, \'AriaText\']) }"\n\t\t\t\t\t\t/></m:content></m:Title></template:elseif><template:else><m:Title level="H3" text="{= ${this>title} || ${metaPath>Title}}" /></template:else></template:if></oDataV4MicroChart:microChartTitle></core:FragmentDefinition>\n',
	"sap/fe/macros/microchart/fragments/RadialMicroChart.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:oDataV4MicroChart="sap.fe.macros.microchart"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tMICROCHART: \'sap/fe/macros/microchart/MicroChartHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tCRIT: \'sap/fe/core/templating/CriticalityFormatters\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t}"\n><template:if test="{= MICROCHART.shouldMicroChartRender(\'Radial\', ${DataPoint>}, ${DataPoint>Value/$Path@})}"><template:then><template:with path="DataPoint>Value/$Path" helper="MODEL.resolve$Path" var="Measure"><oDataV4MicroChart:MicroChartContainer\n\t\t\t\t\tunittest:id="RadialMicroChartContainer"\n\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'RadialMicroChart\']) : undefined }"\n\t\t\t\t\tshowOnlyChart="{this>showOnlyChart}"\n\t\t\t\t\tchartTitle="{= ${this>title} || ${metaPath>Title}}"\n\t\t\t\t\tchartDescription="{= ${this>description} || ${metaPath>Description}}"\n\t\t\t\t\tbinding="{= MICROCHART.getBindingExpressionForMicrochart(\'Radial\', ${Measure>@}, ${this>}, ${contextPath>}, ${contextPath>@sapui.name}) }"\n\t\t\t\t\tvisible="{= MICROCHART.getHiddenPathExpression(${DataPoint>Value/$Path@com.sap.vocabularies.UI.v1.Hidden}) }"\n\t\t\t\t\tonTitlePressed="{this>onTitlePressed}"\n\t\t\t\t\tnavigationType="{this>navigationType}"\n\t\t\t\t><template:if test="{= !${this>showOnlyChart} || (${this>showOnlyChart} !== \'true\' ? true : false)}"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.MicroChartTitle" type="XML" /></template:if><RadialMicroChart\n\t\t\t\t\t\tunittest:id="RadialMicroChart"\n\t\t\t\t\t\thideOnNoData="{this>hideOnNoData}"\n\t\t\t\t\t\ttotal="{= ${DataPoint>TargetValue} ? ${DataPoint>TargetValue@@MODEL.value} : undefined }"\n\t\t\t\t\t\tfraction="{DataPoint>Value@@MODEL.value}"\n\t\t\t\t\t\tpercentage="{= !${DataPoint>TargetValue} ? ${{DataPoint>Value@@MODEL.value} : undefined }"\n\t\t\t\t\t\tvalueColor="{= ${DataPoint>Criticality} || (!${DataPoint>Criticality} &amp;&amp; !${DataPoint>CriticalityCalculation}) ?\n\t\t\t\t\t\t\t\t(${DataPoint>Criticality} ? CRIT.buildExpressionForCriticalityColorMicroChart(${DataPoint>@@UI.getDataModelObjectPath}) : undefined ) :\n\t\t\t\t\t\t\t\tCOMMON.getCriticalityCalculationBinding(${DataPoint>CriticalityCalculation/ImprovementDirection/$EnumMember},\n\t\t\t\t\t\t\t\t\t${DataPoint>Value@@MODEL.value},\n\t\t\t\t\t\t\t\t\t${DataPoint>CriticalityCalculation/DeviationRangeLowValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t${DataPoint>CriticalityCalculation/ToleranceRangeLowValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t${DataPoint>CriticalityCalculation/AcceptanceRangeLowValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t${DataPoint>CriticalityCalculation/AcceptanceRangeHighValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t${DataPoint>CriticalityCalculation/ToleranceRangeHighValue@@MODEL.format},\n\t\t\t\t\t\t\t\t\t${DataPoint>CriticalityCalculation/DeviationRangeHighValue@@MODEL.format}) }"\n\t\t\t\t\t\tsize="{this>size}"\n\t\t\t\t\t/></oDataV4MicroChart:MicroChartContainer></template:with></template:then><template:elseif test="{= MICROCHART.logWarning(\'Radial\', { DataPoint_Value : ${DataPoint>Value} }) }" /></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/microchart/fragments/StackedBarMicroChart.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:oDataV4MicroChart="sap.fe.macros.microchart"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tMICROCHART: \'sap/fe/macros/microchart/MicroChartHelper\',\n\t\tCRIT: \'sap/fe/core/templating/CriticalityFormatters\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t}"\n><template:if test="{= MICROCHART.shouldMicroChartRender(\'Stacked Bar\', ${DataPoint>}, ${DataPoint>Value/$Path@})}"><template:then><template:with path="DataPoint>Value/$Path" helper="MODEL.resolve$Path" var="Measure"><oDataV4MicroChart:MicroChartContainer\n\t\t\t\t\tunittest:id="StackedBarMicroChartContainer"\n\t\t\t\t\tid="{= ${this>id} ? ID.generate([${this>id}, \'StackedBarMicroChart\']) : undefined }"\n\t\t\t\t\tshowOnlyChart="{this>showOnlyChart}"\n\t\t\t\t\tchartTitle="{= ${this>title} || ${metaPath>Title}}"\n\t\t\t\t\tchartDescription="{= ${this>description} || ${metaPath>Description}}"\n\t\t\t\t\tdataPointQualifiers="{= MICROCHART.getdataPointQualifiersForMicroChart(${DataPoint>./@sapui.name}) }"\n\t\t\t\t\tbinding="{= ${this>batchGroupId} ? (\'{path:\\\'\\\', parameters : { $$groupId: \\\'\' + ${this>batchGroupId} + \'\\\'} }\') : undefined }"\n\t\t\t\t\tonTitlePressed="{this>onTitlePressed}"\n\t\t\t\t\tnavigationType="{this>navigationType}"\n\t\t\t\t><template:if test="{= !${this>showOnlyChart} || (${this>showOnlyChart} !== \'true\' ? true : false)}"><core:Fragment fragmentName="sap.fe.macros.microchart.fragments.MicroChartTitle" type="XML" /></template:if><StackedBarMicroChart\n\t\t\t\t\t\tunittest:id="StackedBarMicroChart"\n\t\t\t\t\t\thideOnNoData="{this>hideOnNoData}"\n\t\t\t\t\t\tsize="{this>size}"\n\t\t\t\t\t\tbars="{= MICROCHART.getAggregationForMicrochart(\'Bars\', ${contextPath>}, ${DataPoint>}, ${contextPath>@sapui.name}, \'\', ${Measure>@}, ${metaPath>Dimensions@@MICROCHART.getMeasureOrDimensionPropertyPaths}) }"\n\t\t\t\t\t><bars><StackedBarMicroChartBar\n\t\t\t\t\t\t\t\tunittest:id="StackedBarMicroChartBar"\n\t\t\t\t\t\t\t\tvalue="{DataPoint>Value@@MODEL.value}"\n\t\t\t\t\t\t\t\tdisplayValue="{= ${DataPoint>Value/$Path@com.sap.vocabularies.Common.v1.Text} ? ${DataPoint>Value/$Path@com.sap.vocabularies.Common.v1.Text@@MODEL.value} : undefined }"\n\t\t\t\t\t\t\t\tvalueColor="{= ${DataPoint>Criticality} ? CRIT.buildExpressionForCriticalityColorMicroChart(${DataPoint>@@UI.getDataModelObjectPath}) : undefined }"\n\t\t\t\t\t\t\t/></bars></StackedBarMicroChart></oDataV4MicroChart:MicroChartContainer></template:with></template:then><template:elseif test="{= MICROCHART.logWarning(\'StackedBar\', { DataPoint_Value : ${DataPoint>Value} }) }" /></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/paginator/Paginator.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:uxap="sap.uxap"\n\ttemplate:require="{\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t}"\n><HBox displayInline="true" id="{this>id}" visible="{=${paginator>/navUpEnabled} || ${paginator>/navDownEnabled} }"><uxap:ObjectPageHeaderActionButton\n\t\t\ticon="sap-icon://navigation-up-arrow"\n\t\t\tvisible="{= ${paginator>/navUpEnabled} || ${paginator>/navDownEnabled} }"\n\t\t\tenabled="{paginator>/navUpEnabled}"\n\t\t\ttooltip="{sap.fe.i18n>T_PAGINATOR_CONTROL_PAGINATOR_TOOLTIP_UP}"\n\t\t\tpress=".paginator.updateCurrentContext(-1)"\n\t\t\ttype="Transparent"\n\t\t\timportance="High"\n\t\t\tid="{= ID.generate([${this>id}, \'previousItem\']) }"\n\t\t/><uxap:ObjectPageHeaderActionButton\n\t\t\ticon="sap-icon://navigation-down-arrow"\n\t\t\tvisible="{= ${paginator>/navUpEnabled} || ${paginator>/navDownEnabled} }"\n\t\t\tenabled="{paginator>/navDownEnabled}"\n\t\t\ttooltip="{sap.fe.i18n>T_PAGINATOR_CONTROL_PAGINATOR_TOOLTIP_DOWN}"\n\t\t\tpress=".paginator.updateCurrentContext(1)"\n\t\t\ttype="Transparent"\n\t\t\timportance="High"\n\t\t\tid="{= ID.generate([${this>id}, \'nextItem\']) }"\n\t\t/></HBox></core:FragmentDefinition>\n',
	"sap/fe/macros/quickView/QuickView.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:mdc="sap.ui.mdc"\n\ttemplate:require="{\n\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\'\n\t\t\t\t}"\n><mdc:Link delegate="{this>delegateConfiguration}"><template:if test="{= FIELD.hasSemanticObjectsWithPath(${semanticObjectsToResolve>}) }"><mdc:customData><template:repeat list="{semanticObjectsToResolve>}" var="semanticObject"><core:CustomData key="{semanticObject>key}" value="{semanticObject>value}" /></template:repeat></mdc:customData></template:if></mdc:Link></core:FragmentDefinition>\n',
	"sap/fe/macros/quickView/fragments/DataFieldQuickView.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\txmlns="sap.m"\n\ttemplate:require="{\n\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\t\t\tFieldTemplating: \'sap/fe/macros/field/FieldTemplating\',\n\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t\t\t\t}"\n><template:if test="{dataField>}"><VBox class="sapUiTinyMarginTopBottom"><template:if test="{= ${dataField>IconUrl@@MODEL.value} !== undefined }"><template:then><control:ConditionalWrapper\n\t\t\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\t\t\tcondition="{= FIELD.checkPrimaryActions(${semantic>}, false) }"\n\t\t\t\t\t><control:contentTrue><control:CustomQuickViewPage\n\t\t\t\t\t\t\t\tunittest:id="CustomQuickViewPageIconUrlTest"\n\t\t\t\t\t\t\t\ticon="{dataField>IconUrl@@MODEL.value}"\n\t\t\t\t\t\t\t\tfallbackIcon="sap-icon://product"\n\t\t\t\t\t\t\t\ttitle="{= FieldTemplating.getTextBinding(${dataField>Value@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\t\t\tmacrodata:titleLink="{= FIELD.getPrimaryAction(${semantic>}) }"\n\t\t\t\t\t\t\t\tdescription="{= (${dataField>Label}) ? ${dataField>Label} : ${dataField>Value/$Path@com.sap.vocabularies.Common.v1.Label} }"\n\t\t\t\t\t\t\t/></control:contentTrue><control:contentFalse><control:CustomQuickViewPage\n\t\t\t\t\t\t\t\tunittest:id="CustomQuickViewPageIconUrlTestNoLinkTitle"\n\t\t\t\t\t\t\t\ticon="{dataField>IconUrl@@MODEL.value}"\n\t\t\t\t\t\t\t\tfallbackIcon="sap-icon://product"\n\t\t\t\t\t\t\t\ttitle="{= FieldTemplating.getTextBinding(${dataField>Value@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\t\t\tdescription="{= (${dataField>Label}) ? ${dataField>Label} : ${dataField>Value/$Path@com.sap.vocabularies.Common.v1.Label} }"\n\t\t\t\t\t\t\t/></control:contentFalse></control:ConditionalWrapper></template:then><template:elseif test="{= ${dataField>Value@@MODEL.value} !== undefined}"><control:ConditionalWrapper\n\t\t\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\t\t\tcondition="{= FIELD.checkPrimaryActions(${semantic>}, false) }"\n\t\t\t\t\t><control:contentTrue><control:CustomQuickViewPage\n\t\t\t\t\t\t\t\tunittest:id="CustomQuickViewPageTest"\n\t\t\t\t\t\t\t\ttitle="{= FieldTemplating.getTextBinding(${dataField>Value@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\t\t\tmacrodata:titleLink="{= FIELD.getPrimaryAction(${semantic>}) }"\n\t\t\t\t\t\t\t\tdescription="{= (${dataField>Label}) ? ${dataField>Label} : ${dataField>Value/$Path@com.sap.vocabularies.Common.v1.Label} }"\n\t\t\t\t\t\t\t/></control:contentTrue><control:contentFalse><control:CustomQuickViewPage\n\t\t\t\t\t\t\t\tunittest:id="CustomQuickViewPageTestNoLinkTitle"\n\t\t\t\t\t\t\t\ttitle="{= FieldTemplating.getTextBinding(${dataField>Value@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\t\t\tdescription="{= (${dataField>Label}) ? ${dataField>Label} : ${dataField>Value/$Path@com.sap.vocabularies.Common.v1.Label} }"\n\t\t\t\t\t\t\t/></control:contentFalse></control:ConditionalWrapper></template:elseif><template:else><control:ConditionalWrapper\n\t\t\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\t\t\tcondition="{= FIELD.checkPrimaryActions(${semantic>}, false) }"\n\t\t\t\t\t><control:contentTrue><control:CustomQuickViewPage\n\t\t\t\t\t\t\t\tunittest:id="CustomQuickViewNoFieldValuePageTest"\n\t\t\t\t\t\t\t\ttitle="{dataField>@@MODEL.format}"\n\t\t\t\t\t\t\t\tmacrodata:titleLink="{= FIELD.getPrimaryAction(${semantic>}) }"\n\t\t\t\t\t\t\t\tdescription="{= (${dataField>Label}) ? ${dataField>Label} : ${dataField>Value/$Path@com.sap.vocabularies.Common.v1.Label} }"\n\t\t\t\t\t\t\t/></control:contentTrue><control:contentFalse><control:CustomQuickViewPage\n\t\t\t\t\t\t\t\tunittest:id="CustomQuickViewNoFieldValuePageTestNoLinkTitle"\n\t\t\t\t\t\t\t\ttitle="{dataField>@@MODEL.format}"\n\t\t\t\t\t\t\t\tdescription="{= (${dataField>Label}) ? ${dataField>Label} : ${dataField>Value/$Path@com.sap.vocabularies.Common.v1.Label} }"\n\t\t\t\t\t\t\t/></control:contentFalse></control:ConditionalWrapper></template:else></template:if></VBox></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/quickView/fragments/EntityQuickView.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns:core="sap.ui.core"\n\txmlns:control="sap.fe.core.controls"\n\txmlns="sap.m"\n\ttemplate:require="{\n\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\tFIELD: \'sap/fe/macros/field/FieldHelper\'\n\t\t\t\t}"\n><template:if test="{entityType>}"><template:then><template:with path="entityType>./@com.sap.vocabularies.UI.v1.HeaderInfo" var="headerInfo"><VBox class="sapFePaddingTop sapUiTinyMarginBottom"><control:ConditionalWrapper\n\t\t\t\t\t\tcore:require="{FieldRuntime: \'sap/fe/macros/field/FieldRuntime\'}"\n\t\t\t\t\t\tcondition="{= FIELD.checkPrimaryActions(${semantic>}, false) }"\n\t\t\t\t\t><control:contentTrue><template:if test="{= (${headerInfo>ImageUrl} !== undefined) || (${headerInfo>TypeImageUrl} !== undefined) }"><template:then><control:CustomQuickViewPage\n\t\t\t\t\t\t\t\t\t\tunittest:id="CustomQuickViewPageEntity"\n\t\t\t\t\t\t\t\t\t\ticon="{= ${headerInfo>ImageUrl} !== undefined ? ${headerInfo>ImageUrl@@MODEL.value} : ${headerInfo>TypeImageUrl@@MODEL.value} }"\n\t\t\t\t\t\t\t\t\t\tfallbackIcon="{= ${headerInfo>TypeImageUrl} !== undefined ? ${headerInfo>TypeImageUrl} : (${entityType>./@com.sap.vocabularies.Common.v1.IsNaturalPerson} ? \'sap-icon://person-placeholder\' : \'sap-icon://product\')}"\n\t\t\t\t\t\t\t\t\t\ttitle="{entityType>./@com.sap.vocabularies.UI.v1.HeaderInfo/Title/Value@@MODEL.format}"\n\t\t\t\t\t\t\t\t\t\tmacrodata:titleLink="{= FIELD.getPrimaryAction(${semantic>}) }"\n\t\t\t\t\t\t\t\t\t\tdescription="{= (${headerInfo>Description} !== undefined) ? ${entityType>./@com.sap.vocabularies.UI.v1.HeaderInfo/Description/Value@@MODEL.format} : \'{semantic>propertyPathLabel}\' }"\n\t\t\t\t\t\t\t\t\t><core:Fragment fragmentName="sap.fe.macros.quickView.fragments.QuickViewFacets" type="XML" /></control:CustomQuickViewPage></template:then><template:else><control:CustomQuickViewPage\n\t\t\t\t\t\t\t\t\t\tunittest:id="CustomQuickViewPageEntityNoIcon"\n\t\t\t\t\t\t\t\t\t\ttitle="{entityType>./@com.sap.vocabularies.UI.v1.HeaderInfo/Title/Value@@MODEL.format}"\n\t\t\t\t\t\t\t\t\t\tmacrodata:titleLink="{= FIELD.getPrimaryAction(${semantic>}) }"\n\t\t\t\t\t\t\t\t\t\tdescription="{= (${headerInfo>Description} !== undefined) ? ${entityType>./@com.sap.vocabularies.UI.v1.HeaderInfo/Description/Value@@MODEL.format} : \'{semantic>propertyPathLabel}\' }"\n\t\t\t\t\t\t\t\t\t><core:Fragment fragmentName="sap.fe.macros.quickView.fragments.QuickViewFacets" type="XML" /></control:CustomQuickViewPage></template:else></template:if></control:contentTrue><control:contentFalse><template:if test="{= (${headerInfo>ImageUrl} !== undefined) || (${headerInfo>TypeImageUrl} !== undefined) }"><template:then><control:CustomQuickViewPage\n\t\t\t\t\t\t\t\t\t\tunittest:id="CustomQuickViewPageEntityNoLinkTitle"\n\t\t\t\t\t\t\t\t\t\ticon="{= ${headerInfo>ImageUrl} !== undefined ? ${headerInfo>ImageUrl@@MODEL.value} : ${headerInfo>TypeImageUrl@@MODEL.value} }"\n\t\t\t\t\t\t\t\t\t\tfallbackIcon="{= ${headerInfo>TypeImageUrl} !== undefined ? ${headerInfo>TypeImageUrl} : (${entityType>./@com.sap.vocabularies.Common.v1.IsNaturalPerson} ? \'sap-icon://person-placeholder\' : \'sap-icon://product\')}"\n\t\t\t\t\t\t\t\t\t\ttitle="{entityType>./@com.sap.vocabularies.UI.v1.HeaderInfo/Title/Value@@MODEL.format}"\n\t\t\t\t\t\t\t\t\t\tdescription="{= (${headerInfo>Description} !== undefined) ? ${entityType>./@com.sap.vocabularies.UI.v1.HeaderInfo/Description/Value@@MODEL.format} : \'{semantic>propertyPathLabel}\' }"\n\t\t\t\t\t\t\t\t\t><core:Fragment fragmentName="sap.fe.macros.quickView.fragments.QuickViewFacets" type="XML" /></control:CustomQuickViewPage></template:then><template:else><control:CustomQuickViewPage\n\t\t\t\t\t\t\t\t\t\tunittest:id="CustomQuickViewPageEntityNoLinkTitleNoIcon"\n\t\t\t\t\t\t\t\t\t\ttitle="{entityType>./@com.sap.vocabularies.UI.v1.HeaderInfo/Title/Value@@MODEL.format}"\n\t\t\t\t\t\t\t\t\t\tdescription="{= (${headerInfo>Description} !== undefined) ? ${entityType>./@com.sap.vocabularies.UI.v1.HeaderInfo/Description/Value@@MODEL.format} : \'{semantic>propertyPathLabel}\' }"\n\t\t\t\t\t\t\t\t\t><core:Fragment fragmentName="sap.fe.macros.quickView.fragments.QuickViewFacets" type="XML" /></control:CustomQuickViewPage></template:else></template:if></control:contentFalse></control:ConditionalWrapper></VBox></template:with></template:then></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/quickView/fragments/QuickViewFacets.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns:macro="sap.fe.macros"\n\txmlns:control="sap.fe.core.controls"\n\txmlns="sap.m"\n\ttemplate:require="{\n\t\t\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\t\t\tCONTACT: \'sap/fe/macros/contact/ContactHelper\',\n\t\t\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\t\t\tFieldTemplating: \'sap/fe/macros/field/FieldTemplating\'\n\t\t\t\t}"\n><template:repeat list="{entityType>./@com.sap.vocabularies.UI.v1.QuickViewFacets}" var="facet"><template:if test="{= ${facet>Target/$AnnotationPath}.indexOf(\'com.sap.vocabularies.Communication.v1.Contact\') > -1 }"><template:then><template:with path="facet>Target/$AnnotationPath" var="contact"><core:Fragment fragmentName="sap.fe.macros.contact.ContactQuickViewGroup" type="XML" /></template:with></template:then><template:elseif test="{= (${facet>Target/$AnnotationPath}.indexOf(\'com.sap.vocabularies.UI.v1.FieldGroup\') > -1)}"><template:with path="facet>Target/$AnnotationPath" var="fieldGroup"><QuickViewGroup heading="{facet>Label}"><template:repeat list="{fieldGroup>Data}" var="dataField"><QuickViewGroupElement\n\t\t\t\t\t\t\t\tlabel="{dataField>@@MODEL.label}"\n\t\t\t\t\t\t\t\turl="{= FieldTemplating.QVTextBinding(${dataField>@@UI.getDataModelObjectPath}, ${dataField>Value@@UI.getDataModelObjectPath}, \'\') }"\n\t\t\t\t\t\t\t\tvalue="{= FieldTemplating.QVTextBinding(${dataField>@@UI.getDataModelObjectPath}, ${dataField>Value@@UI.getDataModelObjectPath}, \'\') }"\n\t\t\t\t\t\t\t\ttype="{= FieldTemplating.getQuickViewType(${dataField>Value@@UI.getDataModelObjectPath} ) }"\n\t\t\t\t\t\t\t/></template:repeat></QuickViewGroup></template:with></template:elseif><template:elseif test="{= (${facet>Target/$AnnotationPath}.indexOf(\'com.sap.vocabularies.UI.v1.Identification\') > -1) }"><template:with path="facet>Target/$AnnotationPath" var="identification"><QuickViewGroup heading="{facet>Label}"><template:repeat list="{identification>}" var="dataField"><QuickViewGroupElement\n\t\t\t\t\t\t\t\tlabel="{dataField>@@MODEL.label}"\n\t\t\t\t\t\t\t\tvalue="{dataField>Value@@MODEL.format}"\n\t\t\t\t\t\t\t\ttype="{= FieldTemplating.getQuickViewType(${dataField>Value@@UI.getDataModelObjectPath} ) }"\n\t\t\t\t\t\t\t/></template:repeat></QuickViewGroup></template:with></template:elseif><template:elseif test="{= (${facet>Target/$AnnotationPath}.indexOf(\'com.sap.vocabularies.UI.v1.DataPoint\') > -1) }"><template:with path="facet>Target/$AnnotationPath" var="dataPoint"><QuickViewGroup heading="{facet>Label}"><QuickViewGroupElement\n\t\t\t\t\t\t\tlabel="{dataPoint>Title}"\n\t\t\t\t\t\t\tvalue="{= ${dataPoint>TargetValue@@MODEL.format} ? ${dataPoint>Value@@MODEL.format}+\'/\'+${dataPoint>TargetValue@@MODEL.format} : ${dataPoint>Value@@MODEL.format} }"\n\t\t\t\t\t\t\ttype="{= FieldTemplating.getQuickViewType(${dataField>Value@@UI.getDataModelObjectPath} ) }"\n\t\t\t\t\t\t/></QuickViewGroup></template:with></template:elseif></template:if></template:repeat></core:FragmentDefinition>\n',
	"sap/fe/macros/share/ShareSheet.fragment.xml":'<core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:footerbar="sap.ushell.ui.footerbar"><ActionSheet cancelButtonPress="onCancelPressed"><buttons><Button icon="sap-icon://email" press="shareEmailPressed" text="{share>/emailButtonText}" class="sapMFlexBox" width="100%" /><Button\n\t\t\t\ticon="sap-icon://share-2"\n\t\t\t\tpress="shareJamPressed"\n\t\t\t\ttext="{share>/jamButtonText}"\n\t\t\t\tvisible="{share>/jamVisible}"\n\t\t\t\tclass="sapMFlexBox"\n\t\t\t\twidth="100%"\n\t\t\t/><Button\n\t\t\t\ticon="sap-icon://group"\n\t\t\t\tpress="shareMSTeamsPressed"\n\t\t\t\ttext="{share>/msTeamsShareButtonText}"\n\t\t\t\tvisible="{share>/msTeamsVisible}"\n\t\t\t\tclass="sapMFlexBox"\n\t\t\t\twidth="100%"\n\t\t\t/><footerbar:AddBookmarkButton\n\t\t\t\ttitle="{share>/title}"\n\t\t\t\tsubtitle="{share>/subtitle}"\n\t\t\t\ttileIcon="{share>/icon}"\n\t\t\t\tcustomUrl="{share>/url}"\n\t\t\t\tserviceUrl="{share>/queryUrl}"\n\t\t\t\tclass="sapMFlexBox"\n\t\t\t\twidth="100%"\n\t\t\t\tpress="onSaveTilePress"\n\t\t\t\tvisible="{share>/saveAsTileVisible}"\n\t\t\t/></buttons></ActionSheet></core:FragmentDefinition>\n',
	"sap/fe/macros/table/Actions.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns:core="sap.ui.core"\n\txmlns:macros="sap.fe.macros"\n\txmlns:macroTable="sap.fe.macros.table"\n\txmlns:mdcat="sap.ui.mdc.actiontoolbar"\n\txmlns="sap.m"\n\ttemplate:require="{\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\tTABLE: \'sap/fe/macros/table/TableHelper\',\n\t\tDEFAULTACTIONHANDLER: \'sap/fe/macros/internal/helpers/DefaultActionHandler\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t}"\n><template:if test="{this>useBasicSearch}"><mdcat:ActionToolbarAction><macroTable:BasicSearch id="{this>filterBarId}" /></mdcat:ActionToolbarAction></template:if><template:if test="{tableDefinition>actions}"><template:repeat list="{tableDefinition>actions}" var="action"><template:if test="{= ${action>type} === \'Default\'}"><template:then><mdcat:ActionToolbarAction><Button\n\t\t\t\t\t\t\tcore:require="{FPM: \'sap/fe/core/helpers/FPMHelper\'}"\n\t\t\t\t\t\t\tid="{= ID.generate([${this>id},${action>id}])}"\n\t\t\t\t\t\t\ttext="{action>text}"\n\t\t\t\t\t\t\tpress="{= ${action>command} ? (\'cmd:\' + ${action>command}) : (${action>noWrap} ? ${action>press} : COMMON.buildActionWrapper(${action>}, ${this>}))}"\n\t\t\t\t\t\t\ttype="Transparent"\n\t\t\t\t\t\t\tvisible="{action>visible}"\n\t\t\t\t\t\t\tenabled="{action>enabled}"\n\t\t\t\t\t\t/></mdcat:ActionToolbarAction></template:then><template:elseif test="{= ${action>type} === \'Menu\' }"><mdcat:ActionToolbarAction><template:with path="action>defaultAction/annotationPath" var="dataFieldForDefaultAction"><template:with\n\t\t\t\t\t\t\t\tpath="dataFieldForDefaultAction>Action"\n\t\t\t\t\t\t\t\thelper="COMMON.getActionContext"\n\t\t\t\t\t\t\t\tvar="defaultActionContext"\n\t\t\t\t\t\t\t><MenuButton\n\t\t\t\t\t\t\t\t\ttext="{action>text}"\n\t\t\t\t\t\t\t\t\ttype="Transparent"\n\t\t\t\t\t\t\t\t\tmenuPosition="BeginBottom"\n\t\t\t\t\t\t\t\t\tid="{= ID.generate([${this>id},${action>id}])}"\n\t\t\t\t\t\t\t\t\tvisible="{action>visible}"\n\t\t\t\t\t\t\t\t\tenabled="{action>enabled}"\n\t\t\t\t\t\t\t\t\tuseDefaultActionOnly="{= DEFAULTACTIONHANDLER.getUseDefaultActionOnly(${action>})}"\n\t\t\t\t\t\t\t\t\tbuttonMode="{= DEFAULTACTIONHANDLER.getButtonMode(${action>})}"\n\t\t\t\t\t\t\t\t\tdefaultAction="{= DEFAULTACTIONHANDLER.getDefaultActionHandler(${this>}, ${action>}, ${dataFieldForDefaultAction>}, ${defaultActionContext>})}"\n\t\t\t\t\t\t\t\t><menu><Menu><template:repeat list="{action>menu}" var="menuItemAction"><template:with path="menuItemAction>annotationPath" var="dataField"><template:if test="{= ${menuItemAction>type} === \'ForAction\'}"><template:then><template:with\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath="dataField>Action"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thelper="COMMON.getActionContext"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar="actionContext"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t><template:with\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpath="dataField>Action"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thelper="COMMON.getPathToBoundActionOverload"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvar="isBound"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t><template:if\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttest="{= ${isBound>$IsBound} !== true || ${actionContext>@Org.OData.Core.V1.OperationAvailable} !== false }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t><MenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext="{dataField>Label}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpress="{= ${menuItemAction>command} ? (\'cmd:\' + ${menuItemAction>command}) : TABLE.pressEventDataFieldForActionButton(${this>}, ${dataField>}, ${collection>@sapui.name}, ${tableDefinition>operationAvailableMap}, ${actionContext>},${action>isNavigable}, ${menuItemAction>enableAutoScroll}, ${menuItemAction>defaultValuesExtensionFunction}) }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenabled="{= ${menuItemAction>enabled} !== undefined ? ${menuItemAction>enabled} : TABLE.isDataFieldForActionEnabled(${this>},${dataField>},${isBound>$IsBound}, false, ${actionContext>}, ${menuItemAction>enableOnSelect})}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvisible="{menuItemAction>visible}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></template:if></template:with></template:with></template:then><template:elseif test="{= ${menuItemAction>type} === \'ForNavigation\'}"><MenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext="{dataField>Label}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpress="{= ${menuItemAction>command} ? (\'cmd:\' + ${menuItemAction>command}) : COMMON.getPressHandlerForDataFieldForIBN(${dataField>}, \'${internal>selectedContexts}\', !${tableDefinition>enableAnalytics} )}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenabled="{= ${menuItemAction>enabled} !== undefined ? ${menuItemAction>enabled} : TABLE.isDataFieldForActionEnabled(${this>}, ${dataField>}, ${dataField>RequiresContext}, true, undefined, ${dataField>NavigationAvailable@@MODEL.value})}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvisible="{menuItemAction>visible}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tmacrodata:IBNData="{= !${dataField>RequiresContext} ? \'{semanticObject: \\\'\' +  ${dataField>SemanticObject} + \'\\\' , action : \\\'\' + ${dataField>Action} + \'\\\'}\' : undefined}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></template:elseif><template:else><MenuItem\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcore:require="{FPM: \'sap/fe/core/helpers/FPMHelper\'}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttext="{menuItemAction>text}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tpress="{= ${menuItemAction>command} ? (\'cmd:\' + ${menuItemAction>command}) : (${menuItemAction>noWrap} ? ${menuItemAction>press} : COMMON.buildActionWrapper(${menuItemAction>}, ${this>}))}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvisible="{menuItemAction>visible}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tenabled="{menuItemAction>enabled}"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/></template:else></template:if></template:with></template:repeat></Menu></menu></MenuButton></template:with></template:with></mdcat:ActionToolbarAction></template:elseif><template:else><template:with path="action>annotationPath" var="dataField"><template:if test="{= ${action>type} === \'ForAction\'}"><template:then><template:with path="dataField>Action" helper="COMMON.getActionContext" var="actionContext"><template:with path="dataField>Action" helper="COMMON.getPathToBoundActionOverload" var="isBound"><template:if\n\t\t\t\t\t\t\t\t\t\t\ttest="{= ${isBound>$IsBound} !== true || ${actionContext>@Org.OData.Core.V1.OperationAvailable} !== false }"\n\t\t\t\t\t\t\t\t\t\t><mdcat:ActionToolbarAction><Button\n\t\t\t\t\t\t\t\t\t\t\t\t\tunittest:id="DataFieldForActionButton"\n\t\t\t\t\t\t\t\t\t\t\t\t\tid="{= ID.generate([${this>id}, ${dataField>@@UI.getDataModelObjectPath}])}"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttext="{dataField>Label}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tariaHasPopup="{actionContext>@@COMMON.isDialog}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tpress="{= ${action>command} ? (\'cmd:\' + ${action>command}) : TABLE.pressEventDataFieldForActionButton(${this>}, ${dataField>}, ${collection>@sapui.name}, ${tableDefinition>operationAvailableMap}, ${actionContext>},${action>isNavigable}, ${action>enableAutoScroll}, ${action>defaultValuesExtensionFunction}) }"\n\t\t\t\t\t\t\t\t\t\t\t\t\ttype="Transparent"\n\t\t\t\t\t\t\t\t\t\t\t\t\tenabled="{= ${action>enabled} !== undefined ? ${action>enabled} : TABLE.isDataFieldForActionEnabled(${this>},${dataField>},${isBound>$IsBound}, false, ${actionContext>}, ${action>enableOnSelect})}"\n\t\t\t\t\t\t\t\t\t\t\t\t\tvisible="{action>visible}"\n\t\t\t\t\t\t\t\t\t\t\t\t/></mdcat:ActionToolbarAction></template:if></template:with></template:with></template:then><template:elseif test="{= ${action>type} === \'ForNavigation\'}"><mdcat:ActionToolbarAction><Button\n\t\t\t\t\t\t\t\t\t\tunittest:id="DataFieldForIntentBasedNavigationButton"\n\t\t\t\t\t\t\t\t\t\tid="{= ID.generate([${this>id}, ${dataField>@@UI.getDataModelObjectPath}])}"\n\t\t\t\t\t\t\t\t\t\ttext="{dataField>Label}"\n\t\t\t\t\t\t\t\t\t\tpress="{= ${action>command} ? (\'cmd:\' + ${action>command}) : COMMON.getPressHandlerForDataFieldForIBN(${dataField>}, \'${internal>selectedContexts}\', !${tableDefinition>enableAnalytics} )}"\n\t\t\t\t\t\t\t\t\t\ttype="Transparent"\n\t\t\t\t\t\t\t\t\t\tenabled="{= ${action>enabled} !== undefined ? ${action>enabled} : TABLE.isDataFieldForActionEnabled(${this>}, ${dataField>}, ${dataField>RequiresContext}, true, undefined, ${dataField>NavigationAvailable@@MODEL.value})}"\n\t\t\t\t\t\t\t\t\t\tvisible="{action>visible}"\n\t\t\t\t\t\t\t\t\t\tmacrodata:IBNData="{= !${dataField>RequiresContext} ? \'{semanticObject: \\\'\' +  ${dataField>SemanticObject} + \'\\\' , action : \\\'\' + ${dataField>Action} + \'\\\'}\' : undefined}"\n\t\t\t\t\t\t\t\t\t/></mdcat:ActionToolbarAction></template:elseif></template:if></template:with></template:else></template:if></template:repeat></template:if><template:with path="tableDefinition>annotation/standardActions/actions" var="standardActions"><template:if test="{tableDefinition>annotation/standardActions/isInsertUpdateTemplated}"><template:if test="{standardActions>create/isTemplated}"><mdcat:ActionToolbarAction><Button\n\t\t\t\t\t\tunittest:id="CreateButtonTemplate"\n\t\t\t\t\t\tid="{= ID.generate([${this>id}, \'StandardAction\', \'Create\'])}"\n\t\t\t\t\t\ttext="{sap.fe.i18n>M_COMMON_TABLE_CREATE}"\n\t\t\t\t\t\tpress="cmd:Create"\n\t\t\t\t\t\ttype="Transparent"\n\t\t\t\t\t\tvisible="{standardActions>create/visible}"\n\t\t\t\t\t\tenabled="{standardActions>create/enabled}"\n\t\t\t\t\t\tmacrodata:IBNData="{= TABLE.getIBNData(${this>})}"\n\t\t\t\t\t/></mdcat:ActionToolbarAction></template:if></template:if><template:repeat list="{ path: \'tableDefinition>actions\', filters: { path: \'type\', operator: \'EQ\', value1: \'Copy\' } }" var="action"><template:with path="action>annotationPath" var="dataField"><mdcat:ActionToolbarAction><Button\n\t\t\t\t\t\tid="{= ID.generate([${this>id}, ${dataField>@@UI.getDataModelObjectPath}])}"\n\t\t\t\t\t\ttext="{action>text}"\n\t\t\t\t\t\tpress="{= TABLE.pressEventDataFieldForActionButton(${this>}, ${dataField>}, ${collection>@sapui.name}, ${tableDefinition>operationAvailableMap}, \'${internal>selectedContexts}\',${action>isNavigable}, ${action>enableAutoScroll}, ${action>defaultValuesExtensionFunction}) }"\n\t\t\t\t\t\ttype="Transparent"\n\t\t\t\t\t\tenabled="{action>enabled}"\n\t\t\t\t\t\tvisible="{action>visible}"\n\t\t\t\t\t/></mdcat:ActionToolbarAction></template:with></template:repeat><template:if test="{standardActions>delete/isTemplated}"><mdcat:ActionToolbarAction><Button\n\t\t\t\t\tunittest:id="DeleteButtonTemplate"\n\t\t\t\t\tid="{= ID.generate([${this>id}, \'StandardAction\', \'Delete\'])}"\n\t\t\t\t\ttext="{sap.fe.i18n>M_COMMON_TABLE_DELETE}"\n\t\t\t\t\tpress="cmd:DeleteEntry"\n\t\t\t\t\ttype="Transparent"\n\t\t\t\t\tvisible="{standardActions>delete/visible}"\n\t\t\t\t\tenabled="{standardActions>delete/enabled}"\n\t\t\t\t/></mdcat:ActionToolbarAction></template:if><template:if test="{tableDefinition>annotation/standardActions/isInsertUpdateTemplated}"><template:if test="{standardActions>massEdit/isTemplated}"><mdcat:ActionToolbarAction><Button\n\t\t\t\t\t\tid="{= ID.generate([${this>id}, \'StandardAction\', \'MassEdit\'])}"\n\t\t\t\t\t\ttext="{sap.fe.i18n>M_COMMON_TABLE_MASSEDIT}"\n\t\t\t\t\t\tpress="API.onMassEditButtonPressed($event, $controller)"\n\t\t\t\t\t\tvisible="{standardActions>massEdit/visible}"\n\t\t\t\t\t\tenabled="{standardActions>massEdit/enabled}"\n\t\t\t\t\t/></mdcat:ActionToolbarAction></template:if></template:if></template:with><template:if test="{this>enableFullScreen}"><mdcat:ActionToolbarAction><Button\n\t\t\t\tcore:require="{TableFullScreenUtil: \'sap/fe/macros/table/TableFullScreenUtil\'}"\n\t\t\t\tid="{= ID.generate([${this>id}, \'StandardAction\', \'FullScreen\'])}"\n\t\t\t\ttooltip="{sap.fe.i18n>M_COMMON_TABLE_FULLSCREEN_MAXIMIZE}"\n\t\t\t\ticon="sap-icon://full-screen"\n\t\t\t\tpress="TableFullScreenUtil.onFullScreenToggle(${$source>/})"\n\t\t\t\ttype="Transparent"\n\t\t\t\tvisible="{this>enableFullScreen}"\n\t\t\t\tenabled="true"\n\t\t\t/></mdcat:ActionToolbarAction></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/table/Column.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:mdcTable="sap.ui.mdc.table"\n\txmlns:core="sap.ui.core"\n\txmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tTABLE: \'sap/fe/macros/table/TableHelper\',\n\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t}"\n><template:with path="dataField>" helper="FIELD.getDataFieldDefault" var="dataField"><mdcTable:Column\n\t\t\tunittest:id="MDCTableColumn"\n\t\t\tid="{= TABLE.getColumnStableId(${this>id},${dataField>@@UI.getDataModelObjectPath}) }"\n\t\t\twidth="{= ${this>isOptimizedForSmallDevice} === false ? TABLE.getColumnWidth(${this>}, ${column>}, ${dataField>}, ${dataField>@@TABLE.getTextOnActionField}, ${dataField>@@UI.getDataModelObjectPath}, true, {Title: ${dataField>Target/$AnnotationPath/Title} || \'\', Description: ${dataField>Target/$AnnotationPath/Description} || \'\'}) : undefined}"\n\t\t\tminWidth="{= ${this>isOptimizedForSmallDevice} === true ? TABLE.getColumnWidth(${this>}, ${column>}, ${dataField>}, ${dataField>@@TABLE.getTextOnActionField}, ${dataField>@@UI.getDataModelObjectPath}, false, {Title: ${dataField>Target/$AnnotationPath/Title} || \'\', Description: ${dataField>Target/$AnnotationPath/Description} || \'\'}) : undefined}"\n\t\t\theader="{= ${dataField>@@MODEL.label} || ${dataField>Target/$AnnotationPath/@@MODEL.label} }"\n\t\t\tdataProperty="{column>name}"\n\t\t\thAlign="{= ${column>horizontalAlign} || FIELD.getColumnAlignment(${dataField>}, ${this>}) }"\n\t\t\theaderVisible="{= TABLE.setHeaderLabelVisibility( ${dataField>}, ${dataField>Target/$AnnotationPath/Data}) }"\n\t\t\timportance="{column>importance}"\n\t\t\tcustomData:showDataFieldsLabel="{column>showDataFieldsLabel}"\n\t\t\ttooltip="{column>tooltip}"\n\t\t><core:Fragment fragmentName="sap.fe.macros.table.ColumnContent" type="XML" /></mdcTable:Column></template:with></core:FragmentDefinition>\n',
	"sap/fe/macros/table/ColumnContent.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:mdc="sap.ui.mdc"\n\txmlns:mdcTable="sap.ui.mdc.table"\n\txmlns="sap.m"\n\txmlns:core="sap.ui.core"\n\txmlns:macro="sap.fe.macros"\n\txmlns:internalMacro="sap.fe.macros.internal"\n\txmlns:control="sap.fe.core.controls"\n\ttemplate:require="{\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tProperty: \'sap/fe/core/templating/PropertyFormatters\',\n\t\tTABLE: \'sap/fe/macros/table/TableHelper\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t}"\n\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n><template:if\n\t\ttest="{= (${dataField>$Type}.indexOf(\'DataFieldForAnnotation\') > -1) &amp;&amp; (${dataField>Target/$AnnotationPath}.indexOf(\'@com.sap.vocabularies.UI.v1.Chart\') > -1)}"\n\t><template:then><template:with path="dataField>Target/$AnnotationPath" var="collection" helper="MODEL.resolve$Path"><template:with path="collection>" var="collection" helper="COMMON.getNavigationContext"><internalMacro:MicroChart\n\t\t\t\t\t\tid="{= ID.generate([${this>id}, ${dataField>@@UI.getDataModelObjectPath}]) }"\n\t\t\t\t\t\tcontextPath="{collection>}"\n\t\t\t\t\t\tmetaPath="{dataField>Target/$AnnotationPath/}"\n\t\t\t\t\t\tshowOnlyChart="{= TABLE.getShowOnlyChart(${this>}, ${column>}) }"\n\t\t\t\t\t\tsize="{= TABLE.getChartSize(${this>}, ${column>}) }"\n\t\t\t\t\t\thideOnNoData="true"\n\t\t\t\t\t\tisAnalytics="{tableDefinition>enableAnalytics}"\n\t\t\t\t\t/></template:with></template:with></template:then><template:elseif\n\t\t\ttest="{= ${dataField>Value} &amp;&amp; ${dataField>Value/$Path} &amp;&amp; UI.isMultiValueField(${dataField>Value@@Property.getPropertyObjectPath})}"\n\t\t><internalMacro:MultiValueField contextPath="{collection>}" metaPath="{dataField>}"><internalMacro:formatOptions displayOnly="true" /></internalMacro:MultiValueField></template:elseif><template:elseif\n\t\t\ttest="{= (${dataField>$Type}.indexOf(\'DataFieldForAnnotation\') > -1) &amp;&amp; (${dataField>Target/$AnnotationPath}.indexOf(\'FieldGroup\') > -1)}"\n\t\t><template:with path="dataField>Target/$AnnotationPath/Data/" var="dataFieldCollections"><VBox\n\t\t\t\t\tvisible="{= TABLE.getVBoxVisibility( ${dataFieldCollections>}, ${column>FieldGroupHiddenExpressions}, ${dataField>} ) }"\n\t\t\t\t><template:repeat list="{dataFieldCollections>}" var="fieldGroupDataField"><template:if test="{= ${column>showDataFieldsLabel} &amp;&amp; !!${fieldGroupDataField>@@FIELD.computeLabelText} }"><template:then><HBox\n\t\t\t\t\t\t\t\t\talignItems="{= FIELD.buildExpressionForAlignItems(${fieldGroupDataField>Target/$AnnotationPath/Visualization/$EnumMember}) }"\n\t\t\t\t\t\t\t\t><Label\n\t\t\t\t\t\t\t\t\t\tid="{= TABLE.getFieldGroupLabelStableId(${this>id},${fieldGroupDataField>@@UI.getDataModelObjectPath}) }"\n\t\t\t\t\t\t\t\t\t\ttext="{= ${fieldGroupDataField>@@FIELD.computeLabelText} + \':\' }"\n\t\t\t\t\t\t\t\t\t\tclass="sapUiTinyMarginEnd"\n\t\t\t\t\t\t\t\t\t/><VBox><layoutData><FlexItemData growFactor="1" /></layoutData><internalMacro:Field\n\t\t\t\t\t\t\t\t\t\t\tvhIdPrefix="{= ID.generate([${this>id}, \'TableValueHelp\']) }"\n\t\t\t\t\t\t\t\t\t\t\teditMode="{this>columnEditMode}"\n\t\t\t\t\t\t\t\t\t\t\tentitySet="{collection>}"\n\t\t\t\t\t\t\t\t\t\t\tdataField="{fieldGroupDataField>}"\n\t\t\t\t\t\t\t\t\t\t\ttextAlign="Left"\n\t\t\t\t\t\t\t\t\t\t\twrap="{= ${this>tableType} === \'ResponsiveTable\' ? true : false }"\n\t\t\t\t\t\t\t\t\t\t\tclass="{= TABLE.getMarginClass( ${dataFieldCollections>}  , ${fieldGroupDataField>} , ${fieldGroupDataField>Target/$AnnotationPath/Visualization/$EnumMember}, ${column>FieldGroupHiddenExpressions/}) }"\n\t\t\t\t\t\t\t\t\t\t\tonChange="{this>onChange}"\n\t\t\t\t\t\t\t\t\t\t\tariaLabelledBy="{= TABLE.getColumnStableId(${this>id},${dataField>@@UI.getDataModelObjectPath}) +\' \'+ TABLE.getFieldGroupLabelStableId(${this>id},${fieldGroupDataField>@@UI.getDataModelObjectPath}) }"\n\t\t\t\t\t\t\t\t\t\t\tnavigateAfterAction="{column>isNavigable}"\n\t\t\t\t\t\t\t\t\t\t><internalMacro:formatOptions\n\t\t\t\t\t\t\t\t\t\t\t\ttextLinesEdit="{column>formatOptions/textLinesEdit}"\n\t\t\t\t\t\t\t\t\t\t\t\ttextMaxLines="{column>formatOptions/textMaxLines}"\n\t\t\t\t\t\t\t\t\t\t\t\tcontainsErrorVisibility="{column>formatOptions/objectStatusTextVisibility}"\n\t\t\t\t\t\t\t\t\t\t\t\ttextMaxCharactersDisplay="{column>formatOptions/textMaxCharactersDisplay}"\n\t\t\t\t\t\t\t\t\t\t\t\ttextExpandBehaviorDisplay="{column>formatOptions/textExpandBehaviorDisplay}"\n\t\t\t\t\t\t\t\t\t\t\t\ttextAlignMode="Table"\n\t\t\t\t\t\t\t\t\t\t\t\tshowEmptyIndicator="true"\n\t\t\t\t\t\t\t\t\t\t\t\tsemanticKeyStyle="{= ${this>tableType} === \'ResponsiveTable\' ? \'ObjectIdentifier\' : \'Label\' }"\n\t\t\t\t\t\t\t\t\t\t\t\thasDraftIndicator="{column>formatOptions/hasDraftIndicator}"\n\t\t\t\t\t\t\t\t\t\t\t\tfieldGroupDraftIndicatorPropertyPath="{column>formatOptions/fieldGroupDraftIndicatorPropertyPath}"\n\t\t\t\t\t\t\t\t\t\t\t\tfieldGroupName="{column>formatOptions/fieldGroupName}"\n\t\t\t\t\t\t\t\t\t\t\t\tshowIconUrl="{= ${fieldGroupDataField>Inline} &amp;&amp; ${fieldGroupDataField>IconUrl} }"\n\t\t\t\t\t\t\t\t\t\t\t\tignoreNavigationAvailable="{= ${tableDefinition>enableAnalytics} ? true : false }"\n\t\t\t\t\t\t\t\t\t\t\t\tisAnalytics="{tableDefinition>enableAnalytics}"\n\t\t\t\t\t\t\t\t\t\t\t\tisCurrencyAligned="true"\n\t\t\t\t\t\t\t\t\t\t\t\tcompactSemanticKey="{tableDefinition>control/isCompactType}"\n\t\t\t\t\t\t\t\t\t\t\t/><template:if\n\t\t\t\t\t\t\t\t\t\t\t\ttest="{=FIELD.getBindingInfoForTextArrangement(${this>}, ${dataField>Value/$Path@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement}, ${dataField>}) }"\n\t\t\t\t\t\t\t\t\t\t\t><internalMacro:customData><core:CustomData\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tkey="extraProperty"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue="{=FIELD.getBindingInfoForTextArrangement(${this>}, ${dataField>Value/$Path@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement}, ${dataField>}) }"\n\t\t\t\t\t\t\t\t\t\t\t\t\t/></internalMacro:customData></template:if></internalMacro:Field></VBox></HBox></template:then><template:else><internalMacro:Field\n\t\t\t\t\t\t\t\t\tvhIdPrefix="{= ID.generate([${this>id}, \'TableValueHelp\']) }"\n\t\t\t\t\t\t\t\t\teditMode="{this>columnEditMode}"\n\t\t\t\t\t\t\t\t\tentitySet="{collection>}"\n\t\t\t\t\t\t\t\t\tdataField="{fieldGroupDataField>}"\n\t\t\t\t\t\t\t\t\twrap="{= ${this>tableType} === \'ResponsiveTable\' ? true : false }"\n\t\t\t\t\t\t\t\t\tclass="{= TABLE.getMarginClass( ${dataFieldCollections>}  , ${fieldGroupDataField>} , ${fieldGroupDataField>Target/$AnnotationPath/Visualization/$EnumMember}, ${column>FieldGroupHiddenExpressions/}) }"\n\t\t\t\t\t\t\t\t\tonChange="{this>onChange}"\n\t\t\t\t\t\t\t\t\tariaLabelledBy="{= TABLE.getColumnStableId(${this>id},${dataField>@@UI.getDataModelObjectPath}) }"\n\t\t\t\t\t\t\t\t\tnavigateAfterAction="{column>isNavigable}"\n\t\t\t\t\t\t\t\t><internalMacro:formatOptions\n\t\t\t\t\t\t\t\t\t\tfieldMode="{this>fieldMode}"\n\t\t\t\t\t\t\t\t\t\ttextLinesEdit="{column>formatOptions/textLinesEdit}"\n\t\t\t\t\t\t\t\t\t\tcontainsErrorVisibility="{column>formatOptions/objectStatusTextVisibility}"\n\t\t\t\t\t\t\t\t\t\ttextMaxLines="{column>formatOptions/textMaxLines}"\n\t\t\t\t\t\t\t\t\t\ttextMaxCharactersDisplay="{column>formatOptions/textMaxCharactersDisplay}"\n\t\t\t\t\t\t\t\t\t\ttextExpandBehaviorDisplay="{column>formatOptions/textExpandBehaviorDisplay}"\n\t\t\t\t\t\t\t\t\t\ttextAlignMode="Table"\n\t\t\t\t\t\t\t\t\t\tsemanticKeyStyle="{= ${this>tableType} === \'ResponsiveTable\' ? \'ObjectIdentifier\' : \'Label\' }"\n\t\t\t\t\t\t\t\t\t\thasDraftIndicator="{column>formatOptions/hasDraftIndicator}"\n\t\t\t\t\t\t\t\t\t\tfieldGroupDraftIndicatorPropertyPath="{column>formatOptions/fieldGroupDraftIndicatorPropertyPath}"\n\t\t\t\t\t\t\t\t\t\tfieldGroupName="{column>formatOptions/fieldGroupName}"\n\t\t\t\t\t\t\t\t\t\tshowIconUrl="{= ${fieldGroupDataField>Inline} &amp;&amp; ${fieldGroupDataField>IconUrl} }"\n\t\t\t\t\t\t\t\t\t\tignoreNavigationAvailable="{= ${tableDefinition>enableAnalytics} ? true : false }"\n\t\t\t\t\t\t\t\t\t\tisAnalytics="{tableDefinition>enableAnalytics}"\n\t\t\t\t\t\t\t\t\t\tisCurrencyAligned="true"\n\t\t\t\t\t\t\t\t\t\tcompactSemanticKey="{tableDefinition>control/isCompactType}"\n\t\t\t\t\t\t\t\t\t/><template:if\n\t\t\t\t\t\t\t\t\t\ttest="{=FIELD.getBindingInfoForTextArrangement(${this>}, ${dataField>Value/$Path@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement}, ${dataField>}) }"\n\t\t\t\t\t\t\t\t\t><internalMacro:customData><core:CustomData\n\t\t\t\t\t\t\t\t\t\t\t\tkey="extraProperty"\n\t\t\t\t\t\t\t\t\t\t\t\tvalue="{=FIELD.getBindingInfoForTextArrangement(${this>}, ${dataField>Value/$Path@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement}, ${dataField>}) }"\n\t\t\t\t\t\t\t\t\t\t\t/></internalMacro:customData></template:if></internalMacro:Field></template:else></template:if></template:repeat><template:if test="{= ${collection>@com.sap.vocabularies.Common.v1.DraftRoot} }"><template:if test="{= ${collection>./@com.sap.vocabularies.Common.v1.SemanticKey} }"><template:if test="{column>formatOptions/fieldGroupDraftIndicatorPropertyPath}"><control:FormElementWrapper><macro:DraftIndicator\n\t\t\t\t\t\t\t\t\t\tdraftIndicatorType="IconAndText"\n\t\t\t\t\t\t\t\t\t\tentitySet="{collection>}"\n\t\t\t\t\t\t\t\t\t\tisDraftIndicatorVisible="{= FIELD.isDraftIndicatorVisibleInFieldGroup(${column>}) }"\n\t\t\t\t\t\t\t\t\t\tariaLabelledBy="{this>ariaLabelledBy}"\n\t\t\t\t\t\t\t\t\t/></control:FormElementWrapper></template:if></template:if></template:if><template:if test="{= ${collection>./@com.sap.vocabularies.Common.v1.SemanticKey} }"><template:if test="{column>formatOptions/fieldGroupDraftIndicatorPropertyPath}"><ObjectStatus\n\t\t\t\t\t\t\t\tvisible="{column>formatOptions/objectStatusTextVisibility}"\n\t\t\t\t\t\t\t\tclass="sapUiSmallMarginBottom"\n\t\t\t\t\t\t\t\ttext="{sap.fe.i18n>Contains_Errors}"\n\t\t\t\t\t\t\t\tstate="Error"\n\t\t\t\t\t\t\t/></template:if></template:if></VBox></template:with></template:elseif><template:else><internalMacro:Field\n\t\t\t\tvhIdPrefix="{= ID.generate([${this>id}, \'TableValueHelp\']) }"\n\t\t\t\teditMode="{this>columnEditMode}"\n\t\t\t\tentitySet="{collection>}"\n\t\t\t\tdataField="{dataField>}"\n\t\t\t\twrap="{= ${this>tableType} === \'ResponsiveTable\' ? true : false }"\n\t\t\t\tonChange="{this>onChange}"\n\t\t\t\tariaLabelledBy="{= ${column>formatOptions/hasDraftIndicator} ? TABLE.getColumnStableId(${this>id},${dataField>@@UI.getDataModelObjectPath}) : undefined}"\n\t\t\t\tnavigateAfterAction="{column>isNavigable}"\n\t\t\t><internalMacro:formatOptions\n\t\t\t\t\tfieldMode="{this>fieldMode}"\n\t\t\t\t\ttextLinesEdit="{column>formatOptions/textLinesEdit}"\n\t\t\t\t\tcontainsErrorVisibility="{column>formatOptions/objectStatusTextVisibility}"\n\t\t\t\t\ttextMaxLines="{column>formatOptions/textMaxLines}"\n\t\t\t\t\ttextMaxCharactersDisplay="{column>formatOptions/textMaxCharactersDisplay}"\n\t\t\t\t\ttextExpandBehaviorDisplay="{column>formatOptions/textExpandBehaviorDisplay}"\n\t\t\t\t\ttextAlignMode="Table"\n\t\t\t\t\tsemanticKeyStyle="{= ${this>tableType} === \'ResponsiveTable\' ? \'ObjectIdentifier\' : \'Label\' }"\n\t\t\t\t\thasDraftIndicator="{column>formatOptions/hasDraftIndicator}"\n\t\t\t\t\tfieldGroupDraftIndicatorPropertyPath="{column>formatOptions/fieldGroupDraftIndicatorPropertyPath}"\n\t\t\t\t\tfieldGroupName="{column>formatOptions/fieldGroupName}"\n\t\t\t\t\tshowIconUrl="{= ${dataField>Inline} &amp;&amp; ${dataField>IconUrl} }"\n\t\t\t\t\tignoreNavigationAvailable="{= ${tableDefinition>enableAnalytics} ? true : false }"\n\t\t\t\t\tisAnalytics="{tableDefinition>enableAnalytics}"\n\t\t\t\t\tisCurrencyAligned="true"\n\t\t\t\t\tcompactSemanticKey="{tableDefinition>control/isCompactType}"\n\t\t\t\t/><template:if\n\t\t\t\t\ttest="{=FIELD.getBindingInfoForTextArrangement(${this>}, ${dataField>Value/$Path@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement}, ${dataField>}) }"\n\t\t\t\t><internalMacro:customData><core:CustomData\n\t\t\t\t\t\t\tkey="extraProperty"\n\t\t\t\t\t\t\tvalue="{=FIELD.getBindingInfoForTextArrangement(${this>}, ${dataField>Value/$Path@com.sap.vocabularies.Common.v1.Text@com.sap.vocabularies.UI.v1.TextArrangement}, ${dataField>}) }"\n\t\t\t\t\t\t/></internalMacro:customData></template:if></internalMacro:Field><template:if test="{= ${this>creationMode} === \'CreationRow\'}"><mdcTable:creationTemplate><internalMacro:Field\n\t\t\t\t\t\tcore:require="{TableRuntime: \'sap/fe/macros/table/TableRuntime\'}"\n\t\t\t\t\t\tvhIdPrefix="{= ID.generate([${this>id}, \'TableValueHelp\']) }"\n\t\t\t\t\t\teditMode="{this>columnEditMode}"\n\t\t\t\t\t\tentitySet="{collection>}"\n\t\t\t\t\t\tdataField="{dataField>}"\n\t\t\t\t\t\twrap="{= ${this>tableType} === \'ResponsiveTable\' ? true : false }"\n\t\t\t\t\t\tonChange="TableRuntime.onFieldChangeInCreationRow($event, \'{this>customValidationFunction}\')}"\n\t\t\t\t\t><internalMacro:formatOptions\n\t\t\t\t\t\t\ttextLinesEdit="{column>formatOptions/textLinesEdit}"\n\t\t\t\t\t\t\ttextMaxLines="{column>formatOptions/textMaxLines}"\n\t\t\t\t\t\t\tcontainsErrorVisibility="{column>formatOptions/objectStatusTextVisibility}"\n\t\t\t\t\t\t\ttextMaxCharactersDisplay="{column>formatOptions/textMaxCharactersDisplay}"\n\t\t\t\t\t\t\ttextExpandBehaviorDisplay="{column>formatOptions/textExpandBehaviorDisplay}"\n\t\t\t\t\t\t\ttextAlignMode="Table"\n\t\t\t\t\t\t\tsemanticKeyStyle="{= ${this>tableType} === \'ResponsiveTable\' ? \'ObjectIdentifier\' : \'Label\' }"\n\t\t\t\t\t\t\thasDraftIndicator="{column>formatOptions/hasDraftIndicator}"\n\t\t\t\t\t\t\tfieldGroupDraftIndicatorPropertyPath="{column>formatOptions/fieldGroupDraftIndicatorPropertyPath}"\n\t\t\t\t\t\t\tfieldGroupName="{column>formatOptions/fieldGroupName}"\n\t\t\t\t\t\t\tshowIconUrl="{= ${dataField>Inline} &amp;&amp; ${dataField>IconUrl} }"\n\t\t\t\t\t\t\tignoreNavigationAvailable="{= ${tableDefinition>enableAnalytics} ? true : false }"\n\t\t\t\t\t\t\tisCurrencyAligned="true"\n\t\t\t\t\t\t/></internalMacro:Field></mdcTable:creationTemplate></template:if></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/table/Columns.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns="sap.m"\n\txmlns:mdcTable="sap.ui.mdc.table"\n\ttemplate:require="{\n\t\tFIELD: \'sap/fe/macros/field/FieldHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tTABLE: \'sap/fe/macros/table/TableHelper\'\n\t}"\n><template:if test="{tableDefinition>columns}"><template:repeat list="{tableDefinition>columns}" var="column"><template:if test="{= ${column>availability} === \'Default\'}"><template:if test="{= ${column>type} === \'Default\'}"><template:then><core:Fragment fragmentName="sap.fe.macros.table.CustomColumn" type="XML" /></template:then><template:elseif test="{= ${column>type} === \'Annotation\'}"><template:with path="column>annotationPath" var="dataField"><core:Fragment fragmentName="sap.fe.macros.table.Column" type="XML" /></template:with></template:elseif><template:elseif test="{= ${column>type} === \'Slot\'}"><core:Fragment fragmentName="sap.fe.macros.table.SlotColumn" type="XML" /></template:elseif></template:if></template:if></template:repeat></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/table/CreationRow.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\txmlns:core="sap.ui.core"\n\txmlns:mdcTable="sap.ui.mdc.table"\n\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\ttemplate:require="{\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\tTABLE: \'sap/fe/macros/table/TableHelper\'\n\t}"\n><template:with path="tableDefinition>annotation/standardActions/actions/creationRow" var="creationRowAction"><template:if test="{creationRowAction>isTemplated}"><mdcTable:CreationRow\n\t\t\t\tunittest:id="TableMacroCreationRow"\n\t\t\t\tid="{= ID.generate([${this>id},\'CreationRow\'])}"\n\t\t\t\tvisible="{creationRowAction>visible}"\n\t\t\t\tapply="{= TABLE.pressEventForCreateButton(${this>})}"\n\t\t\t\tapplyEnabled="{creationRowAction>enabled}"\n\t\t\t\tmacrodata:disableAddRowButtonForEmptyData="{this>disableAddRowButtonForEmptyData}"\n\t\t\t\tmacrodata:customValidationFunction="{this>customValidationFunction}"\n\t\t\t/></template:if></template:with></core:FragmentDefinition>\n',
	"sap/fe/macros/table/CustomColumn.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:mdcTable="sap.ui.mdc.table"\n\txmlns:core="sap.ui.core"\n\txmlns:fpm="sap.fe.macros.fpm"\n\ttemplate:require="{\n\t\tTABLE: \'sap/fe/macros/table/TableHelper\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t}"\n><mdcTable:Column\n\t\tid="{= ID.generate([${this>id}, \'C\', ${column>id}]) }"\n\t\tdataProperty="{column>name}"\n\t\twidth="{column>width}"\n\t\timportance="{column>importance}"\n\t\theader="{column>header}"\n\t\thAlign="{column>horizontalAlign}"\n\t><mdcTable:template><fpm:CustomFragment id="{column>key}" fragmentName="{column>template}" contextPath="{targetCollection>}" /></mdcTable:template></mdcTable:Column></core:FragmentDefinition>\n',
	"sap/fe/macros/table/SlotColumn.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:mdcTable="sap.ui.mdc.table"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t}"\n><mdcTable:Column\n\t\tid="{= ID.generate([${this>id}, \'C\', ${column>id}]) }"\n\t\tdataProperty="{column>name}"\n\t\twidth="{column>width}"\n\t\timportance="{column>importance}"\n\t\thAlign="{column>horizontalAlign}"\n\t\theader="{column>header}"\n\t><mdcTable:template><slot name="{column>key}" /></mdcTable:template></mdcTable:Column></core:FragmentDefinition>\n',
	"sap/fe/macros/table/Table.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\ttemplate:require="{\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tTABLE: \'sap/fe/macros/table/TableHelper\',\n\t\tACTIONHELPER: \'sap/fe/macros/internal/helpers/ActionHelper\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\tMACRO: \'sap/fe/macros/MacroTemplating\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\'\n\t}"\n><macroTable:TableAPI\n\t\txmlns="sap.m"\n\t\txmlns:mdc="sap.ui.mdc"\n\t\txmlns:plugins="sap.m.plugins"\n\t\txmlns:mdcTable="sap.ui.mdc.table"\n\t\txmlns:macroTable="sap.fe.macros.table"\n\t\txmlns:mdcat="sap.ui.mdc.actiontoolbar"\n\t\txmlns:macro="sap.fe.macros"\n\t\txmlns:core="sap.ui.core"\n\t\txmlns:control="sap.fe.core.controls"\n\t\txmlns:dt="sap.ui.dt"\n\t\txmlns:fl="sap.ui.fl"\n\t\txmlns:variant="sap.ui.fl.variants"\n\t\txmlns:p13n="sap.ui.mdc.p13n"\n\t\txmlns:internalMacro="sap.fe.macros.internal"\n\t\txmlns:unittest="http://schemas.sap.com/sapui5/preprocessorextension/sap.fe.unittesting/1"\n\t\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\t\tid="{this>_apiId}"\n\t\ttableDefinition="{tableDefinition>path}"\n\t\tmetaPath="{metaPath>@@MACRO.getPath}"\n\t\tcontextPath="{contextPath>@@MACRO.getPath}"\n\t\tstateChange="{this>stateChange}"\n\t\tselectionChange="{this>selectionChange}"\n\t\treadOnly="{this>readOnly}"\n\t\tfilterBar="{this>filterBar}"\n\t\tmacrodata:tableAPILocalId="{this>_apiId}"\n\t\tenableAutoColumnWidth="{this>enableAutoColumnWidth}"\n\t\tisOptimizedForSmallDevice="{this>isOptimizedForSmallDevice}"\n\t><macroTable:layoutData><FlexItemData maxWidth="100%" /></macroTable:layoutData><template:with path="collection>" helper="COMMON.getTargetCollection" var="targetCollection"><template:with path="metaPath>" helper="TABLE.getUiLineItem" var="lineItem"><mdc:Table\n\t\t\t\t\tbinding="{= \'{internal>controls/\' + ${this>id} + \'}\' }"\n\t\t\t\t\tunittest:id="TableMacroFragment"\n\t\t\t\t\tcore:require="{TableRuntime: \'sap/fe/macros/table/TableRuntime\', API: \'sap/fe/macros/table/TableAPI\'}"\n\t\t\t\t\tfl:flexibility="{this>fl:flexibility}"\n\t\t\t\t\tsortConditions="{tableDefinition>annotation/sortConditions}"\n\t\t\t\t\tgroupConditions="{= COMMON.stringifyObject(${tableDefinition>annotation/groupConditions})}"\n\t\t\t\t\taggregateConditions="{= COMMON.stringifyObject(${tableDefinition>annotation/aggregateConditions})}"\n\t\t\t\t\tdt:designtime="{= ${this>variantManagement} === \'None\' ? \'not-adaptable\' : undefined}"\n\t\t\t\t\tmacrodata:kind="{collection>$kind}"\n\t\t\t\t\tmacrodata:navigationPath="{this>navigationPath}"\n\t\t\t\t\tid="{this>id}"\n\t\t\t\t\tbusy="{this>busy}"\n\t\t\t\t\tbusyIndicatorDelay="0"\n\t\t\t\t\tenableExport="{this>enableExport}"\n\t\t\t\t\tdelegate="{= ${this>tableDelegate} || TABLE.getDelegate(${tableDefinition>}, ${this>isAlp}, ${tableDefinition>annotation/entityName}) }"\n\t\t\t\t\trowPress="{this>rowPress}"\n\t\t\t\t\theight="100%"\n\t\t\t\t\tautoBindOnInit="{= ${this>autoBindOnInit} &amp;&amp; !${this>filterBar} }"\n\t\t\t\t\tselectionMode="{= ${this>selectionMode} || \'None\'}"\n\t\t\t\t\tselectionChange="{= \'TableRuntime.setContexts(${$source>/}, \\\'\' + ${targetCollection>@Org.OData.Capabilities.V1.DeleteRestrictions/Deletable/$Path} + \'\\\', \\\'\' + ${collection>@com.sap.vocabularies.Common.v1.DraftRoot} + \'\\\', \\\'\' + ${tableDefinition>operationAvailableMap} + \'\\\', \\\'\' + ${lineItem>@@TABLE.getNavigationAvailableMap} + \'\\\', \\\'\' + ${lineItem>@@ACTIONHELPER.getMultiSelectDisabledActions} + \'\\\', \\\'\' + ${this>updatablePropertyPath} + \'\\\')\' }"\n\t\t\t\t\tshowRowCount="{this>showRowCount}"\n\t\t\t\t\theader="{this>header}"\n\t\t\t\t\theaderVisible="{this>headerBindingExpression}"\n\t\t\t\t\theaderLevel="{this>headerLevel}"\n\t\t\t\t\tthreshold="{tableDefinition>annotation/threshold}"\n\t\t\t\t\tnoData="{this>noDataText}"\n\t\t\t\t\tp13nMode="{this>personalization}"\n\t\t\t\t\tfilter="{this>filterBarId}"\n\t\t\t\t\tpaste="API.onPaste($event, $controller)"\n\t\t\t\t\tbeforeExport="API.onBeforeExport($event)"\n\t\t\t\t\tclass="{= ${tableDefinition>control/useCondensedTableLayout} === true ? \'sapUiSizeCondensed\' : undefined }"\n\t\t\t\t\tmultiSelectMode="{= ${tableDefinition>control/multiSelectMode} }"\n\t\t\t\t\tshowPasteButton="{tableDefinition>annotation/standardActions/actions/paste/visible}"\n\t\t\t\t\tenablePaste="{tableDefinition>annotation/standardActions/actions/paste/enabled}"\n\t\t\t\t\tmacrodata:rowsBindingInfo="{= TABLE.getRowsBindingInfo(${this>}) }"\n\t\t\t\t\tmacrodata:enableAnalytics="{tableDefinition>enableAnalytics}"\n\t\t\t\t\tmacrodata:creationMode="{this>creationMode}"\n\t\t\t\t\tmacrodata:inlineCreationRowCount="{this>inlineCreationRowCount}"\n\t\t\t\t\tmacrodata:showCreate="{this>showCreate}"\n\t\t\t\t\tmacrodata:createAtEnd="{this>createAtEnd}"\n\t\t\t\t\tmacrodata:enableAutoScroll="{this>enableAutoScroll}"\n\t\t\t\t\tmacrodata:displayModePropertyBinding="{this>readOnly}"\n\t\t\t\t\tmacrodata:tableType="{this>tableType}"\n\t\t\t\t\tmacrodata:targetCollectionPath="{collection>@@COMMON.getContextPath}"\n\t\t\t\t\tmacrodata:entityType="{= ${collection>@@COMMON.getContextPath} + \'/\' }"\n\t\t\t\t\tmacrodata:metaPath="{collection>@@COMMON.getMetaPath}"\n\t\t\t\t\tmacrodata:onChange="{this>onChange}"\n\t\t\t\t\tmacrodata:hiddenFilters="{=TABLE.formatHiddenFilters(${tableDefinition>control/filters/hiddenFilters})}"\n\t\t\t\t\tmacrodata:requestGroupId="$auto.Workers"\n\t\t\t\t\tmacrodata:segmentedButtonId="{= ID.generate([${this>id}, \'SegmentedButton\', \'TemplateContentView\']) }"\n\t\t\t\t\tmacrodata:enablePaste="{this>enablePaste}"\n\t\t\t\t\tmacrodata:operationAvailableMap="{= COMMON.stringifyCustomData(${tableDefinition>operationAvailableMap})}"\n\t\t\t\t\tvisible="{this>visible}"\n\t\t\t\t><mdc:dataStateIndicator><plugins:DataStateIndicator\n\t\t\t\t\t\t\tfilter="{this>dataStateIndicatorFilter}"\n\t\t\t\t\t\t\tenableFiltering="true"\n\t\t\t\t\t\t\tdataStateChange="API.onDataStateChange"\n\t\t\t\t\t\t/></mdc:dataStateIndicator><mdc:type><template:if test="{= ${this>tableType} === \'GridTable\' }"><template:then><mdcTable:GridTableType\n\t\t\t\t\t\t\t\t\trowCountMode="{tableDefinition>control/rowCountMode}"\n\t\t\t\t\t\t\t\t\trowCount="{tableDefinition>control/rowCount}"\n\t\t\t\t\t\t\t\t\tselectionLimit="{this>selectionLimit}"\n\t\t\t\t\t\t\t\t/></template:then><template:elseif test="{= ${this>tableType} === \'TreeTable\' }"><mdcTable:TreeTableType\n\t\t\t\t\t\t\t\t\trowCountMode="{tableDefinition>control/rowCountMode}"\n\t\t\t\t\t\t\t\t\trowCount="{tableDefinition>control/rowCount}"\n\t\t\t\t\t\t\t\t/></template:elseif><template:else><mdcTable:ResponsiveTableType\n\t\t\t\t\t\t\t\t\tshowDetailsButton="true"\n\t\t\t\t\t\t\t\t\tdetailsButtonSetting="{=[\'Low\', \'Medium\', \'None\']}"\n\t\t\t\t\t\t\t\t\tgrowingMode="{= ${collection>$kind} === \'EntitySet\' ? \'Scroll\' : undefined }"\n\t\t\t\t\t\t\t\t/></template:else></template:if></mdc:type><mdc:dependents><template:if test="{= !${this>readOnly} &amp;&amp; ${tableDefinition>columns} }"><template:repeat list="{tableDefinition>columns}" var="column"><template:if test="{= ${column>availability} === \'Default\' &amp;&amp; ${column>type} === \'Annotation\'}"><template:with path="column>annotationPath" var="dataField"><core:Fragment fragmentName="sap.fe.macros.table.ValueHelp" type="XML" /></template:with></template:if></template:repeat></template:if><template:with path="tableDefinition>annotation/standardActions/actions" var="standardActions"><template:if test="{tableDefinition>annotation/standardActions/isInsertUpdateTemplated}"><template:if test="{standardActions>create/isTemplated}"><control:CommandExecution\n\t\t\t\t\t\t\t\t\t\texecute="{= TABLE.pressEventForCreateButton(${this>}, true)}"\n\t\t\t\t\t\t\t\t\t\tvisible="{standardActions>create/visible}"\n\t\t\t\t\t\t\t\t\t\tenabled="{standardActions>create/enabled}"\n\t\t\t\t\t\t\t\t\t\tcommand="Create"\n\t\t\t\t\t\t\t\t\t/></template:if></template:if><template:if test="{standardActions>delete/isTemplated}"><template:with path="targetCollection>./@com.sap.vocabularies.UI.v1.HeaderInfo" var="headerInfo"><control:CommandExecution\n\t\t\t\t\t\t\t\t\t\texecute="{= TABLE.pressEventForDeleteButton(${this>}, ${collection>@sapui.name}, ${headerInfo>@@UI.getConverterContext}, ${collection>@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\t\t\t\t\tvisible="{standardActions>delete/visible}"\n\t\t\t\t\t\t\t\t\t\tenabled="{standardActions>delete/enabled}"\n\t\t\t\t\t\t\t\t\t\tcommand="DeleteEntry"\n\t\t\t\t\t\t\t\t\t/></template:with></template:if></template:with><template:repeat list="{tableDefinition>commandActions}" var="action"><template:with path="action>annotationPath" var="dataField"><template:with path="dataField>Action" helper="COMMON.getActionContext" var="actionContext"><template:with path="dataField>Action" helper="COMMON.getPathToBoundActionOverload" var="isBound"><template:if\n\t\t\t\t\t\t\t\t\t\t\ttest="{= ${action>type} === \'ForAction\' ? (${isBound>$IsBound} !== true || ${actionContext>@Org.OData.Core.V1.OperationAvailable} !== false) : true }"\n\t\t\t\t\t\t\t\t\t\t><internalMacro:ActionCommand\n\t\t\t\t\t\t\t\t\t\t\t\taction="{action>}"\n\t\t\t\t\t\t\t\t\t\t\t\tonExecuteAction="{= TABLE.pressEventDataFieldForActionButton(${this>}, ${dataField>}, ${collection>@sapui.name}, ${tableDefinition>operationAvailableMap}, ${actionContext>},${action>isNavigable}, ${action>enableAutoScroll}, ${action>defaultValuesExtensionFunction}) }"\n\t\t\t\t\t\t\t\t\t\t\t\tonExecuteIBN="{= COMMON.getPressHandlerForDataFieldForIBN(${dataField>}, \'${internal>selectedContexts}\', !${tableDefinition>enableAnalytics} )}"\n\t\t\t\t\t\t\t\t\t\t\t\tonExecuteManifest="{= ${action>noWrap} ? ${action>press} : COMMON.buildActionWrapper(${action>}, ${this>})}"\n\t\t\t\t\t\t\t\t\t\t\t\tisIBNEnabled="{= ${action>enabled} !== undefined ? ${action>enabled} : TABLE.isDataFieldForActionEnabled(${this>}, ${dataField>}, ${dataField>RequiresContext}, true, undefined, ${dataField>NavigationAvailable@@MODEL.value})}"\n\t\t\t\t\t\t\t\t\t\t\t\tisActionEnabled="{= ${action>enabled} !== undefined ? ${action>enabled} : TABLE.isDataFieldForActionEnabled(${this>},${dataField>},${isBound>$IsBound}, false, ${actionContext>}, ${action>enableOnSelect})}"\n\t\t\t\t\t\t\t\t\t\t\t/></template:if></template:with></template:with></template:with></template:repeat><control:CommandExecution execute="TableRuntime.displayTableSettings" command="TableSettings" /><template:if test="{= ${this>variantManagement} === \'None\'}"><p13n:PersistenceProvider id="{= ID.generate([${this>id}, \'PersistenceProvider\']) }" for="{this>id}" /></template:if></mdc:dependents><mdc:actions><template:if test="{this>onSegmentedButtonPressed}"><mdcat:ActionToolbarAction\n\t\t\t\t\t\t\t\tlayoutInformation="{\n\t\t\t\t\t\t\t\t\t\taggregationName: \'end\',\n\t\t\t\t\t\t\t\t\t\talignment: \'End\'\n\t\t\t\t\t\t\t\t\t}"\n\t\t\t\t\t\t\t\tvisible="{= ${pageInternal>alpContentView} === \'Table\' }"\n\t\t\t\t\t\t\t><SegmentedButton\n\t\t\t\t\t\t\t\t\tid="{= ID.generate([${this>id}, \'SegmentedButton\', \'TemplateContentView\']) }"\n\t\t\t\t\t\t\t\t\tselect="{this>onSegmentedButtonPressed}"\n\t\t\t\t\t\t\t\t\tselectedKey="{pageInternal>alpContentView}"\n\t\t\t\t\t\t\t\t><items><template:if test="{= COMMON.isDesktop() }"><SegmentedButtonItem\n\t\t\t\t\t\t\t\t\t\t\t\ttooltip="{sap.fe.i18n>M_COMMON_HYBRID_SEGMENTED_BUTTON_ITEM_TOOLTIP}"\n\t\t\t\t\t\t\t\t\t\t\t\tkey="Hybrid"\n\t\t\t\t\t\t\t\t\t\t\t\ticon="sap-icon://chart-table-view"\n\t\t\t\t\t\t\t\t\t\t\t/></template:if><SegmentedButtonItem\n\t\t\t\t\t\t\t\t\t\t\ttooltip="{sap.fe.i18n>M_COMMON_CHART_SEGMENTED_BUTTON_ITEM_TOOLTIP}"\n\t\t\t\t\t\t\t\t\t\t\tkey="Chart"\n\t\t\t\t\t\t\t\t\t\t\ticon="sap-icon://bar-chart"\n\t\t\t\t\t\t\t\t\t\t/><SegmentedButtonItem\n\t\t\t\t\t\t\t\t\t\t\ttooltip="{sap.fe.i18n>M_COMMON_TABLE_SEGMENTED_BUTTON_ITEM_TOOLTIP}"\n\t\t\t\t\t\t\t\t\t\t\tkey="Table"\n\t\t\t\t\t\t\t\t\t\t\ticon="sap-icon://table-view"\n\t\t\t\t\t\t\t\t\t\t/></items></SegmentedButton></mdcat:ActionToolbarAction></template:if><core:Fragment fragmentName="sap.fe.macros.table.Actions" type="XML" /></mdc:actions><mdc:rowSettings><mdcTable:RowSettings\n\t\t\t\t\t\t\tnavigated="{tableDefinition>annotation/row/rowNavigated}"\n\t\t\t\t\t\t\thighlight="{tableDefinition>annotation/row/rowHighlighting}"\n\t\t\t\t\t\t><template:if test="{= ${this>rowAction} === \'Navigation\'}"><mdcTable:rowActions><mdcTable:RowActionItem\n\t\t\t\t\t\t\t\t\t\ttype="{this>rowAction}"\n\t\t\t\t\t\t\t\t\t\tpress="{= ${this>tableType} === \'ResponsiveTable\' ? undefined : ${this>rowPress} }"\n\t\t\t\t\t\t\t\t\t\tvisible="{tableDefinition>annotation/row/visible}"\n\t\t\t\t\t\t\t\t\t/></mdcTable:rowActions></template:if></mdcTable:RowSettings></mdc:rowSettings><mdc:columns><core:Fragment fragmentName="sap.fe.macros.table.Columns" type="XML" /></mdc:columns><template:if test="{= ${this>creationMode} === \'CreationRow\'}"><mdc:creationRow><core:Fragment fragmentName="sap.fe.macros.table.CreationRow" type="XML" /></mdc:creationRow></template:if><template:if test="{= ${this>variantManagement} === \'Control\'}"><mdc:variant><variant:VariantManagement\n\t\t\t\t\t\t\t\tid="{= ID.generate([${this>id}, \'VM\']) }"\n\t\t\t\t\t\t\t\tfor="{this>id}"\n\t\t\t\t\t\t\t\tshowSetAsDefault="true"\n\t\t\t\t\t\t\t\tselect="{this>variantSelected}"\n\t\t\t\t\t\t\t\theaderLevel="{this>headerLevel}"\n\t\t\t\t\t\t\t\tsave="{this>variantSaved}"\n\t\t\t\t\t\t\t/></mdc:variant></template:if><template:if test="{tableDefinition>control/filters/quickFilters}"><template:with path="tableDefinition>control/filters/quickFilters" var="quickFilters"><mdc:quickFilter><macroTable:QuickFilterContainer\n\t\t\t\t\t\t\t\t\tid="{= ID.generate([${this>id}, \'QuickFilterContainer\']) }"\n\t\t\t\t\t\t\t\t\tentitySet="{collection>@@COMMON.getMetaPath}"\n\t\t\t\t\t\t\t\t\tparentEntityType="{parentEntitySet>$Type}"\n\t\t\t\t\t\t\t\t\tshowCounts="{= ${quickFilters>showCounts} === true}"\n\t\t\t\t\t\t\t\t\tmacrodata:filters="{=TABLE.formatHiddenFilters(${tableDefinition>control/filters/quickFilters})}"\n\t\t\t\t\t\t\t\t\tbatchGroupId="$auto.Workers"\n\t\t\t\t\t\t\t\t/></mdc:quickFilter></template:with></template:if></mdc:Table></template:with></template:with></macroTable:TableAPI></core:FragmentDefinition>\n',
	"sap/fe/macros/table/ValueHelp.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns:macro="sap.fe.macros"\n\ttemplate:require="{\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\'\n\t}"\n><template:if\n\t\ttest="{= (${dataField>$Type}.indexOf(\'DataFieldForAnnotation\') !== -1) &amp;&amp; (${dataField>Target/$AnnotationPath}.indexOf(\'@com.sap.vocabularies.UI.v1.Chart\') !== -1)}"\n\t><template:then></template:then><template:elseif\n\t\t\ttest="{= (${dataField>$Type}.indexOf(\'DataFieldForAnnotation\') !== -1) &amp;&amp; (${dataField>Target/$AnnotationPath}.indexOf(\'FieldGroup\') !== -1)}"\n\t\t><template:with path="dataField>Target/$AnnotationPath/Data" var="dataFields"><template:repeat list="{dataFields>}" var="dataField"><core:Fragment fragmentName="sap.fe.macros.table.ValueHelp" type="XML" /></template:repeat></template:with></template:elseif><template:elseif test="{= ${dataField>Value} }"><template:with path="dataField>Value" var="item"><macro:ValueHelp\n\t\t\t\t\tidPrefix="{= ID.generate([${this>id}, \'TableValueHelp\']) }"\n\t\t\t\t\tproperty="{item>}"\n\t\t\t\t\tcontextPath="{contextPath>}"\n\t\t\t\t/></template:with></template:elseif><template:else><macro:ValueHelp\n\t\t\t\tidPrefix="{= ID.generate([${this>id}, \'TableValueHelp\']) }"\n\t\t\t\tproperty="{dataField>}"\n\t\t\t\tcontextPath="{contextPath>}"\n\t\t\t/></template:else></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/valuehelp/ValueHelpFilterBar.fragment.xml":'<core:FragmentDefinition\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:core="sap.ui.core"\n\txmlns:mdc="sap.ui.mdc"\n\txmlns:mdcFbVh="sap.ui.mdc.filterbar.vh"\n\txmlns="sap.m"\n\txmlns:macro="sap.fe.macros"\n\txmlns:internalMacro="sap.fe.macros.internal"\n\txmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\txmlns:macroData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\ttemplate:require="{\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tMACRO: \'sap/fe/macros/MacroTemplating\'\n\t}"\n><mdcFbVh:FilterBar\n\t\tid="{this>id}"\n\t\tliveMode="{this>liveMode}"\n\t\tdelegate="{= \'{name:\\\'sap/fe/macros/filterBar/FilterBarDelegate\\\', payload: {entityTypePath: \\\'\' + ${contextPath>@@MACRO.getPath} + \'\\\'} }\' }"\n\t\tsearch="{this>search}"\n\t\tfilterChanged="{this>filterChanged}"\n\t\tfilterConditions="{this>filterConditions}"\n\t\tsuspendSelection="{this>suspendSelection}"\n\t\texpandFilterFields="{this>expandFilterFields}"\n\t\tmacroData:hideBasicSearch="{this>hideBasicSearch}"\n\t\tmacroData:useSemanticDateRange="{this>useSemanticDateRange}"\n\t\tmacroData:selectionFields="{= COMMON.stringifyCustomData(${this>selectionFields}) }"\n\t\tmacroData:entityType="{contextPath>@@MACRO.getPath}"\n\t><mdcFbVh:dependents><template:repeat list="{path:\'selectionFields>\'}" var="item"><template:if test="{= ${item>availability} === \'Default\' &amp;&amp; ${item>template} === undefined}"><macro:ValueHelp\n\t\t\t\t\t\tidPrefix="{= ID.generate([${this>id}, \'FilterFieldValueHelp\', COMMON.getNavigationPath(${item>annotationPath})]) }"\n\t\t\t\t\t\tcontextPath="{contextPath>}"\n\t\t\t\t\t\tconditionModel="$filters"\n\t\t\t\t\t\tproperty="{item>annotationPath}"\n\t\t\t\t\t\tfilterFieldValueHelp="true"\n\t\t\t\t\t\tuseSemanticDateRange="{this>useSemanticDateRange}"\n\t\t\t\t\t/></template:if></template:repeat><template:if\n\t\t\t\ttest="{= !${path:\'contextPath>@com.sap.vocabularies.UI.v1.SelectionFields\'}  &amp;&amp; (${this>enableFallback} === \'true\')}"\n\t\t\t><template:repeat\n\t\t\t\t\tlist="{path:\'contextPath>\', filters: {path: \'$kind\', operator: \'EQ\', value1:\'Property\'}}"\n\t\t\t\t\tvar="selectionField"\n\t\t\t\t><template:with path="selectionField>" var="item"><macro:ValueHelp\n\t\t\t\t\t\t\tidPrefix="{= ID.generate([${this>id}, \'FilterFieldValueHelp\']) }"\n\t\t\t\t\t\t\tcontextPath="{contextPath>}"\n\t\t\t\t\t\t\tconditionModel="$filters"\n\t\t\t\t\t\t\tproperty="{item>}"\n\t\t\t\t\t\t\tfilterFieldValueHelp="true"\n\t\t\t\t\t\t\tuseSemanticDateRange="{this>useSemanticDateRange}"\n\t\t\t\t\t\t/></template:with></template:repeat></template:if></mdcFbVh:dependents><template:if test="{= !${this>hideBasicSearch} }"><mdcFbVh:basicSearchField><mdc:FilterField\n\t\t\t\t\tplaceholder="{sap.fe.i18n>M_FILTERBAR_SEARCH}"\n\t\t\t\t\tconditions="{$filters>/conditions/$search}"\n\t\t\t\t\tdataType="Edm.String"\n\t\t\t\t\tmaxConditions="1"\n\t\t\t\t/></mdcFbVh:basicSearchField></template:if><mdcFbVh:filterItems><template:repeat list="{path:\'selectionFields>\'}" var="item"><template:if test="{= ${item>availability} === \'Default\'}"><template:if test="{= ${item>template} === undefined}"><template:then><internalMacro:FilterField\n\t\t\t\t\t\t\t\tidPrefix="{= ID.generate([${this>id}, \'FilterField\', COMMON.getNavigationPath(${item>annotationPath})]) }"\n\t\t\t\t\t\t\t\tvhIdPrefix="{= ID.generate([${this>id}, \'FilterFieldValueHelp\', COMMON.getNavigationPath(${item>annotationPath})]) }"\n\t\t\t\t\t\t\t\tcontextPath="{contextPath>}"\n\t\t\t\t\t\t\t\tproperty="{item>annotationPath}"\n\t\t\t\t\t\t\t\t_valueList="{_valueList>}"\n\t\t\t\t\t\t\t\tuseSemanticDateRange="{this>useSemanticDateRange}"\n\t\t\t\t\t\t\t\tsettings="{= COMMON.stringifyCustomData(${item>settings}) }"\n\t\t\t\t\t\t\t/></template:then><template:else><core:Fragment fragmentName="sap.fe.macros.filter.CustomFilter" type="XML" /></template:else></template:if></template:if></template:repeat><template:if\n\t\t\t\ttest="{= !${contextPath>@com.sap.vocabularies.UI.v1.SelectionFields} &amp;&amp; (${this>enableFallback} === \'true\') }"\n\t\t\t><template:repeat\n\t\t\t\t\tlist="{path:\'contextPath>\', filters: {path: \'$kind\', operator: \'EQ\', value1:\'Property\'}}"\n\t\t\t\t\tvar="selectionField"\n\t\t\t\t><internalMacro:FilterField\n\t\t\t\t\t\tcontextPath="{contextPath>}"\n\t\t\t\t\t\tproperty="{selectionField>}"\n\t\t\t\t\t\t_valueList="{_valueList>}"\n\t\t\t\t\t\tidPrefix="{= ID.generate([${this>id}, \'FilterField\']) }"\n\t\t\t\t\t\tvhIdPrefix="{= ID.generate([${this>id}, \'FilterFieldValueHelp\']) }"\n\t\t\t\t\t\tuseSemanticDateRange="{this>useSemanticDateRange}"\n\t\t\t\t\t\tlog:comment="Taken from Properties"\n\t\t\t\t\t\tsettings="{= COMMON.stringifyCustomData(${selectionField>settings}) }"\n\t\t\t\t\t/></template:repeat></template:if></mdcFbVh:filterItems></mdcFbVh:FilterBar></core:FragmentDefinition>\n',
	"sap/fe/macros/visualfilters/fragments/InteractiveBarChart.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:m="sap.m"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\ttemplate:require="{\n        MODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n        HELPER: \'sap/fe/macros/visualfilters/InteractiveChartHelper\',\n        ID: \'sap/fe/core/helpers/StableIdHelper\',\n        FieldHelper: \'sap/fe/macros/field/FieldHelper\',\n        UI: \'sap/fe/core/templating/UIFormatters\',\n        COMMON: \'sap/fe/macros/CommonHelper\',\n        FieldTemplating: \'sap/fe/macros/field/FieldTemplating\',\n        MACRO: \'sap/fe/macros/MacroTemplating\'\n    }"\n><template:with path="metaPath>" helper="HELPER.getChart" var="chartAnnotation"><template:if test="{= ${this>chartMeasure} &amp;&amp; ${chartAnnotation>Dimensions/0/} }"><template:then><template:with path="chartAnnotation>" helper="COMMON.getMeasureAttribute" var="DataPoint"><template:with path="chartAnnotation>Dimensions/0/" var="Dimension"><InteractiveBarChart\n\t\t\t\t\t\t\tcore:require="{VisualFilterRuntime: \'sap/fe/macros/visualfilters/VisualFilterRuntime\'}"\n\t\t\t\t\t\t\tvisible="{= \'{= ${internal>\' + ID.generate([${metaPath>@@MACRO.getPath}]) + \'/showError}}\'}"\n\t\t\t\t\t\t\tselectionChanged="VisualFilterRuntime.selectionChanged"\n\t\t\t\t\t\t\tshowError="{= \'{= ${internal>\' + ID.generate([${metaPath>@@MACRO.getPath}]) + \'/showError}}\'}"\n\t\t\t\t\t\t\terrorMessageTitle="{= \'{internal>\' + ID.generate([${metaPath>@@MACRO.getPath}]) + \'/errorMessageTitle}\'}"\n\t\t\t\t\t\t\terrorMessage="{= \'{internal>\' + ID.generate([${metaPath>@@MACRO.getPath}]) + \'/errorMessage}\'}"\n\t\t\t\t\t\t\tbars="{parts:[{path:\'chartAnnotation>\'},{path:\'contextPath>\'},{path: \'Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text\'},{path:\'Dimension>$PropertyPath/$Type\'},{path:\'metaPath>SortOrder\'}, {path: \'this>selectionVariantAnnotation\'}, {path:\'this>bCustomAggregate\'}, {path:\'this>aggregateProperties\'}, {path:\'this>bUoMHasCustomAggregate\'}, {path: \'contextPath>@@COMMON.getParameters\'}, {path: \'this>filterBarEntityType\'}, {path: \'this>draftSupported\'},{path: \'this>chartMeasure\'}],formatter:\'HELPER.getAggregationBinding\'}"\n\t\t\t\t\t\t\tmacrodata:outParameter="{= ${this>outParameter}}"\n\t\t\t\t\t\t\tmacrodata:valuelistProperty="{= ${this>valuelistProperty}}"\n\t\t\t\t\t\t\tmacrodata:multipleSelectionAllowed="{= %{this>multipleSelectionAllowed}}"\n\t\t\t\t\t\t\tmacrodata:dimension="{= ${Dimension>$PropertyPath}}"\n\t\t\t\t\t\t\tmacrodata:dimensionText="{= ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text} ? ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text/$Path} : undefined}"\n\t\t\t\t\t\t\tmacrodata:scalefactor="{= HELPER.getScaleFactor(${DataPoint>ValueFormat})}"\n\t\t\t\t\t\t\tmacrodata:measure="{= ${this>chartMeasure}}"\n\t\t\t\t\t\t\tmacrodata:uom="{parts:[{path:\'chartAnnotation>\'},{path:\'contextPath>\'},{value:\'true\'}, {path:\'this>bCustomAggregate\'}, {path:\'this>aggregateProperties\'}],formatter:\'HELPER.getUoM\'}"\n\t\t\t\t\t\t\tmacrodata:inParameters="{= COMMON.stringifyCustomData(${this>inParameters}) }"\n\t\t\t\t\t\t\tmacrodata:inParameterFilters="{= ${this>inParameters} !== undefined ? HELPER.getInParameterFiltersBinding(${this>inParameters}) : undefined}"\n\t\t\t\t\t\t\tmacrodata:dimensionType="{= ${Dimension>$PropertyPath/$Type}}"\n\t\t\t\t\t\t\tmacrodata:selectionVariantAnnotation="{= COMMON.stringifyCustomData(${this>selectionVariantAnnotation})}"\n\t\t\t\t\t\t\tmacrodata:required="{this>required}"\n\t\t\t\t\t\t\tmacrodata:showOverlayInitially="{this>showOverlayInitially}"\n\t\t\t\t\t\t\tmacrodata:requiredProperties="{this>requiredProperties}"\n\t\t\t\t\t\t\tmacrodata:infoPath="{= ID.generate([${metaPath>@@MACRO.getPath}]) }"\n\t\t\t\t\t\t\tmacrodata:parameters="{= COMMON.stringifyCustomData(${contextPath>@@COMMON.getParameters})}"\n\t\t\t\t\t\t\tmacrodata:draftSupported="{this>draftSupported}"\n\t\t\t\t\t\t><bars><InteractiveBarChartBar\n\t\t\t\t\t\t\t\t\tcore:require="{VisualFilterRuntime: \'sap/fe/macros/visualfilters/VisualFilterRuntime\'}"\n\t\t\t\t\t\t\t\t\tlabel="{= FieldTemplating.getTextBinding(${Dimension>@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\t\t\t\tvalue="{= HELPER.getChartValue(${this>chartMeasure})}"\n\t\t\t\t\t\t\t\t\tdisplayedValue="{parts:[ {path: \'this>chartMeasure\'}, {path: \'DataPoint>ValueFormat\'}, {path: \'metaPath>@@MACRO.getPath\'}], formatter: \'HELPER.getChartDisplayedValue\'}"\n\t\t\t\t\t\t\t\t\tcolor="{parts:[{path:\'DataPoint>@@UI.getDataModelObjectPath\'}, {path:\'Dimension>\'}], formatter: \'HELPER.getColorBinding\'}"\n\t\t\t\t\t\t\t\t\tselected="{path: \'$field>/conditions\', formatter: \'sap.fe.macros.visualfilters.VisualFilterRuntime.getAggregationSelected\'}"\n\t\t\t\t\t\t\t\t/></bars></InteractiveBarChart></template:with></template:with></template:then></template:if></template:with></core:FragmentDefinition>\n',
	"sap/fe/macros/visualfilters/fragments/InteractiveChartWithError.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:m="sap.m"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\ttemplate:require="{\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tMACRO: \'sap/fe/macros/MacroTemplating\',\n\t\tHELPER: \'sap/fe/macros/visualfilters/InteractiveChartHelper\'\n\t}"\n><template:with path="metaPath>" helper="HELPER.getChart" var="chartAnnotation"><template:if test="{= ${chartAnnotation>Measures/0/} &amp;&amp; ${chartAnnotation>Dimensions/0/} }"><template:then><InteractiveLineChart\n\t\t\t\t\tcore:require="{VisualFilterRuntime: \'sap/fe/macros/visualfilters/VisualFilterRuntime\'}"\n\t\t\t\t\tshowError="{= ${this>showError}}"\n\t\t\t\t\terrorMessageTitle="{= ${this>errorMessageTitle}}"\n\t\t\t\t\terrorMessage="{= ${this>errorMessage}}"\n\t\t\t\t/></template:then></template:if></template:with></core:FragmentDefinition>\n',
	"sap/fe/macros/visualfilters/fragments/InteractiveDonutChart.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:m="sap.m"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\ttemplate:require="{\n\t\tMODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n\t\tHELPER: \'sap/fe/macros/visualfilters/InteractiveChartHelper\',\n\t\tID: \'sap/fe/core/helpers/StableIdHelper\',\n        FieldHelper: \'sap/fe/macros/field/FieldHelper\',\n\t\tUI: \'sap/fe/core/templating/UIFormatters\',\n\t\tCOMMON: \'sap/fe/macros/CommonHelper\',\n\t\tFieldTemplating: \'sap/fe/macros/field/FieldTemplating\',\n\t\tMACRO: \'sap/fe/macros/MacroTemplating\'\n\t}"\n><template:if test="{= ${chartAnnotation>Measures/0/} &amp;&amp; ${chartAnnotation>Dimensions/0/} }"><template:then><template:with path="chartAnnotation>Measures/0" helper="COMMON.getMeasureAttributeForMeasure" var="DataPoint"><template:with path="chartAnnotation>Measures/0/" var="Measure"><template:with path="chartAnnotation>Dimensions/0/" var="Dimension"><InteractiveDonutChart\n\t\t\t\t\t\t\tcore:require="{VisualFilterRuntime: \'sap/fe/macros/visualfilters/VisualFilterRuntime\'}"\n\t\t\t\t\t\t\tselectionChanged="VisualFilterRuntime.selectionChanged"\n\t\t\t\t\t\t\tvisible="{= \'{= !${internal>\' + ID.generate([${metaPath>@@MACRO.getPath}]) + \'/showOverLayForVF}}\'}"\n\t\t\t\t\t\t\tsegments="{parts:[{path:\'chartAnnotation>\'},{path:\'contextPath>\'},{path: \'Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text\'},{path:\'Dimension>$PropertyPath/$Type\'},{path:\'metaPath>SortOrder\'}, {path: \'this>selectionVariantAnnotation\'}, {path:\'this>bCustomAggregate\'}, {path:\'this>aggregateProperties\'}, {path:\'this>bUoMHasCustomAggregate\'}],formatter:\'HELPER.getAggregationBinding\'}"\n\t\t\t\t\t\t\tmacrodata:outParameter="{= ${this>outParameter}}"\n\t\t\t\t\t\t\tmacrodata:valuelistProperty="{= ${this>valuelistProperty}}"\n\t\t\t\t\t\t\tmacrodata:multipleSelectionAllowed="{= %{this>multipleSelectionAllowed}}"\n\t\t\t\t\t\t\tmacrodata:dimension="{= ${Dimension>$PropertyPath}}"\n\t\t\t\t\t\t\tmacrodata:dimensionText="{= ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text} ? ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text/$Path} : undefined}"\n\t\t\t\t\t\t\tmacrodata:measure="{= ${Measure>$PropertyPath}}"\n\t\t\t\t\t\t\tmacrodata:scalefactor="{= HELPER.getScaleFactor(${DataPoint>ValueFormat})}"\n\t\t\t\t\t\t\tmacrodata:uom="{parts:[{path:\'chartAnnotation>\'},{path:\'contextPath>\'},{value:\'true\'}, {path:\'this>bCustomAggregate\'}, {path:\'this>aggregateProperties\'}],formatter:\'HELPER.getUoM\'}"\n\t\t\t\t\t\t\tmacrodata:inParameters="{= COMMON.stringifyCustomData(${this>inParameters}) }"\n\t\t\t\t\t\t\tmacrodata:inParameterConditions="{= ${this>inParameters} !== undefined ? HELPER.getInParameterFiltersBinding(${this>inParameters}) : undefined}"\n\t\t\t\t\t\t\tmacrodata:dimensionType="{= ${Dimension>$PropertyPath/$Type}}"\n\t\t\t\t\t\t\tmacrodata:selectionVariantAnnotation="{= COMMON.stringifyCustomData(${this>selectionVariantAnnotation})}"\n\t\t\t\t\t\t\tmacrodata:required="{this>required}"\n\t\t\t\t\t\t\tmacrodata:showOverlayInitially="{this>showOverlayInitially}"\n\t\t\t\t\t\t\tmacrodata:requiredProperties="{this>requiredProperties}"\n\t\t\t\t\t\t\tmacrodata:infoPath="{= ID.generate([${metaPath>@@MACRO.getPath}]) }"\n\t\t\t\t\t\t><segments><InteractiveDonutChartSegment\n\t\t\t\t\t\t\t\t\tcore:require="{VisualFilterRuntime: \'sap/fe/macros/visualfilters/VisualFilterRuntime\'}"\n\t\t\t\t\t\t\t\t\tlabel="{= FieldTemplating.getTextBinding(${Dimension>@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\t\t\t\tvalue="{= ${Measure>$PropertyPath@@HELPER.getChartValue} }"\n\t\t\t\t\t\t\t\t\tdisplayedValue="{parts:[ {path: \'Measure>$PropertyPath\'}, {path: \'DataPoint>ValueFormat\'}, {path: \'metaPath>@@MACRO.getPath\'}], formatter: \'HELPER.getChartDisplayedValue\'}"\n\t\t\t\t\t\t\t\t\tcolor="{parts:[{path:\'DataPoint>@@UI.getDataModelObjectPath\'}, {path:\'Dimension>\'}], formatter: \'HELPER.getColorBinding\'}"\n\t\t\t\t\t\t\t\t\tselected="{path: \'$field>/conditions\', formatter: \'sap.fe.macros.visualfilters.VisualFilterRuntime.getAggregationSelected\'}"\n\t\t\t\t\t\t\t\t/></segments></InteractiveDonutChart><m:VBox\n\t\t\t\t\t\t\tclass="sapUiOverlay sapUiResponsiveMargin"\n\t\t\t\t\t\t\tvisible="{= \'{internal>\' + ID.generate([${metaPath>@@MACRO.getPath}]) + \'/showOverLayForVF}\'}"\n\t\t\t\t\t\t><m:Text text="{= \'{internal>\' + ID.generate([${metaPath>@@MACRO.getPath}]) + \'/VFOverLayMessage}\'}" /></m:VBox></template:with></template:with></template:with></template:then></template:if></core:FragmentDefinition>\n',
	"sap/fe/macros/visualfilters/fragments/InteractiveLineChart.fragment.xml":'<core:FragmentDefinition\n\txmlns="sap.suite.ui.microchart"\n\txmlns:core="sap.ui.core"\n\txmlns:m="sap.m"\n\txmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"\n\txmlns:macrodata="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"\n\ttemplate:require="{\n        MODEL: \'sap/ui/model/odata/v4/AnnotationHelper\',\n        HELPER: \'sap/fe/macros/visualfilters/InteractiveChartHelper\',\n        ID: \'sap/fe/core/helpers/StableIdHelper\',\n        FieldHelper: \'sap/fe/macros/field/FieldHelper\',\n        UI: \'sap/fe/core/templating/UIFormatters\',\n        COMMON: \'sap/fe/macros/CommonHelper\',\n        FieldTemplating: \'sap/fe/macros/field/FieldTemplating\',\n        MACRO: \'sap/fe/macros/MacroTemplating\'\n    }"\n><template:with path="metaPath>" helper="HELPER.getChart" var="chartAnnotation"><template:if test="{= ${this>chartMeasure} &amp;&amp; ${chartAnnotation>Dimensions/0/} }"><template:then><template:with path="chartAnnotation>" helper="COMMON.getMeasureAttribute" var="DataPoint"><template:with path="chartAnnotation>Dimensions/0/" var="Dimension"><InteractiveLineChart\n\t\t\t\t\t\t\tcore:require="{VisualFilterRuntime: \'sap/fe/macros/visualfilters/VisualFilterRuntime\'}"\n\t\t\t\t\t\t\tvisible="{= \'{= ${internal>\' + ID.generate([${metaPath>@@MACRO.getPath}]) + \'/showError}}\'}"\n\t\t\t\t\t\t\tselectionChanged="VisualFilterRuntime.selectionChanged"\n\t\t\t\t\t\t\tshowError="{= \'{= ${internal>\' + ID.generate([${metaPath>@@MACRO.getPath}]) + \'/showError}}\'}"\n\t\t\t\t\t\t\terrorMessageTitle="{= \'{internal>\' + ID.generate([${metaPath>@@MACRO.getPath}]) + \'/errorMessageTitle}\'}"\n\t\t\t\t\t\t\terrorMessage="{= \'{internal>\' + ID.generate([${metaPath>@@MACRO.getPath}]) + \'/errorMessage}\'}"\n\t\t\t\t\t\t\tpoints="{parts:[{path:\'chartAnnotation>\'},{path:\'contextPath>\'},{path: \'Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text\'},{path:\'Dimension>$PropertyPath/$Type\'},{path:\'metaPath>SortOrder\'}, {path: \'this>selectionVariantAnnotation\'}, {path:\'this>bCustomAggregate\'}, {path:\'this>aggregateProperties\'}, {path:\'this>bUoMHasCustomAggregate\'}, {path: \'contextPath>@@COMMON.getParameters\'}, {path: \'this>filterBarEntityType\'}, {path: \'this>draftSupported\'},{path: \'this>chartMeasure\'}],formatter:\'HELPER.getAggregationBinding\'}"\n\t\t\t\t\t\t\tmacrodata:outParameter="{= ${this>outParameter}}"\n\t\t\t\t\t\t\tmacrodata:valuelistProperty="{= ${this>valuelistProperty}}"\n\t\t\t\t\t\t\tmacrodata:multipleSelectionAllowed="{= %{this>multipleSelectionAllowed}}"\n\t\t\t\t\t\t\tmacrodata:dimension="{= ${Dimension>$PropertyPath}}"\n\t\t\t\t\t\t\tmacrodata:dimensionText="{= ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text} ? ${Dimension>$PropertyPath@com.sap.vocabularies.Common.v1.Text/$Path} : undefined}"\n\t\t\t\t\t\t\tmacrodata:measure="{= ${this>chartMeasure}}"\n\t\t\t\t\t\t\tmacrodata:scalefactor="{= HELPER.getScaleFactor(${DataPoint>ValueFormat})}"\n\t\t\t\t\t\t\tmacrodata:uom="{parts:[{path:\'chartAnnotation>\'},{path:\'contextPath>\'},{value:\'true\'},{path:\'this>bCustomAggregate\'}, {path:\'this>aggregateProperties\'}],formatter:\'HELPER.getUoM\'}"\n\t\t\t\t\t\t\tmacrodata:inParameters="{= COMMON.stringifyCustomData(${this>inParameters}) }"\n\t\t\t\t\t\t\tmacrodata:inParameterConditions="{= ${this>inParameters} !== undefined ? HELPER.getInParameterFiltersBinding(${this>inParameters}) : undefined}"\n\t\t\t\t\t\t\tmacrodata:dimensionType="{= ${Dimension>$PropertyPath/$Type}}"\n\t\t\t\t\t\t\tmacrodata:selectionVariantAnnotation="{= COMMON.stringifyCustomData(${this>selectionVariantAnnotation})}"\n\t\t\t\t\t\t\tmacrodata:required="{this>required}"\n\t\t\t\t\t\t\tmacrodata:showOverlayInitially="{this>showOverlayInitially}"\n\t\t\t\t\t\t\tmacrodata:requiredProperties="{this>requiredProperties}"\n\t\t\t\t\t\t\tmacrodata:infoPath="{= ID.generate([${metaPath>@@MACRO.getPath}]) }"\n\t\t\t\t\t\t\tmacrodata:parameters="{= COMMON.stringifyCustomData(${contextPath>@@COMMON.getParameters})}"\n\t\t\t\t\t\t\tmacrodata:draftSupported="{= ${this>draftSupported}}"\n\t\t\t\t\t\t><points><InteractiveLineChartPoint\n\t\t\t\t\t\t\t\t\tcore:require="{VisualFilterRuntime: \'sap/fe/macros/visualfilters/VisualFilterRuntime\'}"\n\t\t\t\t\t\t\t\t\tlabel="{= FieldTemplating.getTextBinding(${Dimension>@@UI.getDataModelObjectPath})}"\n\t\t\t\t\t\t\t\t\tvalue="{= HELPER.getChartValue(${this>chartMeasure})}"\n\t\t\t\t\t\t\t\t\tdisplayedValue="{parts:[ {path: \'this>chartMeasure\'}, {path: \'DataPoint>ValueFormat\'}, {path: \'metaPath>@@MACRO.getPath\'}], formatter: \'HELPER.getChartDisplayedValue\'}"\n\t\t\t\t\t\t\t\t\tcolor="{parts:[{path:\'DataPoint>@@UI.getDataModelObjectPath\'}, {path:\'Dimension>\'}], formatter: \'HELPER.getColorBinding\'}"\n\t\t\t\t\t\t\t\t\tselected="{path: \'$field>/conditions\', formatter: \'sap.fe.macros.visualfilters.VisualFilterRuntime.getAggregationSelected\'}"\n\t\t\t\t\t\t\t\t/></points></InteractiveLineChart></template:with></template:with></template:then></template:if></template:with></core:FragmentDefinition>\n'
});
//# sourceMappingURL=library-preload.js.map
