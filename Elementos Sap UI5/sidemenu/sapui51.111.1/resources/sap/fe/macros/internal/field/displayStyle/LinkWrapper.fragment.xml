<core:FragmentDefinition
	xmlns:template="http://schemas.sap.com/sapui5/extension/sap.ui.core.template/1"
	xmlns="sap.m"
	xmlns:core="sap.ui.core"
	xmlns:control="sap.fe.core.controls"
	xmlns:macro="sap.fe.macros"
	xmlns:customData="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	xmlns:log="http://schemas.sap.com/sapui5/extension/sap.ui.core.CustomData/1"
	template:require="{
							FIELD: 'sap/fe/macros/field/FieldHelper',
							UI: 'sap/fe/core/templating/UIFormatters'
						 }"
>
	<control:ConditionalWrapper
		id="{this>noWrapperId}"
		core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime'}"
		visible="{this>displayVisible}"
		condition="{= FIELD.hasSemanticObjectTargets(${property>@@UI.getDataModelObjectPath}) }"
	>
		<control:contentTrue>
			<Link
				core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime', WSR: 'sap/base/strings/whitespaceReplacer'}"
				text="{= ${this>formatOptions/retrieveTextFromValueList} ? FIELD.retrieveTextFromValueList( ${this>entitySet}, ${propertyPath>}, ${this>formatOptions} ) : ${this>text} }"
				wrapping="{= ${this>wrap} === undefined ? true : ${this>wrap} }"
				press="FieldRuntime.pressLink"
				ariaLabelledBy="{this>ariaLabelledBy}"
				modelContextChange="{= FIELD.computeSemanticLinkModelContextChange(${semanticObjects>}, ${property>$Path@@UI.getDataModelObjectPath}) }"
				emptyIndicatorMode="{this>emptyIndicatorMode}"
			>
				<dependents>
					<macro:QuickView dataField="{dataField>}" semanticObject="{this>semanticObject}" contextPath="{entitySet>}" />
				</dependents>
			</Link>
		</control:contentTrue>
		<control:contentFalse>
			<Text
				core:require="{FieldRuntime: 'sap/fe/macros/field/FieldRuntime', WSR: 'sap/base/strings/whitespaceReplacer'}"
				visible="{this>displayVisible}"
				text="{this>text}"
				wrapping="{= ${this>wrap} || 'false' }"
				emptyIndicatorMode="{this>emptyIndicatorMode}"
				renderWhitespace="true"
			/>
		</control:contentFalse>
	</control:ConditionalWrapper>
</core:FragmentDefinition>
