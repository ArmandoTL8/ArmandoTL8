/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["sap/base/util/merge", "sap/ui/mdc/enum/BaseType", "sap/ui/mdc/odata/TypeUtil"], function (merge, BaseType, ODataTypeUtil) {
  "use strict";

  const ODataV4TypeUtil = Object.assign({}, ODataTypeUtil);
  ODataV4TypeUtil.getBaseType = function (type, formatOptions, constraints) {
    switch (type) {
      case "sap.ui.model.odata.type.Date":
        return BaseType.Date;
      case "sap.ui.model.odata.type.TimeOfDay":
        return BaseType.Time;
      case "sap.ui.model.odata.type.Unit":
      case "sap.ui.model.odata.type.Currency":
        if (!formatOptions || (!formatOptions.hasOwnProperty("showMeasure") || formatOptions.showMeasure) && (!formatOptions.hasOwnProperty("showNumber") || formatOptions.showNumber)) {
          return BaseType.Unit;
        } else if (!formatOptions.hasOwnProperty("showNumber") || formatOptions.showNumber) {
          return BaseType.Numeric; // only number to show
        } else {
          return BaseType.String; // only unit to show
        }

      default:
        return ODataTypeUtil.getBaseType.call(ODataV4TypeUtil, type, formatOptions, constraints);
    }
  };
  ODataV4TypeUtil.getDataTypeClassName = function (type) {
    // V4 specific types
    const edmTypes = {
      "Edm.Date": "sap.ui.model.odata.type.Date",
      // V4 Date
      "Edm.TimeOfDay": "sap.ui.model.odata.type.TimeOfDay" // V4 constraints: {precision}
    };

    if (edmTypes[type]) {
      type = edmTypes[type];
    } else {
      type = ODataTypeUtil.getDataTypeClassName.call(ODataV4TypeUtil, type);
    }
    return type;
  };
  ODataV4TypeUtil.getDataTypeInstance = function (dataType, formatOptions, constraints) {
    switch (dataType) {
      case "sap.ui.model.odata.type.DateTimeOffset":
      case "Edm.DateTimeOffset":
        constraints = merge({}, constraints || {});
        constraints.V4 = true;
        break;
      default:
    }
    const TypeClass = ODataV4TypeUtil.getDataTypeClass(dataType);
    return new TypeClass(formatOptions, constraints);
  };
  return ODataV4TypeUtil;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJPRGF0YVY0VHlwZVV0aWwiLCJPYmplY3QiLCJhc3NpZ24iLCJPRGF0YVR5cGVVdGlsIiwiZ2V0QmFzZVR5cGUiLCJ0eXBlIiwiZm9ybWF0T3B0aW9ucyIsImNvbnN0cmFpbnRzIiwiQmFzZVR5cGUiLCJEYXRlIiwiVGltZSIsImhhc093blByb3BlcnR5Iiwic2hvd01lYXN1cmUiLCJzaG93TnVtYmVyIiwiVW5pdCIsIk51bWVyaWMiLCJTdHJpbmciLCJjYWxsIiwiZ2V0RGF0YVR5cGVDbGFzc05hbWUiLCJlZG1UeXBlcyIsImdldERhdGFUeXBlSW5zdGFuY2UiLCJkYXRhVHlwZSIsIm1lcmdlIiwiVjQiLCJUeXBlQ2xhc3MiLCJnZXREYXRhVHlwZUNsYXNzIl0sInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyJUeXBlVXRpbC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbWVyZ2UgZnJvbSBcInNhcC9iYXNlL3V0aWwvbWVyZ2VcIjtcbmltcG9ydCBCYXNlVHlwZSBmcm9tIFwic2FwL3VpL21kYy9lbnVtL0Jhc2VUeXBlXCI7XG5pbXBvcnQgdHlwZSB7IENvbnN0cmFpbnRzLCBGb3JtYXRPcHRpb25zIH0gZnJvbSBcInNhcC91aS9tZGMvb2RhdGEvVHlwZVV0aWxcIjtcbmltcG9ydCBPRGF0YVR5cGVVdGlsIGZyb20gXCJzYXAvdWkvbWRjL29kYXRhL1R5cGVVdGlsXCI7XG5pbXBvcnQgdHlwZSBTaW1wbGVUeXBlIGZyb20gXCJzYXAvdWkvbW9kZWwvU2ltcGxlVHlwZVwiO1xuXG5jb25zdCBPRGF0YVY0VHlwZVV0aWwgPSBPYmplY3QuYXNzaWduKHt9LCBPRGF0YVR5cGVVdGlsKTtcbk9EYXRhVjRUeXBlVXRpbC5nZXRCYXNlVHlwZSA9IGZ1bmN0aW9uICh0eXBlOiBzdHJpbmcsIGZvcm1hdE9wdGlvbnM/OiBGb3JtYXRPcHRpb25zLCBjb25zdHJhaW50cz86IENvbnN0cmFpbnRzKTogQmFzZVR5cGUge1xuXHRzd2l0Y2ggKHR5cGUpIHtcblx0XHRjYXNlIFwic2FwLnVpLm1vZGVsLm9kYXRhLnR5cGUuRGF0ZVwiOlxuXHRcdFx0cmV0dXJuIEJhc2VUeXBlLkRhdGU7XG5cdFx0Y2FzZSBcInNhcC51aS5tb2RlbC5vZGF0YS50eXBlLlRpbWVPZkRheVwiOlxuXHRcdFx0cmV0dXJuIEJhc2VUeXBlLlRpbWU7XG5cdFx0Y2FzZSBcInNhcC51aS5tb2RlbC5vZGF0YS50eXBlLlVuaXRcIjpcblx0XHRjYXNlIFwic2FwLnVpLm1vZGVsLm9kYXRhLnR5cGUuQ3VycmVuY3lcIjpcblx0XHRcdGlmIChcblx0XHRcdFx0IWZvcm1hdE9wdGlvbnMgfHxcblx0XHRcdFx0KCghZm9ybWF0T3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShcInNob3dNZWFzdXJlXCIpIHx8IGZvcm1hdE9wdGlvbnMuc2hvd01lYXN1cmUpICYmXG5cdFx0XHRcdFx0KCFmb3JtYXRPcHRpb25zLmhhc093blByb3BlcnR5KFwic2hvd051bWJlclwiKSB8fCBmb3JtYXRPcHRpb25zLnNob3dOdW1iZXIpKVxuXHRcdFx0KSB7XG5cdFx0XHRcdHJldHVybiBCYXNlVHlwZS5Vbml0O1xuXHRcdFx0fSBlbHNlIGlmICghZm9ybWF0T3B0aW9ucy5oYXNPd25Qcm9wZXJ0eShcInNob3dOdW1iZXJcIikgfHwgZm9ybWF0T3B0aW9ucy5zaG93TnVtYmVyKSB7XG5cdFx0XHRcdHJldHVybiBCYXNlVHlwZS5OdW1lcmljOyAvLyBvbmx5IG51bWJlciB0byBzaG93XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRyZXR1cm4gQmFzZVR5cGUuU3RyaW5nOyAvLyBvbmx5IHVuaXQgdG8gc2hvd1xuXHRcdFx0fVxuXHRcdGRlZmF1bHQ6XG5cdFx0XHRyZXR1cm4gT0RhdGFUeXBlVXRpbC5nZXRCYXNlVHlwZS5jYWxsKE9EYXRhVjRUeXBlVXRpbCwgdHlwZSwgZm9ybWF0T3B0aW9ucywgY29uc3RyYWludHMpO1xuXHR9XG59O1xuT0RhdGFWNFR5cGVVdGlsLmdldERhdGFUeXBlQ2xhc3NOYW1lID0gZnVuY3Rpb24gKHR5cGU6IHN0cmluZyk6IHN0cmluZyB7XG5cdC8vIFY0IHNwZWNpZmljIHR5cGVzXG5cdGNvbnN0IGVkbVR5cGVzID0ge1xuXHRcdFwiRWRtLkRhdGVcIjogXCJzYXAudWkubW9kZWwub2RhdGEudHlwZS5EYXRlXCIsIC8vIFY0IERhdGVcblx0XHRcIkVkbS5UaW1lT2ZEYXlcIjogXCJzYXAudWkubW9kZWwub2RhdGEudHlwZS5UaW1lT2ZEYXlcIiAvLyBWNCBjb25zdHJhaW50czoge3ByZWNpc2lvbn1cblx0fSBhcyBhbnk7XG5cdGlmIChlZG1UeXBlc1t0eXBlXSkge1xuXHRcdHR5cGUgPSBlZG1UeXBlc1t0eXBlXTtcblx0fSBlbHNlIHtcblx0XHR0eXBlID0gT0RhdGFUeXBlVXRpbC5nZXREYXRhVHlwZUNsYXNzTmFtZS5jYWxsKE9EYXRhVjRUeXBlVXRpbCwgdHlwZSk7XG5cdH1cblx0cmV0dXJuIHR5cGU7XG59O1xuT0RhdGFWNFR5cGVVdGlsLmdldERhdGFUeXBlSW5zdGFuY2UgPSBmdW5jdGlvbiAoZGF0YVR5cGU6IHN0cmluZywgZm9ybWF0T3B0aW9ucz86IEZvcm1hdE9wdGlvbnMsIGNvbnN0cmFpbnRzPzogQ29uc3RyYWludHMpOiBTaW1wbGVUeXBlIHtcblx0c3dpdGNoIChkYXRhVHlwZSkge1xuXHRcdGNhc2UgXCJzYXAudWkubW9kZWwub2RhdGEudHlwZS5EYXRlVGltZU9mZnNldFwiOlxuXHRcdGNhc2UgXCJFZG0uRGF0ZVRpbWVPZmZzZXRcIjpcblx0XHRcdGNvbnN0cmFpbnRzID0gbWVyZ2Uoe30sIGNvbnN0cmFpbnRzIHx8IHt9KTtcblx0XHRcdGNvbnN0cmFpbnRzLlY0ID0gdHJ1ZTtcblx0XHRcdGJyZWFrO1xuXHRcdGRlZmF1bHQ6XG5cdH1cblx0Y29uc3QgVHlwZUNsYXNzID0gT0RhdGFWNFR5cGVVdGlsLmdldERhdGFUeXBlQ2xhc3MoZGF0YVR5cGUpO1xuXHRyZXR1cm4gbmV3IFR5cGVDbGFzcyhmb3JtYXRPcHRpb25zLCBjb25zdHJhaW50cyk7XG59O1xuZXhwb3J0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