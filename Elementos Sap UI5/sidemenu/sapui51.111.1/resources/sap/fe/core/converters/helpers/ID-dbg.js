/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["../../helpers/StableIdHelper"], function (StableIdHelper) {
  "use strict";

  var _exports = {};
  var generate = StableIdHelper.generate;
  const BASE_ID = ["fe"];

  /**
   * Shortcut to the stableIdHelper providing a "curry" like method where the last parameter is missing.
   *
   * @param sFixedPart
   * @returns A shortcut function with the fixed ID part
   */
  function createIDGenerator() {
    for (var _len = arguments.length, sFixedPart = new Array(_len), _key = 0; _key < _len; _key++) {
      sFixedPart[_key] = arguments[_key];
    }
    return function () {
      for (var _len2 = arguments.length, sIDPart = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        sIDPart[_key2] = arguments[_key2];
      }
      return generate(BASE_ID.concat(...sFixedPart, ...sIDPart));
    };
  }

  /**
   * Those are all helpers to centralize ID generation in the code for different elements
   */
  _exports.createIDGenerator = createIDGenerator;
  const getHeaderFacetID = createIDGenerator("HeaderFacet");
  _exports.getHeaderFacetID = getHeaderFacetID;
  const getHeaderFacetContainerID = createIDGenerator("HeaderFacetContainer");
  _exports.getHeaderFacetContainerID = getHeaderFacetContainerID;
  const getHeaderFacetFormID = createIDGenerator("HeaderFacet", "Form");
  _exports.getHeaderFacetFormID = getHeaderFacetFormID;
  const getCustomHeaderFacetID = createIDGenerator("HeaderFacetCustomContainer");
  _exports.getCustomHeaderFacetID = getCustomHeaderFacetID;
  const getEditableHeaderSectionID = createIDGenerator("EditableHeaderSection");
  _exports.getEditableHeaderSectionID = getEditableHeaderSectionID;
  const getSectionID = createIDGenerator("FacetSection");
  _exports.getSectionID = getSectionID;
  const getCustomSectionID = createIDGenerator("CustomSection");
  _exports.getCustomSectionID = getCustomSectionID;
  const getSubSectionID = createIDGenerator("FacetSubSection");
  _exports.getSubSectionID = getSubSectionID;
  const getCustomSubSectionID = createIDGenerator("CustomSubSection");
  _exports.getCustomSubSectionID = getCustomSubSectionID;
  const getSideContentID = createIDGenerator("SideContent");
  _exports.getSideContentID = getSideContentID;
  const getSideContentLayoutID = function (sSectionID) {
    return generate(["fe", sSectionID, "SideContentLayout"]);
  };
  _exports.getSideContentLayoutID = getSideContentLayoutID;
  const getFormID = createIDGenerator("Form");
  _exports.getFormID = getFormID;
  const getFormContainerID = createIDGenerator("FormContainer");
  _exports.getFormContainerID = getFormContainerID;
  const getFormStandardActionButtonID = function (sFormContainerId, sActionName) {
    return generate(["fe", "FormContainer", sFormContainerId, "StandardAction", sActionName]);
  };
  _exports.getFormStandardActionButtonID = getFormStandardActionButtonID;
  const getTableID = createIDGenerator("table");
  _exports.getTableID = getTableID;
  const getCustomTabID = createIDGenerator("CustomTab");
  _exports.getCustomTabID = getCustomTabID;
  const getFilterBarID = createIDGenerator("FilterBar");
  _exports.getFilterBarID = getFilterBarID;
  const getDynamicListReportID = function () {
    return "fe::ListReport";
  };
  _exports.getDynamicListReportID = getDynamicListReportID;
  const getIconTabBarID = createIDGenerator("TabMultipleMode");
  _exports.getIconTabBarID = getIconTabBarID;
  const getFilterVariantManagementID = function (sFilterID) {
    return generate([sFilterID, "VariantManagement"]);
  };
  _exports.getFilterVariantManagementID = getFilterVariantManagementID;
  const getChartID = createIDGenerator("Chart");
  _exports.getChartID = getChartID;
  const getCustomActionID = function (sActionID) {
    return generate(["CustomAction", sActionID]);
  };
  _exports.getCustomActionID = getCustomActionID;
  const getKPIID = createIDGenerator("KPI");
  _exports.getKPIID = getKPIID;
  return _exports;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJCQVNFX0lEIiwiY3JlYXRlSURHZW5lcmF0b3IiLCJzRml4ZWRQYXJ0Iiwic0lEUGFydCIsImdlbmVyYXRlIiwiY29uY2F0IiwiZ2V0SGVhZGVyRmFjZXRJRCIsImdldEhlYWRlckZhY2V0Q29udGFpbmVySUQiLCJnZXRIZWFkZXJGYWNldEZvcm1JRCIsImdldEN1c3RvbUhlYWRlckZhY2V0SUQiLCJnZXRFZGl0YWJsZUhlYWRlclNlY3Rpb25JRCIsImdldFNlY3Rpb25JRCIsImdldEN1c3RvbVNlY3Rpb25JRCIsImdldFN1YlNlY3Rpb25JRCIsImdldEN1c3RvbVN1YlNlY3Rpb25JRCIsImdldFNpZGVDb250ZW50SUQiLCJnZXRTaWRlQ29udGVudExheW91dElEIiwic1NlY3Rpb25JRCIsImdldEZvcm1JRCIsImdldEZvcm1Db250YWluZXJJRCIsImdldEZvcm1TdGFuZGFyZEFjdGlvbkJ1dHRvbklEIiwic0Zvcm1Db250YWluZXJJZCIsInNBY3Rpb25OYW1lIiwiZ2V0VGFibGVJRCIsImdldEN1c3RvbVRhYklEIiwiZ2V0RmlsdGVyQmFySUQiLCJnZXREeW5hbWljTGlzdFJlcG9ydElEIiwiZ2V0SWNvblRhYkJhcklEIiwiZ2V0RmlsdGVyVmFyaWFudE1hbmFnZW1lbnRJRCIsInNGaWx0ZXJJRCIsImdldENoYXJ0SUQiLCJnZXRDdXN0b21BY3Rpb25JRCIsInNBY3Rpb25JRCIsImdldEtQSUlEIl0sInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyJJRC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBdXRob3JpemVkSWRBbm5vdGF0aW9uc1R5cGUsIGdlbmVyYXRlIH0gZnJvbSBcIi4uLy4uL2hlbHBlcnMvU3RhYmxlSWRIZWxwZXJcIjtcbnR5cGUgSURQYXJ0ID0gc3RyaW5nIHwgQXV0aG9yaXplZElkQW5ub3RhdGlvbnNUeXBlO1xuY29uc3QgQkFTRV9JRDogSURQYXJ0W10gPSBbXCJmZVwiXTtcblxuLyoqXG4gKiBTaG9ydGN1dCB0byB0aGUgc3RhYmxlSWRIZWxwZXIgcHJvdmlkaW5nIGEgXCJjdXJyeVwiIGxpa2UgbWV0aG9kIHdoZXJlIHRoZSBsYXN0IHBhcmFtZXRlciBpcyBtaXNzaW5nLlxuICpcbiAqIEBwYXJhbSBzRml4ZWRQYXJ0XG4gKiBAcmV0dXJucyBBIHNob3J0Y3V0IGZ1bmN0aW9uIHdpdGggdGhlIGZpeGVkIElEIHBhcnRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUlER2VuZXJhdG9yKC4uLnNGaXhlZFBhcnQ6IElEUGFydFtdKSB7XG5cdHJldHVybiBmdW5jdGlvbiAoLi4uc0lEUGFydDogSURQYXJ0W10pIHtcblx0XHRyZXR1cm4gZ2VuZXJhdGUoQkFTRV9JRC5jb25jYXQoLi4uc0ZpeGVkUGFydCwgLi4uc0lEUGFydCkpO1xuXHR9O1xufVxuXG4vKipcbiAqIFRob3NlIGFyZSBhbGwgaGVscGVycyB0byBjZW50cmFsaXplIElEIGdlbmVyYXRpb24gaW4gdGhlIGNvZGUgZm9yIGRpZmZlcmVudCBlbGVtZW50c1xuICovXG5leHBvcnQgY29uc3QgZ2V0SGVhZGVyRmFjZXRJRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiSGVhZGVyRmFjZXRcIik7XG5leHBvcnQgY29uc3QgZ2V0SGVhZGVyRmFjZXRDb250YWluZXJJRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiSGVhZGVyRmFjZXRDb250YWluZXJcIik7XG5leHBvcnQgY29uc3QgZ2V0SGVhZGVyRmFjZXRGb3JtSUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkhlYWRlckZhY2V0XCIsIFwiRm9ybVwiKTtcbmV4cG9ydCBjb25zdCBnZXRDdXN0b21IZWFkZXJGYWNldElEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJIZWFkZXJGYWNldEN1c3RvbUNvbnRhaW5lclwiKTtcbmV4cG9ydCBjb25zdCBnZXRFZGl0YWJsZUhlYWRlclNlY3Rpb25JRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiRWRpdGFibGVIZWFkZXJTZWN0aW9uXCIpO1xuZXhwb3J0IGNvbnN0IGdldFNlY3Rpb25JRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiRmFjZXRTZWN0aW9uXCIpO1xuZXhwb3J0IGNvbnN0IGdldEN1c3RvbVNlY3Rpb25JRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiQ3VzdG9tU2VjdGlvblwiKTtcbmV4cG9ydCBjb25zdCBnZXRTdWJTZWN0aW9uSUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkZhY2V0U3ViU2VjdGlvblwiKTtcbmV4cG9ydCBjb25zdCBnZXRDdXN0b21TdWJTZWN0aW9uSUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkN1c3RvbVN1YlNlY3Rpb25cIik7XG5leHBvcnQgY29uc3QgZ2V0U2lkZUNvbnRlbnRJRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiU2lkZUNvbnRlbnRcIik7XG5leHBvcnQgY29uc3QgZ2V0U2lkZUNvbnRlbnRMYXlvdXRJRCA9IGZ1bmN0aW9uIChzU2VjdGlvbklEOiBzdHJpbmcpIHtcblx0cmV0dXJuIGdlbmVyYXRlKFtcImZlXCIsIHNTZWN0aW9uSUQsIFwiU2lkZUNvbnRlbnRMYXlvdXRcIl0pO1xufTtcbmV4cG9ydCBjb25zdCBnZXRGb3JtSUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkZvcm1cIik7XG5leHBvcnQgY29uc3QgZ2V0Rm9ybUNvbnRhaW5lcklEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJGb3JtQ29udGFpbmVyXCIpO1xuZXhwb3J0IGNvbnN0IGdldEZvcm1TdGFuZGFyZEFjdGlvbkJ1dHRvbklEID0gZnVuY3Rpb24gKHNGb3JtQ29udGFpbmVySWQ6IHN0cmluZywgc0FjdGlvbk5hbWU6IHN0cmluZykge1xuXHRyZXR1cm4gZ2VuZXJhdGUoW1wiZmVcIiwgXCJGb3JtQ29udGFpbmVyXCIsIHNGb3JtQ29udGFpbmVySWQsIFwiU3RhbmRhcmRBY3Rpb25cIiwgc0FjdGlvbk5hbWVdKTtcbn07XG5leHBvcnQgY29uc3QgZ2V0VGFibGVJRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwidGFibGVcIik7XG5leHBvcnQgY29uc3QgZ2V0Q3VzdG9tVGFiSUQgPSBjcmVhdGVJREdlbmVyYXRvcihcIkN1c3RvbVRhYlwiKTtcbmV4cG9ydCBjb25zdCBnZXRGaWx0ZXJCYXJJRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiRmlsdGVyQmFyXCIpO1xuZXhwb3J0IGNvbnN0IGdldER5bmFtaWNMaXN0UmVwb3J0SUQgPSBmdW5jdGlvbiAoKSB7XG5cdHJldHVybiBcImZlOjpMaXN0UmVwb3J0XCI7XG59O1xuZXhwb3J0IGNvbnN0IGdldEljb25UYWJCYXJJRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiVGFiTXVsdGlwbGVNb2RlXCIpO1xuZXhwb3J0IGNvbnN0IGdldEZpbHRlclZhcmlhbnRNYW5hZ2VtZW50SUQgPSBmdW5jdGlvbiAoc0ZpbHRlcklEOiBzdHJpbmcpIHtcblx0cmV0dXJuIGdlbmVyYXRlKFtzRmlsdGVySUQsIFwiVmFyaWFudE1hbmFnZW1lbnRcIl0pO1xufTtcbmV4cG9ydCBjb25zdCBnZXRDaGFydElEID0gY3JlYXRlSURHZW5lcmF0b3IoXCJDaGFydFwiKTtcbmV4cG9ydCBjb25zdCBnZXRDdXN0b21BY3Rpb25JRCA9IGZ1bmN0aW9uIChzQWN0aW9uSUQ6IHN0cmluZykge1xuXHRyZXR1cm4gZ2VuZXJhdGUoW1wiQ3VzdG9tQWN0aW9uXCIsIHNBY3Rpb25JRF0pO1xufTtcbmV4cG9ydCBjb25zdCBnZXRLUElJRCA9IGNyZWF0ZUlER2VuZXJhdG9yKFwiS1BJXCIpO1xuIl0sIm1hcHBpbmdzIjoiO0FBQUE7QUFBQTtBQUFBOzs7Ozs7RUFFQSxNQUFNQSxPQUFpQixHQUFHLENBQUMsSUFBSSxDQUFDOztFQUVoQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7RUFDTyxTQUFTQyxpQkFBaUIsR0FBMEI7SUFBQSxrQ0FBdEJDLFVBQVU7TUFBVkEsVUFBVTtJQUFBO0lBQzlDLE9BQU8sWUFBZ0M7TUFBQSxtQ0FBbkJDLE9BQU87UUFBUEEsT0FBTztNQUFBO01BQzFCLE9BQU9DLFFBQVEsQ0FBQ0osT0FBTyxDQUFDSyxNQUFNLENBQUMsR0FBR0gsVUFBVSxFQUFFLEdB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