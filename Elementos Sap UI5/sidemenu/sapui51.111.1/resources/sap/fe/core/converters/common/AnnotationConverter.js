/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define([],function(){var a;(function(){"use strict";var e={634:function(a,e,t){Object.defineProperty(e,"__esModule",{value:true});e.convert=void 0;const o=t(401);class i{constructor(a,e,t,o){this.path=a.Path;this.type="Path";this.$target=e;this.term=o;this.annotationsTerm=t}}function r(a){var e;const t={};if((e=a.schema.entityContainer)===null||e===void 0?void 0:e.fullyQualifiedName){t[a.schema.entityContainer.fullyQualifiedName]=a.schema.entityContainer}for(const e of a.schema.entitySets){t[e.fullyQualifiedName]=e}for(const e of a.schema.singletons){t[e.fullyQualifiedName]=e}for(const e of a.schema.actions){t[e.fullyQualifiedName]=e;if(e.isBound){const a=e.fullyQualifiedName.split("(")[0];if(!t[a]){t[a]={_type:"UnboundGenericAction",actions:[]}}t[a].actions.push(e);const o=e.fullyQualifiedName.split("(");t[`${o[1].split(")")[0]}/${o[0]}`]=e}for(const a of e.parameters){t[a.fullyQualifiedName]=a}}for(const e of a.schema.actionImports){t[e.fullyQualifiedName]=e}for(const e of a.schema.complexTypes){t[e.fullyQualifiedName]=e;for(const a of e.properties){t[a.fullyQualifiedName]=a}}for(const e of a.schema.typeDefinitions){t[e.fullyQualifiedName]=e}for(const e of a.schema.entityTypes){e.annotations={};t[e.fullyQualifiedName]=e;t[`Collection(${e.fullyQualifiedName})`]=e;for(const a of e.entityProperties){t[a.fullyQualifiedName]=a;const e=t[a.type];if((0,o.isComplexTypeDefinition)(e)){for(const o of e.properties){const e=Object.assign(o,{_type:"Property",fullyQualifiedName:a.fullyQualifiedName+"/"+o.name});t[e.fullyQualifiedName]=e}}}for(const a of e.navigationProperties){t[a.fullyQualifiedName]=a}}for(const e of Object.keys(a.schema.annotations)){for(const i of a.schema.annotations[e]){const e=(0,o.unalias)(a.references,i.target);i.annotations.forEach(i=>{let r=`${e}@${(0,o.unalias)(a.references,i.term)}`;if(i.qualifier){r+=`#${i.qualifier}`}t[r]=i;i.fullyQualifiedName=r})}}return t}function n(a,e){if(e.startsWith("@")){return a+(0,o.unalias)(o.defaultReferences,e)}else{return a+"/"+e}}const s={};let c=[];function l(a,e){if(!s[a]){s[a]=[e]}else{s[a].push(e)}}function u(a,e,t,o=false,i=false,r){let s;if(!t){return undefined}const c=[];if(e&&e._type==="Property"){e=a[e.fullyQualifiedName.split("/")[0]]}t=n(e.fullyQualifiedName,t);const p=t.split("/");const m=[];p.forEach(a=>{if(a.indexOf("@")!==-1){const[e,t]=a.split("@");m.push(e);m.push(`@${t}`)}else{m.push(a)}});let f=t;let g=e;const y=m.reduce((t,o)=>{if(o==="$Type"&&t._type==="EntityType"){return t}if(o==="$"&&t._type==="EntitySet"){return t}if((o==="@$ui5.overload"||o==="0")&&t._type==="Action"){return t}if(o.length===0){if(t&&(t._type==="EntitySet"||t._type==="Singleton")&&t.entityType){if(i){c.push(t)}t=t.entityType}if(t&&t._type==="NavigationProperty"&&t.targetType){if(i){c.push(t)}t=t.targetType}return t}if(i&&t!==null&&t!==undefined){c.push(t)}if(!t){f=o}else if((t._type==="EntitySet"||t._type==="Singleton")&&o==="$Type"){t=t.targetType;return t}else if((t._type==="EntitySet"||t._type==="Singleton")&&o==="$NavigationPropertyBinding"){t=t.navigationPropertyBinding;return t}else if((t._type==="EntitySet"||t._type==="Singleton")&&t.entityType){f=n(t.entityTypeName,o)}else if(t._type==="NavigationProperty"){f=n(t.fullyQualifiedName,o);if(!a[f]){f=n(t.targetTypeName,o)}}else if(t._type==="Property"){if(t.targetType){f=n(t.targetType.fullyQualifiedName,o)}else{f=n(t.fullyQualifiedName,o)}}else if(t._type==="Action"&&t.isBound){f=n(t.fullyQualifiedName,o);if(o==="$Parameter"){return t.parameters}if(!a[f]){f=n(t.sourceType,o)}}else if(t._type==="ActionParameter"){f=n(e.fullyQualifiedName.substring(0,e.fullyQualifiedName.lastIndexOf("/")),o);if(!a[f]){let t=e.fullyQualifiedName.lastIndexOf("/");if(t===-1){t=e.fullyQualifiedName.length}f=n(a[e.fullyQualifiedName.substring(0,t)].sourceType,o)}}else{f=n(t.fullyQualifiedName,o);if(o!=="name"&&t[o]!==undefined){return t[o]}else if(o==="$AnnotationPath"&&t.$target){const e=a[t.fullyQualifiedName.split("@")[0]];const o=u(a,e,t.value,false,true);o.visitedObjects.forEach(a=>{if(c.indexOf(a)===-1){c.push(a)}});return o.target}else if(o==="$Path"&&t.$target){g=c.concat().reverse().find(a=>a._type==="EntityType"||a._type==="EntitySet"||a._type==="Singleton"||a._type==="NavigationProperty");if(g){const e=u(a,g,t.path,false,true);e.visitedObjects.forEach(a=>{if(c.indexOf(a)===-1){c.push(a)}});return e.target}return t.$target}else if(o.startsWith("$Path")&&t.$target){const a=t.$target;f=n(a.fullyQualifiedName,o.substring(5))}else if(t.hasOwnProperty("$Type")&&!a[f]){const e=a[t.fullyQualifiedName.split("@")[0]];if(e){f=n(e.fullyQualifiedName,o)}}}return a[f]},null);if(!y){if(r){const a=v(r,e);s={message:"Unable to resolve the path expression: "+"\n"+t+"\n"+"\n"+"Hint: Check and correct the path values under the following structure in the metadata (annotation.xml file or CDS annotations for the application): \n\n"+"<Annotation Term = "+r+">"+"\n"+"<Record Type = "+a+">"+"\n"+"<AnnotationPath = "+t+">"};l(t,s)}else{s={message:"Unable to resolve the path expression: "+t+"\n"+"\n"+"Hint: Check and correct the path values under the following structure in the metadata (annotation.xml file or CDS annotations for the application): \n\n"+"<Annotation Term = "+p[0]+">"+"\n"+"<PropertyValue  Path= "+p[1]+">"};l(t,s)}}if(o){return f}if(i){return{visitedObjects:c,target:y}}return y}function p(a){return a.indexOf("@")!==-1}function m(a,e,t,r){if(a===undefined){return undefined}switch(a.type){case"String":return a.String;case"Int":return a.Int;case"Bool":return a.Bool;case"Decimal":return(0,o.Decimal)(a.Decimal);case"Date":return a.Date;case"EnumMember":return(0,o.alias)(r.rawMetadata.references,a.EnumMember);case"PropertyPath":return{type:"PropertyPath",value:a.PropertyPath,fullyQualifiedName:e,$target:u(t,r.currentTarget,a.PropertyPath,false,false,r.currentTerm)};case"NavigationPropertyPath":return{type:"NavigationPropertyPath",value:a.NavigationPropertyPath,fullyQualifiedName:e,$target:u(t,r.currentTarget,a.NavigationPropertyPath,false,false,r.currentTerm)};case"AnnotationPath":const n=u(t,r.currentTarget,(0,o.unalias)(r.rawMetadata.references,a.AnnotationPath),true,false,r.currentTerm);const s={type:"AnnotationPath",value:a.AnnotationPath,fullyQualifiedName:e,$target:n,annotationsTerm:r.currentTerm,term:"",path:""};r.unresolvedAnnotations.push({inline:false,toResolve:s});return s;case"Path":const c=u(t,r.currentTarget,a.Path,true,false,r.currentTerm);const l=new i(a,c,r.currentTerm,"");r.unresolvedAnnotations.push({inline:p(a.Path),toResolve:l});return l;case"Record":return y(a.Record,e,t,r);case"Collection":return d(a.Collection,e,t,r);case"Apply":case"Null":case"Not":case"Eq":case"Ne":case"Gt":case"Ge":case"Lt":case"Le":case"If":case"And":case"Or":default:return a}}function v(a,e,t){let i=o.TermToTypes[a];if(t){a=a.split(".").slice(0,-1).join(".")+"."+t;i=o.TermToTypes[a]}const r={isError:false,message:`The type of the record used within the term ${a} was not defined and was inferred as ${i}.\nHint: If possible, try to maintain the Type property for each Record.\n<Annotations Target="${e}">\n\t<Annotation Term="${a}">\n\t\t<Record>...</Record>\n\t</Annotation>\n</Annotations>`};l(e+"/"+a,r);return i}function f(a,e){return a.hasOwnProperty("Action")&&(e.$Type==="com.sap.vocabularies.UI.v1.DataFieldForAction"||e.$Type==="com.sap.vocabularies.UI.v1.DataFieldWithAction")}function g(a,e){let t;if(!a.type&&e.currentTerm){t=v(e.currentTerm,e.currentTarget.fullyQualifiedName,e.currentProperty)}else{t=(0,o.unalias)(e.rawMetadata.references,a.type)}return t}function y(a,e,t,o){const i=g(a,o);const r={$Type:i,fullyQualifiedName:e,annotations:{}};const n={};if(Array.isArray(a.annotations)){const t={target:e,annotations:a.annotations,__source:o.currentSource};o.additionalAnnotations.push(t)}if(a.propertyValues){a.propertyValues.forEach(a=>{var i;o.currentProperty=a.name;n[a.name]=m(a.value,`${e}/${a.name}`,t,o);if(Array.isArray(a.annotations)){const t={target:`${e}/${a.name}`,annotations:a.annotations,__source:o.currentSource};o.additionalAnnotations.push(t)}if(f(n,r)){n.ActionTarget=(i=o.currentTarget.actions)===null||i===void 0?void 0:i[n.Action];if(!n.ActionTarget){const a=t[n.Action];if(a===null||a===void 0?void 0:a.isBound){n.ActionTarget=a}else if(a){n.ActionTarget=a.action}}if(!n.ActionTarget){c.push({message:"Unable to resolve the action "+n.Action+" defined for "+r.fullyQualifiedName})}}});o.currentProperty=undefined}return Object.assign(r,n)}function O(a){let e=a.type;if(e===undefined&&a.length>0){const t=a[0];if(t.hasOwnProperty("PropertyPath")){e="PropertyPath"}else if(t.hasOwnProperty("Path")){e="Path"}else if(t.hasOwnProperty("AnnotationPath")){e="AnnotationPath"}else if(t.hasOwnProperty("NavigationPropertyPath")){e="NavigationPropertyPath"}else if(typeof t==="object"&&(t.hasOwnProperty("type")||t.hasOwnProperty("propertyValues"))){e="Record"}else if(typeof t==="string"){e="String"}}else if(e===undefined){e="EmptyCollection"}return e}function d(a,e,t,o){const r=O(a);switch(r){case"PropertyPath":return a.map((a,i)=>({type:"PropertyPath",value:a.PropertyPath,fullyQualifiedName:`${e}/${i}`,$target:u(t,o.currentTarget,a.PropertyPath,false,false,o.currentTerm)}));case"Path":return a.map(a=>{const e=u(t,o.currentTarget,a.Path,true,false,o.currentTerm);const r=new i(a,e,o.currentTerm,"");o.unresolvedAnnotations.push({inline:p(a.Path),toResolve:r});return r});case"AnnotationPath":return a.map((a,i)=>{const r=u(t,o.currentTarget,a.AnnotationPath,true,false,o.currentTerm);const n={type:"AnnotationPath",value:a.AnnotationPath,fullyQualifiedName:`${e}/${i}`,$target:r,annotationsTerm:o.currentTerm,term:"",path:""};o.unresolvedAnnotations.push({inline:false,toResolve:n});return n});case"NavigationPropertyPath":return a.map((a,i)=>({type:"NavigationPropertyPath",value:a.NavigationPropertyPath,fullyQualifiedName:`${e}/${i}`,$target:u(t,o.currentTarget,a.NavigationPropertyPath,false,false,o.currentTerm)}));case"Record":return a.map((a,i)=>y(a,`${e}/${i}`,t,o));case"Apply":case"Null":case"If":case"Eq":case"Ne":case"Lt":case"Gt":case"Le":case"Ge":case"Not":case"And":case"Or":return a.map(a=>a);case"String":return a.map(a=>{if(typeof a==="string"){return a}else if(a===undefined){return a}else{return a.String}});default:if(a.length===0){return[]}throw new Error("Unsupported case")}}function C(a,e,t){if(a.record){return y(a.record,a.fullyQualifiedName,e,t)}else if(a.collection===undefined){if(a.value){return m(a.value,a.fullyQualifiedName,e,t)}else{return true}}else if(a.collection){const o=d(a.collection,a.fullyQualifiedName,e,t);o.fullyQualifiedName=a.fullyQualifiedName;return o}else{throw new Error("Unsupported case")}}function b(a,e){return function(t,o){const i="";return u(e,a,t,false,o,i)}}function T(a,e,t,o){const i=e.find(e=>e.fullyQualifiedName===a.relationship);if(i){const e=i.associationEnd.find(e=>e.role===a.toRole);if(e){o.targetType=t[e.type];o.isCollection=e.multiplicity==="*"}}o.referentialConstraint=a.referentialConstraint||[]}function D(a,e,t){t.targetType=e[a.targetTypeName];t.partner=a.partner;t.isCollection=a.isCollection;t.containsTarget=a.containsTarget;t.referentialConstraint=a.referentialConstraint}function h(a){return!!a.targetTypeName}function V(a,e,t){return a.map(a=>{const o={_type:"NavigationProperty",name:a.name,fullyQualifiedName:a.fullyQualifiedName,isCollection:false,containsTarget:false,referentialConstraint:[],annotations:{},partner:"",targetType:undefined,targetTypeName:""};if(h(a)){D(a,t,o)}else{T(a,e,t,o)}if(o.targetType){o.targetTypeName=o.targetType.fullyQualifiedName}t[o.fullyQualifiedName]=o;return o})}function P(a,e,t){a.forEach(a=>{a.navigationProperties=V(a.navigationProperties,e,t);a.resolvePath=b(a,t)})}function I(a,e,t){e.forEach(e=>{if(!e.annotations){e.annotations={}}if(e.isBound){const o=t[e.sourceType];e.sourceEntityType=o;if(o){if(!o.actions){o.actions={}}o.actions[`${a}.${e.name}`]=e}e.returnEntityType=t[e.returnType]}})}function A(a,e){a.forEach(a=>{a.action=e[a.actionName]})}function S(a,e,t){a.forEach(a=>{a.entityType=e[a.entityTypeName];if(!a.entityType){a.entityType=e[(0,o.unalias)(t,a.entityTypeName)]}if(!a.annotations){a.annotations={}}if(!a.entityType.annotations){a.entityType.annotations={}}a.entityType.keys.forEach(a=>{a.isKey=true})})}function E(a,e,t){a.forEach(a=>{a.entityType=e[a.entityTypeName];if(!a.entityType){a.entityType=e[(0,o.unalias)(t,a.entityTypeName)]}if(!a.annotations){a.annotations={}}if(!a.entityType.annotations){a.entityType.annotations={}}a.entityType.keys.forEach(a=>{a.isKey=true})})}function N(a,e){function t(a){if(!a.annotations){a.annotations={}}try{if(a.type.indexOf("Edm")!==0){let o;if(a.type.startsWith("Collection")){const t=a.type.substring(11,a.type.length-1);o=e[t]}else{o=e[a.type]}if(o){a.targetType=o;if(o.properties){o.properties.forEach(t)}}}}catch(a){throw new Error("Property Type is not defined")}}a.forEach(a=>{a.entityProperties.forEach(t)})}function U(a,e,t){a.forEach(a=>{a.annotations={};a.properties.forEach(a=>{if(!a.annotations){a.annotations={}}});a.navigationProperties=V(a.navigationProperties,e,t)})}function R(a,e){const t=(0,o.alias)(a,e);const i=t.lastIndexOf(".");const r=t.substring(0,i);const n=t.substring(i+1);return[r,n]}function $(a,e){return function t(o,i=false){if(i){let t=o;if(!o.startsWith("/")){t=`/${o}`}const i=u(e,a,t,false,true);if(i.target){i.visitedObjects.push(i.target)}return{target:i.target,objectPath:i.visitedObjects}}const r=o.split("/");if(r.shift()!==""){throw new Error("Cannot deal with relative path")}const n=r.shift();const s=a.entitySets.find(a=>a.name===n);const c=a.singletons.find(a=>a.name===n);if(!s&&!c){return{target:a.entityContainer,objectPath:[a.entityContainer]}}if(r.length===0){return{target:s||c,objectPath:[a.entityContainer,s||c]}}else{const a=u(e,s||c,"/"+r.join("/"),false,true);if(a.target){a.visitedObjects.push(a.target)}return{target:a.target,objectPath:a.visitedObjects}}}}function Q(a,e){if(!a.annotations){a.annotations={}}if(!a.annotations[e]){a.annotations[e]={}}if(!a.annotations._annotations){a.annotations._annotations={}}}function M(a,e,t,i){const r=a.currentTarget;const n=r.fullyQualifiedName;e.annotations.forEach(s=>{var c,l;a.currentSource=s.__source||e.__source;const[u,p]=R(o.defaultReferences,s.term);Q(r,u);const m=`${p}${s.qualifier?"#"+s.qualifier:""}`;if(!i&&((l=(c=r.annotations)===null||c===void 0?void 0:c[u])===null||l===void 0?void 0:l[m])!==undefined){return}a.currentTerm=s.term;r.annotations[u][m]=C(s,t,a);switch(typeof r.annotations[u][m]){case"string":r.annotations[u][m]=new String(r.annotations[u][m]);break;case"boolean":r.annotations[u][m]=new Boolean(r.annotations[u][m]);break;default:break}if(r.annotations[u][m]!==null&&typeof r.annotations[u][m]==="object"&&!r.annotations[u][m].annotations){r.annotations[u][m].annotations={}}if(r.annotations[u][m]!==null&&typeof r.annotations[u][m]==="object"){r.annotations[u][m].term=(0,o.unalias)(o.defaultReferences,`${u}.${p}`);r.annotations[u][m].qualifier=s.qualifier;r.annotations[u][m].__source=a.currentSource}const v=`${n}@${(0,o.unalias)(o.defaultReferences,u+"."+m)}`;if(Array.isArray(s.annotations)){const e={target:v,annotations:s.annotations,__source:a.currentSource};a.additionalAnnotations.push(e)}else if(s.annotations&&!r.annotations[u][m].annotations){r.annotations[u][m].annotations=s.annotations}r.annotations._annotations[`${u}.${m}`]=r.annotations._annotations[(0,o.unalias)(o.defaultReferences,`${u}.${m}`)]=r.annotations[u][m];t[v]=r.annotations[u][m]})}function x(a,e){a.forEach(a=>{const t=a.toResolve;const o=t.$target;const i=e[o];const{annotationsTerm:r,annotationType:n}=t;delete t.annotationType;delete t.annotationsTerm;if(a.inline&&!(i instanceof String)){let a;for(a in t){delete t[a]}Object.assign(t,i)}else{t.$target=i}if(!i){t.targetString=o;if(r&&n){const a={message:"Unable to resolve the path expression: "+o+"\n"+"\n"+"Hint: Check and correct the path values under the following structure in the metadata (annotation.xml file or CDS annotations for the application): \n\n"+"<Annotation Term = "+r+">"+"\n"+"<Record Type = "+n+">"+"\n"+"<AnnotationPath = "+o+">"};l(o,a)}else{const a=t.term;const e=t.path;const i=o?o.split("/")[0]:o;const r={message:"Unable to resolve the path expression: "+o+"\n"+"\n"+"Hint: Check and correct the path values under the following structure in the metadata (annotation.xml file or CDS annotations for the application): \n\n"+"<Annotation Term = "+i+">"+"\n"+"<PropertyValue Property = "+a+"        Path= "+e+">"};l(o,r)}}})}function _(a){const e={};Object.keys(a.schema.annotations).forEach(t=>{a.schema.annotations[t].forEach(i=>{const r=(0,o.unalias)(a.references,i.target);i.__source=t;if(!e[r]){e[r]={annotations:i.annotations.concat(),target:r};e[r].__source=t}else{i.annotations.forEach(a=>{const o=e[r].annotations.findIndex(e=>e.term===a.term&&e.qualifier===a.qualifier);a.__source=t;if(o!==-1){e[r].annotations.splice(o,1,a)}else{e[r].annotations.push(a)}})}})});return e}function F(a){c=[];const e=r(a);P(a.schema.entityTypes,a.schema.associations,e);a.schema.entityContainer.annotations={};I(a.schema.namespace,a.schema.actions,e);A(a.schema.actionImports,e);S(a.schema.entitySets,e,a.references);E(a.schema.singletons,e,a.references);N(a.schema.entityTypes,e);U(a.schema.complexTypes,a.schema.associations,e);const t=[];const i=[];const n=_(a);Object.keys(n).forEach(o=>{const r=n[o];const s=e[o];if(!s&&(o===null||o===void 0?void 0:o.indexOf("@"))>0){i.push(r)}else if(s){let o=[s];let n=true;if(s._type==="UnboundGenericAction"){o=s.actions;n=false}o.forEach(o=>{const s={additionalAnnotations:i,currentSource:r.__source,currentTarget:o,currentTerm:"",rawMetadata:a,unresolvedAnnotations:t};M(s,r,e,n)})}});const l=[];i.forEach(i=>{const r=(0,o.unalias)(a.references,i.target);let[n,s]=r.split("@");const u=s.split("/");n=n+"@"+u[0];const p=u.slice(1).reduce((a,e)=>a===null||a===void 0?void 0:a[e],e[n]);if(!p||typeof p!=="object"){c.push({message:"The following annotation target was not found on the service "+r})}else{const o={additionalAnnotations:l,currentSource:i.__source,currentTarget:p,currentTerm:"",rawMetadata:a,unresolvedAnnotations:t};M(o,i,e,false)}});x(t,e);for(const a in s){c.push(s[a][0])}a.entitySets=a.schema.entitySets;const u=a.references.filter(a=>o.defaultReferences.find(e=>e.namespace===a.namespace)===undefined);const p={version:a.version,annotations:a.schema.annotations,namespace:a.schema.namespace,entityContainer:a.schema.entityContainer,actions:a.schema.actions,actionImports:a.schema.actionImports,entitySets:a.schema.entitySets,singletons:a.schema.singletons,entityTypes:a.schema.entityTypes,complexTypes:a.schema.complexTypes,typeDefinitions:a.schema.typeDefinitions,references:o.defaultReferences.concat(u),diagnostics:c.concat()};p.resolvePath=$(p,e);return p}e.convert=F},995:function(a,e,t){var o=this&&this.__createBinding||(Object.create?function(a,e,t,o){if(o===undefined)o=t;var i=Object.getOwnPropertyDescriptor(e,t);if(!i||("get"in i?!e.__esModule:i.writable||i.configurable)){i={enumerable:true,get:function(){return e[t]}}}Object.defineProperty(a,o,i)}:function(a,e,t,o){if(o===undefined)o=t;a[o]=e[t]});var i=this&&this.__exportStar||function(a,e){for(var t in a)if(t!=="default"&&!Object.prototype.hasOwnProperty.call(e,t))o(e,a,t)};Object.defineProperty(e,"__esModule",{value:true});i(t(634),e);i(t(127),e);i(t(401),e)},401:function(a,e){Object.defineProperty(e,"__esModule",{value:true});e.Decimal=e.isComplexTypeDefinition=e.TermToTypes=e.unalias=e.alias=e.defaultReferences=void 0;e.defaultReferences=[{alias:"Capabilities",namespace:"Org.OData.Capabilities.V1",uri:""},{alias:"Aggregation",namespace:"Org.OData.Aggregation.V1",uri:""},{alias:"Validation",namespace:"Org.OData.Validation.V1",uri:""},{namespace:"Org.OData.Core.V1",alias:"Core",uri:""},{namespace:"Org.OData.Measures.V1",alias:"Measures",uri:""},{namespace:"com.sap.vocabularies.Common.v1",alias:"Common",uri:""},{namespace:"com.sap.vocabularies.UI.v1",alias:"UI",uri:""},{namespace:"com.sap.vocabularies.Session.v1",alias:"Session",uri:""},{namespace:"com.sap.vocabularies.Analytics.v1",alias:"Analytics",uri:""},{namespace:"com.sap.vocabularies.CodeList.v1",alias:"CodeList",uri:""},{namespace:"com.sap.vocabularies.PersonalData.v1",alias:"PersonalData",uri:""},{namespace:"com.sap.vocabularies.Communication.v1",alias:"Communication",uri:""},{namespace:"com.sap.vocabularies.HTML5.v1",alias:"HTML5",uri:""}];function t(a,e){if(!a.reverseReferenceMap){a.reverseReferenceMap=a.reduce((a,e)=>{a[e.namespace]=e;return a},{})}if(!e){return e}const o=e.lastIndexOf(".");const i=e.substring(0,o);const r=e.substring(o+1);const n=a.reverseReferenceMap[i];if(n){return`${n.alias}.${r}`}else if(e.indexOf("@")!==-1){const[o,...i]=e.split("@");return`${o}@${t(a,i.join("@"))}`}else{return e}}e.alias=t;function o(a,e){if(!a.referenceMap){a.referenceMap=a.reduce((a,e)=>{a[e.alias]=e;return a},{})}if(!e){return e}const[t,...i]=e.split(".");const r=a.referenceMap[t];if(r){return`${r.namespace}.${i.join(".")}`}else if(e.indexOf("@")!==-1){const[t,...i]=e.split("@");return`${t}@${o(a,i.join("@"))}`}else{return e}}e.unalias=o;var i;(function(a){a["Org.OData.Authorization.V1.SecuritySchemes"]="Org.OData.Authorization.V1.SecurityScheme";a["Org.OData.Authorization.V1.Authorizations"]="Org.OData.Authorization.V1.Authorization";a["Org.OData.Core.V1.Revisions"]="Org.OData.Core.V1.RevisionType";a["Org.OData.Core.V1.Links"]="Org.OData.Core.V1.Link";a["Org.OData.Core.V1.Example"]="Org.OData.Core.V1.ExampleValue";a["Org.OData.Core.V1.Messages"]="Org.OData.Core.V1.MessageType";a["Org.OData.Core.V1.ValueException"]="Org.OData.Core.V1.ValueExceptionType";a["Org.OData.Core.V1.ResourceException"]="Org.OData.Core.V1.ResourceExceptionType";a["Org.OData.Core.V1.DataModificationException"]="Org.OData.Core.V1.DataModificationExceptionType";a["Org.OData.Core.V1.IsLanguageDependent"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.DereferenceableIDs"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.ConventionalIDs"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.Permissions"]="Org.OData.Core.V1.Permission";a["Org.OData.Core.V1.DefaultNamespace"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.Immutable"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.Computed"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.ComputedDefaultValue"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.IsURL"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.IsMediaType"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.ContentDisposition"]="Org.OData.Core.V1.ContentDispositionType";a["Org.OData.Core.V1.OptimisticConcurrency"]="Edm.PropertyPath";a["Org.OData.Core.V1.AdditionalProperties"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.AutoExpand"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.AutoExpandReferences"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.MayImplement"]="Org.OData.Core.V1.QualifiedTypeName";a["Org.OData.Core.V1.Ordered"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.PositionalInsert"]="Org.OData.Core.V1.Tag";a["Org.OData.Core.V1.AlternateKeys"]="Org.OData.Core.V1.AlternateKey";a["Org.OData.Core.V1.OptionalParameter"]="Org.OData.Core.V1.OptionalParameterType";a["Org.OData.Core.V1.OperationAvailable"]="Edm.Boolean";a["Org.OData.Core.V1.SymbolicName"]="Org.OData.Core.V1.SimpleIdentifier";a["Org.OData.Capabilities.V1.ConformanceLevel"]="Org.OData.Capabilities.V1.ConformanceLevelType";a["Org.OData.Capabilities.V1.AsynchronousRequestsSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.BatchContinueOnErrorSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.IsolationSupported"]="Org.OData.Capabilities.V1.IsolationLevel";a["Org.OData.Capabilities.V1.CrossJoinSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.CallbackSupported"]="Org.OData.Capabilities.V1.CallbackType";a["Org.OData.Capabilities.V1.ChangeTracking"]="Org.OData.Capabilities.V1.ChangeTrackingType";a["Org.OData.Capabilities.V1.CountRestrictions"]="Org.OData.Capabilities.V1.CountRestrictionsType";a["Org.OData.Capabilities.V1.NavigationRestrictions"]="Org.OData.Capabilities.V1.NavigationRestrictionsType";a["Org.OData.Capabilities.V1.IndexableByKey"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.TopSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.SkipSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.ComputeSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.SelectSupport"]="Org.OData.Capabilities.V1.SelectSupportType";a["Org.OData.Capabilities.V1.BatchSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.BatchSupport"]="Org.OData.Capabilities.V1.BatchSupportType";a["Org.OData.Capabilities.V1.FilterRestrictions"]="Org.OData.Capabilities.V1.FilterRestrictionsType";a["Org.OData.Capabilities.V1.SortRestrictions"]="Org.OData.Capabilities.V1.SortRestrictionsType";a["Org.OData.Capabilities.V1.ExpandRestrictions"]="Org.OData.Capabilities.V1.ExpandRestrictionsType";a["Org.OData.Capabilities.V1.SearchRestrictions"]="Org.OData.Capabilities.V1.SearchRestrictionsType";a["Org.OData.Capabilities.V1.KeyAsSegmentSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.QuerySegmentSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.InsertRestrictions"]="Org.OData.Capabilities.V1.InsertRestrictionsType";a["Org.OData.Capabilities.V1.DeepInsertSupport"]="Org.OData.Capabilities.V1.DeepInsertSupportType";a["Org.OData.Capabilities.V1.UpdateRestrictions"]="Org.OData.Capabilities.V1.UpdateRestrictionsType";a["Org.OData.Capabilities.V1.DeepUpdateSupport"]="Org.OData.Capabilities.V1.DeepUpdateSupportType";a["Org.OData.Capabilities.V1.DeleteRestrictions"]="Org.OData.Capabilities.V1.DeleteRestrictionsType";a["Org.OData.Capabilities.V1.CollectionPropertyRestrictions"]="Org.OData.Capabilities.V1.CollectionPropertyRestrictionsType";a["Org.OData.Capabilities.V1.OperationRestrictions"]="Org.OData.Capabilities.V1.OperationRestrictionsType";a["Org.OData.Capabilities.V1.AnnotationValuesInQuerySupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Capabilities.V1.ModificationQueryOptions"]="Org.OData.Capabilities.V1.ModificationQueryOptionsType";a["Org.OData.Capabilities.V1.ReadRestrictions"]="Org.OData.Capabilities.V1.ReadRestrictionsType";a["Org.OData.Capabilities.V1.CustomHeaders"]="Org.OData.Capabilities.V1.CustomParameter";a["Org.OData.Capabilities.V1.CustomQueryOptions"]="Org.OData.Capabilities.V1.CustomParameter";a["Org.OData.Capabilities.V1.MediaLocationUpdateSupported"]="Org.OData.Core.V1.Tag";a["Org.OData.Aggregation.V1.ApplySupported"]="Org.OData.Aggregation.V1.ApplySupportedType";a["Org.OData.Aggregation.V1.Groupable"]="Org.OData.Core.V1.Tag";a["Org.OData.Aggregation.V1.Aggregatable"]="Org.OData.Core.V1.Tag";a["Org.OData.Aggregation.V1.ContextDefiningProperties"]="Edm.PropertyPath";a["Org.OData.Aggregation.V1.LeveledHierarchy"]="Edm.PropertyPath";a["Org.OData.Aggregation.V1.RecursiveHierarchy"]="Org.OData.Aggregation.V1.RecursiveHierarchyType";a["Org.OData.Aggregation.V1.AvailableOnAggregates"]="Org.OData.Aggregation.V1.AvailableOnAggregatesType";a["Org.OData.Validation.V1.Minimum"]="Edm.PrimitiveType";a["Org.OData.Validation.V1.Maximum"]="Edm.PrimitiveType";a["Org.OData.Validation.V1.Exclusive"]="Org.OData.Core.V1.Tag";a["Org.OData.Validation.V1.AllowedValues"]="Org.OData.Validation.V1.AllowedValue";a["Org.OData.Validation.V1.MultipleOf"]="Edm.Decimal";a["Org.OData.Validation.V1.Constraint"]="Org.OData.Validation.V1.ConstraintType";a["Org.OData.Validation.V1.ItemsOf"]="Org.OData.Validation.V1.ItemsOfType";a["Org.OData.Validation.V1.OpenPropertyTypeConstraint"]="Org.OData.Core.V1.QualifiedTypeName";a["Org.OData.Validation.V1.DerivedTypeConstraint"]="Org.OData.Core.V1.QualifiedTypeName";a["Org.OData.Validation.V1.AllowedTerms"]="Org.OData.Core.V1.QualifiedTermName";a["Org.OData.Validation.V1.ApplicableTerms"]="Org.OData.Core.V1.QualifiedTermName";a["Org.OData.Validation.V1.MaxItems"]="Edm.Int64";a["Org.OData.Validation.V1.MinItems"]="Edm.Int64";a["Org.OData.Measures.V1.Scale"]="Edm.Byte";a["Org.OData.Measures.V1.DurationGranularity"]="Org.OData.Measures.V1.DurationGranularityType";a["com.sap.vocabularies.Analytics.v1.Dimension"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Analytics.v1.Measure"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Analytics.v1.AccumulativeMeasure"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Analytics.v1.RolledUpPropertyCount"]="Edm.Int16";a["com.sap.vocabularies.Analytics.v1.PlanningAction"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Analytics.v1.AggregatedProperties"]="com.sap.vocabularies.Analytics.v1.AggregatedPropertyType";a["com.sap.vocabularies.Common.v1.ServiceVersion"]="Edm.Int32";a["com.sap.vocabularies.Common.v1.ServiceSchemaVersion"]="Edm.Int32";a["com.sap.vocabularies.Common.v1.TextFor"]="Edm.PropertyPath";a["com.sap.vocabularies.Common.v1.IsLanguageIdentifier"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.TextFormat"]="com.sap.vocabularies.Common.v1.TextFormatType";a["com.sap.vocabularies.Common.v1.IsDigitSequence"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsUpperCase"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCurrency"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsUnit"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.UnitSpecificScale"]="Edm.PrimitiveType";a["com.sap.vocabularies.Common.v1.UnitSpecificPrecision"]="Edm.PrimitiveType";a["com.sap.vocabularies.Common.v1.SecondaryKey"]="Edm.PropertyPath";a["com.sap.vocabularies.Common.v1.MinOccurs"]="Edm.Int64";a["com.sap.vocabularies.Common.v1.MaxOccurs"]="Edm.Int64";a["com.sap.vocabularies.Common.v1.AssociationEntity"]="Edm.NavigationPropertyPath";a["com.sap.vocabularies.Common.v1.DerivedNavigation"]="Edm.NavigationPropertyPath";a["com.sap.vocabularies.Common.v1.Masked"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.MaskedAlways"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.SemanticObjectMapping"]="com.sap.vocabularies.Common.v1.SemanticObjectMappingType";a["com.sap.vocabularies.Common.v1.IsInstanceAnnotation"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.FilterExpressionRestrictions"]="com.sap.vocabularies.Common.v1.FilterExpressionRestrictionType";a["com.sap.vocabularies.Common.v1.FieldControl"]="com.sap.vocabularies.Common.v1.FieldControlType";a["com.sap.vocabularies.Common.v1.Application"]="com.sap.vocabularies.Common.v1.ApplicationType";a["com.sap.vocabularies.Common.v1.Timestamp"]="Edm.DateTimeOffset";a["com.sap.vocabularies.Common.v1.ErrorResolution"]="com.sap.vocabularies.Common.v1.ErrorResolutionType";a["com.sap.vocabularies.Common.v1.Messages"]="Edm.ComplexType";a["com.sap.vocabularies.Common.v1.numericSeverity"]="com.sap.vocabularies.Common.v1.NumericMessageSeverityType";a["com.sap.vocabularies.Common.v1.MaximumNumericMessageSeverity"]="com.sap.vocabularies.Common.v1.NumericMessageSeverityType";a["com.sap.vocabularies.Common.v1.IsActionCritical"]="Edm.Boolean";a["com.sap.vocabularies.Common.v1.Attributes"]="Edm.PropertyPath";a["com.sap.vocabularies.Common.v1.RelatedRecursiveHierarchy"]="Edm.AnnotationPath";a["com.sap.vocabularies.Common.v1.Interval"]="com.sap.vocabularies.Common.v1.IntervalType";a["com.sap.vocabularies.Common.v1.ResultContext"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.WeakReferentialConstraint"]="com.sap.vocabularies.Common.v1.WeakReferentialConstraintType";a["com.sap.vocabularies.Common.v1.IsNaturalPerson"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.ValueList"]="com.sap.vocabularies.Common.v1.ValueListType";a["com.sap.vocabularies.Common.v1.ValueListRelevantQualifiers"]="com.sap.vocabularies.Common.v1.SimpleIdentifier";a["com.sap.vocabularies.Common.v1.ValueListWithFixedValues"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.ValueListMapping"]="com.sap.vocabularies.Common.v1.ValueListMappingType";a["com.sap.vocabularies.Common.v1.IsCalendarYear"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarHalfyear"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarQuarter"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarMonth"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarWeek"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsDayOfCalendarMonth"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsDayOfCalendarYear"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarYearHalfyear"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarYearQuarter"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarYearMonth"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarYearWeek"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsCalendarDate"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalYear"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalPeriod"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalYearPeriod"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalQuarter"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalYearQuarter"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalWeek"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalYearWeek"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsDayOfFiscalYear"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.IsFiscalYearVariant"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.MutuallyExclusiveTerm"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Common.v1.DraftRoot"]="com.sap.vocabularies.Common.v1.DraftRootType";a["com.sap.vocabularies.Common.v1.DraftNode"]="com.sap.vocabularies.Common.v1.DraftNodeType";a["com.sap.vocabularies.Common.v1.DraftActivationVia"]="com.sap.vocabularies.Common.v1.SimpleIdentifier";a["com.sap.vocabularies.Common.v1.EditableFieldFor"]="Edm.PropertyPath";a["com.sap.vocabularies.Common.v1.SemanticKey"]="Edm.PropertyPath";a["com.sap.vocabularies.Common.v1.SideEffects"]="com.sap.vocabularies.Common.v1.SideEffectsType";a["com.sap.vocabularies.Common.v1.DefaultValuesFunction"]="com.sap.vocabularies.Common.v1.QualifiedName";a["com.sap.vocabularies.Common.v1.FilterDefaultValue"]="Edm.PrimitiveType";a["com.sap.vocabularies.Common.v1.FilterDefaultValueHigh"]="Edm.PrimitiveType";a["com.sap.vocabularies.Common.v1.SortOrder"]="com.sap.vocabularies.Common.v1.SortOrderType";a["com.sap.vocabularies.Common.v1.RecursiveHierarchy"]="com.sap.vocabularies.Common.v1.RecursiveHierarchyType";a["com.sap.vocabularies.Common.v1.CreatedAt"]="Edm.DateTimeOffset";a["com.sap.vocabularies.Common.v1.CreatedBy"]="com.sap.vocabularies.Common.v1.UserID";a["com.sap.vocabularies.Common.v1.ChangedAt"]="Edm.DateTimeOffset";a["com.sap.vocabularies.Common.v1.ChangedBy"]="com.sap.vocabularies.Common.v1.UserID";a["com.sap.vocabularies.Common.v1.ApplyMultiUnitBehaviorForSortingAndFiltering"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.CodeList.v1.CurrencyCodes"]="com.sap.vocabularies.CodeList.v1.CodeListSource";a["com.sap.vocabularies.CodeList.v1.UnitsOfMeasure"]="com.sap.vocabularies.CodeList.v1.CodeListSource";a["com.sap.vocabularies.CodeList.v1.StandardCode"]="Edm.PropertyPath";a["com.sap.vocabularies.CodeList.v1.ExternalCode"]="Edm.PropertyPath";a["com.sap.vocabularies.CodeList.v1.IsConfigurationDeprecationCode"]="Edm.Boolean";a["com.sap.vocabularies.Communication.v1.Contact"]="com.sap.vocabularies.Communication.v1.ContactType";a["com.sap.vocabularies.Communication.v1.Address"]="com.sap.vocabularies.Communication.v1.AddressType";a["com.sap.vocabularies.Communication.v1.IsEmailAddress"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Communication.v1.IsPhoneNumber"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Communication.v1.Event"]="com.sap.vocabularies.Communication.v1.EventData";a["com.sap.vocabularies.Communication.v1.Task"]="com.sap.vocabularies.Communication.v1.TaskData";a["com.sap.vocabularies.Communication.v1.Message"]="com.sap.vocabularies.Communication.v1.MessageData";a["com.sap.vocabularies.Hierarchy.v1.RecursiveHierarchy"]="com.sap.vocabularies.Hierarchy.v1.RecursiveHierarchyType";a["com.sap.vocabularies.PersonalData.v1.EntitySemantics"]="com.sap.vocabularies.PersonalData.v1.EntitySemanticsType";a["com.sap.vocabularies.PersonalData.v1.FieldSemantics"]="com.sap.vocabularies.PersonalData.v1.FieldSemanticsType";a["com.sap.vocabularies.PersonalData.v1.IsPotentiallyPersonal"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.PersonalData.v1.IsPotentiallySensitive"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.Session.v1.StickySessionSupported"]="com.sap.vocabularies.Session.v1.StickySessionSupportedType";a["com.sap.vocabularies.UI.v1.HeaderInfo"]="com.sap.vocabularies.UI.v1.HeaderInfoType";a["com.sap.vocabularies.UI.v1.Identification"]="com.sap.vocabularies.UI.v1.DataFieldAbstract";a["com.sap.vocabularies.UI.v1.Badge"]="com.sap.vocabularies.UI.v1.BadgeType";a["com.sap.vocabularies.UI.v1.LineItem"]="com.sap.vocabularies.UI.v1.DataFieldAbstract";a["com.sap.vocabularies.UI.v1.StatusInfo"]="com.sap.vocabularies.UI.v1.DataFieldAbstract";a["com.sap.vocabularies.UI.v1.FieldGroup"]="com.sap.vocabularies.UI.v1.FieldGroupType";a["com.sap.vocabularies.UI.v1.ConnectedFields"]="com.sap.vocabularies.UI.v1.ConnectedFieldsType";a["com.sap.vocabularies.UI.v1.GeoLocations"]="com.sap.vocabularies.UI.v1.GeoLocationType";a["com.sap.vocabularies.UI.v1.GeoLocation"]="com.sap.vocabularies.UI.v1.GeoLocationType";a["com.sap.vocabularies.UI.v1.Contacts"]="Edm.AnnotationPath";a["com.sap.vocabularies.UI.v1.MediaResource"]="com.sap.vocabularies.UI.v1.MediaResourceType";a["com.sap.vocabularies.UI.v1.DataPoint"]="com.sap.vocabularies.UI.v1.DataPointType";a["com.sap.vocabularies.UI.v1.KPI"]="com.sap.vocabularies.UI.v1.KPIType";a["com.sap.vocabularies.UI.v1.Chart"]="com.sap.vocabularies.UI.v1.ChartDefinitionType";a["com.sap.vocabularies.UI.v1.ValueCriticality"]="com.sap.vocabularies.UI.v1.ValueCriticalityType";a["com.sap.vocabularies.UI.v1.CriticalityLabels"]="com.sap.vocabularies.UI.v1.CriticalityLabelType";a["com.sap.vocabularies.UI.v1.SelectionFields"]="Edm.PropertyPath";a["com.sap.vocabularies.UI.v1.Facets"]="com.sap.vocabularies.UI.v1.Facet";a["com.sap.vocabularies.UI.v1.HeaderFacets"]="com.sap.vocabularies.UI.v1.Facet";a["com.sap.vocabularies.UI.v1.QuickViewFacets"]="com.sap.vocabularies.UI.v1.Facet";a["com.sap.vocabularies.UI.v1.QuickCreateFacets"]="com.sap.vocabularies.UI.v1.Facet";a["com.sap.vocabularies.UI.v1.FilterFacets"]="com.sap.vocabularies.UI.v1.ReferenceFacet";a["com.sap.vocabularies.UI.v1.SelectionPresentationVariant"]="com.sap.vocabularies.UI.v1.SelectionPresentationVariantType";a["com.sap.vocabularies.UI.v1.PresentationVariant"]="com.sap.vocabularies.UI.v1.PresentationVariantType";a["com.sap.vocabularies.UI.v1.SelectionVariant"]="com.sap.vocabularies.UI.v1.SelectionVariantType";a["com.sap.vocabularies.UI.v1.ThingPerspective"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.IsSummary"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.PartOfPreview"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.Map"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.Gallery"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.IsImageURL"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.IsImage"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.MultiLineText"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.TextArrangement"]="com.sap.vocabularies.UI.v1.TextArrangementType";a["com.sap.vocabularies.UI.v1.Importance"]="com.sap.vocabularies.UI.v1.ImportanceType";a["com.sap.vocabularies.UI.v1.Hidden"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.CreateHidden"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.UpdateHidden"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.DeleteHidden"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.HiddenFilter"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.DataFieldDefault"]="com.sap.vocabularies.UI.v1.DataFieldAbstract";a["com.sap.vocabularies.UI.v1.Criticality"]="com.sap.vocabularies.UI.v1.CriticalityType";a["com.sap.vocabularies.UI.v1.CriticalityCalculation"]="com.sap.vocabularies.UI.v1.CriticalityCalculationType";a["com.sap.vocabularies.UI.v1.Emphasized"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.UI.v1.OrderBy"]="Edm.PropertyPath";a["com.sap.vocabularies.UI.v1.ParameterDefaultValue"]="Edm.PrimitiveType";a["com.sap.vocabularies.UI.v1.RecommendationState"]="com.sap.vocabularies.UI.v1.RecommendationStateType";a["com.sap.vocabularies.UI.v1.RecommendationList"]="com.sap.vocabularies.UI.v1.RecommendationListType";a["com.sap.vocabularies.UI.v1.ExcludeFromNavigationContext"]="Org.OData.Core.V1.Tag";a["com.sap.vocabularies.HTML5.v1.CssDefaults"]="com.sap.vocabularies.HTML5.v1.CssDefaultsType"})(i=e.TermToTypes||(e.TermToTypes={}));function r(a){return!!a&&a._type==="ComplexType"&&!!a.properties}e.isComplexTypeDefinition=r;function n(a){return{isDecimal(){return true},valueOf(){return a},toString(){return a.toString()}}}e.Decimal=n},127:function(a,e,t){Object.defineProperty(e,"__esModule",{value:true});e.revertTermToGenericType=void 0;const o=t(401);function i(a,e){var t,o,i,r,n,s;let l;if(Array.isArray(e)){l={type:"Collection",Collection:e.map(e=>c(a,e))}}else if((t=e.isDecimal)===null||t===void 0?void 0:t.call(e)){l={type:"Decimal",Decimal:e.valueOf()}}else if((o=e.isString)===null||o===void 0?void 0:o.call(e)){const t=e.valueOf().split(".");if(t.length>1&&a.find(a=>a.alias===t[0])){l={type:"EnumMember",EnumMember:e.valueOf()}}else{l={type:"String",String:e.valueOf()}}}else if((i=e.isInt)===null||i===void 0?void 0:i.call(e)){l={type:"Int",Int:e.valueOf()}}else if((r=e.isFloat)===null||r===void 0?void 0:r.call(e)){l={type:"Float",Float:e.valueOf()}}else if((n=e.isDate)===null||n===void 0?void 0:n.call(e)){l={type:"Date",Date:e.valueOf()}}else if((s=e.isBoolean)===null||s===void 0?void 0:s.call(e)){l={type:"Bool",Bool:e.valueOf()==="true"}}else if(e.type==="Path"){l={type:"Path",Path:e.path}}else if(e.type==="AnnotationPath"){l={type:"AnnotationPath",AnnotationPath:e.value}}else if(e.type==="Apply"){l={type:"Apply",Apply:e.Apply}}else if(e.type==="Null"){l={type:"Null"}}else if(e.type==="PropertyPath"){l={type:"PropertyPath",PropertyPath:e.value}}else if(e.type==="NavigationPropertyPath"){l={type:"NavigationPropertyPath",NavigationPropertyPath:e.value}}else if(Object.prototype.hasOwnProperty.call(e,"$Type")){l={type:"Record",Record:c(a,e)}}return l}function r(a,e){let t;const o=e===null||e===void 0?void 0:e.constructor.name;switch(o){case"String":case"string":const o=e.toString().split(".");if(o.length>1&&a.find(a=>a.alias===o[0])){t={type:"EnumMember",EnumMember:e.toString()}}else{t={type:"String",String:e.toString()}}break;case"Boolean":case"boolean":t={type:"Bool",Bool:e.valueOf()};break;case"Number":case"number":if(e.toString()===e.toFixed()){t={type:"Int",Int:e.valueOf()}}else{t={type:"Decimal",Decimal:e.valueOf()}}break;case"object":default:t=i(a,e);break}return t}const n=["$Type","term","__source","qualifier","ActionTarget","fullyQualifiedName","annotations"];function s(a,e,t){Object.keys(e).filter(a=>a!=="_annotations").forEach(i=>{Object.keys(e[i]).forEach(r=>{const n=l(a,e[i][r]);if(!n.term){const e=(0,o.unalias)(a,`${i}.${r}`);if(e){const a=e.split("#");n.term=a[0];if(a.length>1){n.qualifier=a[1]}}}t.push(n)})})}function c(a,e){if(typeof e==="string"){return e}else if(typeof e==="object"){if(e.hasOwnProperty("$Type")){const t={type:e.$Type,propertyValues:[]};Object.keys(e).forEach(o=>{if(n.indexOf(o)===-1){const i=e[o];t.propertyValues.push({name:o,value:r(a,i)})}else if(o==="annotations"&&Object.keys(e[o]).length>0){t.annotations=[];s(a,e[o],t.annotations)}});return t}else if(e.type==="PropertyPath"){return{type:"PropertyPath",PropertyPath:e.value}}else if(e.type==="AnnotationPath"){return{type:"AnnotationPath",AnnotationPath:e.value}}else if(e.type==="NavigationPropertyPath"){return{type:"NavigationPropertyPath",NavigationPropertyPath:e.value}}}return undefined}function l(a,e){const t={term:e.term,qualifier:e.qualifier};if(Array.isArray(e)){if(e.hasOwnProperty("annotations")&&Object.keys(e.annotations).length>0){t.annotations=[];s(a,e.annotations,t.annotations)}return{...t,collection:e.map(e=>c(a,e))}}else if(e.hasOwnProperty("$Type")){return{...t,record:c(a,e)}}else{return{...t,value:r(a,e)}}}e.revertTermToGenericType=l}};var t={};function o(a){var i=t[a];if(i!==undefined){return i.exports}var r=t[a]={exports:{}};e[a].call(r.exports,r,r.exports,o);return r.exports}var i=o(995);a=i})();return a},true);
//# sourceMappingURL=AnnotationConverter.js.map