/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)
 *      (c) Copyright 2009-2023 SAP SE. All rights reserved
 */
sap.ui.define(["sap/fe/core/converters/MetaModelConverter", "sap/fe/core/templating/DataModelPathHelper", "sap/fe/core/templating/UIFormatters"], function (MetaModelConverter, DataModelPathHelper, UIFormatters) {
  "use strict";

  var _exports = {};
  var getConverterContext = UIFormatters.getConverterContext;
  var enhanceDataModelPath = DataModelPathHelper.enhanceDataModelPath;
  var getInvolvedDataModelObjects = MetaModelConverter.getInvolvedDataModelObjects;
  const getDataField = function (oContext, oInterface) {
    const sPath = oInterface.context.getPath();
    if (!oContext) {
      throw new Error(`Unresolved context path ${sPath}`);
    }
    let isPath = false;
    if (typeof oContext === "object" && (oContext.hasOwnProperty("$Path") || oContext.hasOwnProperty("$AnnotationPath"))) {
      isPath = true;
    } else if (typeof oContext === "object" && oContext.hasOwnProperty("$kind") && oContext.$kind !== "Property") {
      throw new Error(`Context does not resolve to a DataField object but to a ${oContext.$kind}`);
    }
    let oConverterContext = getConverterContext(oContext, oInterface);
    if (isPath) {
      oConverterContext = oConverterContext.$target;
    }
    return oConverterContext;
  };
  _exports.getDataField = getDataField;
  const getDataFieldObjectPath = function (oContext, oInterface) {
    const sPath = oInterface.context.getPath();
    if (!oContext) {
      throw new Error(`Unresolved context path ${sPath}`);
    }
    if (typeof oContext === "object" && oContext.hasOwnProperty("$kind") && oContext.$kind !== "Property") {
      throw new Error(`Context does not resolve to a Property object but to a ${oContext.$kind}`);
    }
    let involvedDataModelObjects = getInvolvedDataModelObjects(oInterface.context);
    if (involvedDataModelObjects.targetObject && involvedDataModelObjects.targetObject.type === "Path") {
      involvedDataModelObjects = enhanceDataModelPath(involvedDataModelObjects, involvedDataModelObjects.targetObject.path);
    }
    if (involvedDataModelObjects.targetObject && involvedDataModelObjects.targetObject.type === "AnnotationPath") {
      involvedDataModelObjects = enhanceDataModelPath(involvedDataModelObjects, involvedDataModelObjects.targetObject);
    }
    if (sPath.endsWith("$Path") || sPath.endsWith("$AnnotationPath")) {
      involvedDataModelObjects = enhanceDataModelPath(involvedDataModelObjects, oContext);
    }
    return involvedDataModelObjects;
  };
  _exports.getDataFieldObjectPath = getDataFieldObjectPath;
  const isSemanticallyConnectedFields = function (oContext, oInterface) {
    const oDataField = getDataField(oContext, oInterface);
    return oDataField.$Type === "com.sap.vocabularies.UI.v1.ConnectedFieldsType";
  };
  _exports.isSemanticallyConnectedFields = isSemanticallyConnectedFields;
  return _exports;
}, false);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJnZXREYXRhRmllbGQiLCJvQ29udGV4dCIsIm9JbnRlcmZhY2UiLCJzUGF0aCIsImNvbnRleHQiLCJnZXRQYXRoIiwiRXJyb3IiLCJpc1BhdGgiLCJoYXNPd25Qcm9wZXJ0eSIsIiRraW5kIiwib0NvbnZlcnRlckNvbnRleHQiLCJnZXRDb252ZXJ0ZXJDb250ZXh0IiwiJHRhcmdldCIsImdldERhdGFGaWVsZE9iamVjdFBhdGgiLCJpbnZvbHZlZERhdGFNb2RlbE9iamVjdHMiLCJnZXRJbnZvbHZlZERhdGFNb2RlbE9iamVjdHMiLCJ0YXJnZXRPYmplY3QiLCJ0eXBlIiwiZW5oYW5jZURhdGFNb2RlbFBhdGgiLCJwYXRoIiwiZW5kc1dpdGgiLCJpc1NlbWFudGljYWxseUNvbm5lY3RlZEZpZWxkcyIsIm9EYXRhRmllbGQiLCIkVHlwZSJdLCJzb3VyY2VSb290IjoiLiIsInNvdXJjZXMiOlsiRGF0YUZpZWxkRm9ybWF0dGVycy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHlwZSB7IENvbm5lY3RlZEZpZWxkc1R5cGVUeXBlcywgRGF0YUZpZWxkVHlwZXMgfSBmcm9tIFwiQHNhcC11eC92b2NhYnVsYXJpZXMtdHlwZXMvdm9jYWJ1bGFyaWVzL1VJXCI7XG5pbXBvcnQgeyBVSUFubm90YXRpb25UeXBlcyB9IGZyb20gXCJAc2FwLXV4L3ZvY2FidWxhcmllcy10eXBlcy92b2NhYnVsYXJpZXMvVUlcIjtcbmltcG9ydCB7IGdldEludm9sdmVkRGF0YU1vZGVsT2JqZWN0cyB9IGZyb20gXCJzYXAvZmUvY29yZS9jb252ZXJ0ZXJzL01ldGFNb2RlbENvbnZlcnRlclwiO1xuaW1wb3J0IHR5cGUgeyBEYXRhTW9kZWxPYmplY3RQYXRoIH0gZnJvbSBcInNhcC9mZS9jb3JlL3RlbXBsYXRpbmcvRGF0YU1vZGVsUGF0aEhlbHBlclwiO1xuaW1wb3J0IHsgZW5oYW5jZURhdGFNb2RlbFBhdGggfSBmcm9tIFwic2FwL2ZlL2NvcmUvdGVtcGxhdGluZy9EYXRhTW9kZWxQYXRoSGVscGVyXCI7XG5pbXBvcnQgdHlwZSB7IENvbXB1dGVkQW5ub3RhdGlvbkludGVyZmFjZSwgTWV0YU1vZGVsQ29udGV4dCB9IGZyb20gXCJzYXAvZmUvY29yZS90ZW1wbGF0aW5nL1VJRm9ybWF0dGVyc1wiO1xuaW1wb3J0IHsgZ2V0Q29udmVydGVyQ29udGV4dCB9IGZyb20gXCJzYXAvZmUvY29yZS90ZW1wbGF0aW5nL1VJRm9ybWF0dGVyc1wiO1xuXG5leHBvcnQgY29uc3QgZ2V0RGF0YUZpZWxkID0gZnVuY3Rpb24gKFxuXHRvQ29udGV4dDogTWV0YU1vZGVsQ29udGV4dCxcblx0b0ludGVyZmFjZTogQ29tcHV0ZWRBbm5vdGF0aW9uSW50ZXJmYWNlXG4pOiBEYXRhRmllbGRUeXBlcyB8IENvbm5lY3RlZEZpZWxkc1R5cGVUeXBlcyB7XG5cdGNvbnN0IHNQYXRoID0gb0ludGVyZmFjZS5jb250ZXh0LmdldFBhdGgoKTtcblx0aWYgKCFvQ29udGV4dCkge1xuXHRcdHRocm93IG5ldyBFcnJvcihgVW5yZXNvbHZlZCBjb250ZXh0IHBhdGggJHtzUGF0aH1gKTtcblx0fVxuXHRsZXQgaXNQYXRoID0gZmFsc2U7XG5cdGlmICh0eXBlb2Ygb0NvbnRleHQgPT09IFwib2JqZWN0XCIgJiYgKG9Db250ZXh0Lmhhc093blByb3BlcnR5KFwiJFBhdGhcIikgfHwgb0NvbnRleHQuaGFzT3duUHJvcGVydHkoXCIkQW5ub3RhdGlvblBhdGhcIikpKSB7XG5cdFx0aXNQYXRoID0gdHJ1ZTtcblx0fSBlbHNlIGlmICh0eXBlb2Ygb0NvbnRleHQgPT09IFwib2JqZWN0XCIgJiYgb0NvbnRleHQuaGFzT3duUHJvcGVydHkoXCIka2luZFwiKSAmJiBvQ29udGV4dC4ka2luZCAhPT0gXCJQcm9wZXJ0eVwiKSB7XG5cdFx0dGhyb3cgbmV3IEVycm9yKGBDb250ZXh0IGRvZXMgbm90IHJlc29sdmUgdG8gYSBEYXRhRmllbGQgb2JqZWN0IGJ1dCB0byBhICR7b0NvbnRleHQuJGtpbmR9YCk7XG5cdH1cblx0bGV0IG9Db252ZXJ0ZXJDb250ZXh0ID0gZ2V0Q29udmVydGVyQ29udGV4dChvQ29udGV4dCwgb0ludGVyZmFjZSkgYXMgRGF0YUZpZWxkVHlwZXM7XG5cdGlmIChpc1BhdGgpIHtcblx0XHRvQ29udmVydGVyQ29udGV4dCA9IChvQ29udmVydGVyQ29udGV4dCBhcyBhbnkpLiR0YXJnZXQ7XG5cdH1cblx0cmV0dXJuIG9Db252ZXJ0ZXJDb250ZXh0O1xufTtcblxuZXhwb3J0IGNvbnN0IGdldERhdGFGaWVsZE9iamVjdFBhdGggPSBmdW5jdGlvbiAoXG5cdG9Db250ZXh0OiBNZXRhTW9kZWxDb250ZXh0IHwgc3RyaW5nLFxuXHRvSW50ZXJmYWNlOiBDb21wdXRlZEFubm90YXRpb25JbnRlcmZhY2Vcbik6IERhdGFNb2RlbE9iamVjdFBhdGgge1xuXHRjb25zdCBzUGF0aCA9IG9JbnRlcmZhY2UuY29udGV4dC5nZXRQYXRoKCk7XG5cdGlmICghb0NvbnRleHQpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoYFVucmVzb2x2ZWQgY29udGV4dCBwYXRoICR7c1BhdGh9YCk7XG5cdH1cblx0aWYgKHR5cGVvZiBvQ29udGV4dCA9PT0gXCJvYmplY3RcIiAmJiBvQ29udGV4dC5oYXNPd25Qcm9wZXJ0eShcIiRraW5kXCIpICYmIG9Db250ZXh0LiRraW5kICE9PSBcIlByb3BlcnR5XCIpIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoYENvbnRleHQgZG9lcyBub3QgcmVzb2x2ZSB0byBhIFByb3BlcnR5IG9iamVjdCBidXQgdG8gYSAke29Db250ZXh0LiRraW5kfWApO1xuXHR9XG5cdGxldCBpbnZvbHZlZERhdGFNb2RlbE9iamVjdHMgPSBnZXRJbnZvbHZlZERhdGFNb2RlbE9iamVjdHMob0ludGVyZmFjZS5jb250ZXh0KTtcblx0aWYgKGludm9sdmVkRGF0YU1vZGVsT2JqZWN0cy50YXJnZXRPYmplY3QgJiYgaW52b2x2ZWREYXRhTW9kZWxPYmplY3RzLnRhcmdldE9iamVjdC50eXBlID09PSBcIlBhdGhcIikge1xuXHRcdGludm9sdmVkRGF0YU1vZGVsT2JqZWN0cyA9IGVuaGFuY2VEYXRhTW9kZWxQYXRoKGludm9sdmVkRGF0YU1vZGVsT2JqZWN0cywgaW52b2x2ZWREYXRhTW9kZWxPYmplY3RzLnRhcmdldE9iamVjdC5wYXRoKTtcblx0fVxuXHRpZiAoaW52b2x2ZWREYXRhTW9kZWxPYmplY3RzLnRhcmdldE9iamVjdCAmJiBpbnZvbHZlZERhdGFNb2RlbE9iamVjdHMudGFyZ2V0T2JqZWN0LnR5cGUgPT09IFwiQW5ub3RhdGlvblBhdGhcIikge1xuXHRcdGludm9sdmVkRGF0YU1vZGVsT2JqZWN0cyA9IGVuaGFuY2VEYXRhTW9kZWxQYXRoKGludm9sdmVkRGF0YU1vZGVsT2JqZWN0cywgaW52b2x2ZWREYXRhTW9kZWxPYmplY3RzLnRhcmdldE9iamVjdCk7XG5cdH1cblx0aWYgKHNQYXRoLmVuZHNXaXRoKFwiJFBhdGhcIikgfHwgc1BhdGguZW5kc1dpdGgoXCIkQW5ub3RhdGlvblBhdGhcIikpIHtcblx0XHRpbnZvbHZlZERhdGFNb2RlbE9iamVjdHMgPSBlbmhhbmNlRGF0YU1vZGVsUGF0aChpbnZvbHZlZERhdGFNb2RlbE9iamVjdHMsIG9Db250ZXh0IGFzIHN0cmluZyk7XG5cdH1cblx0cmV0dXJuIGludm9sdmVkRGF0YU1vZGVsT2JqZWN0cztcbn07XG5cbmV4cG9ydCBjb25zdCBpc1NlbWFudGljYWxseUNvbm5lY3RlZEZpZWxkcyA9IGZ1bmN0aW9uIChvQ29udGV4dDogTWV0YU1vZGVsQ29udGV4dCwgb0ludGVyZmFjZTogQ29tcHV0ZWRBbm5vdGF0aW9uSW50ZXJmYWNlKTogYm9vbGVhbiB7XG5cdGNvbnN0IG9EYXRhRmllbGQ6IERhdGFGaWVsZFR5cGVzIHwgQ29ubmVjdGVkRmllbGRzVHlwZVR5cGVzID0gZ2V0RGF0YUZpZWxkKG9Db250ZXh0LCBvSW50ZXJmYWNlKTtcblx0cmV0dXJuIChvRGF0YUZpZWxkIGFzIENvbm5lY3RlZEZpZWxkc1R5cGVUeXBlcykuJFR5cGUgPT09IFVJQW5ub3RhdGlvblR5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