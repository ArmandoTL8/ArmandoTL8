/*!
 * SAP UI development toolkit for HTML5 (SAPUI5)

        (c) Copyright 2009-2015 SAP SE. All rights reserved
    
 */
sap.ui.define(["sap/base/Log","../Scene","./NodeHierarchy","../RenderMode","../thirdparty/BufferGeometryUtils","./ThreeExtensions","./ThreeUtils","sap/base/util/uid"],function(e,t,i,r,a,n,o,l){"use strict";var s=t.extend("sap.ui.vk.threejs.Scene",{metadata:{library:"sap.ui.vk"},constructor:function(e){t.call(this);this._id=l();this._scene=e;this._sceneBuilder=null;this._defaultNodeHierarchy=null;this._currentViewStateManager=null;this._animationSequenceMap=new Map;this._initialView=null;this._materialMap=new Map;this._annotationMap=new Map}});s.prototype.init=function(){this._outlineColor=new THREE.Vector4(0,0,0,1);this._outlineMaterial=new THREE.ShaderMaterial({uniforms:{color:{value:this._outlineColor}},vertexShader:["attribute vec3 normal1;","attribute vec3 normal2;","#include <clipping_planes_pars_vertex>","uniform vec4 color;","varying vec4 vColor;","void main() {","\t#include <begin_vertex>","\t#include <project_vertex>","\t#include <clipping_planes_vertex>","\tvec3 eyeDirection = mvPosition.xyz;","\tvec3 n1 = normalMatrix * normal1;","\tvec3 n2 = normalMatrix * normal2;","\tvColor = color;","\tvColor.a *= step(dot(eyeDirection, n1) * dot(eyeDirection, n2), 0.0);","}"].join("\n"),fragmentShader:["#include <clipping_planes_pars_fragment>","varying vec4 vColor;","void main() {","\t#include <clipping_planes_fragment>","\tif (vColor.a < 0.01) discard;","\tgl_FragColor = vColor;","}"].join("\n"),depthWrite:false,depthFunc:THREE.LessEqualDepth,polygonOffset:true,polygonOffsetFactor:-4,blending:THREE.NormalBlending,clipping:true});this._solidWhiteMaterial=new THREE.MeshBasicMaterial({color:16777215})};s.prototype.clearThreeScene=function(){if(!this._scene){return}var e=[];var t=[];o.getAllTHREENodes([this._scene],e,t);var i=new Map;var r=new Map;e.forEach(function(e){if(e instanceof THREE.Mesh){if(!i.has(e.geometry.uuid)){o.disposeGeometry(e);i.set(e.geometry.uuid,true)}if(e.material){if(!r.has(e.material.uuid)){o.disposeMaterial(e.material);r.set(e.material.uuid,true)}}if(e.userData&&e.userData.originalMaterial&&e.userData.originalMaterial.uuid!==e.material.uuid&&!r.has(e.userData.originalMaterial.uuid)){o.disposeMaterial(e.userData.originalMaterial);r.set(e.userData.originalMaterial.uuid,true)}}e.parent.remove(e)});t.forEach(function(e){e.parent.remove(e)});i.clear();r.clear()};s.prototype.destroy=function(){this.clearThreeScene();if(this._defaultNodeHierarchy){this._defaultNodeHierarchy.destroy();this._defaultNodeHierarchy=null}o.disposeMaterial(this._solidWhiteMaterial);o.disposeMaterial(this._outlineMaterial);this._sceneBuilder=null;this._scene=null;this._currentViewStateManager=null;this._animationSequenceMap.clear();this._materialMap.clear();t.prototype.destroy.call(this)};s.prototype.setDoubleSided=function(e){this.setProperty("doubleSided",e,true);this._scene.traverse(function(t){if(t.material!==undefined){var i=t.userData;var r=THREE.FrontSide;var a;if(i.originalMaterial){if(i.originalMaterial.userData===undefined){i.originalMaterial.userData={}}a=i.originalMaterial.userData;if(a.originalMaterialSide===undefined){a.originalMaterialSide=i.originalMaterial.side}r=a.originalMaterialSide}else{if(t.material.userData===undefined){t.material.userData={}}a=t.material.userData;if(a.originalMaterialSide===undefined){a.originalMaterialSide=t.material.side}r=a.originalMaterialSide}t.material.side=e?THREE.DoubleSide:r}});return this};s.prototype.setViewStateManager=function(e){this._currentViewStateManager=e;return this};s.prototype.getViewStateManager=function(){return this._currentViewStateManager};s.prototype.getId=function(){return this._id};s.prototype.getDefaultNodeHierarchy=function(){if(!this._defaultNodeHierarchy){this._defaultNodeHierarchy=new i(this)}return this._defaultNodeHierarchy};s.prototype._computeBoundingBox=function(e,t,i){var r=new THREE.Box3;if(this._scene){this._scene._expandBoundingBox(r,e,t,i)}return r};s.prototype.getSceneRef=function(){return this._scene};s.prototype.setSceneBuilder=function(e){this._sceneBuilder=e};s.prototype.getSceneBuilder=function(){return this._sceneBuilder};s.prototype.nodeRefToPersistentId=function(e){return Array.isArray(e)?e.map(function(e){return e._vkPersistentId()}):e._vkPersistentId()};s.prototype.persistentIdToNodeRef=function(e){var t=this._sceneBuilder;if(Array.isArray(e)){return e.map(function(e){return t?t.getNode(e):null})}else{return t?t.getNode(e):null}};s.prototype.setNodePersistentId=function(e,t,i){return this._sceneBuilder?this._sceneBuilder.setNodePersistentId(e,t,i):false};s.prototype._addAnnotation=function(e,t){this._annotationMap.set(e,t)};s.prototype._hasAnnotation=function(e){return this._annotationMap.has(e)};s.prototype._getAnnotations=function(){return this._annotationMap};s.prototype._removeAnnotationsForNode=function(e){this._annotationMap.forEach(function(t){if(t.node===e){this._annotationMap.delete(t.annotation.id)}},this)};s.prototype.setAnnotationPersistentId=function(e,t,i){var r=this._annotationMap.get(e.id);if(r){this._annotationMap.delete(e.id);r.annotation.id=t;this._annotationMap.set(t,r);return true}return false};s.prototype.enumerateMaterials=function(){if(!this._defaultNodeHierarchy){return[]}var e=this._defaultNodeHierarchy.createNodeProxy(this._scene);if(e){return e.enumerateMaterials(true)}else{return[]}};var u=0;function d(e,t){var i=e.x-t.x;if(i<-u){return true}if(i>u){return false}var r=e.y-t.y;if(r<-u){return true}if(r>u){return false}return e.z-t.z<-u}function f(e,t,i){if(t<i){var r=c(e,t,i);f(e,t,r-1);f(e,r+1,i)}return e}function c(e,t,i){var r=e[i],a=t;for(var n=t;n<i;n++){if(d(e[n],r)){p(e,n,a);a++}}p(e,i,a);return a}function p(e,t,i){if(t!=i){var r=e[t];e[t]=e[i];e[i]=r}}function h(e,t){var i=new THREE.BufferGeometry;Object.setPrototypeOf(i,h.prototype);i.type="OutlineGeometry";var r=e&&e.isBufferGeometry&&e.getAttribute("position");if(!r||!e.index){return}e.computeBoundingBox();var a=new THREE.Vector3;e.boundingBox.getSize(a);u=Math.max(a.x,a.y,a.z)*1e-4;var n=r.count;var o=e.index.array;var l=o.length;if(n===0||l<3){return}var s,c,p,v;var y=new Array(n);for(s=0;s<n;s++){y[s]=(new THREE.Vector3).fromArray(r.array,s*r.itemSize);y[s].index=s}f(y,0,y.length-1);var M=[],_=[];M.push(y[0]);_[y[0].index]=M.length-1;for(s=1;s<n;s++){if(d(M[M.length-1],y[s])){M.push(y[s])}_[y[s].index]=M.length-1}var m=[];for(p=0;p<l;p+=3){var g=_[o[p]];var E=_[o[p+1]];var x=_[o[p+2]];if(g!==E&&E!==x&&x!==g){m.push(g,E,x)}}o=m;y=M;l=o.length;var S={},b;var w=new THREE.Vector3,B=new THREE.Vector3,H=new THREE.Vector3;var T=new Array(l/3);for(p=0,v=0;p<l;p+=3,v++){B.copy(y[o[p+1]]).sub(y[o[p]]);H.copy(y[o[p+2]]).sub(y[o[p]]);T[v]=(new THREE.Vector3).crossVectors(B,H).normalize();for(s=0,c=2;s<3;c=s++){var D=o[p+c];var R=o[p+s];b=Math.min(D,R)+","+Math.max(D,R);if(S[b]===undefined){S[b]={index1:D,index2:R,face1:v,face2:undefined}}else{S[b].face2=v}}}var N=Math.cos(THREE.MathUtils.DEG2RAD*(t!==undefined?t:1));var A=[];var V=[];var I=[];for(b in S){var O=S[b];if(O.face2===undefined||T[O.face1].dot(T[O.face2])<=N&&w.copy(y[O.index2]).sub(y[O.index1]).cross(T[O.face1]).dot(T[O.face2])>0){var k=y[O.index1];A.push(k.x,k.y,k.z);k=y[O.index2];A.push(k.x,k.y,k.z);var z=T[O.face1];V.push(z.x,z.y,z.z);V.push(z.x,z.y,z.z);if(O.face2!==undefined){var G=T[O.face2];I.push(G.x,G.y,G.z);I.push(G.x,G.y,G.z)}else{I.push(0,0,0);I.push(0,0,0)}}}i.setAttribute("position",new THREE.Float32BufferAttribute(A,3));i.setAttribute("normal1",new THREE.Float32BufferAttribute(V,3));i.setAttribute("normal2",new THREE.Float32BufferAttribute(I,3));return i}h.prototype=Object.create(THREE.BufferGeometry.prototype);h.prototype.constructor=h;function v(e){return e===null||e.min.x>=e.max.x&&e.min.y>=e.max.y&&e.min.z>=e.max.z}function y(e){var t=e&&e.isBufferGeometry&&e.getAttribute("position");if(!t){return null}e=e.clone();if(!e.index){var i=[];for(var r=0,a=t.count;r<a;r++){i.push(r)}e.setIndex(i)}return e}function M(e){var t=null;if(e.isMesh&&!v(e.geometry.boundingBox)&&!e.userData.skipIt){var i=y(e.geometry);if(i){t=i}}for(var r=0,a=e.children.length;r<a;r++){var n=e.children[r];if(n.isMesh&&!v(n.geometry.boundingBox)&&n.userData.skipIt){var o=y(n.geometry);if(o){n.updateMatrix();o.applyMatrix4(n.matrix);t=t?THREE.BufferGeometryUtils.mergeBufferGeometries([t,o]):o}}}return t}function _(e,t){var i=e.userData;if(i.defaultMaterial===undefined){i.defaultMaterial=i.originalMaterial||e.material}e.material=t;i.originalMaterial=null;e._vkUpdateMaterialColor();e._vkUpdateMaterialOpacity()}function m(e){var t=e.userData;if(t.defaultMaterial){e.material=t.defaultMaterial;delete t.defaultMaterial;t.originalMaterial=null;e._vkUpdateMaterialColor();e._vkUpdateMaterialOpacity()}}s.prototype._createOutlineGeometry=function(t){if(this._scene){this._scene._vkTraverseMeshNodes(function(i){if(i.isOutline){i.visible=true}else{if(!i.hasOutline){try{var a=M(i);if(a!==null){i.hasOutline=true;var n=new h(a);var o=n.getAttribute("position");if(o&&o.count>0){n.boundingBox=new THREE.Box3;var l=new THREE.LineSegments(n,this._outlineMaterial);l.isOutline=true;l.renderOrder=i.renderOrder+.5;l.matrixWorldNeedsUpdate=true;i.add(l)}}}catch(t){e.error("Unable to create outline geometry for node "+i.name,t)}}if(i.isMesh&&i.material&&!i.material.isLineBasicMaterial&&!i.material.isLineMaterial){switch(t){case r.LineIllustration:_(i,this._solidWhiteMaterial);break;case r.ShadedIllustration:var s=(i.userData.defaultMaterial||i.userData.originalMaterial||i.material).clone();if(s.emissive){s.color.multiplyScalar(.5);s.emissive.multiplyScalar(.5).addScalar(.5)}else{s.color.multiplyScalar(.5).addScalar(.5)}_(i,s);break;default:m(i);break}}}}.bind(this))}};s.prototype._hideOutlineGeometry=function(){if(this._scene){this._scene._vkTraverseMeshNodes(function(e){if(e.isOutline){e.visible=false}if(e.isMesh){m(e)}})}};s.prototype.getInitialView=function(){return this._initialView};s.prototype.setInitialView=function(e){this._initialView=e};s.prototype.getMaterial=function(e){return this._materialMap.get(e)};s.prototype.setMaterial=function(e,t){this._materialMap.set(e,t)};s.prototype.clearMaterials=function(){this._materialMap.forEach(function(e,t){e.destroy()});this._materialMap.clear()};s.prototype._getNativeMaterial=function(e){var t=e?this._materialMap.get(e):null;return t?t.getMaterialRef():null};s.prototype._setNodeMaterial=function(e,t){var i=this._getNativeMaterial(t);e.children.forEach(function(e){if(e.material){if(i){if(e.userData.materialId!==t){this._sceneBuilder._setSubmeshMaterial(e,i,t)}}else{var r=e.userData.initialMaterialId;if(r&&e.userData.materialId!==r){var a=this._getNativeMaterial(r);if(a){this._sceneBuilder._setSubmeshMaterial(e,a,r)}}}}}.bind(this))};return s});
//# sourceMappingURL=Scene.js.map